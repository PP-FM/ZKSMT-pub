(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@234 () T@T)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@140 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@140)) 14)) (forall (($generated@@141 T@T) ) (! (= ($generated@@139 ($generated@@134 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@134 $generated@@141))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@143) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@143 ($generated@@138 $generated@@45))))) true)
 :pattern ( ($generated@@133 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@137 $generated@@144 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@144 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 16) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@64)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@64) (= (type $generated@@151) $generated@@64)) (= (type $generated@@152) $generated@@147)) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@135)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@135)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@147) (= (type $generated@@159) $generated@@147)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@164) $generated@@64)) ($generated@@137 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@137 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 17)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@77 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@67 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@77) (= (type $generated@@215) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@216) ($generated@@66 $generated@@4))) (= (type $generated@@218) $generated@@77)) (= (type $generated@@219) ($generated@@66 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@77 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@234) 18) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@240 $generated@@241)) 19))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@238 ($generated@@235 $generated@@242 $generated@@243)) $generated@@242)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@239 ($generated@@235 $generated@@244 $generated@@245)) $generated@@245)
 :pattern ( ($generated@@235 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@237 $generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@246 $generated@@247))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@234) (= (type $generated@@249) ($generated@@235 $generated@@135 $generated@@135))) (or ($generated@@236 $generated@@249) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@249 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) true)
 :pattern ( ($generated@@233 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@147)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@135)) (= (type $generated@@257) $generated@@135)) (= ($generated@@137 ($generated@@250 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@137 ($generated@@250 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@147) (= (type $generated@@259) $generated@@147)) (= ($generated@@153 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@153 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@137 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@135) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@137 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@64)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@268) $generated@@64)) (= ($generated@@137 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@135) ($generated@@0 ($generated@@81 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@81 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@137 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@64) (= (type $generated@@279) $generated@@64)) (= (type $generated@@280) $generated@@135)) (= (type $generated@@281) $generated@@135)) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@276 $generated@@282)) (= ($generated@@74 ($generated@@250 $generated@@280 $generated@@281) ($generated@@146 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@74 ($generated@@250 $generated@@280 $generated@@281) ($generated@@146 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@68)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@147) (= ($generated@@145 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@147) ($generated@@145 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@135) (= (type $generated@@288) $generated@@135)) (= $generated@@286 ($generated@@250 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@145 $generated@@286))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@289 $generated@@291)) ($generated@@134 $generated@@291))
 :pattern ( ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) 0)
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@135)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@64) (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@277 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@74 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@277 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@76 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@81 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@238 (type $generated@@306))))
(= (type ($generated@@304 $generated@@306)) ($generated@@76 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@306))
)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@305 $generated@@308 $generated@@309)) ($generated@@235 $generated@@308 $generated@@309))
 :pattern ( ($generated@@305 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 20)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@81 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@81 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@79 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@76 $generated@@332 $generated@@2)) (= ($generated@@161 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@81 $generated@@331 $generated@@333))) (<= ($generated ($generated@@81 $generated@@331 $generated@@333)) ($generated@@298 $generated@@331))))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@161 $generated@@331))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@239 (type $generated@@334))))
(let (($generated@@336 ($generated@@238 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@235 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@305 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@304 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@239 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@76 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@239 (type $generated@@341))))
(let (($generated@@343 ($generated@@238 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@235 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@305 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@317 (type $generated@@345))))
(let (($generated@@347 ($generated@@316 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@315 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@314 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@313 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@317 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@76 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@317 (type $generated@@352))))
(let (($generated@@354 ($generated@@316 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@315 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@314 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@357) $generated@@64)) (= ($generated@@137 $generated@@356 ($generated@@160 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@356 $generated@@358)))) ($generated@@251 $generated@@358 $generated@@357))
 :pattern ( ($generated@@81 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@137 $generated@@356 ($generated@@160 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@260 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@135) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@277 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@260 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@364) $generated@@64)) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@363 ($generated@@265 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@135) ($generated@@0 ($generated@@81 $generated@@363 $generated@@366))) ($generated@@277 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@81 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@74 $generated@@363 ($generated@@265 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@81 ($generated@@299 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@81 ($generated@@299 $generated@@368) $generated@@367)))
)))
(assert  (and (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@369 $generated@@372)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@369 $generated@@372))
)) (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@370 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@370 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@239 (type $generated@@375))))
(let (($generated@@377 ($generated@@238 (type $generated@@375))))
(= (type ($generated@@371 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@371 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@379) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@378) ($generated@@154 ($generated@@370 $generated@@147 $generated@@379)))) (= ($generated@@81 ($generated@@371 $generated@@378) ($generated@@154 ($generated@@370 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@370 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@317 (type $generated@@383))))
(let (($generated@@385 ($generated@@316 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@315 $generated@@135 $generated@@135)) (= (type $generated@@387) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@313 $generated@@386) ($generated@@154 ($generated@@370 $generated@@147 $generated@@387)))) (= ($generated@@81 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@370 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@370 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@238 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@235 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@338 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@338 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@316 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@315 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@349 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@313 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@237 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@398) $generated@@402))) (and ($generated@@277 ($generated@@81 ($generated@@371 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@277 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@237 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@315 $generated@@135 $generated@@135)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@406) $generated@@410))) (and ($generated@@277 ($generated@@81 ($generated@@381 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@277 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) $generated@@234)
 :pattern ( ($generated@@411 $generated@@413))
)) (= (type $generated@@412) $generated@@234)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@234) (= (type $generated@@415) ($generated@@235 $generated@@135 $generated@@135))) (= ($generated@@233 $generated@@414 $generated@@415) ($generated@@233 $generated@@412 $generated@@415)))
 :pattern ( ($generated@@233 ($generated@@411 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (! (= (type ($generated@@416 $generated@@417)) $generated@@234)
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@418) $generated@@234) (= (type $generated@@419) ($generated@@235 $generated@@135 $generated@@135))) (or ($generated@@236 $generated@@419) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@419 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) (and (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@420 ($generated@@138 $generated@@45))) ($generated@@136 $generated@@420))
 :pattern ( ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@419) ($generated@@293 $generated@@420))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@419) ($generated@@293 $generated@@420)))
 :pattern ( ($generated@@133 $generated@@420))
)) (= ($generated@@233 ($generated@@416 $generated@@418) $generated@@419) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@421 ($generated@@138 $generated@@45))) (= ($generated@@133 $generated@@421)  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@419) ($generated@@293 $generated@@421))) (= ($generated@@290 ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@419) ($generated@@293 $generated@@421)))) ($generated@@270 1)))))
 :pattern ( ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@419) ($generated@@293 $generated@@421))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@419) ($generated@@293 $generated@@421)))
 :pattern ( ($generated@@133 $generated@@421))
)))))
 :pattern ( ($generated@@233 ($generated@@416 $generated@@418) $generated@@419))
))))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@317 (type $generated@@424))))
(let (($generated@@426 ($generated@@316 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@315 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@314 $generated@@426 $generated@@425)) (= ($generated@@313 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@313 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@317 (type $generated@@427))))
(let (($generated@@429 ($generated@@316 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@315 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@314 $generated@@429 $generated@@428)) (= ($generated@@349 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@349 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@317 (type $generated@@430))))
(let (($generated@@432 ($generated@@316 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@315 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@314 $generated@@432 $generated@@431)) (= ($generated@@380 $generated@@430) ($generated@@422 $generated@@135))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@239 (type $generated@@433))))
(let (($generated@@435 ($generated@@238 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@235 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@305 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@135) (= (type $generated@@437) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@433) ($generated@@293 ($generated@@250 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@369 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@317 (type $generated@@438))))
(let (($generated@@440 ($generated@@316 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@315 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@314 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@135) (= (type $generated@@442) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@438) ($generated@@293 ($generated@@250 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@380 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@135) ($generated@@251 $generated@@443 $generated@@46)) (and (= ($generated@@293 ($generated@@370 $generated@@2 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@370 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@135) ($generated@@251 $generated@@444 $generated@@47)) (and (= ($generated@@293 ($generated@@370 $generated@@3 $generated@@444)) $generated@@444) ($generated@@137 ($generated@@370 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@135) ($generated@@251 $generated@@445 $generated@@44)) (and (= ($generated@@293 ($generated@@370 $generated@@4 $generated@@445)) $generated@@445) ($generated@@137 ($generated@@370 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 21))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@135) ($generated@@251 $generated@@447 $generated@@45)) (and (= ($generated@@293 ($generated@@370 $generated@@446 $generated@@447)) $generated@@447) ($generated@@137 ($generated@@370 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@234) (= (type $generated@@449) ($generated@@235 $generated@@135 $generated@@135))) (= ($generated@@233 ($generated@@416 $generated@@448) $generated@@449) ($generated@@233 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@233 ($generated@@416 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@64) (= ($generated@@251 ($generated@@293 $generated@@450) $generated@@451) ($generated@@137 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@251 ($generated@@293 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@79 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@76 $generated@@453 $generated@@2)) (<= 0 ($generated@@298 $generated@@452))))
 :pattern ( ($generated@@298 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@139 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@134 $generated@@455)) (<= 0 ($generated@@290 $generated@@454))))
 :pattern ( ($generated@@290 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@237 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@237 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@237 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@237 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@237 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@237 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@403 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@403 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@403 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@403 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@135) (= (type $generated@@477) $generated@@135)) (= ($generated@@283 ($generated@@250 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@146 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@146 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@146 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@146 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@135) (= (type $generated@@487) $generated@@135)) (= ($generated@@154 ($generated@@250 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@250 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@135) (= (type $generated@@489) $generated@@135)) (= ($generated@@155 ($generated@@250 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@250 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@139 (type $generated@@491))))
(= (type ($generated@@490 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@490 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@134 $generated@@135)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@494 ($generated@@138 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@290 $generated@@494))) ($generated@@277 ($generated@@490 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@490 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@74 $generated@@494 ($generated@@138 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@75 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@75 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@260 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@260 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@265 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@265 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@265 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@160 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@160 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@160 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@138 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@138 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@370 $generated@@517 ($generated@@293 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@293 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@137 $generated@@518 ($generated@@237 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@518) $generated@@521))) (and ($generated@@251 ($generated@@81 ($generated@@371 $generated@@518) $generated@@521) $generated@@520) ($generated@@251 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@137 $generated@@518 ($generated@@237 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@315 $generated@@135 $generated@@135)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@137 $generated@@522 ($generated@@403 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@522) $generated@@525))) (and ($generated@@251 ($generated@@81 ($generated@@381 $generated@@522) $generated@@525) $generated@@524) ($generated@@251 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@522) $generated@@525))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@137 $generated@@522 ($generated@@403 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@135) (= (type $generated@@529) $generated@@135)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@250 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@250 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@135) (= (type $generated@@531) $generated@@135)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@250 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@250 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@135) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@251 $generated@@532 ($generated@@237 $generated@@533 $generated@@534))) (and (= ($generated@@293 ($generated@@370 ($generated@@235 $generated@@135 $generated@@135) $generated@@532)) $generated@@532) ($generated@@137 ($generated@@370 ($generated@@235 $generated@@135 $generated@@135) $generated@@532) ($generated@@237 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@251 $generated@@532 ($generated@@237 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@135) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@64)) ($generated@@251 $generated@@535 ($generated@@403 $generated@@536 $generated@@537))) (and (= ($generated@@293 ($generated@@370 ($generated@@315 $generated@@135 $generated@@135) $generated@@535)) $generated@@535) ($generated@@137 ($generated@@370 ($generated@@315 $generated@@135 $generated@@135) $generated@@535) ($generated@@403 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@251 $generated@@535 ($generated@@403 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@135)) ($generated@@251 $generated@@540 ($generated@@146 $generated@@538 $generated@@539))) (and (= ($generated@@293 ($generated@@370 $generated@@147 $generated@@540)) $generated@@540) ($generated@@137 ($generated@@370 $generated@@147 $generated@@540) ($generated@@146 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@251 $generated@@540 ($generated@@146 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@81 ($generated@@422 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@81 ($generated@@422 $generated@@542) $generated@@541)))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@234) (= (type $generated@@544) ($generated@@235 $generated@@135 $generated@@135))) (or ($generated@@236 ($generated@@272 $generated@@544)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@544 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) (and (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@545 ($generated@@138 $generated@@45))) ($generated@@136 $generated@@545))
 :pattern ( ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@544) ($generated@@293 $generated@@545))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@544) ($generated@@293 $generated@@545)))
 :pattern ( ($generated@@133 $generated@@545))
)) (= ($generated@@233 ($generated@@416 $generated@@543) ($generated@@272 $generated@@544)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@546 ($generated@@138 $generated@@45))) (= ($generated@@133 $generated@@546)  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@544) ($generated@@293 $generated@@546))) (= ($generated@@290 ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 ($generated@@272 $generated@@544)) ($generated@@293 $generated@@546)))) ($generated@@270 1)))))
 :pattern ( ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@544) ($generated@@293 $generated@@546))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@544) ($generated@@293 $generated@@546)))
 :pattern ( ($generated@@133 $generated@@546))
)))))
 :weight 3
 :pattern ( ($generated@@233 ($generated@@416 $generated@@543) ($generated@@272 $generated@@544)))
))))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@69)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (and (= ($generated@@72 ($generated@@146 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@146 $generated@@549 $generated@@550)) $generated@@63)))
 :pattern ( ($generated@@146 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@147) (= ($generated@@526 ($generated@@293 $generated@@551)) ($generated@@527 $generated@@551)))
 :pattern ( ($generated@@526 ($generated@@293 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@135) ($generated@@251 $generated@@552 ($generated@@75 0))) (and (= ($generated@@293 ($generated@@370 $generated@@2 $generated@@552)) $generated@@552) ($generated@@137 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@552) ($generated@@75 0))))
 :pattern ( ($generated@@251 $generated@@552 ($generated@@75 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@135) (= (type $generated@@554) $generated@@64)) ($generated@@251 $generated@@553 ($generated@@260 $generated@@554))) (and (= ($generated@@293 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@553)) $generated@@553) ($generated@@137 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@553) ($generated@@260 $generated@@554))))
 :pattern ( ($generated@@251 $generated@@553 ($generated@@260 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@135) (= (type $generated@@556) $generated@@64)) ($generated@@251 $generated@@555 ($generated@@265 $generated@@556))) (and (= ($generated@@293 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@555)) $generated@@555) ($generated@@137 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@555) ($generated@@265 $generated@@556))))
 :pattern ( ($generated@@251 $generated@@555 ($generated@@265 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@135) (= (type $generated@@558) $generated@@64)) ($generated@@251 $generated@@557 ($generated@@160 $generated@@558))) (and (= ($generated@@293 ($generated@@370 ($generated@@76 $generated@@135 $generated@@2) $generated@@557)) $generated@@557) ($generated@@137 ($generated@@370 ($generated@@76 $generated@@135 $generated@@2) $generated@@557) ($generated@@160 $generated@@558))))
 :pattern ( ($generated@@251 $generated@@557 ($generated@@160 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@135) (= (type $generated@@560) $generated@@64)) ($generated@@251 $generated@@559 ($generated@@138 $generated@@560))) (and (= ($generated@@293 ($generated@@370 ($generated@@134 $generated@@135) $generated@@559)) $generated@@559) ($generated@@137 ($generated@@370 ($generated@@134 $generated@@135) $generated@@559) ($generated@@138 $generated@@560))))
 :pattern ( ($generated@@251 $generated@@559 ($generated@@138 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@561 ($generated@@160 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@561 $generated@@564)))) ($generated@@277 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@81 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@160 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@276 $generated@@567) (and ($generated@@145 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@146 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@146 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@277 ($generated@@154 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@277 ($generated@@154 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@147) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@276 $generated@@571) (and ($generated@@145 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@146 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@146 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@277 ($generated@@155 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@277 ($generated@@155 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@135) (= (type $generated@@574) $generated@@135)) (= ($generated@@250 ($generated@@272 $generated@@573) ($generated@@272 $generated@@574)) ($generated@@272 ($generated@@250 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@573) ($generated@@272 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@270 $generated@@575))) ($generated@@272 ($generated@@293 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@270 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@293 ($generated@@272 $generated@@576)) ($generated@@272 ($generated@@293 $generated@@576)))
 :pattern ( ($generated@@293 ($generated@@272 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@139 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@134 $generated@@578)) (= ($generated@@290 $generated@@577) 0)) (= $generated@@577 ($generated@@289 $generated@@578))))
 :pattern ( ($generated@@290 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@76 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@298 ($generated@@82 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@298 $generated@@579) ($generated ($generated@@81 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@298 ($generated@@82 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@2)) ($generated@@74 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@3)) ($generated@@74 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@4)) ($generated@@74 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@446)) ($generated@@74 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@135)) ($generated@@74 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@134 $generated@@135)) (= (type $generated@@594) $generated@@64)) (= ($generated@@137 $generated@@593 ($generated@@138 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@290 $generated@@593))) ($generated@@251 ($generated@@490 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@490 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@138 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@290 $generated@@597))) (< ($generated@@527 ($generated@@370 $generated@@147 ($generated@@490 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@527 ($generated@@370 $generated@@147 ($generated@@490 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) $generated@@64)) ($generated@@137 $generated@@599 ($generated@@237 $generated@@600 $generated@@601))) (and (and ($generated@@137 ($generated@@304 $generated@@599) ($generated@@260 $generated@@600)) ($generated@@137 ($generated@@338 $generated@@599) ($generated@@260 $generated@@601))) ($generated@@137 ($generated@@369 $generated@@599) ($generated@@260 ($generated@@146 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@137 $generated@@599 ($generated@@237 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@315 $generated@@135 $generated@@135)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@137 $generated@@602 ($generated@@403 $generated@@603 $generated@@604))) (and (and ($generated@@137 ($generated@@313 $generated@@602) ($generated@@265 $generated@@603)) ($generated@@137 ($generated@@349 $generated@@602) ($generated@@265 $generated@@604))) ($generated@@137 ($generated@@380 $generated@@602) ($generated@@265 ($generated@@146 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@137 $generated@@602 ($generated@@403 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@137 $generated@@605 $generated@@46))
 :pattern ( ($generated@@137 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@137 $generated@@606 $generated@@47))
 :pattern ( ($generated@@137 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@137 $generated@@607 $generated@@44))
 :pattern ( ($generated@@137 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@446) ($generated@@137 $generated@@608 $generated@@45))
 :pattern ( ($generated@@137 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@135) ($generated@@137 $generated@@609 $generated@@48))
 :pattern ( ($generated@@137 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@611) ($generated@@134 $generated@@135)) (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@610) ($generated@@235 $generated@@135 $generated@@135))) (= (type $generated@@613) ($generated@@167 $generated@@77 $generated@@4))) (= (type $generated@@614) $generated@@77)) (= (type $generated@@615) ($generated@@167 $generated@@77 $generated@@4))) (= (type $generated@@616) $generated@@234)) (= (type $generated@@617) $generated@@234)) (= (type $generated@@618) $generated@@234)) (= (type $generated@@619) $generated@@234)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@621 true))
(let (($generated@@622  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@304 $generated@@610) ($generated@@293 $generated@@611)))) (= (ControlFlow 0 6) 2)) $generated@@621)))
(let (($generated@@623  (=> ($generated@@0 ($generated@@81 ($generated@@304 $generated@@610) ($generated@@293 $generated@@611))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@610) ($generated@@293 $generated@@611)))) (=> ($generated@@0 ($generated@@81 ($generated@@304 $generated@@610) ($generated@@293 $generated@@611))) (=> (= (ControlFlow 0 4) 2) $generated@@621))))))
(let (($generated@@624  (=> (and (and ($generated@@137 $generated@@611 ($generated@@138 $generated@@45)) ($generated@@74 $generated@@611 ($generated@@138 $generated@@45) $generated@@612)) (and ($generated@@74 $generated@@611 ($generated@@138 $generated@@45) $generated@@612) ($generated@@136 $generated@@611))) (and (=> (= (ControlFlow 0 7) 4) $generated@@623) (=> (= (ControlFlow 0 7) 6) $generated@@622)))))
(let (($generated@@625  (=> (and (not (and ($generated@@137 $generated@@611 ($generated@@138 $generated@@45)) ($generated@@74 $generated@@611 ($generated@@138 $generated@@45) $generated@@612))) (= (ControlFlow 0 3) 2)) $generated@@621)))
(let (($generated@@626  (=> (= $generated@@613 ($generated@@221 $generated@@614 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@624) (=> (= (ControlFlow 0 8) 3) $generated@@625)))))
(let (($generated@@627 true))
(let (($generated@@628  (=> (= $generated@@615 ($generated@@166 $generated@@614 $generated@@612 $generated@@60 false)) (=> (and (and (= ($generated@@411 $generated@@616) $generated@@616) (= ($generated@@411 $generated@@617) $generated@@617)) (and (= ($generated@@411 $generated@@618) $generated@@618) (= ($generated@@411 $generated@@619) $generated@@619))) (and (=> (= (ControlFlow 0 9) 1) $generated@@627) (=> (= (ControlFlow 0 9) 8) $generated@@626))))))
(let (($generated@@629  (=> (and (and (and ($generated@@276 $generated@@612) ($generated@@620 $generated@@612)) ($generated@@137 $generated@@610 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))) (and (= 2 $generated@@132) (= (ControlFlow 0 10) 9))) $generated@@628)))
$generated@@629))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@234 () T@T)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@416 (T@U T@U) Int)
(declare-fun $generated@@417 (T@U T@U) Bool)
(declare-fun $generated@@418 () T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@420 () T@U)
(declare-fun $generated@@421 () T@U)
(declare-fun $generated@@422 (T@U Int) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@561 () T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@140 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@140)) 14)) (forall (($generated@@141 T@T) ) (! (= ($generated@@139 ($generated@@134 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@134 $generated@@141))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@143) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@143 ($generated@@138 $generated@@45))))) true)
 :pattern ( ($generated@@133 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@137 $generated@@144 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@144 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 16) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@64)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@64) (= (type $generated@@151) $generated@@64)) (= (type $generated@@152) $generated@@147)) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@135)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@135)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@147) (= (type $generated@@159) $generated@@147)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@164) $generated@@64)) ($generated@@137 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@137 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 17)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@77 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@67 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@77) (= (type $generated@@215) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@216) ($generated@@66 $generated@@4))) (= (type $generated@@218) $generated@@77)) (= (type $generated@@219) ($generated@@66 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@77 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@234) 18) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@240 $generated@@241)) 19))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@238 ($generated@@235 $generated@@242 $generated@@243)) $generated@@242)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@239 ($generated@@235 $generated@@244 $generated@@245)) $generated@@245)
 :pattern ( ($generated@@235 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@237 $generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@246 $generated@@247))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@234) (= (type $generated@@249) ($generated@@235 $generated@@135 $generated@@135))) (or ($generated@@236 $generated@@249) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@249 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) true)
 :pattern ( ($generated@@233 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@147)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@135)) (= (type $generated@@257) $generated@@135)) (= ($generated@@137 ($generated@@250 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@137 ($generated@@250 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@147) (= (type $generated@@259) $generated@@147)) (= ($generated@@153 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@153 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@137 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@135) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@137 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@64)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@268) $generated@@64)) (= ($generated@@137 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@135) ($generated@@0 ($generated@@81 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@81 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@137 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@64) (= (type $generated@@279) $generated@@64)) (= (type $generated@@280) $generated@@135)) (= (type $generated@@281) $generated@@135)) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@276 $generated@@282)) (= ($generated@@74 ($generated@@250 $generated@@280 $generated@@281) ($generated@@146 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@74 ($generated@@250 $generated@@280 $generated@@281) ($generated@@146 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@68)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@147) (= ($generated@@145 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@147) ($generated@@145 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@135) (= (type $generated@@288) $generated@@135)) (= $generated@@286 ($generated@@250 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@145 $generated@@286))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@289 $generated@@291)) ($generated@@134 $generated@@291))
 :pattern ( ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) 0)
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@135)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@64) (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@277 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@74 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@277 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@76 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@81 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@238 (type $generated@@306))))
(= (type ($generated@@304 $generated@@306)) ($generated@@76 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@306))
)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@305 $generated@@308 $generated@@309)) ($generated@@235 $generated@@308 $generated@@309))
 :pattern ( ($generated@@305 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 20)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@81 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@81 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@79 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@76 $generated@@332 $generated@@2)) (= ($generated@@161 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@81 $generated@@331 $generated@@333))) (<= ($generated ($generated@@81 $generated@@331 $generated@@333)) ($generated@@298 $generated@@331))))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@161 $generated@@331))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@239 (type $generated@@334))))
(let (($generated@@336 ($generated@@238 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@235 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@305 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@304 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@239 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@76 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@239 (type $generated@@341))))
(let (($generated@@343 ($generated@@238 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@235 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@305 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@317 (type $generated@@345))))
(let (($generated@@347 ($generated@@316 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@315 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@314 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@313 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@317 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@76 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@317 (type $generated@@352))))
(let (($generated@@354 ($generated@@316 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@315 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@314 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@357) $generated@@64)) (= ($generated@@137 $generated@@356 ($generated@@160 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@356 $generated@@358)))) ($generated@@251 $generated@@358 $generated@@357))
 :pattern ( ($generated@@81 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@137 $generated@@356 ($generated@@160 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@260 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@135) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@277 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@260 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@364) $generated@@64)) (= (type $generated@@365) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@363 ($generated@@265 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@135) ($generated@@0 ($generated@@81 $generated@@363 $generated@@366))) ($generated@@277 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@81 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@74 $generated@@363 ($generated@@265 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@81 ($generated@@299 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@81 ($generated@@299 $generated@@368) $generated@@367)))
)))
(assert  (and (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@369 $generated@@372)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@369 $generated@@372))
)) (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@370 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@370 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@239 (type $generated@@375))))
(let (($generated@@377 ($generated@@238 (type $generated@@375))))
(= (type ($generated@@371 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@371 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@379) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@378) ($generated@@154 ($generated@@370 $generated@@147 $generated@@379)))) (= ($generated@@81 ($generated@@371 $generated@@378) ($generated@@154 ($generated@@370 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@370 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@317 (type $generated@@383))))
(let (($generated@@385 ($generated@@316 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@315 $generated@@135 $generated@@135)) (= (type $generated@@387) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@81 ($generated@@313 $generated@@386) ($generated@@154 ($generated@@370 $generated@@147 $generated@@387)))) (= ($generated@@81 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@370 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@370 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@238 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@235 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@338 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@338 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@316 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@315 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@349 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@313 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@237 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@398) $generated@@402))) (and ($generated@@277 ($generated@@81 ($generated@@371 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@277 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@237 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@315 $generated@@135 $generated@@135)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@406) $generated@@410))) (and ($generated@@277 ($generated@@81 ($generated@@381 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@277 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) $generated@@234)
 :pattern ( ($generated@@411 $generated@@413))
)) (= (type $generated@@412) $generated@@234)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@234) (= (type $generated@@415) ($generated@@235 $generated@@135 $generated@@135))) (= ($generated@@233 $generated@@414 $generated@@415) ($generated@@233 $generated@@412 $generated@@415)))
 :pattern ( ($generated@@233 ($generated@@411 $generated@@414) $generated@@415))
)))
(assert  (and (and (and (and (= (type $generated@@418) $generated@@234) (forall (($generated@@423 T@U) ) (! (= (type ($generated@@419 $generated@@423)) $generated@@234)
 :pattern ( ($generated@@419 $generated@@423))
))) (= (type $generated@@420) $generated@@234)) (= (type $generated@@421) $generated@@234)) (forall (($generated@@424 T@U) ($generated@@425 Int) ) (! (let (($generated@@426 ($generated@@139 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424 $generated@@425)) $generated@@426))
 :pattern ( ($generated@@422 $generated@@424 $generated@@425))
))))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@428) ($generated@@134 $generated@@135))) (or ($generated@@417 ($generated@@272 $generated@@427) ($generated@@272 $generated@@428)) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@427 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@428 ($generated@@138 $generated@@45))) (and ($generated@@233 $generated@@418 ($generated@@272 $generated@@427)) ($generated@@133 ($generated@@272 $generated@@428))))))) (and (and (and (= $generated@@418 ($generated@@419 $generated@@420)) (= $generated@@421 ($generated@@419 ($generated@@419 $generated@@420)))) (= ($generated@@411 $generated@@420) $generated@@420)) (= ($generated@@416 ($generated@@272 $generated@@427) ($generated@@272 $generated@@428)) ($generated ($generated@@370 $generated@@2 ($generated@@422 ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 ($generated@@272 $generated@@427)) ($generated@@293 ($generated@@272 $generated@@428)))) ($generated@@270 0)))))))
 :weight 3
 :pattern ( ($generated@@416 ($generated@@272 $generated@@427) ($generated@@272 $generated@@428)))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) $generated@@234) (= (type $generated@@430) ($generated@@235 $generated@@135 $generated@@135))) (or ($generated@@236 $generated@@430) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@430 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) (and (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@431 ($generated@@138 $generated@@45))) ($generated@@136 $generated@@431))
 :pattern ( ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@430) ($generated@@293 $generated@@431))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@430) ($generated@@293 $generated@@431)))
 :pattern ( ($generated@@133 $generated@@431))
)) (= ($generated@@233 ($generated@@419 $generated@@429) $generated@@430) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@432 ($generated@@138 $generated@@45))) (= ($generated@@133 $generated@@432)  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@430) ($generated@@293 $generated@@432))) (= ($generated@@290 ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@430) ($generated@@293 $generated@@432)))) ($generated@@270 1)))))
 :pattern ( ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@430) ($generated@@293 $generated@@432))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@430) ($generated@@293 $generated@@432)))
 :pattern ( ($generated@@133 $generated@@432))
)))))
 :pattern ( ($generated@@233 ($generated@@419 $generated@@429) $generated@@430))
))))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@76 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@317 (type $generated@@435))))
(let (($generated@@437 ($generated@@316 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@315 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@314 $generated@@437 $generated@@436)) (= ($generated@@313 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@313 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@317 (type $generated@@438))))
(let (($generated@@440 ($generated@@316 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@315 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@314 $generated@@440 $generated@@439)) (= ($generated@@349 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@349 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@317 (type $generated@@441))))
(let (($generated@@443 ($generated@@316 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@315 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@314 $generated@@443 $generated@@442)) (= ($generated@@380 $generated@@441) ($generated@@433 $generated@@135))))))
 :pattern ( ($generated@@380 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@239 (type $generated@@444))))
(let (($generated@@446 ($generated@@238 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@235 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@305 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@135) (= (type $generated@@448) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@369 $generated@@444) ($generated@@293 ($generated@@250 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@369 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@317 (type $generated@@449))))
(let (($generated@@451 ($generated@@316 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@315 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@314 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@135) (= (type $generated@@453) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@380 $generated@@449) ($generated@@293 ($generated@@250 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@380 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@135) ($generated@@251 $generated@@454 $generated@@46)) (and (= ($generated@@293 ($generated@@370 $generated@@2 $generated@@454)) $generated@@454) ($generated@@137 ($generated@@370 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@135) ($generated@@251 $generated@@455 $generated@@47)) (and (= ($generated@@293 ($generated@@370 $generated@@3 $generated@@455)) $generated@@455) ($generated@@137 ($generated@@370 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@135) ($generated@@251 $generated@@456 $generated@@44)) (and (= ($generated@@293 ($generated@@370 $generated@@4 $generated@@456)) $generated@@456) ($generated@@137 ($generated@@370 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 21))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@135) ($generated@@251 $generated@@458 $generated@@45)) (and (= ($generated@@293 ($generated@@370 $generated@@457 $generated@@458)) $generated@@458) ($generated@@137 ($generated@@370 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@234) (= (type $generated@@460) ($generated@@235 $generated@@135 $generated@@135))) (= ($generated@@233 ($generated@@419 $generated@@459) $generated@@460) ($generated@@233 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@233 ($generated@@419 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@64) (= ($generated@@251 ($generated@@293 $generated@@461) $generated@@462) ($generated@@137 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@251 ($generated@@293 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@79 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@76 $generated@@464 $generated@@2)) (<= 0 ($generated@@298 $generated@@463))))
 :pattern ( ($generated@@298 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@139 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@134 $generated@@466)) (<= 0 ($generated@@290 $generated@@465))))
 :pattern ( ($generated@@290 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@237 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@237 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@237 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@237 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@72 ($generated@@237 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@237 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@403 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@403 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@403 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@403 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@135) (= (type $generated@@488) $generated@@135)) (= ($generated@@283 ($generated@@250 $generated@@487 $generated@@488)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@146 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@146 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@146 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@146 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@135) (= (type $generated@@498) $generated@@135)) (= ($generated@@154 ($generated@@250 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@250 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@135) (= (type $generated@@500) $generated@@135)) (= ($generated@@155 ($generated@@250 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@250 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@134 $generated@@135)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@501 ($generated@@138 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@290 $generated@@501))) ($generated@@277 ($generated@@422 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@422 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@74 $generated@@501 ($generated@@138 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@75 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@75 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@260 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@260 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@265 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@265 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@265 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@160 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@160 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@160 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@138 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@138 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@370 $generated@@524 ($generated@@293 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@293 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) (= ($generated@@137 $generated@@525 ($generated@@237 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@525) $generated@@528))) (and ($generated@@251 ($generated@@81 ($generated@@371 $generated@@525) $generated@@528) $generated@@527) ($generated@@251 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@525) $generated@@528))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@137 $generated@@525 ($generated@@237 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@315 $generated@@135 $generated@@135)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@137 $generated@@529 ($generated@@403 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@313 $generated@@529) $generated@@532))) (and ($generated@@251 ($generated@@81 ($generated@@381 $generated@@529) $generated@@532) $generated@@531) ($generated@@251 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@313 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@137 $generated@@529 ($generated@@403 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@135) (= (type $generated@@536) $generated@@135)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@250 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@250 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@135) (= (type $generated@@538) $generated@@135)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@250 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@250 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@135) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@251 $generated@@539 ($generated@@237 $generated@@540 $generated@@541))) (and (= ($generated@@293 ($generated@@370 ($generated@@235 $generated@@135 $generated@@135) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@370 ($generated@@235 $generated@@135 $generated@@135) $generated@@539) ($generated@@237 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@251 $generated@@539 ($generated@@237 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@135) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) ($generated@@251 $generated@@542 ($generated@@403 $generated@@543 $generated@@544))) (and (= ($generated@@293 ($generated@@370 ($generated@@315 $generated@@135 $generated@@135) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@370 ($generated@@315 $generated@@135 $generated@@135) $generated@@542) ($generated@@403 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@251 $generated@@542 ($generated@@403 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@135)) ($generated@@251 $generated@@547 ($generated@@146 $generated@@545 $generated@@546))) (and (= ($generated@@293 ($generated@@370 $generated@@147 $generated@@547)) $generated@@547) ($generated@@137 ($generated@@370 $generated@@147 $generated@@547) ($generated@@146 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@251 $generated@@547 ($generated@@146 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@81 ($generated@@433 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@81 ($generated@@433 $generated@@549) $generated@@548)))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@234) (= (type $generated@@551) ($generated@@235 $generated@@135 $generated@@135))) (or ($generated@@236 ($generated@@272 $generated@@551)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@551 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) (and (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@552 ($generated@@138 $generated@@45))) ($generated@@136 $generated@@552))
 :pattern ( ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@551) ($generated@@293 $generated@@552))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@551) ($generated@@293 $generated@@552)))
 :pattern ( ($generated@@133 $generated@@552))
)) (= ($generated@@233 ($generated@@419 $generated@@550) ($generated@@272 $generated@@551)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@553 ($generated@@138 $generated@@45))) (= ($generated@@133 $generated@@553)  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@551) ($generated@@293 $generated@@553))) (= ($generated@@290 ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 ($generated@@272 $generated@@551)) ($generated@@293 $generated@@553)))) ($generated@@270 1)))))
 :pattern ( ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@551) ($generated@@293 $generated@@553))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@551) ($generated@@293 $generated@@553)))
 :pattern ( ($generated@@133 $generated@@553))
)))))
 :weight 3
 :pattern ( ($generated@@233 ($generated@@419 $generated@@550) ($generated@@272 $generated@@551)))
))))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@64) (= (type $generated@@557) $generated@@64)) (and (= ($generated@@72 ($generated@@146 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@146 $generated@@556 $generated@@557)) $generated@@63)))
 :pattern ( ($generated@@146 $generated@@556 $generated@@557))
)))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@559) ($generated@@134 $generated@@135))) (or ($generated@@417 $generated@@558 $generated@@559) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@558 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@559 ($generated@@138 $generated@@45))) (and ($generated@@233 $generated@@418 $generated@@558) ($generated@@133 $generated@@559)))))) true)
 :pattern ( ($generated@@416 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@147) (= ($generated@@533 ($generated@@293 $generated@@560)) ($generated@@534 $generated@@560)))
 :pattern ( ($generated@@533 ($generated@@293 $generated@@560)))
)))
(assert (= (type $generated@@561) $generated@@234))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@563) ($generated@@134 $generated@@135))) (or ($generated@@417 $generated@@562 $generated@@563) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@562 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@563 ($generated@@138 $generated@@45))) (and ($generated@@233 $generated@@418 $generated@@562) ($generated@@133 $generated@@563)))))) (and (and (and (= $generated@@418 ($generated@@419 $generated@@561)) (= $generated@@421 ($generated@@419 ($generated@@419 $generated@@561)))) (= ($generated@@411 $generated@@561) $generated@@561)) (= ($generated@@416 $generated@@562 $generated@@563) ($generated ($generated@@370 $generated@@2 ($generated@@422 ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@562) ($generated@@293 $generated@@563))) ($generated@@270 0)))))))
 :pattern ( ($generated@@416 $generated@@562 $generated@@563))
))))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@135) ($generated@@251 $generated@@564 ($generated@@75 0))) (and (= ($generated@@293 ($generated@@370 $generated@@2 $generated@@564)) $generated@@564) ($generated@@137 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@564) ($generated@@75 0))))
 :pattern ( ($generated@@251 $generated@@564 ($generated@@75 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@135) (= (type $generated@@566) $generated@@64)) ($generated@@251 $generated@@565 ($generated@@260 $generated@@566))) (and (= ($generated@@293 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@565)) $generated@@565) ($generated@@137 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@565) ($generated@@260 $generated@@566))))
 :pattern ( ($generated@@251 $generated@@565 ($generated@@260 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@135) (= (type $generated@@568) $generated@@64)) ($generated@@251 $generated@@567 ($generated@@265 $generated@@568))) (and (= ($generated@@293 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@567)) $generated@@567) ($generated@@137 ($generated@@370 ($generated@@76 $generated@@135 $generated@@4) $generated@@567) ($generated@@265 $generated@@568))))
 :pattern ( ($generated@@251 $generated@@567 ($generated@@265 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@135) (= (type $generated@@570) $generated@@64)) ($generated@@251 $generated@@569 ($generated@@160 $generated@@570))) (and (= ($generated@@293 ($generated@@370 ($generated@@76 $generated@@135 $generated@@2) $generated@@569)) $generated@@569) ($generated@@137 ($generated@@370 ($generated@@76 $generated@@135 $generated@@2) $generated@@569) ($generated@@160 $generated@@570))))
 :pattern ( ($generated@@251 $generated@@569 ($generated@@160 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@135) (= (type $generated@@572) $generated@@64)) ($generated@@251 $generated@@571 ($generated@@138 $generated@@572))) (and (= ($generated@@293 ($generated@@370 ($generated@@134 $generated@@135) $generated@@571)) $generated@@571) ($generated@@137 ($generated@@370 ($generated@@134 $generated@@135) $generated@@571) ($generated@@138 $generated@@572))))
 :pattern ( ($generated@@251 $generated@@571 ($generated@@138 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@573 ($generated@@160 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@573 $generated@@576)))) ($generated@@277 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@81 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@160 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@147) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@276 $generated@@579) (and ($generated@@145 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@64) ($generated@@74 $generated@@577 ($generated@@146 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@74 $generated@@577 ($generated@@146 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@277 ($generated@@154 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@277 ($generated@@154 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@147) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@276 $generated@@583) (and ($generated@@145 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@64) ($generated@@74 $generated@@581 ($generated@@146 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@74 $generated@@581 ($generated@@146 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@277 ($generated@@155 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@277 ($generated@@155 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@135) (= (type $generated@@586) $generated@@135)) (= ($generated@@250 ($generated@@272 $generated@@585) ($generated@@272 $generated@@586)) ($generated@@272 ($generated@@250 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@250 ($generated@@272 $generated@@585) ($generated@@272 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@270 $generated@@587))) ($generated@@272 ($generated@@293 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@270 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@293 ($generated@@272 $generated@@588)) ($generated@@272 ($generated@@293 $generated@@588)))
 :pattern ( ($generated@@293 ($generated@@272 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@139 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@134 $generated@@590)) (= ($generated@@290 $generated@@589) 0)) (= $generated@@589 ($generated@@289 $generated@@590))))
 :pattern ( ($generated@@290 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@76 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@298 ($generated@@82 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@298 $generated@@591) ($generated ($generated@@81 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@298 ($generated@@82 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) $generated@@2)) ($generated@@74 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@74 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@3)) ($generated@@74 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@4)) ($generated@@74 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@602) $generated@@457)) ($generated@@74 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@74 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@604) $generated@@135)) ($generated@@74 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@74 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@134 $generated@@135)) (= (type $generated@@606) $generated@@64)) (= ($generated@@137 $generated@@605 ($generated@@138 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@290 $generated@@605))) ($generated@@251 ($generated@@422 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@422 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@137 $generated@@605 ($generated@@138 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@290 $generated@@609))) (< ($generated@@534 ($generated@@370 $generated@@147 ($generated@@422 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@534 ($generated@@370 $generated@@147 ($generated@@422 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@235 $generated@@135 $generated@@135)) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) $generated@@64)) ($generated@@137 $generated@@611 ($generated@@237 $generated@@612 $generated@@613))) (and (and ($generated@@137 ($generated@@304 $generated@@611) ($generated@@260 $generated@@612)) ($generated@@137 ($generated@@338 $generated@@611) ($generated@@260 $generated@@613))) ($generated@@137 ($generated@@369 $generated@@611) ($generated@@260 ($generated@@146 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@137 $generated@@611 ($generated@@237 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@315 $generated@@135 $generated@@135)) (= (type $generated@@615) $generated@@64)) (= (type $generated@@616) $generated@@64)) ($generated@@137 $generated@@614 ($generated@@403 $generated@@615 $generated@@616))) (and (and ($generated@@137 ($generated@@313 $generated@@614) ($generated@@265 $generated@@615)) ($generated@@137 ($generated@@349 $generated@@614) ($generated@@265 $generated@@616))) ($generated@@137 ($generated@@380 $generated@@614) ($generated@@265 ($generated@@146 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@137 $generated@@614 ($generated@@403 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@137 $generated@@617 $generated@@46))
 :pattern ( ($generated@@137 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@137 $generated@@618 $generated@@47))
 :pattern ( ($generated@@137 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@137 $generated@@619 $generated@@44))
 :pattern ( ($generated@@137 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@457) ($generated@@137 $generated@@620 $generated@@45))
 :pattern ( ($generated@@137 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@135) ($generated@@137 $generated@@621 $generated@@48))
 :pattern ( ($generated@@137 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@622) ($generated@@167 $generated@@77 $generated@@4)) (= (type $generated@@623) $generated@@77)) (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@627) $generated@@234)) (= (type $generated@@628) ($generated@@235 $generated@@135 $generated@@135))) (= (type $generated@@629) ($generated@@134 $generated@@135))) (= (type $generated@@630) ($generated@@167 $generated@@77 $generated@@4))) (= (type $generated@@631) $generated@@234)) (= (type $generated@@632) $generated@@234)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@633  (=> (= $generated@@622 ($generated@@221 $generated@@623 $generated@@624 $generated@@60 false)) (=> (and ($generated@@276 $generated@@625) ($generated@@626 $generated@@625)) (=> (and (and (= $generated@@624 $generated@@625) (= $generated@@418 ($generated@@419 $generated@@627))) (and (= $generated@@421 ($generated@@419 ($generated@@419 $generated@@627))) (= ($generated@@411 $generated@@627) $generated@@627))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@628) ($generated@@293 $generated@@629)))) (=> ($generated@@0 ($generated@@81 ($generated@@304 $generated@@628) ($generated@@293 $generated@@629))) (=> (= (ControlFlow 0 3) (- 0 2)) (and (<= 0 ($generated@@270 0)) (< ($generated@@270 0) ($generated@@290 ($generated@@370 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@371 $generated@@628) ($generated@@293 $generated@@629))))))))))))))
(let (($generated@@634 true))
(let (($generated@@635  (=> (= $generated@@630 ($generated@@166 $generated@@623 $generated@@624 $generated@@60 false)) (=> (and (= ($generated@@411 $generated@@418) $generated@@418) (= ($generated@@411 $generated@@421) $generated@@421)) (=> (and (and (and (= ($generated@@411 $generated@@631) $generated@@631) (= ($generated@@411 $generated@@632) $generated@@632)) (and ($generated@@74 $generated@@628 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@624) ($generated@@236 $generated@@628))) (and (and ($generated@@233 $generated@@418 $generated@@628) ($generated@@74 $generated@@629 ($generated@@138 $generated@@45) $generated@@624)) (and ($generated@@136 $generated@@629) ($generated@@133 $generated@@629)))) (and (=> (= (ControlFlow 0 5) 1) $generated@@634) (=> (= (ControlFlow 0 5) 3) $generated@@633)))))))
(let (($generated@@636  (=> (and ($generated@@276 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and ($generated@@137 $generated@@628 ($generated@@237 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@629 ($generated@@138 $generated@@45))) (and (= 3 $generated@@132) (= (ControlFlow 0 6) 5))) $generated@@635))))
$generated@@636)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U Int) T@U)
(declare-fun $generated@@166 (T@U Int T@U) T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@249 () T@T)
(declare-fun $generated@@250 (T@T T@T) T@T)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (Int) Int)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@292 (T@U T@U T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U Int) T@U)
(declare-fun $generated@@302 (T@U T@U Int) Bool)
(declare-fun $generated@@303 () T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 () T@U)
(declare-fun $generated@@306 () T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@U T@U T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@341 (T@T) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@357 (T@T T@T) T@T)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@373 (T@U T@U) Bool)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@406 () T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@455 () T@U)
(declare-fun $generated@@465 (T@T) T@U)
(declare-fun $generated@@489 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@610 (T@U T@U) Bool)
(declare-fun $generated@@653 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@140 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@140)) 14)) (forall (($generated@@141 T@T) ) (! (= ($generated@@139 ($generated@@134 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@134 $generated@@141))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@143) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@143 ($generated@@138 $generated@@45))))) true)
 :pattern ( ($generated@@133 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@137 $generated@@144 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@144 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 16) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@64)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@64) (= (type $generated@@151) $generated@@64)) (= (type $generated@@152) $generated@@147)) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@135)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@135)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@147) (= (type $generated@@159) $generated@@147)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@164) $generated@@64)) ($generated@@137 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@137 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (forall (($generated@@168 T@U) ($generated@@169 Int) ) (! (let (($generated@@170 ($generated@@139 (type $generated@@168))))
(= (type ($generated@@165 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@165 $generated@@168 $generated@@169))
)) (forall (($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 T@U) ) (! (let (($generated@@174 (type $generated@@173)))
(= (type ($generated@@166 $generated@@171 $generated@@172 $generated@@173)) ($generated@@134 $generated@@174)))
 :pattern ( ($generated@@166 $generated@@171 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 T@U) ($generated@@178 Int) ) (! (let (($generated@@179 (type $generated@@177)))
 (=> (= (type $generated@@175) ($generated@@134 $generated@@179)) (=> (and (<= 0 $generated@@178) (< $generated@@178 ($generated@@167 $generated@@175))) (and (=> (= $generated@@176 $generated@@178) (= ($generated@@165 ($generated@@166 $generated@@175 $generated@@176 $generated@@177) $generated@@178) $generated@@177)) (=> (not (= $generated@@176 $generated@@178)) (= ($generated@@165 ($generated@@166 $generated@@175 $generated@@176 $generated@@177) $generated@@178) ($generated@@165 $generated@@175 $generated@@178)))))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@175 $generated@@176 $generated@@177) $generated@@178))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@77 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@67 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@77) (= (type $generated@@230) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@231) ($generated@@66 $generated@@4))) (= (type $generated@@233) $generated@@77)) (= (type $generated@@234) ($generated@@66 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@182 $generated@@77 $generated@@4))
 :pattern ( ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@67 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@77) (= (type $generated@@242) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@243) ($generated@@66 $generated@@4))) (= (type $generated@@245) $generated@@77)) (= (type $generated@@246) ($generated@@66 $generated@@247))) (= ($generated@@0 ($generated@@180 ($generated@@236 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@180 ($generated@@236 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@249) 18) (forall (($generated@@255 T@T) ($generated@@256 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@255 $generated@@256)) 19))) (forall (($generated@@257 T@T) ($generated@@258 T@T) ) (! (= ($generated@@253 ($generated@@250 $generated@@257 $generated@@258)) $generated@@257)
 :pattern ( ($generated@@250 $generated@@257 $generated@@258))
))) (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (! (= ($generated@@254 ($generated@@250 $generated@@259 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@250 $generated@@259 $generated@@260))
))) (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@252 $generated@@261 $generated@@262)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@261 $generated@@262))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@249) (= (type $generated@@264) ($generated@@250 $generated@@135 $generated@@135))) (or ($generated@@251 $generated@@264) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@264 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) true)
 :pattern ( ($generated@@248 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@267 $generated@@268)) $generated@@147)
 :pattern ( ($generated@@265 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (= (type $generated@@269) $generated@@64) (= (type $generated@@270) $generated@@64)) (= (type $generated@@271) $generated@@135)) (= (type $generated@@272) $generated@@135)) (= ($generated@@137 ($generated@@265 $generated@@271 $generated@@272) ($generated@@146 $generated@@269 $generated@@270))  (and ($generated@@266 $generated@@271 $generated@@269) ($generated@@266 $generated@@272 $generated@@270))))
 :pattern ( ($generated@@137 ($generated@@265 $generated@@271 $generated@@272) ($generated@@146 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@147) (= (type $generated@@274) $generated@@147)) (= ($generated@@153 $generated@@273 $generated@@274) (= $generated@@273 $generated@@274)))
 :pattern ( ($generated@@153 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@64)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@278) $generated@@64)) (= ($generated@@137 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@135) ($generated@@0 ($generated@@81 $generated@@277 $generated@@279))) ($generated@@266 $generated@@279 $generated@@278))
 :pattern ( ($generated@@81 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@137 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@64)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@283) $generated@@64)) (= ($generated@@137 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@135) ($generated@@0 ($generated@@81 $generated@@282 $generated@@284))) ($generated@@266 $generated@@284 $generated@@283))
 :pattern ( ($generated@@81 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@137 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@286 Int) ) (! (= ($generated@@285 $generated@@286) $generated@@286)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
(= (type ($generated@@287 $generated@@288)) $generated@@289))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= ($generated@@287 $generated@@290) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) $generated@@64) (= (type $generated@@294) $generated@@64)) (= (type $generated@@295) $generated@@135)) (= (type $generated@@296) $generated@@135)) (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@291 $generated@@297)) (= ($generated@@74 ($generated@@265 $generated@@295 $generated@@296) ($generated@@146 $generated@@293 $generated@@294) $generated@@297)  (and ($generated@@292 $generated@@295 $generated@@293 $generated@@297) ($generated@@292 $generated@@296 $generated@@294 $generated@@297))))
 :pattern ( ($generated@@74 ($generated@@265 $generated@@295 $generated@@296) ($generated@@146 $generated@@293 $generated@@294) $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@68)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@147) (= ($generated@@145 $generated@@300) (= ($generated@@298 $generated@@300) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@300))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 Int) ) (! (= (type ($generated@@301 $generated@@312 $generated@@313 $generated@@314)) ($generated@@250 $generated@@135 $generated@@135))
 :pattern ( ($generated@@301 $generated@@312 $generated@@313 $generated@@314))
)) (= (type $generated@@303) $generated@@249)) (forall (($generated@@315 T@U) ) (! (= (type ($generated@@304 $generated@@315)) $generated@@249)
 :pattern ( ($generated@@304 $generated@@315))
))) (= (type $generated@@305) $generated@@249)) (= (type $generated@@306) $generated@@249)) (forall (($generated@@316 T@U) ) (! (= (type ($generated@@307 $generated@@316)) $generated@@249)
 :pattern ( ($generated@@307 $generated@@316))
))) (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 (type $generated@@319)))
(let (($generated@@321 (type $generated@@318)))
(= (type ($generated@@308 $generated@@317 $generated@@318 $generated@@319)) ($generated@@250 $generated@@321 $generated@@320))))
 :pattern ( ($generated@@308 $generated@@317 $generated@@318 $generated@@319))
))) (forall (($generated@@322 T@U) ) (! (= (type ($generated@@309 $generated@@322)) $generated@@135)
 :pattern ( ($generated@@309 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@U) ) (! (= (type ($generated@@310 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@310 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@254 (type $generated@@325))))
(let (($generated@@327 ($generated@@253 (type $generated@@325))))
(= (type ($generated@@311 $generated@@325)) ($generated@@76 $generated@@327 $generated@@326))))
 :pattern ( ($generated@@311 $generated@@325))
))))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 Int) ) (!  (=> (and (and (= (type $generated@@328) ($generated@@250 $generated@@135 $generated@@135)) (= (type $generated@@329) ($generated@@134 $generated@@135))) (or ($generated@@302 $generated@@328 $generated@@329 $generated@@330) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@328 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@329 ($generated@@138 $generated@@45))) (and ($generated@@248 $generated@@303 $generated@@328) ($generated@@133 $generated@@329)))))) (and (and (and (= $generated@@303 ($generated@@304 $generated@@305)) (= $generated@@306 ($generated@@304 ($generated@@304 $generated@@305)))) (= ($generated@@307 $generated@@305) $generated@@305)) (= ($generated@@301 $generated@@328 $generated@@329 $generated@@330) ($generated@@308 $generated@@328 ($generated@@309 $generated@@329) ($generated@@309 ($generated@@166 ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@328) ($generated@@309 $generated@@329))) ($generated@@285 0) ($generated@@309 ($generated@@8 $generated@@330))))))))
 :pattern ( ($generated@@301 $generated@@328 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@147) ($generated@@145 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@135) (= (type $generated@@333) $generated@@135)) (= $generated@@331 ($generated@@265 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@145 $generated@@331))
)))
(assert (forall (($generated@@335 T@T) ) (! (= (type ($generated@@334 $generated@@335)) ($generated@@134 $generated@@335))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@T) ) (! (= ($generated@@167 ($generated@@334 $generated@@336)) 0)
 :pattern ( ($generated@@334 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@292 ($generated@@309 $generated@@337) $generated@@338 $generated@@339) ($generated@@74 $generated@@337 $generated@@338 $generated@@339)))
 :pattern ( ($generated@@292 ($generated@@309 $generated@@337) $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@342 T@T) ) (! (= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@342 $generated@@2))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@79 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@76 $generated@@344 $generated@@2)) (and (= (= ($generated@@340 $generated@@343) 0) (= $generated@@343 ($generated@@341 $generated@@344))) (=> (not (= ($generated@@340 $generated@@343) 0)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) (< 0 ($generated ($generated@@81 $generated@@343 $generated@@345))))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert  (and (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@253 (type $generated@@348))))
(= (type ($generated@@346 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@348))
)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@347 $generated@@350 $generated@@351)) ($generated@@250 $generated@@350 $generated@@351))
 :pattern ( ($generated@@347 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@81 ($generated@@346 ($generated@@347 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@81 ($generated@@346 ($generated@@347 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert  (and (and (and (and (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (= ($generated@@1 ($generated@@357 $generated@@360 $generated@@361)) 20)) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@357 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@357 $generated@@364 $generated@@365)) $generated@@365)
 :pattern ( ($generated@@357 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@358 (type $generated@@366))))
(= (type ($generated@@355 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@366))
))) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= (type ($generated@@356 $generated@@368 $generated@@369)) ($generated@@357 $generated@@368 $generated@@369))
 :pattern ( ($generated@@356 $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@T) ) (! (let (($generated@@372 (type $generated@@370)))
 (not ($generated@@0 ($generated@@81 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370))))
 :pattern ( (let (($generated@@372 (type $generated@@370)))
($generated@@81 ($generated@@355 ($generated@@356 $generated@@372 $generated@@371)) $generated@@370)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@79 (type $generated@@374))))
 (=> (and (= (type $generated@@374) ($generated@@76 $generated@@376 $generated@@4)) (= (type $generated@@375) ($generated@@76 $generated@@376 $generated@@4))) (= ($generated@@373 $generated@@374 $generated@@375) (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@376) (= ($generated@@0 ($generated@@81 $generated@@374 $generated@@377)) ($generated@@0 ($generated@@81 $generated@@375 $generated@@377))))
 :pattern ( ($generated@@81 $generated@@374 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@377))
)))))
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@79 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@76 $generated@@379 $generated@@2)) (= ($generated@@161 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@81 $generated@@378 $generated@@380))) (<= ($generated ($generated@@81 $generated@@378 $generated@@380)) ($generated@@340 $generated@@378))))
 :pattern ( ($generated@@81 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@161 $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@254 (type $generated@@381))))
(let (($generated@@383 ($generated@@253 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@250 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@347 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@346 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@254 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@76 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@254 (type $generated@@388))))
(let (($generated@@390 ($generated@@253 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@250 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@347 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@359 (type $generated@@392))))
(let (($generated@@394 ($generated@@358 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@357 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@356 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@355 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@359 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@359 (type $generated@@399))))
(let (($generated@@401 ($generated@@358 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@357 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@356 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@404) $generated@@64)) (= ($generated@@137 $generated@@403 ($generated@@160 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@403 $generated@@405)))) ($generated@@266 $generated@@405 $generated@@404))
 :pattern ( ($generated@@81 $generated@@403 $generated@@405))
))))
 :pattern ( ($generated@@137 $generated@@403 ($generated@@160 $generated@@404)))
)))
(assert (= (type $generated@@406) $generated@@249))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 Int) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@250 $generated@@135 $generated@@135)) (= (type $generated@@408) ($generated@@134 $generated@@135))) (or ($generated@@302 ($generated@@287 $generated@@407) ($generated@@287 $generated@@408) ($generated@@285 $generated@@409)) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@407 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@408 ($generated@@138 $generated@@45))) (and ($generated@@248 $generated@@303 ($generated@@287 $generated@@407)) ($generated@@133 ($generated@@287 $generated@@408))))))) (and (and (and (= $generated@@303 ($generated@@304 $generated@@406)) (= $generated@@306 ($generated@@304 ($generated@@304 $generated@@406)))) (= ($generated@@307 $generated@@406) $generated@@406)) (= ($generated@@301 ($generated@@287 $generated@@407) ($generated@@287 $generated@@408) ($generated@@285 $generated@@409)) ($generated@@308 ($generated@@287 $generated@@407) ($generated@@309 ($generated@@287 $generated@@408)) ($generated@@309 ($generated@@166 ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 ($generated@@287 $generated@@407)) ($generated@@309 ($generated@@287 $generated@@408)))) ($generated@@285 0) ($generated@@309 ($generated@@8 ($generated@@285 $generated@@409)))))))))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@287 $generated@@407) ($generated@@287 $generated@@408) ($generated@@285 $generated@@409)))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@275 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@135) ($generated@@0 ($generated@@81 $generated@@410 $generated@@413))) ($generated@@292 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@81 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@275 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@280 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@135) ($generated@@0 ($generated@@81 $generated@@414 $generated@@417))) ($generated@@292 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@81 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@280 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(= ($generated ($generated@@81 ($generated@@341 $generated@@419) $generated@@418)) 0))
 :pattern ( (let (($generated@@419 (type $generated@@418)))
($generated@@81 ($generated@@341 $generated@@419) $generated@@418)))
)))
(assert (forall (($generated@@421 T@U) ) (! (= (type ($generated@@420 $generated@@421)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@250 $generated@@135 $generated@@135)) (= (type $generated@@423) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@420 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@81 ($generated@@346 $generated@@422) ($generated@@154 ($generated@@310 $generated@@147 $generated@@423)))) (= ($generated@@81 ($generated@@311 $generated@@422) ($generated@@154 ($generated@@310 $generated@@147 $generated@@423))) ($generated@@155 ($generated@@310 $generated@@147 $generated@@423))))))
 :pattern ( ($generated@@81 ($generated@@420 $generated@@422) $generated@@423))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@359 (type $generated@@427))))
(let (($generated@@429 ($generated@@358 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@76 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@357 $generated@@135 $generated@@135)) (= (type $generated@@431) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@81 ($generated@@355 $generated@@430) ($generated@@154 ($generated@@310 $generated@@147 $generated@@431)))) (= ($generated@@81 ($generated@@425 $generated@@430) ($generated@@154 ($generated@@310 $generated@@147 $generated@@431))) ($generated@@155 ($generated@@310 $generated@@147 $generated@@431))))))
 :pattern ( ($generated@@81 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@253 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@250 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@81 ($generated@@346 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@81 ($generated@@311 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@432) $generated@@436))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@358 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@357 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@81 ($generated@@355 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@81 ($generated@@425 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@437) $generated@@441))
 :pattern ( ($generated@@81 ($generated@@425 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@250 $generated@@135 $generated@@135)) (= (type $generated@@443) $generated@@64)) (= (type $generated@@444) $generated@@64)) (= (type $generated@@445) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@442 ($generated@@252 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@442) $generated@@446))) (and ($generated@@292 ($generated@@81 ($generated@@311 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@292 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@442) $generated@@446))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@74 $generated@@442 ($generated@@252 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@357 $generated@@135 $generated@@135)) (= (type $generated@@451) $generated@@64)) (= (type $generated@@452) $generated@@64)) (= (type $generated@@453) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@450) $generated@@454))) (and ($generated@@292 ($generated@@81 ($generated@@425 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@292 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@81 ($generated@@425 $generated@@450) $generated@@454))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@74 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (= (type $generated@@455) $generated@@249))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@249) (= (type $generated@@457) ($generated@@250 $generated@@135 $generated@@135))) (= ($generated@@248 $generated@@456 $generated@@457) ($generated@@248 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@248 ($generated@@307 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@79 (type $generated@@458))))
 (=> (and (and (= (type $generated@@458) ($generated@@76 $generated@@460 $generated@@4)) (= (type $generated@@459) ($generated@@76 $generated@@460 $generated@@4))) ($generated@@373 $generated@@458 $generated@@459)) (= $generated@@458 $generated@@459)))
 :pattern ( ($generated@@373 $generated@@458 $generated@@459))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@461) $generated@@249) (= (type $generated@@462) ($generated@@250 $generated@@135 $generated@@135))) (or ($generated@@251 $generated@@462) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@462 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) (and (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@463 ($generated@@138 $generated@@45))) ($generated@@136 $generated@@463))
 :pattern ( ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@462) ($generated@@309 $generated@@463))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@462) ($generated@@309 $generated@@463)))
 :pattern ( ($generated@@133 $generated@@463))
)) (= ($generated@@248 ($generated@@304 $generated@@461) $generated@@462) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@464 ($generated@@138 $generated@@45))) (= ($generated@@133 $generated@@464)  (and ($generated@@0 ($generated@@81 ($generated@@346 $generated@@462) ($generated@@309 $generated@@464))) (= ($generated@@167 ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@462) ($generated@@309 $generated@@464)))) ($generated@@285 1)))))
 :pattern ( ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@462) ($generated@@309 $generated@@464))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@462) ($generated@@309 $generated@@464)))
 :pattern ( ($generated@@133 $generated@@464))
)))))
 :pattern ( ($generated@@248 ($generated@@304 $generated@@461) $generated@@462))
))))
(assert (forall (($generated@@466 T@T) ) (! (= (type ($generated@@465 $generated@@466)) ($generated@@76 $generated@@466 $generated@@4))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@359 (type $generated@@467))))
(let (($generated@@469 ($generated@@358 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@357 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@356 $generated@@469 $generated@@468)) (= ($generated@@355 $generated@@467) ($generated@@465 $generated@@469))))))
 :pattern ( ($generated@@355 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@359 (type $generated@@470))))
(let (($generated@@472 ($generated@@358 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@357 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@356 $generated@@472 $generated@@471)) (= ($generated@@396 $generated@@470) ($generated@@465 $generated@@471))))))
 :pattern ( ($generated@@396 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@359 (type $generated@@473))))
(let (($generated@@475 ($generated@@358 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@357 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@356 $generated@@475 $generated@@474)) (= ($generated@@424 $generated@@473) ($generated@@465 $generated@@135))))))
 :pattern ( ($generated@@424 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@254 (type $generated@@476))))
(let (($generated@@478 ($generated@@253 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@250 $generated@@478 $generated@@477)) (or (= $generated@@476 ($generated@@347 $generated@@478 $generated@@477)) (exists (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (and (and (= (type $generated@@479) $generated@@135) (= (type $generated@@480) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@420 $generated@@476) ($generated@@309 ($generated@@265 $generated@@479 $generated@@480)))))
 :no-pattern (type $generated@@479)
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@420 $generated@@476))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@359 (type $generated@@481))))
(let (($generated@@483 ($generated@@358 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@357 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@356 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@135) (= (type $generated@@485) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@424 $generated@@481) ($generated@@309 ($generated@@265 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@424 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@135) ($generated@@266 $generated@@486 $generated@@46)) (and (= ($generated@@309 ($generated@@310 $generated@@2 $generated@@486)) $generated@@486) ($generated@@137 ($generated@@310 $generated@@2 $generated@@486) $generated@@46)))
 :pattern ( ($generated@@266 $generated@@486 $generated@@46))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@135) ($generated@@266 $generated@@487 $generated@@47)) (and (= ($generated@@309 ($generated@@310 $generated@@3 $generated@@487)) $generated@@487) ($generated@@137 ($generated@@310 $generated@@3 $generated@@487) $generated@@47)))
 :pattern ( ($generated@@266 $generated@@487 $generated@@47))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@135) ($generated@@266 $generated@@488 $generated@@44)) (and (= ($generated@@309 ($generated@@310 $generated@@4 $generated@@488)) $generated@@488) ($generated@@137 ($generated@@310 $generated@@4 $generated@@488) $generated@@44)))
 :pattern ( ($generated@@266 $generated@@488 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@489) 21))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@135) ($generated@@266 $generated@@490 $generated@@45)) (and (= ($generated@@309 ($generated@@310 $generated@@489 $generated@@490)) $generated@@490) ($generated@@137 ($generated@@310 $generated@@489 $generated@@490) $generated@@45)))
 :pattern ( ($generated@@266 $generated@@490 $generated@@45))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@249) (= (type $generated@@492) ($generated@@250 $generated@@135 $generated@@135))) (= ($generated@@248 ($generated@@304 $generated@@491) $generated@@492) ($generated@@248 $generated@@491 $generated@@492)))
 :pattern ( ($generated@@248 ($generated@@304 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@266 ($generated@@309 $generated@@493) $generated@@494) ($generated@@137 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@266 ($generated@@309 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@79 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@76 $generated@@496 $generated@@2)) (<= 0 ($generated@@340 $generated@@495))))
 :pattern ( ($generated@@340 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@139 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@134 $generated@@498)) (<= 0 ($generated@@167 $generated@@497))))
 :pattern ( ($generated@@167 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@252 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@252 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@503 ($generated@@252 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@252 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@72 ($generated@@252 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@252 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= ($generated@@509 ($generated@@447 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@447 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@447 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@447 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= ($generated@@72 ($generated@@447 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@447 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@135) (= (type $generated@@520) $generated@@135)) (= ($generated@@298 ($generated@@265 $generated@@519 $generated@@520)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= ($generated@@521 ($generated@@146 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@146 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= ($generated@@525 ($generated@@146 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@146 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@135) (= (type $generated@@530) $generated@@135)) (= ($generated@@154 ($generated@@265 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@265 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@135) (= (type $generated@@532) $generated@@135)) (= ($generated@@155 ($generated@@265 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@265 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@134 $generated@@135)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@533 ($generated@@138 $generated@@534) $generated@@535) (forall (($generated@@536 Int) ) (!  (=> (and (<= 0 $generated@@536) (< $generated@@536 ($generated@@167 $generated@@533))) ($generated@@292 ($generated@@165 $generated@@533 $generated@@536) $generated@@534 $generated@@535))
 :pattern ( ($generated@@165 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@138 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@537 ($generated@@75 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@75 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@275 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@275 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@275 $generated@@542)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@64) (= ($generated@@543 ($generated@@280 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@280 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@72 ($generated@@280 $generated@@546)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@64)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@64) (= ($generated@@547 ($generated@@160 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@160 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@72 ($generated@@160 $generated@@550)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@64)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@64) (= ($generated@@551 ($generated@@138 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@138 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@554)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
(= ($generated@@310 $generated@@556 ($generated@@309 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@309 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@250 $generated@@135 $generated@@135)) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) $generated@@64)) (= ($generated@@137 $generated@@557 ($generated@@252 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@557) $generated@@560))) (and ($generated@@266 ($generated@@81 ($generated@@311 $generated@@557) $generated@@560) $generated@@559) ($generated@@266 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@557) $generated@@560))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@137 $generated@@557 ($generated@@252 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@357 $generated@@135 $generated@@135)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) (= ($generated@@137 $generated@@561 ($generated@@447 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@561) $generated@@564))) (and ($generated@@266 ($generated@@81 ($generated@@425 $generated@@561) $generated@@564) $generated@@563) ($generated@@266 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@81 ($generated@@425 $generated@@561) $generated@@564))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@137 $generated@@561 ($generated@@447 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@135) (= (type $generated@@568) $generated@@135)) (< ($generated@@565 $generated@@567) ($generated@@566 ($generated@@265 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@265 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@135) (= (type $generated@@570) $generated@@135)) (< ($generated@@565 $generated@@570) ($generated@@566 ($generated@@265 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@265 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
(let (($generated@@576 (type $generated@@572)))
 (=> (and (= (type $generated@@571) ($generated@@250 $generated@@576 $generated@@575)) (= (type $generated@@573) $generated@@576)) (and (=> (= $generated@@573 $generated@@572) (and ($generated@@0 ($generated@@81 ($generated@@346 ($generated@@308 $generated@@571 $generated@@572 $generated@@574)) $generated@@573)) (= ($generated@@81 ($generated@@311 ($generated@@308 $generated@@571 $generated@@572 $generated@@574)) $generated@@573) $generated@@574))) (=> (not (= $generated@@573 $generated@@572)) (and (= ($generated@@0 ($generated@@81 ($generated@@346 ($generated@@308 $generated@@571 $generated@@572 $generated@@574)) $generated@@573)) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@571) $generated@@573))) (= ($generated@@81 ($generated@@311 ($generated@@308 $generated@@571 $generated@@572 $generated@@574)) $generated@@573) ($generated@@81 ($generated@@311 $generated@@571) $generated@@573))))))))
 :pattern ( ($generated@@81 ($generated@@346 ($generated@@308 $generated@@571 $generated@@572 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@81 ($generated@@311 ($generated@@308 $generated@@571 $generated@@572 $generated@@574)) $generated@@573))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@135) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) $generated@@64)) ($generated@@266 $generated@@577 ($generated@@252 $generated@@578 $generated@@579))) (and (= ($generated@@309 ($generated@@310 ($generated@@250 $generated@@135 $generated@@135) $generated@@577)) $generated@@577) ($generated@@137 ($generated@@310 ($generated@@250 $generated@@135 $generated@@135) $generated@@577) ($generated@@252 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@266 $generated@@577 ($generated@@252 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@135) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) $generated@@64)) ($generated@@266 $generated@@580 ($generated@@447 $generated@@581 $generated@@582))) (and (= ($generated@@309 ($generated@@310 ($generated@@357 $generated@@135 $generated@@135) $generated@@580)) $generated@@580) ($generated@@137 ($generated@@310 ($generated@@357 $generated@@135 $generated@@135) $generated@@580) ($generated@@447 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@266 $generated@@580 ($generated@@447 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@64) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@135)) ($generated@@266 $generated@@585 ($generated@@146 $generated@@583 $generated@@584))) (and (= ($generated@@309 ($generated@@310 $generated@@147 $generated@@585)) $generated@@585) ($generated@@137 ($generated@@310 $generated@@147 $generated@@585) ($generated@@146 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@266 $generated@@585 ($generated@@146 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@81 ($generated@@465 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@81 ($generated@@465 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (=> (= (type $generated@@588) ($generated@@134 $generated@@591)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@167 $generated@@588))) (= ($generated@@167 ($generated@@166 $generated@@588 $generated@@589 $generated@@590)) ($generated@@167 $generated@@588)))))
 :pattern ( ($generated@@167 ($generated@@166 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@249) (= (type $generated@@593) ($generated@@250 $generated@@135 $generated@@135))) (or ($generated@@251 ($generated@@287 $generated@@593)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@593 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) (and (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@594 ($generated@@138 $generated@@45))) ($generated@@136 $generated@@594))
 :pattern ( ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@593) ($generated@@309 $generated@@594))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@593) ($generated@@309 $generated@@594)))
 :pattern ( ($generated@@133 $generated@@594))
)) (= ($generated@@248 ($generated@@304 $generated@@592) ($generated@@287 $generated@@593)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@595 ($generated@@138 $generated@@45))) (= ($generated@@133 $generated@@595)  (and ($generated@@0 ($generated@@81 ($generated@@346 $generated@@593) ($generated@@309 $generated@@595))) (= ($generated@@167 ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 ($generated@@287 $generated@@593)) ($generated@@309 $generated@@595)))) ($generated@@285 1)))))
 :pattern ( ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@593) ($generated@@309 $generated@@595))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@593) ($generated@@309 $generated@@595)))
 :pattern ( ($generated@@133 $generated@@595))
)))))
 :weight 3
 :pattern ( ($generated@@248 ($generated@@304 $generated@@592) ($generated@@287 $generated@@593)))
))))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@69)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@64) (= (type $generated@@599) $generated@@64)) (and (= ($generated@@72 ($generated@@146 $generated@@598 $generated@@599)) $generated@@62) (= ($generated@@596 ($generated@@146 $generated@@598 $generated@@599)) $generated@@63)))
 :pattern ( ($generated@@146 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@147) (= ($generated@@565 ($generated@@309 $generated@@600)) ($generated@@566 $generated@@600)))
 :pattern ( ($generated@@565 ($generated@@309 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@135) ($generated@@266 $generated@@601 ($generated@@75 0))) (and (= ($generated@@309 ($generated@@310 $generated@@2 $generated@@601)) $generated@@601) ($generated@@137 ($generated@@310 ($generated@@76 $generated@@135 $generated@@4) $generated@@601) ($generated@@75 0))))
 :pattern ( ($generated@@266 $generated@@601 ($generated@@75 0)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@135) (= (type $generated@@603) $generated@@64)) ($generated@@266 $generated@@602 ($generated@@275 $generated@@603))) (and (= ($generated@@309 ($generated@@310 ($generated@@76 $generated@@135 $generated@@4) $generated@@602)) $generated@@602) ($generated@@137 ($generated@@310 ($generated@@76 $generated@@135 $generated@@4) $generated@@602) ($generated@@275 $generated@@603))))
 :pattern ( ($generated@@266 $generated@@602 ($generated@@275 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@135) (= (type $generated@@605) $generated@@64)) ($generated@@266 $generated@@604 ($generated@@280 $generated@@605))) (and (= ($generated@@309 ($generated@@310 ($generated@@76 $generated@@135 $generated@@4) $generated@@604)) $generated@@604) ($generated@@137 ($generated@@310 ($generated@@76 $generated@@135 $generated@@4) $generated@@604) ($generated@@280 $generated@@605))))
 :pattern ( ($generated@@266 $generated@@604 ($generated@@280 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@135) (= (type $generated@@607) $generated@@64)) ($generated@@266 $generated@@606 ($generated@@160 $generated@@607))) (and (= ($generated@@309 ($generated@@310 ($generated@@76 $generated@@135 $generated@@2) $generated@@606)) $generated@@606) ($generated@@137 ($generated@@310 ($generated@@76 $generated@@135 $generated@@2) $generated@@606) ($generated@@160 $generated@@607))))
 :pattern ( ($generated@@266 $generated@@606 ($generated@@160 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@135) (= (type $generated@@609) $generated@@64)) ($generated@@266 $generated@@608 ($generated@@138 $generated@@609))) (and (= ($generated@@309 ($generated@@310 ($generated@@134 $generated@@135) $generated@@608)) $generated@@608) ($generated@@137 ($generated@@310 ($generated@@134 $generated@@135) $generated@@608) ($generated@@138 $generated@@609))))
 :pattern ( ($generated@@266 $generated@@608 ($generated@@138 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@79 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@76 $generated@@613 $generated@@4)) (= (type $generated@@612) ($generated@@76 $generated@@613 $generated@@4))) (= ($generated@@610 $generated@@611 $generated@@612) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@613) ($generated@@0 ($generated@@81 $generated@@611 $generated@@614))) ($generated@@0 ($generated@@81 $generated@@612 $generated@@614)))
 :pattern ( ($generated@@81 $generated@@611 $generated@@614))
 :pattern ( ($generated@@81 $generated@@612 $generated@@614))
)))))
 :pattern ( ($generated@@610 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@615 ($generated@@160 $generated@@616) $generated@@617) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@615 $generated@@618)))) ($generated@@292 $generated@@618 $generated@@616 $generated@@617))
 :pattern ( ($generated@@81 $generated@@615 $generated@@618))
))))
 :pattern ( ($generated@@74 $generated@@615 ($generated@@160 $generated@@616) $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@147) (= (type $generated@@620) $generated@@64)) (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@291 $generated@@621) (and ($generated@@145 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@64) ($generated@@74 $generated@@619 ($generated@@146 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@74 $generated@@619 ($generated@@146 $generated@@620 $generated@@622) $generated@@621))
))))) ($generated@@292 ($generated@@154 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@292 ($generated@@154 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@147) (= (type $generated@@624) $generated@@64)) (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@291 $generated@@625) (and ($generated@@145 $generated@@623) (exists (($generated@@626 T@U) ) (!  (and (= (type $generated@@626) $generated@@64) ($generated@@74 $generated@@623 ($generated@@146 $generated@@626 $generated@@624) $generated@@625))
 :pattern ( ($generated@@74 $generated@@623 ($generated@@146 $generated@@626 $generated@@624) $generated@@625))
))))) ($generated@@292 ($generated@@155 $generated@@623) $generated@@624 $generated@@625))
 :pattern ( ($generated@@292 ($generated@@155 $generated@@623) $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@135) (= (type $generated@@628) $generated@@135)) (= ($generated@@265 ($generated@@287 $generated@@627) ($generated@@287 $generated@@628)) ($generated@@287 ($generated@@265 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@627) ($generated@@287 $generated@@628)))
)))
(assert (forall (($generated@@629 Int) ) (! (= ($generated@@309 ($generated@@8 ($generated@@285 $generated@@629))) ($generated@@287 ($generated@@309 ($generated@@8 $generated@@629))))
 :pattern ( ($generated@@309 ($generated@@8 ($generated@@285 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ) (! (= ($generated@@309 ($generated@@287 $generated@@630)) ($generated@@287 ($generated@@309 $generated@@630)))
 :pattern ( ($generated@@309 ($generated@@287 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@139 (type $generated@@631))))
 (=> (and (= (type $generated@@631) ($generated@@134 $generated@@632)) (= ($generated@@167 $generated@@631) 0)) (= $generated@@631 ($generated@@334 $generated@@632))))
 :pattern ( ($generated@@167 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@634)))
 (=> (and (and (= (type $generated@@633) ($generated@@76 $generated@@636 $generated@@2)) (= (type $generated@@635) $generated@@2)) (<= 0 ($generated $generated@@635))) (= ($generated@@340 ($generated@@82 $generated@@633 $generated@@634 $generated@@635)) (+ (- ($generated@@340 $generated@@633) ($generated ($generated@@81 $generated@@633 $generated@@634))) ($generated $generated@@635)))))
 :pattern ( ($generated@@340 ($generated@@82 $generated@@633 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@638) $generated@@2)) ($generated@@74 $generated@@638 $generated@@46 $generated@@637))
 :pattern ( ($generated@@74 $generated@@638 $generated@@46 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@640) $generated@@3)) ($generated@@74 $generated@@640 $generated@@47 $generated@@639))
 :pattern ( ($generated@@74 $generated@@640 $generated@@47 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@642) $generated@@4)) ($generated@@74 $generated@@642 $generated@@44 $generated@@641))
 :pattern ( ($generated@@74 $generated@@642 $generated@@44 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@644) $generated@@489)) ($generated@@74 $generated@@644 $generated@@45 $generated@@643))
 :pattern ( ($generated@@74 $generated@@644 $generated@@45 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@646) $generated@@135)) ($generated@@74 $generated@@646 $generated@@48 $generated@@645))
 :pattern ( ($generated@@74 $generated@@646 $generated@@48 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@134 $generated@@135)) (= (type $generated@@648) $generated@@64)) (= ($generated@@137 $generated@@647 ($generated@@138 $generated@@648)) (forall (($generated@@649 Int) ) (!  (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@167 $generated@@647))) ($generated@@266 ($generated@@165 $generated@@647 $generated@@649) $generated@@648))
 :pattern ( ($generated@@165 $generated@@647 $generated@@649))
))))
 :pattern ( ($generated@@137 $generated@@647 ($generated@@138 $generated@@648)))
)))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 Int) ) (!  (=> (and (and (= (type $generated@@650) ($generated@@250 $generated@@135 $generated@@135)) (= (type $generated@@651) ($generated@@134 $generated@@135))) (or ($generated@@302 $generated@@650 $generated@@651 $generated@@652) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@650 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@651 ($generated@@138 $generated@@45))) (and ($generated@@248 $generated@@303 $generated@@650) ($generated@@133 $generated@@651)))))) (and ($generated@@248 $generated@@303 ($generated@@301 $generated@@650 $generated@@651 $generated@@652)) ($generated@@137 ($generated@@301 $generated@@650 $generated@@651 $generated@@652) ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))
 :pattern ( ($generated@@301 $generated@@650 $generated@@651 $generated@@652))
))))
(assert (forall (($generated@@654 T@U) ($generated@@655 Int) ) (!  (=> (= (type $generated@@654) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@167 $generated@@654))) (< ($generated@@566 ($generated@@310 $generated@@147 ($generated@@165 $generated@@654 $generated@@655))) ($generated@@653 $generated@@654))))
 :pattern ( ($generated@@566 ($generated@@310 $generated@@147 ($generated@@165 $generated@@654 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@250 $generated@@135 $generated@@135)) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) $generated@@64)) ($generated@@137 $generated@@656 ($generated@@252 $generated@@657 $generated@@658))) (and (and ($generated@@137 ($generated@@346 $generated@@656) ($generated@@275 $generated@@657)) ($generated@@137 ($generated@@385 $generated@@656) ($generated@@275 $generated@@658))) ($generated@@137 ($generated@@420 $generated@@656) ($generated@@275 ($generated@@146 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@137 $generated@@656 ($generated@@252 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@357 $generated@@135 $generated@@135)) (= (type $generated@@660) $generated@@64)) (= (type $generated@@661) $generated@@64)) ($generated@@137 $generated@@659 ($generated@@447 $generated@@660 $generated@@661))) (and (and ($generated@@137 ($generated@@355 $generated@@659) ($generated@@280 $generated@@660)) ($generated@@137 ($generated@@396 $generated@@659) ($generated@@280 $generated@@661))) ($generated@@137 ($generated@@424 $generated@@659) ($generated@@280 ($generated@@146 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@137 $generated@@659 ($generated@@447 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@137 $generated@@662 $generated@@46))
 :pattern ( ($generated@@137 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@137 $generated@@663 $generated@@47))
 :pattern ( ($generated@@137 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@137 $generated@@664 $generated@@44))
 :pattern ( ($generated@@137 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@489) ($generated@@137 $generated@@665 $generated@@45))
 :pattern ( ($generated@@137 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@135) ($generated@@137 $generated@@666 $generated@@48))
 :pattern ( ($generated@@137 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 (T@U) Bool)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@667) ($generated@@250 $generated@@135 $generated@@135)) (= (type $generated@@668) ($generated@@134 $generated@@135))) (= (type $generated@@672) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@670) ($generated@@182 $generated@@77 $generated@@4))) (= (type $generated@@671) $generated@@77)) (= (type $generated@@673) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@675) $generated@@249)) (= (type $generated@@676) ($generated@@182 $generated@@77 $generated@@4))) (= (type $generated@@677) $generated@@249)) (= (type $generated@@678) $generated@@249)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@679  (=> (= (ControlFlow 0 7) (- 0 6)) ($generated@@248 $generated@@306 ($generated@@301 $generated@@667 $generated@@668 $generated@@669)))))
(let (($generated@@680  (=> (= $generated@@670 ($generated@@236 $generated@@671 $generated@@672 $generated@@60 false)) (=> (and ($generated@@291 $generated@@673) ($generated@@674 $generated@@673)) (=> (and (and (= $generated@@672 $generated@@673) (= $generated@@303 ($generated@@304 $generated@@675))) (and (= $generated@@306 ($generated@@304 ($generated@@304 $generated@@675))) (= ($generated@@307 $generated@@675) $generated@@675))) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@667) ($generated@@309 $generated@@668)))) (=> ($generated@@0 ($generated@@81 ($generated@@346 $generated@@667) ($generated@@309 $generated@@668))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 ($generated@@285 0)) (< ($generated@@285 0) ($generated@@167 ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@667) ($generated@@309 $generated@@668))))))) (=> (and (<= 0 ($generated@@285 0)) (< ($generated@@285 0) ($generated@@167 ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@667) ($generated@@309 $generated@@668)))))) (=> (= ($generated@@301 $generated@@667 $generated@@668 $generated@@669) ($generated@@308 $generated@@667 ($generated@@309 $generated@@668) ($generated@@309 ($generated@@166 ($generated@@310 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@311 $generated@@667) ($generated@@309 $generated@@668))) ($generated@@285 0) ($generated@@309 ($generated@@8 $generated@@669)))))) (=> (and ($generated@@137 ($generated@@301 $generated@@667 $generated@@668 $generated@@669) ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) (= (ControlFlow 0 8) 7)) $generated@@679)))))))))))
(let (($generated@@681  (=> (and (and ($generated@@137 ($generated@@301 $generated@@667 $generated@@668 $generated@@669) ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@74 $generated@@667 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@672)) (and ($generated@@74 $generated@@668 ($generated@@138 $generated@@45) $generated@@672) ($generated@@74 ($generated@@8 $generated@@669) $generated@@46 $generated@@672))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@248 $generated@@306 $generated@@667)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@133 $generated@@668)) (=> (and ($generated@@248 $generated@@303 $generated@@667) ($generated@@133 $generated@@668)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (or (<= 0 $generated@@669) (and ($generated@@610 ($generated@@346 $generated@@667) ($generated@@346 $generated@@667)) (not ($generated@@610 ($generated@@346 $generated@@667) ($generated@@346 $generated@@667))))) (< ($generated@@653 $generated@@668) ($generated@@653 $generated@@668))) (= $generated@@669 $generated@@669))) (=> (or (or (or (<= 0 $generated@@669) (and ($generated@@610 ($generated@@346 $generated@@667) ($generated@@346 $generated@@667)) (not ($generated@@610 ($generated@@346 $generated@@667) ($generated@@346 $generated@@667))))) (< ($generated@@653 $generated@@668) ($generated@@653 $generated@@668))) (= $generated@@669 $generated@@669)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (and (= $generated@@667 $generated@@667) (= $generated@@668 $generated@@668)) (= $generated@@669 $generated@@669)) (or (and ($generated@@610 ($generated@@346 $generated@@667) ($generated@@346 $generated@@667)) (not ($generated@@610 ($generated@@346 $generated@@667) ($generated@@346 $generated@@667)))) (and ($generated@@373 ($generated@@346 $generated@@667) ($generated@@346 $generated@@667)) (or (< ($generated@@653 $generated@@668) ($generated@@653 $generated@@668)) (and (= ($generated@@653 $generated@@668) ($generated@@653 $generated@@668)) (< $generated@@669 $generated@@669)))))))))))))))
(let (($generated@@682  (=> (= $generated@@676 ($generated@@181 $generated@@671 $generated@@672 $generated@@60 false)) (=> (and (= ($generated@@307 $generated@@303) $generated@@303) (= ($generated@@307 $generated@@306) $generated@@306)) (=> (and (and (and (= ($generated@@307 $generated@@677) $generated@@677) (= ($generated@@307 $generated@@678) $generated@@678)) (and ($generated@@74 $generated@@667 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@672) ($generated@@251 $generated@@667))) (and (and ($generated@@248 $generated@@303 $generated@@667) ($generated@@74 $generated@@668 ($generated@@138 $generated@@45) $generated@@672)) (and ($generated@@136 $generated@@668) ($generated@@133 $generated@@668)))) (and (=> (= (ControlFlow 0 11) 2) $generated@@681) (=> (= (ControlFlow 0 11) 8) $generated@@680)))))))
(let (($generated@@683  (=> (and ($generated@@291 $generated@@672) ($generated@@674 $generated@@672)) (=> (and (and ($generated@@137 $generated@@667 ($generated@@252 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@668 ($generated@@138 $generated@@45))) (and (= 3 $generated@@132) (= (ControlFlow 0 12) 11))) $generated@@682))))
$generated@@683))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U Int) T@U)
(declare-fun $generated@@166 (T@U Int T@U) T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@253 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (Int) Int)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U Int) T@U)
(declare-fun $generated@@290 (T@U T@U Int) Bool)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@U T@U T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 () T@U)
(declare-fun $generated@@441 (T@U T@U) Int)
(declare-fun $generated@@442 (T@U T@U) Bool)
(declare-fun $generated@@443 () T@U)
(declare-fun $generated@@450 (T@T) T@U)
(declare-fun $generated@@474 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@140 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@140)) 14)) (forall (($generated@@141 T@T) ) (! (= ($generated@@139 ($generated@@134 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@134 $generated@@141))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@143) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@143 ($generated@@138 $generated@@45))))) true)
 :pattern ( ($generated@@133 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@137 $generated@@144 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@144 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 16) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@64)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@64) (= (type $generated@@151) $generated@@64)) (= (type $generated@@152) $generated@@147)) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@135)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@135)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@147) (= (type $generated@@159) $generated@@147)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@164) $generated@@64)) ($generated@@137 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@137 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (forall (($generated@@168 T@U) ($generated@@169 Int) ) (! (let (($generated@@170 ($generated@@139 (type $generated@@168))))
(= (type ($generated@@165 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@165 $generated@@168 $generated@@169))
)) (forall (($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 T@U) ) (! (let (($generated@@174 (type $generated@@173)))
(= (type ($generated@@166 $generated@@171 $generated@@172 $generated@@173)) ($generated@@134 $generated@@174)))
 :pattern ( ($generated@@166 $generated@@171 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 T@U) ($generated@@178 Int) ) (! (let (($generated@@179 (type $generated@@177)))
 (=> (= (type $generated@@175) ($generated@@134 $generated@@179)) (=> (and (<= 0 $generated@@178) (< $generated@@178 ($generated@@167 $generated@@175))) (and (=> (= $generated@@176 $generated@@178) (= ($generated@@165 ($generated@@166 $generated@@175 $generated@@176 $generated@@177) $generated@@178) $generated@@177)) (=> (not (= $generated@@176 $generated@@178)) (= ($generated@@165 ($generated@@166 $generated@@175 $generated@@176 $generated@@177) $generated@@178) ($generated@@165 $generated@@175 $generated@@178)))))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@175 $generated@@176 $generated@@177) $generated@@178))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@77 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@67 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@77) (= (type $generated@@230) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@231) ($generated@@66 $generated@@4))) (= (type $generated@@233) $generated@@77)) (= (type $generated@@234) ($generated@@66 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@237) 18) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@243 $generated@@244)) 19))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@241 ($generated@@238 $generated@@245 $generated@@246)) $generated@@245)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@238 $generated@@247 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@238 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@240 $generated@@249 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@240 $generated@@249 $generated@@250))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@237) (= (type $generated@@252) ($generated@@238 $generated@@135 $generated@@135))) (or ($generated@@239 $generated@@252) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@252 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) true)
 :pattern ( ($generated@@236 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@255 $generated@@256)) $generated@@147)
 :pattern ( ($generated@@253 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@135)) (= (type $generated@@260) $generated@@135)) (= ($generated@@137 ($generated@@253 $generated@@259 $generated@@260) ($generated@@146 $generated@@257 $generated@@258))  (and ($generated@@254 $generated@@259 $generated@@257) ($generated@@254 $generated@@260 $generated@@258))))
 :pattern ( ($generated@@137 ($generated@@253 $generated@@259 $generated@@260) ($generated@@146 $generated@@257 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@147) (= (type $generated@@262) $generated@@147)) (= ($generated@@153 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@153 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@64)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@266) $generated@@64)) (= ($generated@@137 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@135) ($generated@@0 ($generated@@81 $generated@@265 $generated@@267))) ($generated@@254 $generated@@267 $generated@@266))
 :pattern ( ($generated@@81 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@137 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@64)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@271) $generated@@64)) (= ($generated@@137 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@135) ($generated@@0 ($generated@@81 $generated@@270 $generated@@272))) ($generated@@254 $generated@@272 $generated@@271))
 :pattern ( ($generated@@81 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@137 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@273 $generated@@274) $generated@@274)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) $generated@@64)) (= (type $generated@@283) $generated@@135)) (= (type $generated@@284) $generated@@135)) (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@279 $generated@@285)) (= ($generated@@74 ($generated@@253 $generated@@283 $generated@@284) ($generated@@146 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@74 ($generated@@253 $generated@@283 $generated@@284) ($generated@@146 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@147) (= ($generated@@145 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@288))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 Int) ) (! (= (type ($generated@@289 $generated@@300 $generated@@301 $generated@@302)) ($generated@@238 $generated@@135 $generated@@135))
 :pattern ( ($generated@@289 $generated@@300 $generated@@301 $generated@@302))
)) (= (type $generated@@291) $generated@@237)) (forall (($generated@@303 T@U) ) (! (= (type ($generated@@292 $generated@@303)) $generated@@237)
 :pattern ( ($generated@@292 $generated@@303))
))) (= (type $generated@@293) $generated@@237)) (= (type $generated@@294) $generated@@237)) (forall (($generated@@304 T@U) ) (! (= (type ($generated@@295 $generated@@304)) $generated@@237)
 :pattern ( ($generated@@295 $generated@@304))
))) (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 (type $generated@@307)))
(let (($generated@@309 (type $generated@@306)))
(= (type ($generated@@296 $generated@@305 $generated@@306 $generated@@307)) ($generated@@238 $generated@@309 $generated@@308))))
 :pattern ( ($generated@@296 $generated@@305 $generated@@306 $generated@@307))
))) (forall (($generated@@310 T@U) ) (! (= (type ($generated@@297 $generated@@310)) $generated@@135)
 :pattern ( ($generated@@297 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@U) ) (! (= (type ($generated@@298 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@298 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@242 (type $generated@@313))))
(let (($generated@@315 ($generated@@241 (type $generated@@313))))
(= (type ($generated@@299 $generated@@313)) ($generated@@76 $generated@@315 $generated@@314))))
 :pattern ( ($generated@@299 $generated@@313))
))))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 Int) ) (!  (=> (and (and (= (type $generated@@316) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@317) ($generated@@134 $generated@@135))) (or ($generated@@290 $generated@@316 $generated@@317 $generated@@318) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@316 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@317 ($generated@@138 $generated@@45))) (and ($generated@@236 $generated@@291 $generated@@316) ($generated@@133 $generated@@317)))))) (and (and (and (= $generated@@291 ($generated@@292 $generated@@293)) (= $generated@@294 ($generated@@292 ($generated@@292 $generated@@293)))) (= ($generated@@295 $generated@@293) $generated@@293)) (= ($generated@@289 $generated@@316 $generated@@317 $generated@@318) ($generated@@296 $generated@@316 ($generated@@297 $generated@@317) ($generated@@297 ($generated@@166 ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 $generated@@316) ($generated@@297 $generated@@317))) ($generated@@273 0) ($generated@@297 ($generated@@8 $generated@@318))))))))
 :pattern ( ($generated@@289 $generated@@316 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@147) ($generated@@145 $generated@@319)) (exists (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (and (and (= (type $generated@@320) $generated@@135) (= (type $generated@@321) $generated@@135)) (= $generated@@319 ($generated@@253 $generated@@320 $generated@@321)))
 :no-pattern (type $generated@@320)
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
)))
 :pattern ( ($generated@@145 $generated@@319))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@134 $generated@@323))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@T) ) (! (= ($generated@@167 ($generated@@322 $generated@@324)) 0)
 :pattern ( ($generated@@322 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@64) (= (type $generated@@327) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@280 ($generated@@297 $generated@@325) $generated@@326 $generated@@327) ($generated@@74 $generated@@325 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@280 ($generated@@297 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@330 T@T) ) (! (= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@330 $generated@@2))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@79 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@76 $generated@@332 $generated@@2)) (and (= (= ($generated@@328 $generated@@331) 0) (= $generated@@331 ($generated@@329 $generated@@332))) (=> (not (= ($generated@@328 $generated@@331) 0)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) (< 0 ($generated ($generated@@81 $generated@@331 $generated@@333))))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert  (and (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@241 (type $generated@@336))))
(= (type ($generated@@334 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@336))
)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@335 $generated@@338 $generated@@339)) ($generated@@238 $generated@@338 $generated@@339))
 :pattern ( ($generated@@335 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@81 ($generated@@334 ($generated@@335 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@81 ($generated@@334 ($generated@@335 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 20)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@76 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@81 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@81 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@79 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@76 $generated@@362 $generated@@2)) (= ($generated@@161 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@81 $generated@@361 $generated@@363))) (<= ($generated ($generated@@81 $generated@@361 $generated@@363)) ($generated@@328 $generated@@361))))
 :pattern ( ($generated@@81 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@161 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@242 (type $generated@@364))))
(let (($generated@@366 ($generated@@241 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@238 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@335 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@334 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@242 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@76 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@242 (type $generated@@371))))
(let (($generated@@373 ($generated@@241 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@238 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@335 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@347 (type $generated@@375))))
(let (($generated@@377 ($generated@@346 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@345 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@344 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@343 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@347 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@76 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@347 (type $generated@@382))))
(let (($generated@@384 ($generated@@346 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@345 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@344 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@387) $generated@@64)) (= ($generated@@137 $generated@@386 ($generated@@160 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@386 $generated@@388)))) ($generated@@254 $generated@@388 $generated@@387))
 :pattern ( ($generated@@81 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@137 $generated@@386 ($generated@@160 $generated@@387)))
)))
(assert (= (type $generated@@389) $generated@@237))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 Int) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@391) ($generated@@134 $generated@@135))) (or ($generated@@290 ($generated@@275 $generated@@390) ($generated@@275 $generated@@391) ($generated@@273 $generated@@392)) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@390 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@391 ($generated@@138 $generated@@45))) (and ($generated@@236 $generated@@291 ($generated@@275 $generated@@390)) ($generated@@133 ($generated@@275 $generated@@391))))))) (and (and (and (= $generated@@291 ($generated@@292 $generated@@389)) (= $generated@@294 ($generated@@292 ($generated@@292 $generated@@389)))) (= ($generated@@295 $generated@@389) $generated@@389)) (= ($generated@@289 ($generated@@275 $generated@@390) ($generated@@275 $generated@@391) ($generated@@273 $generated@@392)) ($generated@@296 ($generated@@275 $generated@@390) ($generated@@297 ($generated@@275 $generated@@391)) ($generated@@297 ($generated@@166 ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 ($generated@@275 $generated@@390)) ($generated@@297 ($generated@@275 $generated@@391)))) ($generated@@273 0) ($generated@@297 ($generated@@8 ($generated@@273 $generated@@392)))))))))
 :weight 3
 :pattern ( ($generated@@289 ($generated@@275 $generated@@390) ($generated@@275 $generated@@391) ($generated@@273 $generated@@392)))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@263 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@135) ($generated@@0 ($generated@@81 $generated@@393 $generated@@396))) ($generated@@280 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@81 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@263 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@268 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@135) ($generated@@0 ($generated@@81 $generated@@397 $generated@@400))) ($generated@@280 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@81 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@268 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@81 ($generated@@329 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@81 ($generated@@329 $generated@@402) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@406) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@403 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@81 ($generated@@334 $generated@@405) ($generated@@154 ($generated@@298 $generated@@147 $generated@@406)))) (= ($generated@@81 ($generated@@299 $generated@@405) ($generated@@154 ($generated@@298 $generated@@147 $generated@@406))) ($generated@@155 ($generated@@298 $generated@@147 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@347 (type $generated@@410))))
(let (($generated@@412 ($generated@@346 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@76 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@345 $generated@@135 $generated@@135)) (= (type $generated@@414) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@81 ($generated@@343 $generated@@413) ($generated@@154 ($generated@@298 $generated@@147 $generated@@414)))) (= ($generated@@81 ($generated@@408 $generated@@413) ($generated@@154 ($generated@@298 $generated@@147 $generated@@414))) ($generated@@155 ($generated@@298 $generated@@147 $generated@@414))))))
 :pattern ( ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@241 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@238 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@81 ($generated@@334 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@81 ($generated@@299 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@346 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@345 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@81 ($generated@@343 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@420) $generated@@424))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@240 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@425) $generated@@429))) (and ($generated@@280 ($generated@@81 ($generated@@299 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@280 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@240 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@345 $generated@@135 $generated@@135)) (= (type $generated@@434) $generated@@64)) (= (type $generated@@435) $generated@@64)) (= (type $generated@@436) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@433) $generated@@437))) (and ($generated@@280 ($generated@@81 ($generated@@408 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@280 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@433) $generated@@437))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@74 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (= (type $generated@@438) $generated@@237))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@237) (= (type $generated@@440) ($generated@@238 $generated@@135 $generated@@135))) (= ($generated@@236 $generated@@439 $generated@@440) ($generated@@236 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@236 ($generated@@295 $generated@@439) $generated@@440))
)))
(assert (= (type $generated@@443) $generated@@237))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (= (type $generated@@444) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@445) ($generated@@134 $generated@@135))) (or ($generated@@442 ($generated@@275 $generated@@444) ($generated@@275 $generated@@445)) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@444 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@445 ($generated@@138 $generated@@45))) (and ($generated@@236 $generated@@291 ($generated@@275 $generated@@444)) ($generated@@133 ($generated@@275 $generated@@445))))))) (and (and (and (= $generated@@291 ($generated@@292 $generated@@443)) (= $generated@@294 ($generated@@292 ($generated@@292 $generated@@443)))) (= ($generated@@295 $generated@@443) $generated@@443)) (= ($generated@@441 ($generated@@275 $generated@@444) ($generated@@275 $generated@@445)) ($generated ($generated@@298 $generated@@2 ($generated@@165 ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 ($generated@@275 $generated@@444)) ($generated@@297 ($generated@@275 $generated@@445)))) ($generated@@273 0)))))))
 :weight 3
 :pattern ( ($generated@@441 ($generated@@275 $generated@@444) ($generated@@275 $generated@@445)))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@446) $generated@@237) (= (type $generated@@447) ($generated@@238 $generated@@135 $generated@@135))) (or ($generated@@239 $generated@@447) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@447 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) (and (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@448 ($generated@@138 $generated@@45))) ($generated@@136 $generated@@448))
 :pattern ( ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 $generated@@447) ($generated@@297 $generated@@448))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@447) ($generated@@297 $generated@@448)))
 :pattern ( ($generated@@133 $generated@@448))
)) (= ($generated@@236 ($generated@@292 $generated@@446) $generated@@447) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@449 ($generated@@138 $generated@@45))) (= ($generated@@133 $generated@@449)  (and ($generated@@0 ($generated@@81 ($generated@@334 $generated@@447) ($generated@@297 $generated@@449))) (= ($generated@@167 ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 $generated@@447) ($generated@@297 $generated@@449)))) ($generated@@273 1)))))
 :pattern ( ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 $generated@@447) ($generated@@297 $generated@@449))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@447) ($generated@@297 $generated@@449)))
 :pattern ( ($generated@@133 $generated@@449))
)))))
 :pattern ( ($generated@@236 ($generated@@292 $generated@@446) $generated@@447))
))))
(assert (forall (($generated@@451 T@T) ) (! (= (type ($generated@@450 $generated@@451)) ($generated@@76 $generated@@451 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@347 (type $generated@@452))))
(let (($generated@@454 ($generated@@346 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@345 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@344 $generated@@454 $generated@@453)) (= ($generated@@343 $generated@@452) ($generated@@450 $generated@@454))))))
 :pattern ( ($generated@@343 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@347 (type $generated@@455))))
(let (($generated@@457 ($generated@@346 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@345 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@344 $generated@@457 $generated@@456)) (= ($generated@@379 $generated@@455) ($generated@@450 $generated@@456))))))
 :pattern ( ($generated@@379 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@347 (type $generated@@458))))
(let (($generated@@460 ($generated@@346 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@345 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@344 $generated@@460 $generated@@459)) (= ($generated@@407 $generated@@458) ($generated@@450 $generated@@135))))))
 :pattern ( ($generated@@407 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@242 (type $generated@@461))))
(let (($generated@@463 ($generated@@241 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@238 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@335 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@135) (= (type $generated@@465) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@403 $generated@@461) ($generated@@297 ($generated@@253 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@403 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@347 (type $generated@@466))))
(let (($generated@@468 ($generated@@346 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@345 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@344 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@135) (= (type $generated@@470) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@407 $generated@@466) ($generated@@297 ($generated@@253 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@407 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@135) ($generated@@254 $generated@@471 $generated@@46)) (and (= ($generated@@297 ($generated@@298 $generated@@2 $generated@@471)) $generated@@471) ($generated@@137 ($generated@@298 $generated@@2 $generated@@471) $generated@@46)))
 :pattern ( ($generated@@254 $generated@@471 $generated@@46))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@135) ($generated@@254 $generated@@472 $generated@@47)) (and (= ($generated@@297 ($generated@@298 $generated@@3 $generated@@472)) $generated@@472) ($generated@@137 ($generated@@298 $generated@@3 $generated@@472) $generated@@47)))
 :pattern ( ($generated@@254 $generated@@472 $generated@@47))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@135) ($generated@@254 $generated@@473 $generated@@44)) (and (= ($generated@@297 ($generated@@298 $generated@@4 $generated@@473)) $generated@@473) ($generated@@137 ($generated@@298 $generated@@4 $generated@@473) $generated@@44)))
 :pattern ( ($generated@@254 $generated@@473 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@474) 21))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@135) ($generated@@254 $generated@@475 $generated@@45)) (and (= ($generated@@297 ($generated@@298 $generated@@474 $generated@@475)) $generated@@475) ($generated@@137 ($generated@@298 $generated@@474 $generated@@475) $generated@@45)))
 :pattern ( ($generated@@254 $generated@@475 $generated@@45))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@237) (= (type $generated@@477) ($generated@@238 $generated@@135 $generated@@135))) (= ($generated@@236 ($generated@@292 $generated@@476) $generated@@477) ($generated@@236 $generated@@476 $generated@@477)))
 :pattern ( ($generated@@236 ($generated@@292 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@254 ($generated@@297 $generated@@478) $generated@@479) ($generated@@137 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@254 ($generated@@297 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@79 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@76 $generated@@481 $generated@@2)) (<= 0 ($generated@@328 $generated@@480))))
 :pattern ( ($generated@@328 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@139 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@134 $generated@@483)) (<= 0 ($generated@@167 $generated@@482))))
 :pattern ( ($generated@@167 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@240 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@240 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@240 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@240 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@72 ($generated@@240 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@240 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@430 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@430 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@64) (= (type $generated@@501) $generated@@64)) (= ($generated@@498 ($generated@@430 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@430 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@72 ($generated@@430 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@135) (= (type $generated@@505) $generated@@135)) (= ($generated@@286 ($generated@@253 $generated@@504 $generated@@505)) $generated@@61))
 :pattern ( ($generated@@253 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= ($generated@@506 ($generated@@146 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@146 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@510 ($generated@@146 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@146 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@135) (= (type $generated@@515) $generated@@135)) (= ($generated@@154 ($generated@@253 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@253 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@135) (= (type $generated@@517) $generated@@135)) (= ($generated@@155 ($generated@@253 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@253 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@134 $generated@@135)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@518 ($generated@@138 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@167 $generated@@518))) ($generated@@280 ($generated@@165 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@165 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@74 $generated@@518 ($generated@@138 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@75 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@75 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@524 ($generated@@263 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@263 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@72 ($generated@@263 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@528 ($generated@@268 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@268 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@64) (= ($generated@@72 ($generated@@268 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@64)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@532 ($generated@@160 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@160 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@64) (= ($generated@@72 ($generated@@160 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@536 ($generated@@138 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@138 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@298 $generated@@541 ($generated@@297 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@297 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) (= ($generated@@137 $generated@@542 ($generated@@240 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@542) $generated@@545))) (and ($generated@@254 ($generated@@81 ($generated@@299 $generated@@542) $generated@@545) $generated@@544) ($generated@@254 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@542) $generated@@545))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@137 $generated@@542 ($generated@@240 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@345 $generated@@135 $generated@@135)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) (= ($generated@@137 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@546) $generated@@549))) (and ($generated@@254 ($generated@@81 ($generated@@408 $generated@@546) $generated@@549) $generated@@548) ($generated@@254 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@546) $generated@@549))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@137 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@135) (= (type $generated@@553) $generated@@135)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@253 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@253 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@135) (= (type $generated@@555) $generated@@135)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@253 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@253 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(let (($generated@@561 (type $generated@@557)))
 (=> (and (= (type $generated@@556) ($generated@@238 $generated@@561 $generated@@560)) (= (type $generated@@558) $generated@@561)) (and (=> (= $generated@@558 $generated@@557) (and ($generated@@0 ($generated@@81 ($generated@@334 ($generated@@296 $generated@@556 $generated@@557 $generated@@559)) $generated@@558)) (= ($generated@@81 ($generated@@299 ($generated@@296 $generated@@556 $generated@@557 $generated@@559)) $generated@@558) $generated@@559))) (=> (not (= $generated@@558 $generated@@557)) (and (= ($generated@@0 ($generated@@81 ($generated@@334 ($generated@@296 $generated@@556 $generated@@557 $generated@@559)) $generated@@558)) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@556) $generated@@558))) (= ($generated@@81 ($generated@@299 ($generated@@296 $generated@@556 $generated@@557 $generated@@559)) $generated@@558) ($generated@@81 ($generated@@299 $generated@@556) $generated@@558))))))))
 :pattern ( ($generated@@81 ($generated@@334 ($generated@@296 $generated@@556 $generated@@557 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@81 ($generated@@299 ($generated@@296 $generated@@556 $generated@@557 $generated@@559)) $generated@@558))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@135) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) ($generated@@254 $generated@@562 ($generated@@240 $generated@@563 $generated@@564))) (and (= ($generated@@297 ($generated@@298 ($generated@@238 $generated@@135 $generated@@135) $generated@@562)) $generated@@562) ($generated@@137 ($generated@@298 ($generated@@238 $generated@@135 $generated@@135) $generated@@562) ($generated@@240 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@254 $generated@@562 ($generated@@240 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@135) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) $generated@@64)) ($generated@@254 $generated@@565 ($generated@@430 $generated@@566 $generated@@567))) (and (= ($generated@@297 ($generated@@298 ($generated@@345 $generated@@135 $generated@@135) $generated@@565)) $generated@@565) ($generated@@137 ($generated@@298 ($generated@@345 $generated@@135 $generated@@135) $generated@@565) ($generated@@430 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@254 $generated@@565 ($generated@@430 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@64) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@135)) ($generated@@254 $generated@@570 ($generated@@146 $generated@@568 $generated@@569))) (and (= ($generated@@297 ($generated@@298 $generated@@147 $generated@@570)) $generated@@570) ($generated@@137 ($generated@@298 $generated@@147 $generated@@570) ($generated@@146 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@254 $generated@@570 ($generated@@146 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (not ($generated@@0 ($generated@@81 ($generated@@450 $generated@@572) $generated@@571))))
 :pattern ( (let (($generated@@572 (type $generated@@571)))
($generated@@81 ($generated@@450 $generated@@572) $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 Int) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
 (=> (= (type $generated@@573) ($generated@@134 $generated@@576)) (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@167 $generated@@573))) (= ($generated@@167 ($generated@@166 $generated@@573 $generated@@574 $generated@@575)) ($generated@@167 $generated@@573)))))
 :pattern ( ($generated@@167 ($generated@@166 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@237) (= (type $generated@@578) ($generated@@238 $generated@@135 $generated@@135))) (or ($generated@@239 ($generated@@275 $generated@@578)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@578 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))) (and (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@579 ($generated@@138 $generated@@45))) ($generated@@136 $generated@@579))
 :pattern ( ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 $generated@@578) ($generated@@297 $generated@@579))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@578) ($generated@@297 $generated@@579)))
 :pattern ( ($generated@@133 $generated@@579))
)) (= ($generated@@236 ($generated@@292 $generated@@577) ($generated@@275 $generated@@578)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@580 ($generated@@138 $generated@@45))) (= ($generated@@133 $generated@@580)  (and ($generated@@0 ($generated@@81 ($generated@@334 $generated@@578) ($generated@@297 $generated@@580))) (= ($generated@@167 ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 ($generated@@275 $generated@@578)) ($generated@@297 $generated@@580)))) ($generated@@273 1)))))
 :pattern ( ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 $generated@@578) ($generated@@297 $generated@@580))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@578) ($generated@@297 $generated@@580)))
 :pattern ( ($generated@@133 $generated@@580))
)))))
 :weight 3
 :pattern ( ($generated@@236 ($generated@@292 $generated@@577) ($generated@@275 $generated@@578)))
))))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@69)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@64) (= (type $generated@@584) $generated@@64)) (and (= ($generated@@72 ($generated@@146 $generated@@583 $generated@@584)) $generated@@62) (= ($generated@@581 ($generated@@146 $generated@@583 $generated@@584)) $generated@@63)))
 :pattern ( ($generated@@146 $generated@@583 $generated@@584))
)))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@586) ($generated@@134 $generated@@135))) (or ($generated@@442 $generated@@585 $generated@@586) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@585 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@586 ($generated@@138 $generated@@45))) (and ($generated@@236 $generated@@291 $generated@@585) ($generated@@133 $generated@@586)))))) true)
 :pattern ( ($generated@@441 $generated@@585 $generated@@586))
))))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@147) (= ($generated@@550 ($generated@@297 $generated@@587)) ($generated@@551 $generated@@587)))
 :pattern ( ($generated@@550 ($generated@@297 $generated@@587)))
)))
(assert (= (type $generated@@588) $generated@@237))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@590) ($generated@@134 $generated@@135))) (or ($generated@@442 $generated@@589 $generated@@590) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@589 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@590 ($generated@@138 $generated@@45))) (and ($generated@@236 $generated@@291 $generated@@589) ($generated@@133 $generated@@590)))))) (and (and (and (= $generated@@291 ($generated@@292 $generated@@588)) (= $generated@@294 ($generated@@292 ($generated@@292 $generated@@588)))) (= ($generated@@295 $generated@@588) $generated@@588)) (= ($generated@@441 $generated@@589 $generated@@590) ($generated ($generated@@298 $generated@@2 ($generated@@165 ($generated@@298 ($generated@@134 $generated@@135) ($generated@@81 ($generated@@299 $generated@@589) ($generated@@297 $generated@@590))) ($generated@@273 0)))))))
 :pattern ( ($generated@@441 $generated@@589 $generated@@590))
))))
(assert (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@135) ($generated@@254 $generated@@591 ($generated@@75 0))) (and (= ($generated@@297 ($generated@@298 $generated@@2 $generated@@591)) $generated@@591) ($generated@@137 ($generated@@298 ($generated@@76 $generated@@135 $generated@@4) $generated@@591) ($generated@@75 0))))
 :pattern ( ($generated@@254 $generated@@591 ($generated@@75 0)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@135) (= (type $generated@@593) $generated@@64)) ($generated@@254 $generated@@592 ($generated@@263 $generated@@593))) (and (= ($generated@@297 ($generated@@298 ($generated@@76 $generated@@135 $generated@@4) $generated@@592)) $generated@@592) ($generated@@137 ($generated@@298 ($generated@@76 $generated@@135 $generated@@4) $generated@@592) ($generated@@263 $generated@@593))))
 :pattern ( ($generated@@254 $generated@@592 ($generated@@263 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@135) (= (type $generated@@595) $generated@@64)) ($generated@@254 $generated@@594 ($generated@@268 $generated@@595))) (and (= ($generated@@297 ($generated@@298 ($generated@@76 $generated@@135 $generated@@4) $generated@@594)) $generated@@594) ($generated@@137 ($generated@@298 ($generated@@76 $generated@@135 $generated@@4) $generated@@594) ($generated@@268 $generated@@595))))
 :pattern ( ($generated@@254 $generated@@594 ($generated@@268 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@135) (= (type $generated@@597) $generated@@64)) ($generated@@254 $generated@@596 ($generated@@160 $generated@@597))) (and (= ($generated@@297 ($generated@@298 ($generated@@76 $generated@@135 $generated@@2) $generated@@596)) $generated@@596) ($generated@@137 ($generated@@298 ($generated@@76 $generated@@135 $generated@@2) $generated@@596) ($generated@@160 $generated@@597))))
 :pattern ( ($generated@@254 $generated@@596 ($generated@@160 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@135) (= (type $generated@@599) $generated@@64)) ($generated@@254 $generated@@598 ($generated@@138 $generated@@599))) (and (= ($generated@@297 ($generated@@298 ($generated@@134 $generated@@135) $generated@@598)) $generated@@598) ($generated@@137 ($generated@@298 ($generated@@134 $generated@@135) $generated@@598) ($generated@@138 $generated@@599))))
 :pattern ( ($generated@@254 $generated@@598 ($generated@@138 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@600 ($generated@@160 $generated@@601) $generated@@602) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@600 $generated@@603)))) ($generated@@280 $generated@@603 $generated@@601 $generated@@602))
 :pattern ( ($generated@@81 $generated@@600 $generated@@603))
))))
 :pattern ( ($generated@@74 $generated@@600 ($generated@@160 $generated@@601) $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@147) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@279 $generated@@606) (and ($generated@@145 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@64) ($generated@@74 $generated@@604 ($generated@@146 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@74 $generated@@604 ($generated@@146 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@280 ($generated@@154 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@280 ($generated@@154 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@147) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@279 $generated@@610) (and ($generated@@145 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@64) ($generated@@74 $generated@@608 ($generated@@146 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@74 $generated@@608 ($generated@@146 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@280 ($generated@@155 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@280 ($generated@@155 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@135) (= (type $generated@@613) $generated@@135)) (= ($generated@@253 ($generated@@275 $generated@@612) ($generated@@275 $generated@@613)) ($generated@@275 ($generated@@253 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@253 ($generated@@275 $generated@@612) ($generated@@275 $generated@@613)))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@273 $generated@@614))) ($generated@@275 ($generated@@297 ($generated@@8 $generated@@614))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@273 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@297 ($generated@@275 $generated@@615)) ($generated@@275 ($generated@@297 $generated@@615)))
 :pattern ( ($generated@@297 ($generated@@275 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@139 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@134 $generated@@617)) (= ($generated@@167 $generated@@616) 0)) (= $generated@@616 ($generated@@322 $generated@@617))))
 :pattern ( ($generated@@167 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@76 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@328 ($generated@@82 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@328 $generated@@618) ($generated ($generated@@81 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@328 ($generated@@82 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@623) $generated@@2)) ($generated@@74 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@74 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@625) $generated@@3)) ($generated@@74 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@74 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@627) $generated@@4)) ($generated@@74 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@74 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@629) $generated@@474)) ($generated@@74 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@74 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@631) $generated@@135)) ($generated@@74 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@74 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@134 $generated@@135)) (= (type $generated@@633) $generated@@64)) (= ($generated@@137 $generated@@632 ($generated@@138 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@167 $generated@@632))) ($generated@@254 ($generated@@165 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@165 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@137 $generated@@632 ($generated@@138 $generated@@633)))
)))
(assert  (=> (<= 3 $generated@@132) (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (and (and (= (type $generated@@635) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@636) ($generated@@134 $generated@@135))) (or ($generated@@290 $generated@@635 $generated@@636 $generated@@637) (and (not (= 3 $generated@@132)) (and (and ($generated@@137 $generated@@635 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@137 $generated@@636 ($generated@@138 $generated@@45))) (and ($generated@@236 $generated@@291 $generated@@635) ($generated@@133 $generated@@636)))))) (and ($generated@@236 $generated@@291 ($generated@@289 $generated@@635 $generated@@636 $generated@@637)) ($generated@@137 ($generated@@289 $generated@@635 $generated@@636 $generated@@637) ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)))))
 :pattern ( ($generated@@289 $generated@@635 $generated@@636 $generated@@637))
))))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@167 $generated@@639))) (< ($generated@@551 ($generated@@298 $generated@@147 ($generated@@165 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@551 ($generated@@298 $generated@@147 ($generated@@165 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@238 $generated@@135 $generated@@135)) (= (type $generated@@642) $generated@@64)) (= (type $generated@@643) $generated@@64)) ($generated@@137 $generated@@641 ($generated@@240 $generated@@642 $generated@@643))) (and (and ($generated@@137 ($generated@@334 $generated@@641) ($generated@@263 $generated@@642)) ($generated@@137 ($generated@@368 $generated@@641) ($generated@@263 $generated@@643))) ($generated@@137 ($generated@@403 $generated@@641) ($generated@@263 ($generated@@146 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@137 $generated@@641 ($generated@@240 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@345 $generated@@135 $generated@@135)) (= (type $generated@@645) $generated@@64)) (= (type $generated@@646) $generated@@64)) ($generated@@137 $generated@@644 ($generated@@430 $generated@@645 $generated@@646))) (and (and ($generated@@137 ($generated@@343 $generated@@644) ($generated@@268 $generated@@645)) ($generated@@137 ($generated@@379 $generated@@644) ($generated@@268 $generated@@646))) ($generated@@137 ($generated@@407 $generated@@644) ($generated@@268 ($generated@@146 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@137 $generated@@644 ($generated@@430 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@137 $generated@@647 $generated@@46))
 :pattern ( ($generated@@137 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@137 $generated@@648 $generated@@47))
 :pattern ( ($generated@@137 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@137 $generated@@649 $generated@@44))
 :pattern ( ($generated@@137 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@474) ($generated@@137 $generated@@650 $generated@@45))
 :pattern ( ($generated@@137 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@135) ($generated@@137 $generated@@651 $generated@@48))
 :pattern ( ($generated@@137 $generated@@651 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@652) ($generated@@134 $generated@@135)) (= (type $generated@@653) ($generated@@238 $generated@@135 $generated@@135))) (= (type $generated@@654) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@656) ($generated@@238 $generated@@135 $generated@@135))) (= (type $generated@@657) $generated@@237)) (= (type $generated@@658) $generated@@237)) (= (type $generated@@659) ($generated@@182 $generated@@77 $generated@@4))) (= (type $generated@@660) $generated@@77)) (= (type $generated@@662) ($generated@@238 $generated@@135 $generated@@135))) (= (type $generated@@663) ($generated@@134 $generated@@135))) (= (type $generated@@664) ($generated@@238 $generated@@135 $generated@@135))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@665  (=> (and ($generated@@136 $generated@@652) (=> ($generated@@133 $generated@@652) ($generated@@239 $generated@@653))) (=> (and (and (and ($generated@@133 $generated@@652) ($generated@@236 $generated@@294 $generated@@653)) ($generated@@74 $generated@@653 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@654)) (and ($generated@@74 $generated@@652 ($generated@@138 $generated@@45) $generated@@654) ($generated@@74 ($generated@@8 $generated@@655) $generated@@46 $generated@@654))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@236 $generated@@294 $generated@@653)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@133 $generated@@652)) (=> (and (and (and ($generated@@236 $generated@@291 $generated@@653) ($generated@@133 $generated@@652)) ($generated@@290 $generated@@653 $generated@@652 $generated@@655)) (and (and ($generated@@290 $generated@@653 $generated@@652 $generated@@655) (= $generated@@656 ($generated@@289 $generated@@653 $generated@@652 $generated@@655))) (and ($generated@@74 $generated@@656 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@654) ($generated@@74 $generated@@652 ($generated@@138 $generated@@45) $generated@@654)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@236 $generated@@294 $generated@@656)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@133 $generated@@652)) (=> ($generated@@442 $generated@@656 $generated@@652) (=> (and ($generated@@442 $generated@@656 $generated@@652) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@441 $generated@@656 $generated@@652) $generated@@655))))))))))))
(let (($generated@@666  (=> (and (not ($generated@@133 $generated@@652)) (= (ControlFlow 0 8) 2)) $generated@@665)))
(let (($generated@@667  (=> (and (and ($generated@@133 $generated@@652) ($generated@@74 $generated@@653 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@654)) (and ($generated@@239 $generated@@653) (= (ControlFlow 0 7) 2))) $generated@@665)))
(let (($generated@@668  (=> (= ($generated@@295 $generated@@291) $generated@@291) (=> (and (= ($generated@@295 $generated@@294) $generated@@294) (= ($generated@@295 $generated@@657) $generated@@657)) (=> (and (and (and (= ($generated@@295 $generated@@658) $generated@@658) (= $generated@@659 ($generated@@181 $generated@@660 $generated@@654 $generated@@60 false))) (and ($generated@@137 $generated@@653 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@74 $generated@@653 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@654))) (and (and ($generated@@137 $generated@@652 ($generated@@138 $generated@@45)) ($generated@@74 $generated@@652 ($generated@@138 $generated@@45) $generated@@654)) (and ($generated@@74 $generated@@652 ($generated@@138 $generated@@45) $generated@@654) ($generated@@136 $generated@@652)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@667) (=> (= (ControlFlow 0 9) 8) $generated@@666)))))))
(let (($generated@@669  (=> (and ($generated@@279 $generated@@654) ($generated@@661 $generated@@654)) (=> (and (and (and (and ($generated@@137 $generated@@662 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@74 $generated@@662 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@654)) true) (and (and ($generated@@137 $generated@@663 ($generated@@138 $generated@@45)) ($generated@@74 $generated@@663 ($generated@@138 $generated@@45) $generated@@654)) true)) (and (and (and ($generated@@137 $generated@@664 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46))) ($generated@@74 $generated@@664 ($generated@@240 ($generated@@138 $generated@@45) ($generated@@138 $generated@@46)) $generated@@654)) true) (and (= 4 $generated@@132) (= (ControlFlow 0 10) 9)))) $generated@@668))))
$generated@@669))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U) Bool)
(declare-fun $generated@@157 (Int) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@323 (T@U) Int)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U T@U) Bool)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 () T@U)
(declare-fun $generated@@450 (T@T) T@U)
(declare-fun $generated@@474 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@593 (T@U T@U) Bool)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@103 $generated@@104)) 12))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@80 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@80 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@97 ($generated@@80 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@80 $generated@@107 $generated@@108))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@77 $generated@@109 $generated@@110 $generated@@111)) ($generated@@80 $generated@@81 $generated@@81))
 :pattern ( ($generated@@77 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(= (type ($generated@@78 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@78 $generated@@112))
))) (= (type $generated@@84) $generated@@66)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= (type ($generated@@85 $generated@@114 $generated@@115)) $generated@@66)
 :pattern ( ($generated@@85 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@98) 14)) (= (type $generated@@87) $generated@@98)) (forall (($generated@@116 T@U) ) (! (= (type ($generated@@88 $generated@@116)) $generated@@98)
 :pattern ( ($generated@@88 $generated@@116))
))) (= (type $generated@@89) $generated@@98)) (= (type $generated@@90) $generated@@98)) (forall (($generated@@117 T@U) ) (! (= (type ($generated@@91 $generated@@117)) $generated@@98)
 :pattern ( ($generated@@91 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@119)))
(= (type ($generated@@92 $generated@@118 $generated@@119 $generated@@120)) ($generated@@80 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@92 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ) (! (= (type ($generated@@93 $generated@@123)) $generated@@81)
 :pattern ( ($generated@@93 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (= ($generated@@1 ($generated@@99 $generated@@124 $generated@@125)) 15))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@100 ($generated@@99 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@99 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@101 ($generated@@99 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@99 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@101 (type $generated@@130))))
(= (type ($generated@@94 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@94 $generated@@130 $generated@@131))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(let (($generated@@137 (type $generated@@134)))
(= (type ($generated@@102 $generated@@133 $generated@@134 $generated@@135)) ($generated@@99 $generated@@137 $generated@@136))))
 :pattern ( ($generated@@102 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@101 (type $generated@@138))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@94 ($generated@@102 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@94 ($generated@@102 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@94 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@94 ($generated@@102 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@94 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@97 (type $generated@@150))))
(let (($generated@@152 ($generated@@96 (type $generated@@150))))
(= (type ($generated@@95 $generated@@150)) ($generated@@99 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@95 $generated@@150))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@79) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@155) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@82 ($generated@@78 $generated@@153) ($generated@@78 $generated@@154) ($generated@@78 $generated@@155)) (and (not (= 2 $generated@@76)) (and (and (and ($generated@@83 $generated@@153 $generated@@84) ($generated@@83 $generated@@154 ($generated@@85 $generated@@84 $generated@@46))) ($generated@@83 $generated@@155 ($generated@@85 $generated@@84 $generated@@46))) (and ($generated@@86 $generated@@87 ($generated@@78 $generated@@155)) ($generated@@86 $generated@@87 ($generated@@78 $generated@@154))))))) (and (and (and (= $generated@@87 ($generated@@88 $generated@@89)) (= $generated@@90 ($generated@@88 ($generated@@88 $generated@@89)))) (= ($generated@@91 $generated@@89) $generated@@89)) (= ($generated@@77 ($generated@@78 $generated@@153) ($generated@@78 $generated@@154) ($generated@@78 $generated@@155)) ($generated@@92 ($generated@@78 $generated@@155) ($generated@@93 ($generated@@78 $generated@@153)) ($generated@@94 ($generated@@95 ($generated@@78 $generated@@154)) ($generated@@93 ($generated@@78 $generated@@153)))))))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@78 $generated@@153) ($generated@@78 $generated@@154) ($generated@@78 $generated@@155)))
))))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@69 (type $generated@@163))))
(= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))) (= ($generated@@1 $generated@@159) 17)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@161 $generated@@165 $generated@@166 $generated@@167)) $generated@@159)
 :pattern ( ($generated@@161 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@69 (type $generated@@169))))
 (=> (= (type $generated@@170) $generated@@171) (= ($generated@@160 ($generated@@161 $generated@@168 $generated@@169 $generated@@170) $generated@@169) $generated@@170)))
 :weight 0
))) (and (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@174 $generated@@175) (= ($generated@@160 ($generated@@161 $generated@@173 $generated@@174 $generated@@172) $generated@@175) ($generated@@160 $generated@@173 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or true (= ($generated@@160 ($generated@@161 $generated@@177 $generated@@178 $generated@@176) $generated@@179) ($generated@@160 $generated@@177 $generated@@179)))
 :weight 0
)))) (forall (($generated@@180 Int) ) (! (= (type ($generated@@157 $generated@@180)) $generated@@66)
 :pattern ( ($generated@@157 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@2) (= (type $generated@@182) ($generated@@99 $generated@@158 $generated@@159))) ($generated@@156 $generated@@181 ($generated@@157 0) $generated@@182))
 :pattern ( ($generated@@156 $generated@@181 ($generated@@157 0) $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@83 $generated@@183 ($generated@@157 0)))
 :pattern ( ($generated@@83 $generated@@183 ($generated@@157 0)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@66)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@66) (= (type $generated@@189) $generated@@66)) (= (type $generated@@190) $generated@@79)) ($generated@@83 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@83 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@81)
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@81)
 :pattern ( ($generated@@193 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@79) (= (type $generated@@197) $generated@@79)) true) (= ($generated@@191 $generated@@196 $generated@@197)  (and (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)) (= ($generated@@193 $generated@@196) ($generated@@193 $generated@@197)))))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) $generated@@98) (= (type $generated@@200) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@198 $generated@@200) (and (not (= 1 $generated@@76)) ($generated@@83 $generated@@200 ($generated@@85 $generated@@84 $generated@@46))))) true)
 :pattern ( ($generated@@86 $generated@@199 $generated@@200))
))))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@66)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@99 $generated@@81 $generated@@2)) (= (type $generated@@205) $generated@@66)) ($generated@@83 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@83 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 18)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@158 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@69 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@158) (= (type $generated@@256) ($generated@@99 $generated@@158 $generated@@159))) (= (type $generated@@257) ($generated@@68 $generated@@4))) (= (type $generated@@259) $generated@@158)) (= (type $generated@@260) ($generated@@68 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@160 ($generated@@94 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Bool) ) (! (= (type ($generated@@262 $generated@@263 $generated@@264 $generated@@265 $generated@@266)) ($generated@@208 $generated@@158 $generated@@4))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@69 (type $generated@@272))))
 (=> (and (and (and (and (= (type $generated@@267) $generated@@158) (= (type $generated@@268) ($generated@@99 $generated@@158 $generated@@159))) (= (type $generated@@269) ($generated@@68 $generated@@4))) (= (type $generated@@271) $generated@@158)) (= (type $generated@@272) ($generated@@68 $generated@@273))) (= ($generated@@0 ($generated@@206 ($generated@@262 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))  (=> (and (not (= $generated@@271 $generated@@267)) ($generated@@0 ($generated@@160 ($generated@@94 $generated@@268 $generated@@271) $generated@@269))) $generated@@270))))
 :pattern ( ($generated@@206 ($generated@@262 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (= (type ($generated@@274 $generated@@276 $generated@@277)) $generated@@79)
 :pattern ( ($generated@@274 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) $generated@@66) (= (type $generated@@279) $generated@@66)) (= (type $generated@@280) $generated@@81)) (= (type $generated@@281) $generated@@81)) (= ($generated@@83 ($generated@@274 $generated@@280 $generated@@281) ($generated@@185 $generated@@278 $generated@@279))  (and ($generated@@275 $generated@@280 $generated@@278) ($generated@@275 $generated@@281 $generated@@279))))
 :pattern ( ($generated@@83 ($generated@@274 $generated@@280 $generated@@281) ($generated@@185 $generated@@278 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@79) (= (type $generated@@283) $generated@@79)) (= ($generated@@191 $generated@@282 $generated@@283) (= $generated@@282 $generated@@283)))
 :pattern ( ($generated@@191 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@66)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@99 $generated@@81 $generated@@4)) (= (type $generated@@287) $generated@@66)) (= ($generated@@83 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@81) ($generated@@0 ($generated@@94 $generated@@286 $generated@@288))) ($generated@@275 $generated@@288 $generated@@287))
 :pattern ( ($generated@@94 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@83 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@66)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@99 $generated@@81 $generated@@4)) (= (type $generated@@292) $generated@@66)) (= ($generated@@83 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@81) ($generated@@0 ($generated@@94 $generated@@291 $generated@@293))) ($generated@@275 $generated@@293 $generated@@292))
 :pattern ( ($generated@@94 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@83 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@294 T@U) ) (! (= ($generated@@78 $generated@@294) $generated@@294)
 :pattern ( ($generated@@78 $generated@@294))
)))
(assert (= (type $generated@@295) $generated@@98))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) $generated@@79) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@82 $generated@@296 $generated@@297 $generated@@298) (and (not (= 2 $generated@@76)) (and (and (and ($generated@@83 $generated@@296 $generated@@84) ($generated@@83 $generated@@297 ($generated@@85 $generated@@84 $generated@@46))) ($generated@@83 $generated@@298 ($generated@@85 $generated@@84 $generated@@46))) (and ($generated@@86 $generated@@87 $generated@@298) ($generated@@86 $generated@@87 $generated@@297)))))) (and (and (and (= $generated@@87 ($generated@@88 $generated@@295)) (= $generated@@90 ($generated@@88 ($generated@@88 $generated@@295)))) (= ($generated@@91 $generated@@295) $generated@@295)) (= ($generated@@77 $generated@@296 $generated@@297 $generated@@298) ($generated@@92 $generated@@298 ($generated@@93 $generated@@296) ($generated@@94 ($generated@@95 $generated@@297) ($generated@@93 $generated@@296))))))
 :pattern ( ($generated@@77 $generated@@296 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@66) (= (type $generated@@302) $generated@@66)) (= (type $generated@@303) $generated@@81)) (= (type $generated@@304) $generated@@81)) (= (type $generated@@305) ($generated@@99 $generated@@158 $generated@@159))) ($generated@@299 $generated@@305)) (= ($generated@@156 ($generated@@274 $generated@@303 $generated@@304) ($generated@@185 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@156 ($generated@@274 $generated@@303 $generated@@304) ($generated@@185 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@70)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@79) (= ($generated@@184 $generated@@308) (= ($generated@@306 $generated@@308) $generated@@61)))
 :pattern ( ($generated@@184 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@79) ($generated@@184 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@81) (= (type $generated@@311) $generated@@81)) (= $generated@@309 ($generated@@274 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@184 $generated@@309))
)))
(assert  (and (and (forall (($generated@@316 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@316)) 19)) (forall (($generated@@317 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
))) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@312 $generated@@318)) ($generated@@314 $generated@@318))
 :pattern ( ($generated@@312 $generated@@318))
))))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@319)) 0)
 :pattern ( ($generated@@312 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@66) (= (type $generated@@322) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@300 ($generated@@93 $generated@@320) $generated@@321 $generated@@322) ($generated@@156 $generated@@320 $generated@@321 $generated@@322)))
 :pattern ( ($generated@@300 ($generated@@93 $generated@@320) $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@325 T@T) ) (! (= (type ($generated@@324 $generated@@325)) ($generated@@99 $generated@@325 $generated@@2))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@100 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@99 $generated@@327 $generated@@2)) (and (= (= ($generated@@323 $generated@@326) 0) (= $generated@@326 ($generated@@324 $generated@@327))) (=> (not (= ($generated@@323 $generated@@326) 0)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) (< 0 ($generated ($generated@@94 $generated@@326 $generated@@328))))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert  (and (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@96 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331)) ($generated@@99 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@331))
)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@330 $generated@@333 $generated@@334)) ($generated@@80 $generated@@333 $generated@@334))
 :pattern ( ($generated@@330 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@94 ($generated@@329 ($generated@@330 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@94 ($generated@@329 ($generated@@330 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 20)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@99 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@94 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@94 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@100 (type $generated@@357))))
 (=> (and (= (type $generated@@357) ($generated@@99 $generated@@359 $generated@@4)) (= (type $generated@@358) ($generated@@99 $generated@@359 $generated@@4))) (= ($generated@@356 $generated@@357 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (= ($generated@@0 ($generated@@94 $generated@@357 $generated@@360)) ($generated@@0 ($generated@@94 $generated@@358 $generated@@360))))
 :pattern ( ($generated@@94 $generated@@357 $generated@@360))
 :pattern ( ($generated@@94 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@361) $generated@@98) (= (type $generated@@362) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@198 $generated@@362) (and (not (= 1 $generated@@76)) ($generated@@83 $generated@@362 ($generated@@85 $generated@@84 $generated@@46))))) (= ($generated@@86 ($generated@@88 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@79) ($generated@@83 $generated@@363 $generated@@84)) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@362) ($generated@@93 $generated@@363))))
 :pattern ( ($generated@@94 ($generated@@329 $generated@@362) ($generated@@93 $generated@@363)))
))))
 :pattern ( ($generated@@86 ($generated@@88 $generated@@361) $generated@@362))
))))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@100 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@99 $generated@@365 $generated@@2)) (= ($generated@@202 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@94 $generated@@364 $generated@@366))) (<= ($generated ($generated@@94 $generated@@364 $generated@@366)) ($generated@@323 $generated@@364))))
 :pattern ( ($generated@@94 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@202 $generated@@364))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@81) ($generated@@275 $generated@@370 $generated@@84)) (and (= ($generated@@93 ($generated@@367 $generated@@79 $generated@@370)) $generated@@370) ($generated@@83 ($generated@@367 $generated@@79 $generated@@370) $generated@@84)))
 :pattern ( ($generated@@275 $generated@@370 $generated@@84))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@97 (type $generated@@371))))
(let (($generated@@373 ($generated@@96 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@80 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@330 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@329 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@97 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@99 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@97 (type $generated@@378))))
(let (($generated@@380 ($generated@@96 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@80 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@330 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@94 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@342 (type $generated@@382))))
(let (($generated@@384 ($generated@@341 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@340 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@339 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@94 ($generated@@338 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@338 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@342 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@99 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@342 (type $generated@@389))))
(let (($generated@@391 ($generated@@341 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@340 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@339 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@94 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@99 $generated@@81 $generated@@2)) (= (type $generated@@394) $generated@@66)) (= ($generated@@83 $generated@@393 ($generated@@201 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@81) (< 0 ($generated ($generated@@94 $generated@@393 $generated@@395)))) ($generated@@275 $generated@@395 $generated@@394))
 :pattern ( ($generated@@94 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@83 $generated@@393 ($generated@@201 $generated@@394)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@396) $generated@@98) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@198 ($generated@@78 $generated@@397)) (and (not (= 1 $generated@@76)) ($generated@@83 $generated@@397 ($generated@@85 $generated@@84 $generated@@46))))) (= ($generated@@86 ($generated@@88 $generated@@396) ($generated@@78 $generated@@397)) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@79) ($generated@@83 $generated@@398 $generated@@84)) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@397) ($generated@@93 $generated@@398))))
 :pattern ( ($generated@@94 ($generated@@329 $generated@@397) ($generated@@93 $generated@@398)))
))))
 :weight 3
 :pattern ( ($generated@@86 ($generated@@88 $generated@@396) ($generated@@78 $generated@@397)))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@99 $generated@@81 $generated@@4)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@399 ($generated@@284 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@81) ($generated@@0 ($generated@@94 $generated@@399 $generated@@402))) ($generated@@300 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@94 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@156 $generated@@399 ($generated@@284 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@99 $generated@@81 $generated@@4)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@403 ($generated@@289 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@81) ($generated@@0 ($generated@@94 $generated@@403 $generated@@406))) ($generated@@300 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@94 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@156 $generated@@403 ($generated@@289 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(= ($generated ($generated@@94 ($generated@@324 $generated@@408) $generated@@407)) 0))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@94 ($generated@@324 $generated@@408) $generated@@407)))
)))
(assert (forall (($generated@@410 T@U) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@99 $generated@@81 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@412) $generated@@81)) (= ($generated@@0 ($generated@@94 ($generated@@409 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@94 ($generated@@329 $generated@@411) ($generated@@192 ($generated@@367 $generated@@79 $generated@@412)))) (= ($generated@@94 ($generated@@95 $generated@@411) ($generated@@192 ($generated@@367 $generated@@79 $generated@@412))) ($generated@@193 ($generated@@367 $generated@@79 $generated@@412))))))
 :pattern ( ($generated@@94 ($generated@@409 $generated@@411) $generated@@412))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@99 $generated@@81 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@342 (type $generated@@416))))
(let (($generated@@418 ($generated@@341 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@99 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@340 $generated@@81 $generated@@81)) (= (type $generated@@420) $generated@@81)) (= ($generated@@0 ($generated@@94 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@94 ($generated@@338 $generated@@419) ($generated@@192 ($generated@@367 $generated@@79 $generated@@420)))) (= ($generated@@94 ($generated@@414 $generated@@419) ($generated@@192 ($generated@@367 $generated@@79 $generated@@420))) ($generated@@193 ($generated@@367 $generated@@79 $generated@@420))))))
 :pattern ( ($generated@@94 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@96 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@80 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@94 ($generated@@375 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@94 ($generated@@329 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@94 ($generated@@95 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@94 ($generated@@329 $generated@@421) $generated@@425))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@94 ($generated@@375 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@341 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@340 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@94 ($generated@@386 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@94 ($generated@@338 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@94 ($generated@@414 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@94 ($generated@@338 $generated@@426) $generated@@430))
 :pattern ( ($generated@@94 ($generated@@414 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@94 ($generated@@386 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@432) $generated@@66)) (= (type $generated@@433) $generated@@66)) (= (type $generated@@434) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@431 ($generated@@85 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@81) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@431) $generated@@435))) (and ($generated@@300 ($generated@@94 ($generated@@95 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@300 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@431) $generated@@435))
 :pattern ( ($generated@@94 ($generated@@329 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@156 $generated@@431 ($generated@@85 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@340 $generated@@81 $generated@@81)) (= (type $generated@@440) $generated@@66)) (= (type $generated@@441) $generated@@66)) (= (type $generated@@442) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@81) ($generated@@0 ($generated@@94 ($generated@@338 $generated@@439) $generated@@443))) (and ($generated@@300 ($generated@@94 ($generated@@414 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@300 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@94 ($generated@@414 $generated@@439) $generated@@443))
 :pattern ( ($generated@@94 ($generated@@338 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@156 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (= (type $generated@@444) $generated@@98))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@98) (= (type $generated@@446) ($generated@@80 $generated@@81 $generated@@81))) (= ($generated@@86 $generated@@445 $generated@@446) ($generated@@86 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@86 ($generated@@91 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@100 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@99 $generated@@449 $generated@@4)) (= (type $generated@@448) ($generated@@99 $generated@@449 $generated@@4))) ($generated@@356 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@356 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@451 T@T) ) (! (= (type ($generated@@450 $generated@@451)) ($generated@@99 $generated@@451 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@342 (type $generated@@452))))
(let (($generated@@454 ($generated@@341 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@340 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@339 $generated@@454 $generated@@453)) (= ($generated@@338 $generated@@452) ($generated@@450 $generated@@454))))))
 :pattern ( ($generated@@338 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@342 (type $generated@@455))))
(let (($generated@@457 ($generated@@341 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@340 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@339 $generated@@457 $generated@@456)) (= ($generated@@386 $generated@@455) ($generated@@450 $generated@@456))))))
 :pattern ( ($generated@@386 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@342 (type $generated@@458))))
(let (($generated@@460 ($generated@@341 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@340 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@339 $generated@@460 $generated@@459)) (= ($generated@@413 $generated@@458) ($generated@@450 $generated@@81))))))
 :pattern ( ($generated@@413 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@97 (type $generated@@461))))
(let (($generated@@463 ($generated@@96 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@80 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@330 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@81) (= (type $generated@@465) $generated@@81)) ($generated@@0 ($generated@@94 ($generated@@409 $generated@@461) ($generated@@93 ($generated@@274 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@409 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@342 (type $generated@@466))))
(let (($generated@@468 ($generated@@341 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@340 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@339 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@81) (= (type $generated@@470) $generated@@81)) ($generated@@0 ($generated@@94 ($generated@@413 $generated@@466) ($generated@@93 ($generated@@274 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@413 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@81) ($generated@@275 $generated@@471 $generated@@46)) (and (= ($generated@@93 ($generated@@367 $generated@@2 $generated@@471)) $generated@@471) ($generated@@83 ($generated@@367 $generated@@2 $generated@@471) $generated@@46)))
 :pattern ( ($generated@@275 $generated@@471 $generated@@46))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@81) ($generated@@275 $generated@@472 $generated@@47)) (and (= ($generated@@93 ($generated@@367 $generated@@3 $generated@@472)) $generated@@472) ($generated@@83 ($generated@@367 $generated@@3 $generated@@472) $generated@@47)))
 :pattern ( ($generated@@275 $generated@@472 $generated@@47))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@81) ($generated@@275 $generated@@473 $generated@@44)) (and (= ($generated@@93 ($generated@@367 $generated@@4 $generated@@473)) $generated@@473) ($generated@@83 ($generated@@367 $generated@@4 $generated@@473) $generated@@44)))
 :pattern ( ($generated@@275 $generated@@473 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@474) 21))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@81) ($generated@@275 $generated@@475 $generated@@45)) (and (= ($generated@@93 ($generated@@367 $generated@@474 $generated@@475)) $generated@@475) ($generated@@83 ($generated@@367 $generated@@474 $generated@@475) $generated@@45)))
 :pattern ( ($generated@@275 $generated@@475 $generated@@45))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@98) (= (type $generated@@477) ($generated@@80 $generated@@81 $generated@@81))) (= ($generated@@86 ($generated@@88 $generated@@476) $generated@@477) ($generated@@86 $generated@@476 $generated@@477)))
 :pattern ( ($generated@@86 ($generated@@88 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@66) (= ($generated@@275 ($generated@@93 $generated@@478) $generated@@479) ($generated@@83 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@275 ($generated@@93 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@100 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@99 $generated@@481 $generated@@2)) (<= 0 ($generated@@323 $generated@@480))))
 :pattern ( ($generated@@323 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@315 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@314 $generated@@483)) (<= 0 ($generated@@313 $generated@@482))))
 :pattern ( ($generated@@313 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@484 ($generated@@85 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@85 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@488 ($generated@@85 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@85 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@66) (= (type $generated@@493) $generated@@66)) (= ($generated@@74 ($generated@@85 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@85 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@66) (= (type $generated@@497) $generated@@66)) (= ($generated@@494 ($generated@@436 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@436 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@436 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@436 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@66) (= (type $generated@@503) $generated@@66)) (= ($generated@@74 ($generated@@436 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@81) (= (type $generated@@505) $generated@@81)) (= ($generated@@306 ($generated@@274 $generated@@504 $generated@@505)) $generated@@61))
 :pattern ( ($generated@@274 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@66) (= (type $generated@@509) $generated@@66)) (= ($generated@@506 ($generated@@185 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@185 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@66) (= (type $generated@@513) $generated@@66)) (= ($generated@@510 ($generated@@185 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@185 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@81) (= (type $generated@@515) $generated@@81)) (= ($generated@@192 ($generated@@274 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@274 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@81) (= (type $generated@@517) $generated@@81)) (= ($generated@@193 ($generated@@274 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@274 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@315 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@314 $generated@@81)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@313 $generated@@524))) ($generated@@300 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@156 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@157 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@157 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@66)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@66) (= ($generated@@530 ($generated@@284 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@284 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@66) (= ($generated@@74 ($generated@@284 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@284 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@66)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@534 ($generated@@289 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@289 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@66) (= ($generated@@74 ($generated@@289 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@289 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@66)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@538 ($generated@@201 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@201 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@66) (= ($generated@@74 ($generated@@201 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@66)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@66) (= ($generated@@74 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@367 $generated@@547 ($generated@@93 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@93 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) $generated@@66)) (= ($generated@@83 $generated@@548 ($generated@@85 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@81) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@548) $generated@@551))) (and ($generated@@275 ($generated@@94 ($generated@@95 $generated@@548) $generated@@551) $generated@@550) ($generated@@275 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@548) $generated@@551))
 :pattern ( ($generated@@94 ($generated@@329 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@83 $generated@@548 ($generated@@85 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@340 $generated@@81 $generated@@81)) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) $generated@@66)) (= ($generated@@83 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@81) ($generated@@0 ($generated@@94 ($generated@@338 $generated@@552) $generated@@555))) (and ($generated@@275 ($generated@@94 ($generated@@414 $generated@@552) $generated@@555) $generated@@554) ($generated@@275 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@94 ($generated@@414 $generated@@552) $generated@@555))
 :pattern ( ($generated@@94 ($generated@@338 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@83 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@81) (= (type $generated@@559) $generated@@81)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@274 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@274 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@81) (= (type $generated@@561) $generated@@81)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@274 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@274 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
(let (($generated@@567 (type $generated@@563)))
 (=> (and (= (type $generated@@562) ($generated@@80 $generated@@567 $generated@@566)) (= (type $generated@@564) $generated@@567)) (and (=> (= $generated@@564 $generated@@563) (and ($generated@@0 ($generated@@94 ($generated@@329 ($generated@@92 $generated@@562 $generated@@563 $generated@@565)) $generated@@564)) (= ($generated@@94 ($generated@@95 ($generated@@92 $generated@@562 $generated@@563 $generated@@565)) $generated@@564) $generated@@565))) (=> (not (= $generated@@564 $generated@@563)) (and (= ($generated@@0 ($generated@@94 ($generated@@329 ($generated@@92 $generated@@562 $generated@@563 $generated@@565)) $generated@@564)) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@562) $generated@@564))) (= ($generated@@94 ($generated@@95 ($generated@@92 $generated@@562 $generated@@563 $generated@@565)) $generated@@564) ($generated@@94 ($generated@@95 $generated@@562) $generated@@564))))))))
 :pattern ( ($generated@@94 ($generated@@329 ($generated@@92 $generated@@562 $generated@@563 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@94 ($generated@@95 ($generated@@92 $generated@@562 $generated@@563 $generated@@565)) $generated@@564))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@81) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@275 $generated@@568 ($generated@@85 $generated@@569 $generated@@570))) (and (= ($generated@@93 ($generated@@367 ($generated@@80 $generated@@81 $generated@@81) $generated@@568)) $generated@@568) ($generated@@83 ($generated@@367 ($generated@@80 $generated@@81 $generated@@81) $generated@@568) ($generated@@85 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@275 $generated@@568 ($generated@@85 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@81) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) ($generated@@275 $generated@@571 ($generated@@436 $generated@@572 $generated@@573))) (and (= ($generated@@93 ($generated@@367 ($generated@@340 $generated@@81 $generated@@81) $generated@@571)) $generated@@571) ($generated@@83 ($generated@@367 ($generated@@340 $generated@@81 $generated@@81) $generated@@571) ($generated@@436 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@275 $generated@@571 ($generated@@436 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@66) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) $generated@@81)) ($generated@@275 $generated@@576 ($generated@@185 $generated@@574 $generated@@575))) (and (= ($generated@@93 ($generated@@367 $generated@@79 $generated@@576)) $generated@@576) ($generated@@83 ($generated@@367 $generated@@79 $generated@@576) ($generated@@185 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@275 $generated@@576 ($generated@@185 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
 (not ($generated@@0 ($generated@@94 ($generated@@450 $generated@@578) $generated@@577))))
 :pattern ( (let (($generated@@578 (type $generated@@577)))
($generated@@94 ($generated@@450 $generated@@578) $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@71)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@66) (= (type $generated@@582) $generated@@66)) (and (= ($generated@@74 ($generated@@185 $generated@@581 $generated@@582)) $generated@@62) (= ($generated@@579 ($generated@@185 $generated@@581 $generated@@582)) $generated@@64)))
 :pattern ( ($generated@@185 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@79) (= ($generated@@556 ($generated@@93 $generated@@583)) ($generated@@557 $generated@@583)))
 :pattern ( ($generated@@556 ($generated@@93 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@81) ($generated@@275 $generated@@584 ($generated@@157 0))) (and (= ($generated@@93 ($generated@@367 $generated@@2 $generated@@584)) $generated@@584) ($generated@@83 ($generated@@367 ($generated@@99 $generated@@81 $generated@@4) $generated@@584) ($generated@@157 0))))
 :pattern ( ($generated@@275 $generated@@584 ($generated@@157 0)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) $generated@@66)) ($generated@@275 $generated@@585 ($generated@@284 $generated@@586))) (and (= ($generated@@93 ($generated@@367 ($generated@@99 $generated@@81 $generated@@4) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@367 ($generated@@99 $generated@@81 $generated@@4) $generated@@585) ($generated@@284 $generated@@586))))
 :pattern ( ($generated@@275 $generated@@585 ($generated@@284 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@81) (= (type $generated@@588) $generated@@66)) ($generated@@275 $generated@@587 ($generated@@289 $generated@@588))) (and (= ($generated@@93 ($generated@@367 ($generated@@99 $generated@@81 $generated@@4) $generated@@587)) $generated@@587) ($generated@@83 ($generated@@367 ($generated@@99 $generated@@81 $generated@@4) $generated@@587) ($generated@@289 $generated@@588))))
 :pattern ( ($generated@@275 $generated@@587 ($generated@@289 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) $generated@@66)) ($generated@@275 $generated@@589 ($generated@@201 $generated@@590))) (and (= ($generated@@93 ($generated@@367 ($generated@@99 $generated@@81 $generated@@2) $generated@@589)) $generated@@589) ($generated@@83 ($generated@@367 ($generated@@99 $generated@@81 $generated@@2) $generated@@589) ($generated@@201 $generated@@590))))
 :pattern ( ($generated@@275 $generated@@589 ($generated@@201 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@81) (= (type $generated@@592) $generated@@66)) ($generated@@275 $generated@@591 ($generated@@518 $generated@@592))) (and (= ($generated@@93 ($generated@@367 ($generated@@314 $generated@@81) $generated@@591)) $generated@@591) ($generated@@83 ($generated@@367 ($generated@@314 $generated@@81) $generated@@591) ($generated@@518 $generated@@592))))
 :pattern ( ($generated@@275 $generated@@591 ($generated@@518 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@100 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@99 $generated@@596 $generated@@4)) (= (type $generated@@595) ($generated@@99 $generated@@596 $generated@@4))) (= ($generated@@593 $generated@@594 $generated@@595) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@596) ($generated@@0 ($generated@@94 $generated@@594 $generated@@597))) ($generated@@0 ($generated@@94 $generated@@595 $generated@@597)))
 :pattern ( ($generated@@94 $generated@@594 $generated@@597))
 :pattern ( ($generated@@94 $generated@@595 $generated@@597))
)))))
 :pattern ( ($generated@@593 $generated@@594 $generated@@595))
)))
(assert (= ($generated@@74 $generated@@84) $generated@@63))
(assert (= ($generated@@579 $generated@@84) $generated@@65))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@99 $generated@@81 $generated@@2)) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@598 ($generated@@201 $generated@@599) $generated@@600) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@81) (< 0 ($generated ($generated@@94 $generated@@598 $generated@@601)))) ($generated@@300 $generated@@601 $generated@@599 $generated@@600))
 :pattern ( ($generated@@94 $generated@@598 $generated@@601))
))))
 :pattern ( ($generated@@156 $generated@@598 ($generated@@201 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@79) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) ($generated@@99 $generated@@158 $generated@@159))) (and ($generated@@299 $generated@@604) (and ($generated@@184 $generated@@602) (exists (($generated@@605 T@U) ) (!  (and (= (type $generated@@605) $generated@@66) ($generated@@156 $generated@@602 ($generated@@185 $generated@@603 $generated@@605) $generated@@604))
 :pattern ( ($generated@@156 $generated@@602 ($generated@@185 $generated@@603 $generated@@605) $generated@@604))
))))) ($generated@@300 ($generated@@192 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@300 ($generated@@192 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@79) (= (type $generated@@607) $generated@@66)) (= (type $generated@@608) ($generated@@99 $generated@@158 $generated@@159))) (and ($generated@@299 $generated@@608) (and ($generated@@184 $generated@@606) (exists (($generated@@609 T@U) ) (!  (and (= (type $generated@@609) $generated@@66) ($generated@@156 $generated@@606 ($generated@@185 $generated@@609 $generated@@607) $generated@@608))
 :pattern ( ($generated@@156 $generated@@606 ($generated@@185 $generated@@609 $generated@@607) $generated@@608))
))))) ($generated@@300 ($generated@@193 $generated@@606) $generated@@607 $generated@@608))
 :pattern ( ($generated@@300 ($generated@@193 $generated@@606) $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@81) (= (type $generated@@611) $generated@@81)) (= ($generated@@274 ($generated@@78 $generated@@610) ($generated@@78 $generated@@611)) ($generated@@78 ($generated@@274 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@274 ($generated@@78 $generated@@610) ($generated@@78 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (= ($generated@@93 ($generated@@78 $generated@@612)) ($generated@@78 ($generated@@93 $generated@@612)))
 :pattern ( ($generated@@93 ($generated@@78 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@315 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@314 $generated@@614)) (= ($generated@@313 $generated@@613) 0)) (= $generated@@613 ($generated@@312 $generated@@614))))
 :pattern ( ($generated@@313 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@99 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@323 ($generated@@102 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@323 $generated@@615) ($generated ($generated@@94 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@323 ($generated@@102 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@620) $generated@@2)) ($generated@@156 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@156 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@622) $generated@@3)) ($generated@@156 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@156 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@624) $generated@@4)) ($generated@@156 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@156 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@626) $generated@@474)) ($generated@@156 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@156 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@628) $generated@@81)) ($generated@@156 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@156 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@314 $generated@@81)) (= (type $generated@@630) $generated@@66)) (= ($generated@@83 $generated@@629 ($generated@@518 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@313 $generated@@629))) ($generated@@275 ($generated@@519 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@519 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@83 $generated@@629 ($generated@@518 $generated@@630)))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@79) (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@82 $generated@@632 $generated@@633 $generated@@634) (and (not (= 2 $generated@@76)) (and (and (and ($generated@@83 $generated@@632 $generated@@84) ($generated@@83 $generated@@633 ($generated@@85 $generated@@84 $generated@@46))) ($generated@@83 $generated@@634 ($generated@@85 $generated@@84 $generated@@46))) (and ($generated@@86 $generated@@87 $generated@@634) ($generated@@86 $generated@@87 $generated@@633)))))) (and ($generated@@86 $generated@@87 ($generated@@77 $generated@@632 $generated@@633 $generated@@634)) ($generated@@83 ($generated@@77 $generated@@632 $generated@@633 $generated@@634) ($generated@@85 $generated@@84 $generated@@46))))
 :pattern ( ($generated@@77 $generated@@632 $generated@@633 $generated@@634))
))))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@314 $generated@@81)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@313 $generated@@636))) (< ($generated@@557 ($generated@@367 $generated@@79 ($generated@@519 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@557 ($generated@@367 $generated@@79 ($generated@@519 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@639) $generated@@66)) (= (type $generated@@640) $generated@@66)) ($generated@@83 $generated@@638 ($generated@@85 $generated@@639 $generated@@640))) (and (and ($generated@@83 ($generated@@329 $generated@@638) ($generated@@284 $generated@@639)) ($generated@@83 ($generated@@375 $generated@@638) ($generated@@284 $generated@@640))) ($generated@@83 ($generated@@409 $generated@@638) ($generated@@284 ($generated@@185 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@83 $generated@@638 ($generated@@85 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@340 $generated@@81 $generated@@81)) (= (type $generated@@642) $generated@@66)) (= (type $generated@@643) $generated@@66)) ($generated@@83 $generated@@641 ($generated@@436 $generated@@642 $generated@@643))) (and (and ($generated@@83 ($generated@@338 $generated@@641) ($generated@@289 $generated@@642)) ($generated@@83 ($generated@@386 $generated@@641) ($generated@@289 $generated@@643))) ($generated@@83 ($generated@@413 $generated@@641) ($generated@@289 ($generated@@185 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@83 $generated@@641 ($generated@@436 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@83 $generated@@644 $generated@@46))
 :pattern ( ($generated@@83 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@83 $generated@@645 $generated@@47))
 :pattern ( ($generated@@83 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@83 $generated@@646 $generated@@44))
 :pattern ( ($generated@@83 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@474) ($generated@@83 $generated@@647 $generated@@45))
 :pattern ( ($generated@@83 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@81) ($generated@@83 $generated@@648 $generated@@48))
 :pattern ( ($generated@@83 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 (T@U) Bool)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@649) $generated@@79) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@654) ($generated@@99 $generated@@158 $generated@@159))) (= (type $generated@@652) ($generated@@208 $generated@@158 $generated@@4))) (= (type $generated@@653) $generated@@158)) (= (type $generated@@655) ($generated@@99 $generated@@158 $generated@@159))) (= (type $generated@@657) $generated@@98)) (= (type $generated@@658) ($generated@@208 $generated@@158 $generated@@4))) (= (type $generated@@659) $generated@@98)) (= (type $generated@@660) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@661  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@86 $generated@@90 ($generated@@77 $generated@@649 $generated@@650 $generated@@651)))))
(let (($generated@@662  (=> (= $generated@@652 ($generated@@262 $generated@@653 $generated@@654 $generated@@60 false)) (=> (and ($generated@@299 $generated@@655) ($generated@@656 $generated@@655)) (=> (and (and (= $generated@@654 $generated@@655) (= $generated@@87 ($generated@@88 $generated@@657))) (and (= $generated@@90 ($generated@@88 ($generated@@88 $generated@@657))) (= ($generated@@91 $generated@@657) $generated@@657))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@650) ($generated@@93 $generated@@649)))) (=> ($generated@@0 ($generated@@94 ($generated@@329 $generated@@650) ($generated@@93 $generated@@649))) (=> (= ($generated@@77 $generated@@649 $generated@@650 $generated@@651) ($generated@@92 $generated@@651 ($generated@@93 $generated@@649) ($generated@@94 ($generated@@95 $generated@@650) ($generated@@93 $generated@@649)))) (=> (and ($generated@@83 ($generated@@77 $generated@@649 $generated@@650 $generated@@651) ($generated@@85 $generated@@84 $generated@@46)) (= (ControlFlow 0 7) 6)) $generated@@661)))))))))
(let (($generated@@663  (=> (and (and ($generated@@83 ($generated@@77 $generated@@649 $generated@@650 $generated@@651) ($generated@@85 $generated@@84 $generated@@46)) ($generated@@156 $generated@@649 $generated@@84 $generated@@654)) (and ($generated@@156 $generated@@650 ($generated@@85 $generated@@84 $generated@@46) $generated@@654) ($generated@@156 $generated@@651 ($generated@@85 $generated@@84 $generated@@46) $generated@@654))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@86 $generated@@90 $generated@@651)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@86 $generated@@90 $generated@@650)) (=> (and (and ($generated@@86 $generated@@87 $generated@@651) ($generated@@86 $generated@@87 $generated@@650)) (= (ControlFlow 0 2) (- 0 1))) (or (and (and (= $generated@@649 $generated@@649) (= $generated@@650 $generated@@650)) (= $generated@@651 $generated@@651)) (or (< ($generated@@557 $generated@@649) ($generated@@557 $generated@@649)) (and (= ($generated@@557 $generated@@649) ($generated@@557 $generated@@649)) (or (and ($generated@@593 ($generated@@329 $generated@@650) ($generated@@329 $generated@@650)) (not ($generated@@593 ($generated@@329 $generated@@650) ($generated@@329 $generated@@650)))) (and ($generated@@356 ($generated@@329 $generated@@650) ($generated@@329 $generated@@650)) (and ($generated@@593 ($generated@@329 $generated@@651) ($generated@@329 $generated@@651)) (not ($generated@@593 ($generated@@329 $generated@@651) ($generated@@329 $generated@@651)))))))))))))))
(let (($generated@@664  (=> (= $generated@@658 ($generated@@207 $generated@@653 $generated@@654 $generated@@60 false)) (=> (and (= ($generated@@91 $generated@@659) $generated@@659) (= ($generated@@91 $generated@@660) $generated@@660)) (=> (and (and (and (= ($generated@@91 $generated@@87) $generated@@87) (= ($generated@@91 $generated@@90) $generated@@90)) (and ($generated@@156 $generated@@651 ($generated@@85 $generated@@84 $generated@@46) $generated@@654) ($generated@@198 $generated@@651))) (and (and ($generated@@86 $generated@@87 $generated@@651) ($generated@@156 $generated@@650 ($generated@@85 $generated@@84 $generated@@46) $generated@@654)) (and ($generated@@198 $generated@@650) ($generated@@86 $generated@@87 $generated@@650)))) (and (=> (= (ControlFlow 0 9) 2) $generated@@663) (=> (= (ControlFlow 0 9) 7) $generated@@662)))))))
(let (($generated@@665  (=> (and (and (and ($generated@@299 $generated@@654) ($generated@@656 $generated@@654)) ($generated@@83 $generated@@649 $generated@@84)) (and (and ($generated@@83 $generated@@650 ($generated@@85 $generated@@84 $generated@@46)) ($generated@@83 $generated@@651 ($generated@@85 $generated@@84 $generated@@46))) (and (= 2 $generated@@76) (= (ControlFlow 0 10) 9)))) $generated@@664)))
$generated@@665))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U) Bool)
(declare-fun $generated@@157 (Int) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 () T@U)
(declare-fun $generated@@430 (T@U T@U) Bool)
(declare-fun $generated@@435 (T@T) T@U)
(declare-fun $generated@@459 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@103 $generated@@104)) 12))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@80 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@80 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@97 ($generated@@80 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@80 $generated@@107 $generated@@108))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@77 $generated@@109 $generated@@110 $generated@@111)) ($generated@@80 $generated@@81 $generated@@81))
 :pattern ( ($generated@@77 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(= (type ($generated@@78 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@78 $generated@@112))
))) (= (type $generated@@84) $generated@@66)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= (type ($generated@@85 $generated@@114 $generated@@115)) $generated@@66)
 :pattern ( ($generated@@85 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@98) 14)) (= (type $generated@@87) $generated@@98)) (forall (($generated@@116 T@U) ) (! (= (type ($generated@@88 $generated@@116)) $generated@@98)
 :pattern ( ($generated@@88 $generated@@116))
))) (= (type $generated@@89) $generated@@98)) (= (type $generated@@90) $generated@@98)) (forall (($generated@@117 T@U) ) (! (= (type ($generated@@91 $generated@@117)) $generated@@98)
 :pattern ( ($generated@@91 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@119)))
(= (type ($generated@@92 $generated@@118 $generated@@119 $generated@@120)) ($generated@@80 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@92 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ) (! (= (type ($generated@@93 $generated@@123)) $generated@@81)
 :pattern ( ($generated@@93 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (= ($generated@@1 ($generated@@99 $generated@@124 $generated@@125)) 15))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@100 ($generated@@99 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@99 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@101 ($generated@@99 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@99 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@101 (type $generated@@130))))
(= (type ($generated@@94 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@94 $generated@@130 $generated@@131))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 (type $generated@@135)))
(let (($generated@@137 (type $generated@@134)))
(= (type ($generated@@102 $generated@@133 $generated@@134 $generated@@135)) ($generated@@99 $generated@@137 $generated@@136))))
 :pattern ( ($generated@@102 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@101 (type $generated@@138))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@94 ($generated@@102 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@94 ($generated@@102 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@94 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@94 ($generated@@102 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@94 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 T@U) ) (! (let (($generated@@151 ($generated@@97 (type $generated@@150))))
(let (($generated@@152 ($generated@@96 (type $generated@@150))))
(= (type ($generated@@95 $generated@@150)) ($generated@@99 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@95 $generated@@150))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@79) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@155) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@82 ($generated@@78 $generated@@153) ($generated@@78 $generated@@154) ($generated@@78 $generated@@155)) (and (not (= 2 $generated@@76)) (and (and (and ($generated@@83 $generated@@153 $generated@@84) ($generated@@83 $generated@@154 ($generated@@85 $generated@@84 $generated@@46))) ($generated@@83 $generated@@155 ($generated@@85 $generated@@84 $generated@@46))) (and ($generated@@86 $generated@@87 ($generated@@78 $generated@@155)) ($generated@@86 $generated@@87 ($generated@@78 $generated@@154))))))) (and (and (and (= $generated@@87 ($generated@@88 $generated@@89)) (= $generated@@90 ($generated@@88 ($generated@@88 $generated@@89)))) (= ($generated@@91 $generated@@89) $generated@@89)) (= ($generated@@77 ($generated@@78 $generated@@153) ($generated@@78 $generated@@154) ($generated@@78 $generated@@155)) ($generated@@92 ($generated@@78 $generated@@155) ($generated@@93 ($generated@@78 $generated@@153)) ($generated@@94 ($generated@@95 ($generated@@78 $generated@@154)) ($generated@@93 ($generated@@78 $generated@@153)))))))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@78 $generated@@153) ($generated@@78 $generated@@154) ($generated@@78 $generated@@155)))
))))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (let (($generated@@164 ($generated@@69 (type $generated@@163))))
(= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))) (= ($generated@@1 $generated@@159) 17)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@161 $generated@@165 $generated@@166 $generated@@167)) $generated@@159)
 :pattern ( ($generated@@161 $generated@@165 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@69 (type $generated@@169))))
 (=> (= (type $generated@@170) $generated@@171) (= ($generated@@160 ($generated@@161 $generated@@168 $generated@@169 $generated@@170) $generated@@169) $generated@@170)))
 :weight 0
))) (and (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@174 $generated@@175) (= ($generated@@160 ($generated@@161 $generated@@173 $generated@@174 $generated@@172) $generated@@175) ($generated@@160 $generated@@173 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or true (= ($generated@@160 ($generated@@161 $generated@@177 $generated@@178 $generated@@176) $generated@@179) ($generated@@160 $generated@@177 $generated@@179)))
 :weight 0
)))) (forall (($generated@@180 Int) ) (! (= (type ($generated@@157 $generated@@180)) $generated@@66)
 :pattern ( ($generated@@157 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@2) (= (type $generated@@182) ($generated@@99 $generated@@158 $generated@@159))) ($generated@@156 $generated@@181 ($generated@@157 0) $generated@@182))
 :pattern ( ($generated@@156 $generated@@181 ($generated@@157 0) $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@83 $generated@@183 ($generated@@157 0)))
 :pattern ( ($generated@@83 $generated@@183 ($generated@@157 0)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@66)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@66) (= (type $generated@@189) $generated@@66)) (= (type $generated@@190) $generated@@79)) ($generated@@83 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@83 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@81)
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@81)
 :pattern ( ($generated@@193 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@79) (= (type $generated@@197) $generated@@79)) true) (= ($generated@@191 $generated@@196 $generated@@197)  (and (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)) (= ($generated@@193 $generated@@196) ($generated@@193 $generated@@197)))))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) $generated@@98) (= (type $generated@@200) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@198 $generated@@200) (and (not (= 1 $generated@@76)) ($generated@@83 $generated@@200 ($generated@@85 $generated@@84 $generated@@46))))) true)
 :pattern ( ($generated@@86 $generated@@199 $generated@@200))
))))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@66)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@99 $generated@@81 $generated@@2)) (= (type $generated@@205) $generated@@66)) ($generated@@83 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@83 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 18)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@158 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@69 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@158) (= (type $generated@@256) ($generated@@99 $generated@@158 $generated@@159))) (= (type $generated@@257) ($generated@@68 $generated@@4))) (= (type $generated@@259) $generated@@158)) (= (type $generated@@260) ($generated@@68 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@160 ($generated@@94 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@79)
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) $generated@@66)) (= (type $generated@@268) $generated@@81)) (= (type $generated@@269) $generated@@81)) (= ($generated@@83 ($generated@@262 $generated@@268 $generated@@269) ($generated@@185 $generated@@266 $generated@@267))  (and ($generated@@263 $generated@@268 $generated@@266) ($generated@@263 $generated@@269 $generated@@267))))
 :pattern ( ($generated@@83 ($generated@@262 $generated@@268 $generated@@269) ($generated@@185 $generated@@266 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@79) (= (type $generated@@271) $generated@@79)) (= ($generated@@191 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@191 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@66)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@99 $generated@@81 $generated@@4)) (= (type $generated@@275) $generated@@66)) (= ($generated@@83 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@81) ($generated@@0 ($generated@@94 $generated@@274 $generated@@276))) ($generated@@263 $generated@@276 $generated@@275))
 :pattern ( ($generated@@94 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@83 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@66)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@99 $generated@@81 $generated@@4)) (= (type $generated@@280) $generated@@66)) (= ($generated@@83 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@81) ($generated@@0 ($generated@@94 $generated@@279 $generated@@281))) ($generated@@263 $generated@@281 $generated@@280))
 :pattern ( ($generated@@94 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@83 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@78 $generated@@282) $generated@@282)
 :pattern ( ($generated@@78 $generated@@282))
)))
(assert (= (type $generated@@283) $generated@@98))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) $generated@@79) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@82 $generated@@284 $generated@@285 $generated@@286) (and (not (= 2 $generated@@76)) (and (and (and ($generated@@83 $generated@@284 $generated@@84) ($generated@@83 $generated@@285 ($generated@@85 $generated@@84 $generated@@46))) ($generated@@83 $generated@@286 ($generated@@85 $generated@@84 $generated@@46))) (and ($generated@@86 $generated@@87 $generated@@286) ($generated@@86 $generated@@87 $generated@@285)))))) (and (and (and (= $generated@@87 ($generated@@88 $generated@@283)) (= $generated@@90 ($generated@@88 ($generated@@88 $generated@@283)))) (= ($generated@@91 $generated@@283) $generated@@283)) (= ($generated@@77 $generated@@284 $generated@@285 $generated@@286) ($generated@@92 $generated@@286 ($generated@@93 $generated@@284) ($generated@@94 ($generated@@95 $generated@@285) ($generated@@93 $generated@@284))))))
 :pattern ( ($generated@@77 $generated@@284 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) $generated@@66)) (= (type $generated@@291) $generated@@81)) (= (type $generated@@292) $generated@@81)) (= (type $generated@@293) ($generated@@99 $generated@@158 $generated@@159))) ($generated@@287 $generated@@293)) (= ($generated@@156 ($generated@@262 $generated@@291 $generated@@292) ($generated@@185 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@156 ($generated@@262 $generated@@291 $generated@@292) ($generated@@185 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@70)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@79) (= ($generated@@184 $generated@@296) (= ($generated@@294 $generated@@296) $generated@@61)))
 :pattern ( ($generated@@184 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@79) ($generated@@184 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@81) (= (type $generated@@299) $generated@@81)) (= $generated@@297 ($generated@@262 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@184 $generated@@297))
)))
(assert  (and (and (forall (($generated@@304 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@304)) 19)) (forall (($generated@@305 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305))
))) (forall (($generated@@306 T@T) ) (! (= (type ($generated@@300 $generated@@306)) ($generated@@302 $generated@@306))
 :pattern ( ($generated@@300 $generated@@306))
))))
(assert (forall (($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@307)) 0)
 :pattern ( ($generated@@300 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@66) (= (type $generated@@310) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@288 ($generated@@93 $generated@@308) $generated@@309 $generated@@310) ($generated@@156 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@288 ($generated@@93 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@99 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@100 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@99 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@94 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@96 (type $generated@@319))))
(= (type ($generated@@317 $generated@@319)) ($generated@@99 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@319))
)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@318 $generated@@321 $generated@@322)) ($generated@@80 $generated@@321 $generated@@322))
 :pattern ( ($generated@@318 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@94 ($generated@@317 ($generated@@318 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@94 ($generated@@317 ($generated@@318 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 20)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@99 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@94 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@94 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@344) $generated@@98) (= (type $generated@@345) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@198 $generated@@345) (and (not (= 1 $generated@@76)) ($generated@@83 $generated@@345 ($generated@@85 $generated@@84 $generated@@46))))) (= ($generated@@86 ($generated@@88 $generated@@344) $generated@@345) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@79) ($generated@@83 $generated@@346 $generated@@84)) ($generated@@0 ($generated@@94 ($generated@@317 $generated@@345) ($generated@@93 $generated@@346))))
 :pattern ( ($generated@@94 ($generated@@317 $generated@@345) ($generated@@93 $generated@@346)))
))))
 :pattern ( ($generated@@86 ($generated@@88 $generated@@344) $generated@@345))
))))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@100 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@99 $generated@@348 $generated@@2)) (= ($generated@@202 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@94 $generated@@347 $generated@@349))) (<= ($generated ($generated@@94 $generated@@347 $generated@@349)) ($generated@@311 $generated@@347))))
 :pattern ( ($generated@@94 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@202 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@81) ($generated@@263 $generated@@353 $generated@@84)) (and (= ($generated@@93 ($generated@@350 $generated@@79 $generated@@353)) $generated@@353) ($generated@@83 ($generated@@350 $generated@@79 $generated@@353) $generated@@84)))
 :pattern ( ($generated@@263 $generated@@353 $generated@@84))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@97 (type $generated@@354))))
(let (($generated@@356 ($generated@@96 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@80 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@318 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@94 ($generated@@317 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@317 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@97 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@99 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@97 (type $generated@@361))))
(let (($generated@@363 ($generated@@96 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@80 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@318 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@94 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@330 (type $generated@@365))))
(let (($generated@@367 ($generated@@329 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@328 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@327 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@94 ($generated@@326 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@326 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@330 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@99 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@330 (type $generated@@372))))
(let (($generated@@374 ($generated@@329 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@328 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@327 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@94 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@99 $generated@@81 $generated@@2)) (= (type $generated@@377) $generated@@66)) (= ($generated@@83 $generated@@376 ($generated@@201 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@81) (< 0 ($generated ($generated@@94 $generated@@376 $generated@@378)))) ($generated@@263 $generated@@378 $generated@@377))
 :pattern ( ($generated@@94 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@83 $generated@@376 ($generated@@201 $generated@@377)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@379) $generated@@98) (= (type $generated@@380) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@198 ($generated@@78 $generated@@380)) (and (not (= 1 $generated@@76)) ($generated@@83 $generated@@380 ($generated@@85 $generated@@84 $generated@@46))))) (= ($generated@@86 ($generated@@88 $generated@@379) ($generated@@78 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@79) ($generated@@83 $generated@@381 $generated@@84)) ($generated@@0 ($generated@@94 ($generated@@317 $generated@@380) ($generated@@93 $generated@@381))))
 :pattern ( ($generated@@94 ($generated@@317 $generated@@380) ($generated@@93 $generated@@381)))
))))
 :weight 3
 :pattern ( ($generated@@86 ($generated@@88 $generated@@379) ($generated@@78 $generated@@380)))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@99 $generated@@81 $generated@@4)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@382 ($generated@@272 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@81) ($generated@@0 ($generated@@94 $generated@@382 $generated@@385))) ($generated@@288 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@94 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@156 $generated@@382 ($generated@@272 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@99 $generated@@81 $generated@@4)) (= (type $generated@@387) $generated@@66)) (= (type $generated@@388) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@386 ($generated@@277 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@81) ($generated@@0 ($generated@@94 $generated@@386 $generated@@389))) ($generated@@288 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@94 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@156 $generated@@386 ($generated@@277 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@94 ($generated@@312 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@94 ($generated@@312 $generated@@391) $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@99 $generated@@81 $generated@@4))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@395) $generated@@81)) (= ($generated@@0 ($generated@@94 ($generated@@392 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@94 ($generated@@317 $generated@@394) ($generated@@192 ($generated@@350 $generated@@79 $generated@@395)))) (= ($generated@@94 ($generated@@95 $generated@@394) ($generated@@192 ($generated@@350 $generated@@79 $generated@@395))) ($generated@@193 ($generated@@350 $generated@@79 $generated@@395))))))
 :pattern ( ($generated@@94 ($generated@@392 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@99 $generated@@81 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@330 (type $generated@@399))))
(let (($generated@@401 ($generated@@329 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@99 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@328 $generated@@81 $generated@@81)) (= (type $generated@@403) $generated@@81)) (= ($generated@@0 ($generated@@94 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@94 ($generated@@326 $generated@@402) ($generated@@192 ($generated@@350 $generated@@79 $generated@@403)))) (= ($generated@@94 ($generated@@397 $generated@@402) ($generated@@192 ($generated@@350 $generated@@79 $generated@@403))) ($generated@@193 ($generated@@350 $generated@@79 $generated@@403))))))
 :pattern ( ($generated@@94 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@96 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@80 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@94 ($generated@@358 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@94 ($generated@@317 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@94 ($generated@@95 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@94 ($generated@@317 $generated@@404) $generated@@408))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@94 ($generated@@358 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@329 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@328 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@94 ($generated@@369 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@94 ($generated@@326 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@94 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@94 ($generated@@326 $generated@@409) $generated@@413))
 :pattern ( ($generated@@94 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@94 ($generated@@369 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@414 ($generated@@85 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@81) ($generated@@0 ($generated@@94 ($generated@@317 $generated@@414) $generated@@418))) (and ($generated@@288 ($generated@@94 ($generated@@95 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@288 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@414) $generated@@418))
 :pattern ( ($generated@@94 ($generated@@317 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@156 $generated@@414 ($generated@@85 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@66)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@328 $generated@@81 $generated@@81)) (= (type $generated@@423) $generated@@66)) (= (type $generated@@424) $generated@@66)) (= (type $generated@@425) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@81) ($generated@@0 ($generated@@94 ($generated@@326 $generated@@422) $generated@@426))) (and ($generated@@288 ($generated@@94 ($generated@@397 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@288 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@94 ($generated@@397 $generated@@422) $generated@@426))
 :pattern ( ($generated@@94 ($generated@@326 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@156 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (= (type $generated@@427) $generated@@98))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@98) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@81))) (= ($generated@@86 $generated@@428 $generated@@429) ($generated@@86 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@86 ($generated@@91 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@97 (type $generated@@431))))
(let (($generated@@434 ($generated@@96 (type $generated@@431))))
 (=> (and (and (= (type $generated@@431) ($generated@@80 $generated@@434 $generated@@433)) (= (type $generated@@432) ($generated@@80 $generated@@434 $generated@@433))) ($generated@@430 $generated@@431 $generated@@432)) (= $generated@@431 $generated@@432))))
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@436 T@T) ) (! (= (type ($generated@@435 $generated@@436)) ($generated@@99 $generated@@436 $generated@@4))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@330 (type $generated@@437))))
(let (($generated@@439 ($generated@@329 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@328 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@327 $generated@@439 $generated@@438)) (= ($generated@@326 $generated@@437) ($generated@@435 $generated@@439))))))
 :pattern ( ($generated@@326 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@330 (type $generated@@440))))
(let (($generated@@442 ($generated@@329 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@328 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@327 $generated@@442 $generated@@441)) (= ($generated@@369 $generated@@440) ($generated@@435 $generated@@441))))))
 :pattern ( ($generated@@369 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@330 (type $generated@@443))))
(let (($generated@@445 ($generated@@329 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@328 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@327 $generated@@445 $generated@@444)) (= ($generated@@396 $generated@@443) ($generated@@435 $generated@@81))))))
 :pattern ( ($generated@@396 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@97 (type $generated@@446))))
(let (($generated@@448 ($generated@@96 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@80 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@318 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@81) (= (type $generated@@450) $generated@@81)) ($generated@@0 ($generated@@94 ($generated@@392 $generated@@446) ($generated@@93 ($generated@@262 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@392 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@330 (type $generated@@451))))
(let (($generated@@453 ($generated@@329 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@328 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@327 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@81) (= (type $generated@@455) $generated@@81)) ($generated@@0 ($generated@@94 ($generated@@396 $generated@@451) ($generated@@93 ($generated@@262 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@396 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@81) ($generated@@263 $generated@@456 $generated@@46)) (and (= ($generated@@93 ($generated@@350 $generated@@2 $generated@@456)) $generated@@456) ($generated@@83 ($generated@@350 $generated@@2 $generated@@456) $generated@@46)))
 :pattern ( ($generated@@263 $generated@@456 $generated@@46))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@81) ($generated@@263 $generated@@457 $generated@@47)) (and (= ($generated@@93 ($generated@@350 $generated@@3 $generated@@457)) $generated@@457) ($generated@@83 ($generated@@350 $generated@@3 $generated@@457) $generated@@47)))
 :pattern ( ($generated@@263 $generated@@457 $generated@@47))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@81) ($generated@@263 $generated@@458 $generated@@44)) (and (= ($generated@@93 ($generated@@350 $generated@@4 $generated@@458)) $generated@@458) ($generated@@83 ($generated@@350 $generated@@4 $generated@@458) $generated@@44)))
 :pattern ( ($generated@@263 $generated@@458 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@459) 21))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@81) ($generated@@263 $generated@@460 $generated@@45)) (and (= ($generated@@93 ($generated@@350 $generated@@459 $generated@@460)) $generated@@460) ($generated@@83 ($generated@@350 $generated@@459 $generated@@460) $generated@@45)))
 :pattern ( ($generated@@263 $generated@@460 $generated@@45))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@98) (= (type $generated@@462) ($generated@@80 $generated@@81 $generated@@81))) (= ($generated@@86 ($generated@@88 $generated@@461) $generated@@462) ($generated@@86 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@86 ($generated@@88 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@66) (= ($generated@@263 ($generated@@93 $generated@@463) $generated@@464) ($generated@@83 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@263 ($generated@@93 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@100 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@99 $generated@@466 $generated@@2)) (<= 0 ($generated@@311 $generated@@465))))
 :pattern ( ($generated@@311 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@303 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@302 $generated@@468)) (<= 0 ($generated@@301 $generated@@467))))
 :pattern ( ($generated@@301 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@85 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@85 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@85 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@85 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@74 ($generated@@85 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@85 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@419 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@419 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@483 ($generated@@419 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@419 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@66) (= (type $generated@@488) $generated@@66)) (= ($generated@@74 ($generated@@419 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@81) (= (type $generated@@490) $generated@@81)) (= ($generated@@294 ($generated@@262 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@262 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@66) (= (type $generated@@494) $generated@@66)) (= ($generated@@491 ($generated@@185 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@185 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@66) (= (type $generated@@498) $generated@@66)) (= ($generated@@495 ($generated@@185 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@185 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@81) (= (type $generated@@500) $generated@@81)) (= ($generated@@192 ($generated@@262 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@262 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@81) (= (type $generated@@502) $generated@@81)) (= ($generated@@193 ($generated@@262 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@262 $generated@@501 $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@303 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506 $generated@@507)) $generated@@508))
 :pattern ( ($generated@@504 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@302 $generated@@81)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@509 ($generated@@503 $generated@@510) $generated@@511) (forall (($generated@@512 Int) ) (!  (=> (and (<= 0 $generated@@512) (< $generated@@512 ($generated@@301 $generated@@509))) ($generated@@288 ($generated@@504 $generated@@509 $generated@@512) $generated@@510 $generated@@511))
 :pattern ( ($generated@@504 $generated@@509 $generated@@512))
))))
 :pattern ( ($generated@@156 $generated@@509 ($generated@@503 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@157 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@157 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@272 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@272 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@272 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@272 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@519 ($generated@@277 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@277 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@74 ($generated@@277 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@66) (= ($generated@@523 ($generated@@201 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@201 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@74 ($generated@@201 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@66) (= ($generated@@527 ($generated@@503 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@503 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@74 ($generated@@503 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@503 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@350 $generated@@532 ($generated@@93 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@93 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) (= ($generated@@83 $generated@@533 ($generated@@85 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@81) ($generated@@0 ($generated@@94 ($generated@@317 $generated@@533) $generated@@536))) (and ($generated@@263 ($generated@@94 ($generated@@95 $generated@@533) $generated@@536) $generated@@535) ($generated@@263 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@533) $generated@@536))
 :pattern ( ($generated@@94 ($generated@@317 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@83 $generated@@533 ($generated@@85 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@328 $generated@@81 $generated@@81)) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) $generated@@66)) (= ($generated@@83 $generated@@537 ($generated@@419 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@81) ($generated@@0 ($generated@@94 ($generated@@326 $generated@@537) $generated@@540))) (and ($generated@@263 ($generated@@94 ($generated@@397 $generated@@537) $generated@@540) $generated@@539) ($generated@@263 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@94 ($generated@@397 $generated@@537) $generated@@540))
 :pattern ( ($generated@@94 ($generated@@326 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@83 $generated@@537 ($generated@@419 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@81) (= (type $generated@@544) $generated@@81)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@262 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@262 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@81) (= (type $generated@@546) $generated@@81)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@262 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@262 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
(let (($generated@@552 (type $generated@@548)))
 (=> (and (= (type $generated@@547) ($generated@@80 $generated@@552 $generated@@551)) (= (type $generated@@549) $generated@@552)) (and (=> (= $generated@@549 $generated@@548) (and ($generated@@0 ($generated@@94 ($generated@@317 ($generated@@92 $generated@@547 $generated@@548 $generated@@550)) $generated@@549)) (= ($generated@@94 ($generated@@95 ($generated@@92 $generated@@547 $generated@@548 $generated@@550)) $generated@@549) $generated@@550))) (=> (not (= $generated@@549 $generated@@548)) (and (= ($generated@@0 ($generated@@94 ($generated@@317 ($generated@@92 $generated@@547 $generated@@548 $generated@@550)) $generated@@549)) ($generated@@0 ($generated@@94 ($generated@@317 $generated@@547) $generated@@549))) (= ($generated@@94 ($generated@@95 ($generated@@92 $generated@@547 $generated@@548 $generated@@550)) $generated@@549) ($generated@@94 ($generated@@95 $generated@@547) $generated@@549))))))))
 :pattern ( ($generated@@94 ($generated@@317 ($generated@@92 $generated@@547 $generated@@548 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@94 ($generated@@95 ($generated@@92 $generated@@547 $generated@@548 $generated@@550)) $generated@@549))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@81) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) $generated@@66)) ($generated@@263 $generated@@553 ($generated@@85 $generated@@554 $generated@@555))) (and (= ($generated@@93 ($generated@@350 ($generated@@80 $generated@@81 $generated@@81) $generated@@553)) $generated@@553) ($generated@@83 ($generated@@350 ($generated@@80 $generated@@81 $generated@@81) $generated@@553) ($generated@@85 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@263 $generated@@553 ($generated@@85 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@81) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) $generated@@66)) ($generated@@263 $generated@@556 ($generated@@419 $generated@@557 $generated@@558))) (and (= ($generated@@93 ($generated@@350 ($generated@@328 $generated@@81 $generated@@81) $generated@@556)) $generated@@556) ($generated@@83 ($generated@@350 ($generated@@328 $generated@@81 $generated@@81) $generated@@556) ($generated@@419 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@263 $generated@@556 ($generated@@419 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@66) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) $generated@@81)) ($generated@@263 $generated@@561 ($generated@@185 $generated@@559 $generated@@560))) (and (= ($generated@@93 ($generated@@350 $generated@@79 $generated@@561)) $generated@@561) ($generated@@83 ($generated@@350 $generated@@79 $generated@@561) ($generated@@185 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@263 $generated@@561 ($generated@@185 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
 (not ($generated@@0 ($generated@@94 ($generated@@435 $generated@@563) $generated@@562))))
 :pattern ( (let (($generated@@563 (type $generated@@562)))
($generated@@94 ($generated@@435 $generated@@563) $generated@@562)))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@71)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@66) (= (type $generated@@567) $generated@@66)) (and (= ($generated@@74 ($generated@@185 $generated@@566 $generated@@567)) $generated@@62) (= ($generated@@564 ($generated@@185 $generated@@566 $generated@@567)) $generated@@64)))
 :pattern ( ($generated@@185 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@97 (type $generated@@568))))
(let (($generated@@571 ($generated@@96 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@80 $generated@@571 $generated@@570)) (= (type $generated@@569) ($generated@@80 $generated@@571 $generated@@570))) (= ($generated@@430 $generated@@568 $generated@@569)  (and (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@571) (= ($generated@@0 ($generated@@94 ($generated@@317 $generated@@568) $generated@@572)) ($generated@@0 ($generated@@94 ($generated@@317 $generated@@569) $generated@@572))))
 :no-pattern (type $generated@@572)
 :no-pattern ($generated $generated@@572)
 :no-pattern ($generated@@0 $generated@@572)
)) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@571) ($generated@@0 ($generated@@94 ($generated@@317 $generated@@568) $generated@@573))) (= ($generated@@94 ($generated@@95 $generated@@568) $generated@@573) ($generated@@94 ($generated@@95 $generated@@569) $generated@@573)))
 :no-pattern (type $generated@@573)
 :no-pattern ($generated $generated@@573)
 :no-pattern ($generated@@0 $generated@@573)
)))))))
 :pattern ( ($generated@@430 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@79) (= ($generated@@541 ($generated@@93 $generated@@574)) ($generated@@542 $generated@@574)))
 :pattern ( ($generated@@541 ($generated@@93 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) ($generated@@263 $generated@@575 ($generated@@157 0))) (and (= ($generated@@93 ($generated@@350 $generated@@2 $generated@@575)) $generated@@575) ($generated@@83 ($generated@@350 ($generated@@99 $generated@@81 $generated@@4) $generated@@575) ($generated@@157 0))))
 :pattern ( ($generated@@263 $generated@@575 ($generated@@157 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@81) (= (type $generated@@577) $generated@@66)) ($generated@@263 $generated@@576 ($generated@@272 $generated@@577))) (and (= ($generated@@93 ($generated@@350 ($generated@@99 $generated@@81 $generated@@4) $generated@@576)) $generated@@576) ($generated@@83 ($generated@@350 ($generated@@99 $generated@@81 $generated@@4) $generated@@576) ($generated@@272 $generated@@577))))
 :pattern ( ($generated@@263 $generated@@576 ($generated@@272 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@81) (= (type $generated@@579) $generated@@66)) ($generated@@263 $generated@@578 ($generated@@277 $generated@@579))) (and (= ($generated@@93 ($generated@@350 ($generated@@99 $generated@@81 $generated@@4) $generated@@578)) $generated@@578) ($generated@@83 ($generated@@350 ($generated@@99 $generated@@81 $generated@@4) $generated@@578) ($generated@@277 $generated@@579))))
 :pattern ( ($generated@@263 $generated@@578 ($generated@@277 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@81) (= (type $generated@@581) $generated@@66)) ($generated@@263 $generated@@580 ($generated@@201 $generated@@581))) (and (= ($generated@@93 ($generated@@350 ($generated@@99 $generated@@81 $generated@@2) $generated@@580)) $generated@@580) ($generated@@83 ($generated@@350 ($generated@@99 $generated@@81 $generated@@2) $generated@@580) ($generated@@201 $generated@@581))))
 :pattern ( ($generated@@263 $generated@@580 ($generated@@201 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@66)) ($generated@@263 $generated@@582 ($generated@@503 $generated@@583))) (and (= ($generated@@93 ($generated@@350 ($generated@@302 $generated@@81) $generated@@582)) $generated@@582) ($generated@@83 ($generated@@350 ($generated@@302 $generated@@81) $generated@@582) ($generated@@503 $generated@@583))))
 :pattern ( ($generated@@263 $generated@@582 ($generated@@503 $generated@@583)))
)))
(assert (= ($generated@@74 $generated@@84) $generated@@63))
(assert (= ($generated@@564 $generated@@84) $generated@@65))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@99 $generated@@81 $generated@@2)) (= (type $generated@@585) $generated@@66)) (= (type $generated@@586) ($generated@@99 $generated@@158 $generated@@159))) (= ($generated@@156 $generated@@584 ($generated@@201 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@81) (< 0 ($generated ($generated@@94 $generated@@584 $generated@@587)))) ($generated@@288 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@94 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@156 $generated@@584 ($generated@@201 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@79) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) ($generated@@99 $generated@@158 $generated@@159))) (and ($generated@@287 $generated@@590) (and ($generated@@184 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@66) ($generated@@156 $generated@@588 ($generated@@185 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@156 $generated@@588 ($generated@@185 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@288 ($generated@@192 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@288 ($generated@@192 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@79) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) ($generated@@99 $generated@@158 $generated@@159))) (and ($generated@@287 $generated@@594) (and ($generated@@184 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@66) ($generated@@156 $generated@@592 ($generated@@185 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@156 $generated@@592 ($generated@@185 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@288 ($generated@@193 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@288 ($generated@@193 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@81) (= (type $generated@@597) $generated@@81)) (= ($generated@@262 ($generated@@78 $generated@@596) ($generated@@78 $generated@@597)) ($generated@@78 ($generated@@262 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@262 ($generated@@78 $generated@@596) ($generated@@78 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@93 ($generated@@78 $generated@@598)) ($generated@@78 ($generated@@93 $generated@@598)))
 :pattern ( ($generated@@93 ($generated@@78 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@303 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@302 $generated@@600)) (= ($generated@@301 $generated@@599) 0)) (= $generated@@599 ($generated@@300 $generated@@600))))
 :pattern ( ($generated@@301 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@99 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@311 ($generated@@102 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@311 $generated@@601) ($generated ($generated@@94 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@311 ($generated@@102 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@606) $generated@@2)) ($generated@@156 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@156 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@608) $generated@@3)) ($generated@@156 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@156 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@610) $generated@@4)) ($generated@@156 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@156 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@612) $generated@@459)) ($generated@@156 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@156 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@99 $generated@@158 $generated@@159)) (= (type $generated@@614) $generated@@81)) ($generated@@156 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@156 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@302 $generated@@81)) (= (type $generated@@616) $generated@@66)) (= ($generated@@83 $generated@@615 ($generated@@503 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@301 $generated@@615))) ($generated@@263 ($generated@@504 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@504 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@83 $generated@@615 ($generated@@503 $generated@@616)))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@79) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@81))) (or ($generated@@82 $generated@@618 $generated@@619 $generated@@620) (and (not (= 2 $generated@@76)) (and (and (and ($generated@@83 $generated@@618 $generated@@84) ($generated@@83 $generated@@619 ($generated@@85 $generated@@84 $generated@@46))) ($generated@@83 $generated@@620 ($generated@@85 $generated@@84 $generated@@46))) (and ($generated@@86 $generated@@87 $generated@@620) ($generated@@86 $generated@@87 $generated@@619)))))) (and ($generated@@86 $generated@@87 ($generated@@77 $generated@@618 $generated@@619 $generated@@620)) ($generated@@83 ($generated@@77 $generated@@618 $generated@@619 $generated@@620) ($generated@@85 $generated@@84 $generated@@46))))
 :pattern ( ($generated@@77 $generated@@618 $generated@@619 $generated@@620))
))))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@302 $generated@@81)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@301 $generated@@622))) (< ($generated@@542 ($generated@@350 $generated@@79 ($generated@@504 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@542 ($generated@@350 $generated@@79 ($generated@@504 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@625) $generated@@66)) (= (type $generated@@626) $generated@@66)) ($generated@@83 $generated@@624 ($generated@@85 $generated@@625 $generated@@626))) (and (and ($generated@@83 ($generated@@317 $generated@@624) ($generated@@272 $generated@@625)) ($generated@@83 ($generated@@358 $generated@@624) ($generated@@272 $generated@@626))) ($generated@@83 ($generated@@392 $generated@@624) ($generated@@272 ($generated@@185 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@83 $generated@@624 ($generated@@85 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@328 $generated@@81 $generated@@81)) (= (type $generated@@628) $generated@@66)) (= (type $generated@@629) $generated@@66)) ($generated@@83 $generated@@627 ($generated@@419 $generated@@628 $generated@@629))) (and (and ($generated@@83 ($generated@@326 $generated@@627) ($generated@@277 $generated@@628)) ($generated@@83 ($generated@@369 $generated@@627) ($generated@@277 $generated@@629))) ($generated@@83 ($generated@@396 $generated@@627) ($generated@@277 ($generated@@185 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@83 $generated@@627 ($generated@@419 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@83 $generated@@630 $generated@@46))
 :pattern ( ($generated@@83 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@83 $generated@@631 $generated@@47))
 :pattern ( ($generated@@83 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@83 $generated@@632 $generated@@44))
 :pattern ( ($generated@@83 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@459) ($generated@@83 $generated@@633 $generated@@45))
 :pattern ( ($generated@@83 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@81) ($generated@@83 $generated@@634 $generated@@48))
 :pattern ( ($generated@@83 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 (T@U) Bool)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@81)) (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@637) $generated@@79)) (= (type $generated@@638) ($generated@@99 $generated@@158 $generated@@159))) (= (type $generated@@639) $generated@@98)) (= (type $generated@@640) $generated@@98)) (= (type $generated@@641) ($generated@@208 $generated@@158 $generated@@4))) (= (type $generated@@642) $generated@@158)) (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@81))) (= (type $generated@@646) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@647  (=> (and ($generated@@198 $generated@@635) (=> ($generated@@86 $generated@@87 $generated@@635) ($generated@@198 $generated@@636))) (=> (and (and ($generated@@86 $generated@@87 $generated@@635) ($generated@@86 $generated@@87 $generated@@636)) ($generated@@430 $generated@@635 $generated@@636)) (=> (and (and (and ($generated@@83 $generated@@637 $generated@@84) ($generated@@156 $generated@@637 $generated@@84 $generated@@638)) ($generated@@156 $generated@@637 $generated@@84 $generated@@638)) (and ($generated@@156 $generated@@636 ($generated@@85 $generated@@84 $generated@@46) $generated@@638) ($generated@@156 $generated@@635 ($generated@@85 $generated@@84 $generated@@46) $generated@@638))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@86 $generated@@90 $generated@@635)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@86 $generated@@90 $generated@@636)) (=> ($generated@@82 $generated@@637 $generated@@636 $generated@@635) (=> (and ($generated@@82 $generated@@637 $generated@@636 $generated@@635) (= (ControlFlow 0 2) (- 0 1))) ($generated@@430 $generated@@635 ($generated@@77 $generated@@637 $generated@@636 $generated@@635)))))))))))
(let (($generated@@648  (=> (and (not ($generated@@86 $generated@@90 $generated@@635)) (= (ControlFlow 0 6) 2)) $generated@@647)))
(let (($generated@@649  (=> (and (and ($generated@@86 $generated@@90 $generated@@635) ($generated@@156 $generated@@636 ($generated@@85 $generated@@84 $generated@@46) $generated@@638)) (and ($generated@@198 $generated@@636) (= (ControlFlow 0 5) 2))) $generated@@647)))
(let (($generated@@650  (=> (= ($generated@@91 $generated@@639) $generated@@639) (=> (and (= ($generated@@91 $generated@@640) $generated@@640) (= ($generated@@91 $generated@@87) $generated@@87)) (=> (and (and (and (= ($generated@@91 $generated@@90) $generated@@90) (= $generated@@641 ($generated@@207 $generated@@642 $generated@@638 $generated@@60 false))) (and ($generated@@83 $generated@@635 ($generated@@85 $generated@@84 $generated@@46)) ($generated@@156 $generated@@635 ($generated@@85 $generated@@84 $generated@@46) $generated@@638))) (and (and ($generated@@83 $generated@@636 ($generated@@85 $generated@@84 $generated@@46)) ($generated@@156 $generated@@636 ($generated@@85 $generated@@84 $generated@@46) $generated@@638)) (and ($generated@@156 $generated@@635 ($generated@@85 $generated@@84 $generated@@46) $generated@@638) ($generated@@198 $generated@@635)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@649) (=> (= (ControlFlow 0 7) 6) $generated@@648)))))))
(let (($generated@@651  (=> (and ($generated@@287 $generated@@638) ($generated@@643 $generated@@638)) (=> (and (and (and (and ($generated@@83 $generated@@644 ($generated@@85 $generated@@84 $generated@@46)) ($generated@@156 $generated@@644 ($generated@@85 $generated@@84 $generated@@46) $generated@@638)) true) (and (and ($generated@@83 $generated@@645 ($generated@@85 $generated@@84 $generated@@46)) ($generated@@156 $generated@@645 ($generated@@85 $generated@@84 $generated@@46) $generated@@638)) true)) (and (and (and ($generated@@83 $generated@@646 $generated@@84) ($generated@@156 $generated@@646 $generated@@84 $generated@@638)) true) (and (= 3 $generated@@76) (= (ControlFlow 0 8) 7)))) $generated@@650))))
$generated@@651))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
