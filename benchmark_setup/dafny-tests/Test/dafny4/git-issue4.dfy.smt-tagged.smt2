(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100000))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 100000))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int) T@U)
(declare-fun $generated@@134 (Int) Bool)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (Int) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@138 Int) ) (! (= (type ($generated@@133 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@133 $generated@@138))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@139 Int) ) (!  (=> (or ($generated@@134 $generated@@139) (and (not (= 0 $generated@@132)) (and (<= ($generated@@135 0) $generated@@139) (< $generated@@139 10)))) ($generated@@136 ($generated@@133 $generated@@139) $generated@@45))
 :pattern ( ($generated@@133 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@136 $generated@@140 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@140 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 15) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@64)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@64) (= (type $generated@@147) $generated@@64)) (= (type $generated@@148) $generated@@143)) ($generated@@136 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@136 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 16) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 17)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@143)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@64) (= (type $generated@@235) $generated@@64)) (= (type $generated@@236) $generated@@152)) (= (type $generated@@237) $generated@@152)) (= ($generated@@136 ($generated@@230 $generated@@236 $generated@@237) ($generated@@142 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@136 ($generated@@230 $generated@@236 $generated@@237) ($generated@@142 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@143) (= (type $generated@@239) $generated@@143)) (= ($generated@@149 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@149 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@243) $generated@@64)) (= ($generated@@136 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@152) ($generated@@0 ($generated@@81 $generated@@242 $generated@@244))) ($generated@@231 $generated@@244 $generated@@243))
 :pattern ( ($generated@@81 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@136 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@136 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@152) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@136 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@135 $generated@@250) $generated@@250)
 :pattern ( ($generated@@135 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 Int) ) (! (= (type ($generated@@255 $generated@@257)) $generated@@137)
 :pattern ( ($generated@@255 $generated@@257))
)))
(assert (forall (($generated@@258 Int) ) (!  (=> (and (<= 0 $generated@@258) (< $generated@@258 65536)) (= ($generated@@256 ($generated@@255 $generated@@258)) $generated@@258))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@152)) (= (type $generated@@264) $generated@@152)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@230 $generated@@263 $generated@@264) ($generated@@142 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@230 $generated@@263 $generated@@264) ($generated@@142 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@143) (= ($generated@@141 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@143) ($generated@@141 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@152) (= (type $generated@@271) $generated@@152)) (= $generated@@269 ($generated@@230 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@141 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 18)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@280 Int) ) (!  (=> (or ($generated@@134 $generated@@280) (and (not (= 0 $generated@@132)) (and (<= ($generated@@135 0) $generated@@280) (< $generated@@280 10)))) (= ($generated@@133 $generated@@280) ($generated@@255 (+ 48 $generated@@280))))
 :pattern ( ($generated@@133 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@137) (and (and (= ($generated@@255 ($generated@@256 $generated@@281)) $generated@@281) (<= 0 ($generated@@256 $generated@@281))) (< ($generated@@256 $generated@@281) 65536)))
 :pattern ( ($generated@@256 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@152)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@74 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@260 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@76 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@79 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@76 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@81 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@76 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 20)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@79 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@76 $generated@@330 $generated@@2)) (= ($generated@@158 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@81 $generated@@329 $generated@@331))) (<= ($generated ($generated@@81 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@81 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@158 $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@297 (type $generated@@332))))
(let (($generated@@334 ($generated@@296 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@295 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@294 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@293 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@297 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@76 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@297 (type $generated@@339))))
(let (($generated@@341 ($generated@@296 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@295 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@294 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@315 (type $generated@@343))))
(let (($generated@@345 ($generated@@314 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@313 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@312 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@311 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@315 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@315 (type $generated@@350))))
(let (($generated@@352 ($generated@@314 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@313 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@312 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@355) $generated@@64)) (= ($generated@@136 $generated@@354 ($generated@@157 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@354 $generated@@356)))) ($generated@@231 $generated@@356 $generated@@355))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@136 $generated@@354 ($generated@@157 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@240 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@152) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@260 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@240 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@245 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@152) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@260 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@245 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@81 ($generated@@288 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@81 ($generated@@288 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@297 (type $generated@@373))))
(let (($generated@@375 ($generated@@296 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@295 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@376) ($generated@@150 ($generated@@368 $generated@@143 $generated@@377)))) (= ($generated@@81 ($generated@@369 $generated@@376) ($generated@@150 ($generated@@368 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@368 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@315 (type $generated@@381))))
(let (($generated@@383 ($generated@@314 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@313 $generated@@152 $generated@@152)) (= (type $generated@@385) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@384) ($generated@@150 ($generated@@368 $generated@@143 $generated@@385)))) (= ($generated@@81 ($generated@@379 $generated@@384) ($generated@@150 ($generated@@368 $generated@@143 $generated@@385))) ($generated@@151 ($generated@@368 $generated@@143 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@296 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@295 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@336 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@314 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@313 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@391) $generated@@392))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@396 Int) ) (!  (=> (or ($generated@@134 ($generated@@135 $generated@@396)) (and (not (= 0 $generated@@132)) (and (<= ($generated@@135 0) ($generated@@135 $generated@@396)) (< $generated@@396 10)))) (= ($generated@@133 ($generated@@135 $generated@@396)) ($generated@@255 ($generated@@135 (+ 48 $generated@@396)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@135 $generated@@396)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@295 $generated@@152 $generated@@152)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@400) $generated@@404))) (and ($generated@@260 ($generated@@81 ($generated@@369 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@260 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@313 $generated@@152 $generated@@152)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@408) $generated@@412))) (and ($generated@@260 ($generated@@81 ($generated@@379 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@260 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@76 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@315 (type $generated@@415))))
(let (($generated@@417 ($generated@@314 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@313 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@312 $generated@@417 $generated@@416)) (= ($generated@@311 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@311 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@315 (type $generated@@418))))
(let (($generated@@420 ($generated@@314 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@313 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@312 $generated@@420 $generated@@419)) (= ($generated@@347 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@347 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@315 (type $generated@@421))))
(let (($generated@@423 ($generated@@314 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@313 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@312 $generated@@423 $generated@@422)) (= ($generated@@378 $generated@@421) ($generated@@413 $generated@@152))))))
 :pattern ( ($generated@@378 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@297 (type $generated@@424))))
(let (($generated@@426 ($generated@@296 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@295 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@294 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@152) (= (type $generated@@428) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@424) ($generated@@282 ($generated@@230 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@367 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@315 (type $generated@@429))))
(let (($generated@@431 ($generated@@314 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@313 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@312 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@152) (= (type $generated@@433) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@429) ($generated@@282 ($generated@@230 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@378 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@152) ($generated@@231 $generated@@434 $generated@@46)) (and (= ($generated@@282 ($generated@@368 $generated@@2 $generated@@434)) $generated@@434) ($generated@@136 ($generated@@368 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@152) ($generated@@231 $generated@@435 $generated@@47)) (and (= ($generated@@282 ($generated@@368 $generated@@3 $generated@@435)) $generated@@435) ($generated@@136 ($generated@@368 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@152) ($generated@@231 $generated@@436 $generated@@44)) (and (= ($generated@@282 ($generated@@368 $generated@@4 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@368 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@436 $generated@@44))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@152) ($generated@@231 $generated@@437 $generated@@45)) (and (= ($generated@@282 ($generated@@368 $generated@@137 $generated@@437)) $generated@@437) ($generated@@136 ($generated@@368 $generated@@137 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@64) (= ($generated@@231 ($generated@@282 $generated@@438) $generated@@439) ($generated@@136 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@231 ($generated@@282 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@2)) (<= 0 ($generated@@287 $generated@@440))))
 :pattern ( ($generated@@287 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@275 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@274 $generated@@443)) (<= 0 ($generated@@273 $generated@@442))))
 :pattern ( ($generated@@273 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@397 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@397 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@397 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@397 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@405 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@405 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@405 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@405 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@152) (= (type $generated@@465) $generated@@152)) (= ($generated@@266 ($generated@@230 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@142 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@142 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@142 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@142 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@152) (= (type $generated@@475) $generated@@152)) (= ($generated@@150 ($generated@@230 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@230 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@152) (= (type $generated@@477) $generated@@152)) (= ($generated@@151 ($generated@@230 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@230 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 Int) ) (! (let (($generated@@483 ($generated@@275 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481 $generated@@482)) $generated@@483))
 :pattern ( ($generated@@479 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@274 $generated@@152)) (= (type $generated@@485) $generated@@64)) (= (type $generated@@486) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@484 ($generated@@478 $generated@@485) $generated@@486) (forall (($generated@@487 Int) ) (!  (=> (and (<= 0 $generated@@487) (< $generated@@487 ($generated@@273 $generated@@484))) ($generated@@260 ($generated@@479 $generated@@484 $generated@@487) $generated@@485 $generated@@486))
 :pattern ( ($generated@@479 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@74 $generated@@484 ($generated@@478 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@75 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@75 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@240 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@240 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@240 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@245 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@245 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@157 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@157 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@478 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@478 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@478 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@368 $generated@@507 ($generated@@282 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@282 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@295 $generated@@152 $generated@@152)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@136 $generated@@508 ($generated@@397 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@508) $generated@@511))) (and ($generated@@231 ($generated@@81 ($generated@@369 $generated@@508) $generated@@511) $generated@@510) ($generated@@231 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@136 $generated@@508 ($generated@@397 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@313 $generated@@152 $generated@@152)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@136 $generated@@512 ($generated@@405 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@512) $generated@@515))) (and ($generated@@231 ($generated@@81 ($generated@@379 $generated@@512) $generated@@515) $generated@@514) ($generated@@231 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@136 $generated@@512 ($generated@@405 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@152) (= (type $generated@@519) $generated@@152)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@230 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@230 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@152) (= (type $generated@@521) $generated@@152)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@230 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@230 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@152) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@231 $generated@@522 ($generated@@397 $generated@@523 $generated@@524))) (and (= ($generated@@282 ($generated@@368 ($generated@@295 $generated@@152 $generated@@152) $generated@@522)) $generated@@522) ($generated@@136 ($generated@@368 ($generated@@295 $generated@@152 $generated@@152) $generated@@522) ($generated@@397 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@231 $generated@@522 ($generated@@397 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@152) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@231 $generated@@525 ($generated@@405 $generated@@526 $generated@@527))) (and (= ($generated@@282 ($generated@@368 ($generated@@313 $generated@@152 $generated@@152) $generated@@525)) $generated@@525) ($generated@@136 ($generated@@368 ($generated@@313 $generated@@152 $generated@@152) $generated@@525) ($generated@@405 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@231 $generated@@525 ($generated@@405 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@152)) ($generated@@231 $generated@@530 ($generated@@142 $generated@@528 $generated@@529))) (and (= ($generated@@282 ($generated@@368 $generated@@143 $generated@@530)) $generated@@530) ($generated@@136 ($generated@@368 $generated@@143 $generated@@530) ($generated@@142 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@231 $generated@@530 ($generated@@142 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@81 ($generated@@413 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@81 ($generated@@413 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (and (= ($generated@@72 ($generated@@142 $generated@@535 $generated@@536)) $generated@@62) (= ($generated@@533 ($generated@@142 $generated@@535 $generated@@536)) $generated@@63)))
 :pattern ( ($generated@@142 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@143) (= ($generated@@516 ($generated@@282 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@282 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@152) ($generated@@231 $generated@@538 ($generated@@75 0))) (and (= ($generated@@282 ($generated@@368 $generated@@2 $generated@@538)) $generated@@538) ($generated@@136 ($generated@@368 ($generated@@76 $generated@@152 $generated@@4) $generated@@538) ($generated@@75 0))))
 :pattern ( ($generated@@231 $generated@@538 ($generated@@75 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@152) (= (type $generated@@540) $generated@@64)) ($generated@@231 $generated@@539 ($generated@@240 $generated@@540))) (and (= ($generated@@282 ($generated@@368 ($generated@@76 $generated@@152 $generated@@4) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@368 ($generated@@76 $generated@@152 $generated@@4) $generated@@539) ($generated@@240 $generated@@540))))
 :pattern ( ($generated@@231 $generated@@539 ($generated@@240 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@152) (= (type $generated@@542) $generated@@64)) ($generated@@231 $generated@@541 ($generated@@245 $generated@@542))) (and (= ($generated@@282 ($generated@@368 ($generated@@76 $generated@@152 $generated@@4) $generated@@541)) $generated@@541) ($generated@@136 ($generated@@368 ($generated@@76 $generated@@152 $generated@@4) $generated@@541) ($generated@@245 $generated@@542))))
 :pattern ( ($generated@@231 $generated@@541 ($generated@@245 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@152) (= (type $generated@@544) $generated@@64)) ($generated@@231 $generated@@543 ($generated@@157 $generated@@544))) (and (= ($generated@@282 ($generated@@368 ($generated@@76 $generated@@152 $generated@@2) $generated@@543)) $generated@@543) ($generated@@136 ($generated@@368 ($generated@@76 $generated@@152 $generated@@2) $generated@@543) ($generated@@157 $generated@@544))))
 :pattern ( ($generated@@231 $generated@@543 ($generated@@157 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@152) (= (type $generated@@546) $generated@@64)) ($generated@@231 $generated@@545 ($generated@@478 $generated@@546))) (and (= ($generated@@282 ($generated@@368 ($generated@@274 $generated@@152) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@368 ($generated@@274 $generated@@152) $generated@@545) ($generated@@478 $generated@@546))))
 :pattern ( ($generated@@231 $generated@@545 ($generated@@478 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@547 ($generated@@157 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@547 $generated@@550)))) ($generated@@260 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@81 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@157 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@553) (and ($generated@@141 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@142 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@142 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@260 ($generated@@150 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@260 ($generated@@150 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@557) (and ($generated@@141 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@74 $generated@@555 ($generated@@142 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@142 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@260 ($generated@@151 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@260 ($generated@@151 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@152) (= (type $generated@@560) $generated@@152)) (= ($generated@@230 ($generated@@251 $generated@@559) ($generated@@251 $generated@@560)) ($generated@@251 ($generated@@230 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@230 ($generated@@251 $generated@@559) ($generated@@251 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@135 $generated@@561))) ($generated@@251 ($generated@@282 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@135 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@282 ($generated@@251 $generated@@562)) ($generated@@251 ($generated@@282 $generated@@562)))
 :pattern ( ($generated@@282 ($generated@@251 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@275 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@274 $generated@@564)) (= ($generated@@273 $generated@@563) 0)) (= $generated@@563 ($generated@@272 $generated@@564))))
 :pattern ( ($generated@@273 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@287 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@287 $generated@@565) ($generated ($generated@@81 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@287 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@2)) ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@3)) ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@4)) ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@137)) ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@152)) ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@274 $generated@@152)) (= (type $generated@@580) $generated@@64)) (= ($generated@@136 $generated@@579 ($generated@@478 $generated@@580)) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@273 $generated@@579))) ($generated@@231 ($generated@@479 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@479 $generated@@579 $generated@@581))
))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@478 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@274 $generated@@152)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@273 $generated@@583))) (< ($generated@@517 ($generated@@368 $generated@@143 ($generated@@479 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@517 ($generated@@368 $generated@@143 ($generated@@479 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@295 $generated@@152 $generated@@152)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@136 $generated@@585 ($generated@@397 $generated@@586 $generated@@587))) (and (and ($generated@@136 ($generated@@293 $generated@@585) ($generated@@240 $generated@@586)) ($generated@@136 ($generated@@336 $generated@@585) ($generated@@240 $generated@@587))) ($generated@@136 ($generated@@367 $generated@@585) ($generated@@240 ($generated@@142 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@136 $generated@@585 ($generated@@397 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@313 $generated@@152 $generated@@152)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@136 $generated@@588 ($generated@@405 $generated@@589 $generated@@590))) (and (and ($generated@@136 ($generated@@311 $generated@@588) ($generated@@245 $generated@@589)) ($generated@@136 ($generated@@347 $generated@@588) ($generated@@245 $generated@@590))) ($generated@@136 ($generated@@378 $generated@@588) ($generated@@245 ($generated@@142 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@136 $generated@@588 ($generated@@405 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@136 $generated@@591 $generated@@46))
 :pattern ( ($generated@@136 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@136 $generated@@592 $generated@@47))
 :pattern ( ($generated@@136 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@136 $generated@@593 $generated@@44))
 :pattern ( ($generated@@136 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@137) ($generated@@136 $generated@@594 $generated@@45))
 :pattern ( ($generated@@136 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@152) ($generated@@136 $generated@@595 $generated@@48))
 :pattern ( ($generated@@136 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@596) ($generated@@164 $generated@@77 $generated@@4)) (= (type $generated@@597) $generated@@77)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@601) ($generated@@164 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@603  (=> (= $generated@@596 ($generated@@218 $generated@@597 $generated@@598 $generated@@60 false)) (=> (and (= $generated@@599 (+ 48 $generated@@600)) (= (ControlFlow 0 3) (- 0 2))) (and (<= 0 $generated@@599) (< $generated@@599 65536))))))
(let (($generated@@604 true))
(let (($generated@@605  (=> (and (<= ($generated@@135 0) $generated@@600) (< $generated@@600 10)) (and (=> (= (ControlFlow 0 4) 1) $generated@@604) (=> (= (ControlFlow 0 4) 3) $generated@@603)))))
(let (($generated@@606  (=> (and (< $generated@@600 ($generated@@135 0)) (= (ControlFlow 0 6) 4)) $generated@@605)))
(let (($generated@@607  (=> (and (<= ($generated@@135 0) $generated@@600) (= (ControlFlow 0 5) 4)) $generated@@605)))
(let (($generated@@608  (=> (= $generated@@601 ($generated@@163 $generated@@597 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@607) (=> (= (ControlFlow 0 7) 6) $generated@@606)))))
(let (($generated@@609  (=> (and (and ($generated@@259 $generated@@598) ($generated@@602 $generated@@598)) (and (= 0 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@608)))
$generated@@609))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (Int) Int)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (Int) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@198 (T@T) T@U)
(declare-fun $generated@@199 (T@U) Int)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U) Bool)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 () T@T)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@T T@T) T@U)
(declare-fun $generated@@224 (T@T T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@241 (T@T T@T) T@U)
(declare-fun $generated@@242 (T@T T@T) T@T)
(declare-fun $generated@@243 (T@T) T@T)
(declare-fun $generated@@244 (T@T) T@T)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@U Int) T@U)
(declare-fun $generated@@342 (T@U) Int)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@133 $generated@@137 $generated@@138)) 12)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@134 ($generated@@133 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@135 ($generated@@133 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@133 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@131 $generated@@143 $generated@@144 $generated@@145)) $generated@@146))
 :pattern ( ($generated@@131 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(let (($generated@@152 (type $generated@@148)))
(= (type ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150)) ($generated@@133 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@135 (type $generated@@153))))
 (=> (= (type $generated@@156) $generated@@157) (= ($generated@@131 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@154 $generated@@155) $generated@@156)))
 :weight 0
))) (and (and (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@131 ($generated@@136 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@131 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@131 ($generated@@136 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@131 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or true (= ($generated@@131 ($generated@@136 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@131 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ) (! (= (type ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@133 $generated@@72 $generated@@4))
 :pattern ( ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@64 (type $generated@@185))))
 (=> (and (and (and (and (= (type $generated@@180) $generated@@72) (= (type $generated@@181) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@182) ($generated@@63 $generated@@4))) (= (type $generated@@184) $generated@@72)) (= (type $generated@@185) ($generated@@63 $generated@@186))) (= ($generated@@0 ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (not (= $generated@@184 $generated@@180)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@181 $generated@@184) $generated@@182))) $generated@@183))))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@187 $generated@@188) $generated@@188)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (and (= ($generated@@1 $generated@@195) 13) (forall (($generated@@196 Int) ) (! (= (type ($generated@@193 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@193 $generated@@196))
))))
(assert (forall (($generated@@197 Int) ) (!  (=> (and (<= 0 $generated@@197) (< $generated@@197 65536)) (= ($generated@@194 ($generated@@193 $generated@@197)) $generated@@197))
 :pattern ( ($generated@@193 $generated@@197))
)))
(assert  (and (and (forall (($generated@@202 T@T) ) (= ($generated@@1 ($generated@@200 $generated@@202)) 14)) (forall (($generated@@203 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@200 $generated@@203))
))) (forall (($generated@@204 T@T) ) (! (= (type ($generated@@198 $generated@@204)) ($generated@@200 $generated@@204))
 :pattern ( ($generated@@198 $generated@@204))
))))
(assert (forall (($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@205)) 0)
 :pattern ( ($generated@@198 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> (= (type $generated@@206) $generated@@195) (and (and (= ($generated@@193 ($generated@@194 $generated@@206)) $generated@@206) (<= 0 ($generated@@194 $generated@@206))) (< ($generated@@194 $generated@@206) 65536)))
 :pattern ( ($generated@@194 $generated@@206))
)))
(assert  (and (= ($generated@@1 $generated@@209) 15) (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@208 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) $generated@@61) (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213) ($generated@@69 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@207 ($generated@@208 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@215) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@216) $generated@@209)) (= (type $generated@@217) $generated@@61)) ($generated@@127 $generated@@214 $generated@@215)) ($generated@@207 $generated@@216 $generated@@217 $generated@@214)) ($generated@@207 $generated@@216 $generated@@217 $generated@@215))
 :pattern ( ($generated@@127 $generated@@214 $generated@@215) ($generated@@207 $generated@@216 $generated@@217 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@218) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@219) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@221) $generated@@61)) ($generated@@127 $generated@@218 $generated@@219)) ($generated@@69 $generated@@220 $generated@@221 $generated@@218)) ($generated@@69 $generated@@220 $generated@@221 $generated@@219))
 :pattern ( ($generated@@127 $generated@@218 $generated@@219) ($generated@@69 $generated@@220 $generated@@221 $generated@@218))
)))
(assert  (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@224 $generated@@227 $generated@@228)) 16)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@224 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@224 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@224 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@222 $generated@@233)) ($generated@@71 $generated@@234 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@233))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= (type ($generated@@223 $generated@@235 $generated@@236)) ($generated@@224 $generated@@235 $generated@@236))
 :pattern ( ($generated@@223 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@T) ) (! (let (($generated@@239 (type $generated@@237)))
 (not ($generated@@0 ($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237))))
 :pattern ( (let (($generated@@239 (type $generated@@237)))
($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237)))
)))
(assert  (and (and (and (and (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (= ($generated@@1 ($generated@@242 $generated@@245 $generated@@246)) 17)) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@243 ($generated@@242 $generated@@247 $generated@@248)) $generated@@247)
 :pattern ( ($generated@@242 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@244 ($generated@@242 $generated@@249 $generated@@250)) $generated@@250)
 :pattern ( ($generated@@242 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@243 (type $generated@@251))))
(= (type ($generated@@240 $generated@@251)) ($generated@@71 $generated@@252 $generated@@4)))
 :pattern ( ($generated@@240 $generated@@251))
))) (forall (($generated@@253 T@T) ($generated@@254 T@T) ) (! (= (type ($generated@@241 $generated@@253 $generated@@254)) ($generated@@242 $generated@@253 $generated@@254))
 :pattern ( ($generated@@241 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@T) ) (! (let (($generated@@257 (type $generated@@255)))
 (not ($generated@@0 ($generated@@76 ($generated@@240 ($generated@@241 $generated@@257 $generated@@256)) $generated@@255))))
 :pattern ( (let (($generated@@257 (type $generated@@255)))
($generated@@76 ($generated@@240 ($generated@@241 $generated@@257 $generated@@256)) $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@226 (type $generated@@258))))
(let (($generated@@260 ($generated@@225 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@224 $generated@@260 $generated@@259)) (or (= $generated@@258 ($generated@@223 $generated@@260 $generated@@259)) (exists (($generated@@261 T@U) ) (!  (and (= (type $generated@@261) $generated@@260) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@258) $generated@@261)))
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
))))))
 :pattern ( ($generated@@222 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@244 (type $generated@@262))))
(let (($generated@@264 ($generated@@243 (type $generated@@262))))
 (=> (= (type $generated@@262) ($generated@@242 $generated@@264 $generated@@263)) (or (= $generated@@262 ($generated@@241 $generated@@264 $generated@@263)) (exists (($generated@@265 T@U) ) (!  (and (= (type $generated@@265) $generated@@264) ($generated@@0 ($generated@@76 ($generated@@240 $generated@@262) $generated@@265)))
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
))))))
 :pattern ( ($generated@@240 $generated@@262))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@268) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@268 ($generated@@266 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@209) ($generated@@0 ($generated@@76 $generated@@268 $generated@@271))) ($generated@@207 $generated@@271 $generated@@269 $generated@@270))
 :pattern ( ($generated@@76 $generated@@268 $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@268 ($generated@@266 $generated@@269) $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (= (type $generated@@274) ($generated@@71 $generated@@209 $generated@@4)) (= (type $generated@@275) $generated@@61)) (= (type $generated@@276) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@274 ($generated@@272 $generated@@275) $generated@@276) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@209) ($generated@@0 ($generated@@76 $generated@@274 $generated@@277))) ($generated@@207 $generated@@277 $generated@@275 $generated@@276))
 :pattern ( ($generated@@76 $generated@@274 $generated@@277))
))))
 :pattern ( ($generated@@69 $generated@@274 ($generated@@272 $generated@@275) $generated@@276))
)))
(assert  (and (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@280 $generated@@281)) $generated@@61)
 :pattern ( ($generated@@278 $generated@@280 $generated@@281))
)) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@226 (type $generated@@282))))
(let (($generated@@284 ($generated@@225 (type $generated@@282))))
(= (type ($generated@@279 $generated@@282)) ($generated@@71 $generated@@284 $generated@@283))))
 :pattern ( ($generated@@279 $generated@@282))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (= (type $generated@@285) ($generated@@224 $generated@@209 $generated@@209)) (= (type $generated@@286) $generated@@61)) (= (type $generated@@287) $generated@@61)) (= (type $generated@@288) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@285 ($generated@@278 $generated@@286 $generated@@287) $generated@@288) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@285) $generated@@289))) (and ($generated@@207 ($generated@@76 ($generated@@279 $generated@@285) $generated@@289) $generated@@287 $generated@@288) ($generated@@207 $generated@@289 $generated@@286 $generated@@288)))
 :pattern ( ($generated@@76 ($generated@@279 $generated@@285) $generated@@289))
 :pattern ( ($generated@@76 ($generated@@222 $generated@@285) $generated@@289))
))))
 :pattern ( ($generated@@69 $generated@@285 ($generated@@278 $generated@@286 $generated@@287) $generated@@288))
)))
(assert  (and (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (! (= (type ($generated@@290 $generated@@292 $generated@@293)) $generated@@61)
 :pattern ( ($generated@@290 $generated@@292 $generated@@293))
)) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@244 (type $generated@@294))))
(let (($generated@@296 ($generated@@243 (type $generated@@294))))
(= (type ($generated@@291 $generated@@294)) ($generated@@71 $generated@@296 $generated@@295))))
 :pattern ( ($generated@@291 $generated@@294))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (= (type $generated@@297) ($generated@@242 $generated@@209 $generated@@209)) (= (type $generated@@298) $generated@@61)) (= (type $generated@@299) $generated@@61)) (= (type $generated@@300) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@297 ($generated@@290 $generated@@298 $generated@@299) $generated@@300) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@209) ($generated@@0 ($generated@@76 ($generated@@240 $generated@@297) $generated@@301))) (and ($generated@@207 ($generated@@76 ($generated@@291 $generated@@297) $generated@@301) $generated@@299 $generated@@300) ($generated@@207 $generated@@301 $generated@@298 $generated@@300)))
 :pattern ( ($generated@@76 ($generated@@291 $generated@@297) $generated@@301))
 :pattern ( ($generated@@76 ($generated@@240 $generated@@297) $generated@@301))
))))
 :pattern ( ($generated@@69 $generated@@297 ($generated@@290 $generated@@298 $generated@@299) $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@303) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@304) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@302 $generated@@304))) (and ($generated@@127 $generated@@302 $generated@@303) ($generated@@127 $generated@@303 $generated@@304))) ($generated@@127 $generated@@302 $generated@@304))
 :pattern ( ($generated@@127 $generated@@302 $generated@@303) ($generated@@127 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@71 $generated@@306 $generated@@4))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@244 (type $generated@@307))))
(let (($generated@@309 ($generated@@243 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@242 $generated@@309 $generated@@308)) (= (= $generated@@307 ($generated@@241 $generated@@309 $generated@@308)) (= ($generated@@240 $generated@@307) ($generated@@305 $generated@@309))))))
 :pattern ( ($generated@@240 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@201 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@200 $generated@@311)) (<= 0 ($generated@@199 $generated@@310))))
 :pattern ( ($generated@@199 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@312 ($generated@@278 $generated@@314 $generated@@315)) $generated@@314))
 :pattern ( ($generated@@278 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@61)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@316 ($generated@@278 $generated@@318 $generated@@319)) $generated@@319))
 :pattern ( ($generated@@278 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@61) (= (type $generated@@321) $generated@@61)) (= ($generated@@67 ($generated@@278 $generated@@320 $generated@@321)) $generated@@58))
 :pattern ( ($generated@@278 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@290 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@290 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@290 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@290 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@290 $generated@@330 $generated@@331)) $generated@@59))
 :pattern ( ($generated@@290 $generated@@330 $generated@@331))
)))
(assert  (and (forall (($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@334)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@334))
)) (forall (($generated@@335 T@U) ($generated@@336 Int) ) (! (let (($generated@@337 ($generated@@201 (type $generated@@335))))
(= (type ($generated@@333 $generated@@335 $generated@@336)) $generated@@337))
 :pattern ( ($generated@@333 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@200 $generated@@209)) (= (type $generated@@339) $generated@@61)) (= (type $generated@@340) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@338 ($generated@@332 $generated@@339) $generated@@340) (forall (($generated@@341 Int) ) (!  (=> (and (<= 0 $generated@@341) (< $generated@@341 ($generated@@199 $generated@@338))) ($generated@@207 ($generated@@333 $generated@@338 $generated@@341) $generated@@339 $generated@@340))
 :pattern ( ($generated@@333 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@69 $generated@@338 ($generated@@332 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@343 Int) ) (! (= ($generated@@342 ($generated@@70 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@70 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@266 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@266 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@266 $generated@@347)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (= (type ($generated@@348 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@61) (= ($generated@@348 ($generated@@272 $generated@@350)) $generated@@350))
 :pattern ( ($generated@@272 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@67 ($generated@@272 $generated@@351)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@353 ($generated@@352 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@352 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@352 $generated@@357)) $generated@@56))
 :pattern ( ($generated@@352 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (= (type ($generated@@358 $generated@@359)) $generated@@61)
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@61) (= ($generated@@358 ($generated@@332 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@332 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@67 ($generated@@332 $generated@@361)) $generated@@57))
 :pattern ( ($generated@@332 $generated@@361))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated@@362 $generated@@366 ($generated@@208 $generated@@365)) $generated@@365))
 :pattern ( ($generated@@208 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
 (not ($generated@@0 ($generated@@76 ($generated@@305 $generated@@368) $generated@@367))))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@76 ($generated@@305 $generated@@368) $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@71 $generated@@209 $generated@@2)) (= (type $generated@@370) $generated@@61)) (= (type $generated@@371) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@369 ($generated@@352 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@209) (< 0 ($generated ($generated@@76 $generated@@369 $generated@@372)))) ($generated@@207 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@76 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@69 $generated@@369 ($generated@@352 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 Int) ) (! (= ($generated@@208 ($generated@@8 ($generated@@187 $generated@@373))) ($generated@@189 ($generated@@208 ($generated@@8 $generated@@373))))
 :pattern ( ($generated@@208 ($generated@@8 ($generated@@187 $generated@@373))))
)))
(assert (forall (($generated@@374 T@U) ) (! (= ($generated@@208 ($generated@@189 $generated@@374)) ($generated@@189 ($generated@@208 $generated@@374)))
 :pattern ( ($generated@@208 ($generated@@189 $generated@@374)))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@201 (type $generated@@375))))
 (=> (and (= (type $generated@@375) ($generated@@200 $generated@@376)) (= ($generated@@199 $generated@@375) 0)) (= $generated@@375 ($generated@@198 $generated@@376))))
 :pattern ( ($generated@@199 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@2)) ($generated@@69 $generated@@378 $generated@@46 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@46 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@3)) ($generated@@69 $generated@@380 $generated@@47 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@47 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@382) $generated@@4)) ($generated@@69 $generated@@382 $generated@@44 $generated@@381))
 :pattern ( ($generated@@69 $generated@@382 $generated@@44 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@384) $generated@@195)) ($generated@@69 $generated@@384 $generated@@45 $generated@@383))
 :pattern ( ($generated@@69 $generated@@384 $generated@@45 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@386) $generated@@209)) ($generated@@69 $generated@@386 $generated@@48 $generated@@385))
 :pattern ( ($generated@@69 $generated@@386 $generated@@48 $generated@@385))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () Int)
(declare-fun $generated@@391 (T@U) Bool)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@393 () Int)
(assert  (and (and (= (type $generated@@387) ($generated@@133 $generated@@72 $generated@@4)) (= (type $generated@@388) $generated@@72)) (= (type $generated@@389) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@394  (=> (= $generated@@387 ($generated@@132 $generated@@388 $generated@@389 $generated@@60 false)) (=> (and (= $generated@@390 ($generated@@187 8)) ($generated@@69 ($generated@@8 $generated@@390) $generated@@46 $generated@@389)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@187 0) $generated@@390)) (=> (= (ControlFlow 0 2) (- 0 1)) (< $generated@@390 10)))))))
(let (($generated@@395  (=> (and (and ($generated@@391 $generated@@389) ($generated@@392 $generated@@389)) (and (= 2 $generated@@393) (= (ControlFlow 0 4) 2))) $generated@@394)))
$generated@@395)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (Int) T@U)
(declare-fun $generated@@238 (T@U) Int)
(declare-fun $generated@@239 () T@T)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@T) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U Int) T@U)
(declare-fun $generated@@469 (T@U) Int)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert  (and (= ($generated@@1 $generated@@239) 17) (forall (($generated@@240 Int) ) (! (= (type ($generated@@237 $generated@@240)) $generated@@239)
 :pattern ( ($generated@@237 $generated@@240))
))))
(assert (forall (($generated@@241 Int) ) (!  (=> (and (<= 0 $generated@@241) (< $generated@@241 65536)) (= ($generated@@238 ($generated@@237 $generated@@241)) $generated@@241))
 :pattern ( ($generated@@237 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@145)) (= (type $generated@@247) $generated@@145)) (= (type $generated@@248) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@242 $generated@@248)) (= ($generated@@74 ($generated@@211 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@136) (= ($generated@@134 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@136) ($generated@@134 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@145) (= (type $generated@@254) $generated@@145)) (= $generated@@252 ($generated@@211 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@134 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 18)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@239) (and (and (= ($generated@@237 ($generated@@238 $generated@@263)) $generated@@263) (<= 0 ($generated@@238 $generated@@263))) (< ($generated@@238 $generated@@263) 65536)))
 :pattern ( ($generated@@238 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@145)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268) ($generated@@74 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@T) ) (! (= (type ($generated@@270 $generated@@271)) ($generated@@76 $generated@@271 $generated@@2))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@79 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@76 $generated@@273 $generated@@2)) (and (= (= ($generated@@269 $generated@@272) 0) (= $generated@@272 ($generated@@270 $generated@@273))) (=> (not (= ($generated@@269 $generated@@272) 0)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) (< 0 ($generated ($generated@@81 $generated@@272 $generated@@274))))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 19)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@76 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@81 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@81 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 20)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@76 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@79 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@76 $generated@@312 $generated@@2)) (= ($generated@@151 $generated@@311) (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@312) (and (<= 0 ($generated ($generated@@81 $generated@@311 $generated@@313))) (<= ($generated ($generated@@81 $generated@@311 $generated@@313)) ($generated@@269 $generated@@311))))
 :pattern ( ($generated@@81 $generated@@311 $generated@@313))
)))))
 :pattern ( ($generated@@151 $generated@@311))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@279 (type $generated@@314))))
(let (($generated@@316 ($generated@@278 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@277 $generated@@316 $generated@@315)) (or (= $generated@@314 ($generated@@276 $generated@@316 $generated@@315)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@275 $generated@@314) $generated@@317)))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@275 $generated@@314))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@279 (type $generated@@319))))
(= (type ($generated@@318 $generated@@319)) ($generated@@76 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@279 (type $generated@@321))))
(let (($generated@@323 ($generated@@278 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@277 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@276 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@297 (type $generated@@325))))
(let (($generated@@327 ($generated@@296 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@295 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@294 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@293 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@297 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@297 (type $generated@@332))))
(let (($generated@@334 ($generated@@296 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@295 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@294 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@337) $generated@@64)) (= ($generated@@132 $generated@@336 ($generated@@150 $generated@@337)) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@336 $generated@@338)))) ($generated@@212 $generated@@338 $generated@@337))
 :pattern ( ($generated@@81 $generated@@336 $generated@@338))
))))
 :pattern ( ($generated@@132 $generated@@336 ($generated@@150 $generated@@337)))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@340) $generated@@64)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@339 ($generated@@221 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@145) ($generated@@0 ($generated@@81 $generated@@339 $generated@@342))) ($generated@@243 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@74 $generated@@339 ($generated@@221 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@344) $generated@@64)) (= (type $generated@@345) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@343 ($generated@@226 $generated@@344) $generated@@345) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@145) ($generated@@0 ($generated@@81 $generated@@343 $generated@@346))) ($generated@@243 $generated@@346 $generated@@344 $generated@@345))
 :pattern ( ($generated@@81 $generated@@343 $generated@@346))
))))
 :pattern ( ($generated@@74 $generated@@343 ($generated@@226 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 (type $generated@@347)))
(= ($generated ($generated@@81 ($generated@@270 $generated@@348) $generated@@347)) 0))
 :pattern ( (let (($generated@@348 (type $generated@@347)))
($generated@@81 ($generated@@270 $generated@@348) $generated@@347)))
)))
(assert  (and (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@349 $generated@@352)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@349 $generated@@352))
)) (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@350 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@350 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@279 (type $generated@@355))))
(let (($generated@@357 ($generated@@278 (type $generated@@355))))
(= (type ($generated@@351 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@351 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@277 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@349 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@275 $generated@@358) ($generated@@143 ($generated@@350 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@351 $generated@@358) ($generated@@143 ($generated@@350 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@350 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@358) $generated@@359))
)))
(assert  (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@360 $generated@@362))
)) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@297 (type $generated@@363))))
(let (($generated@@365 ($generated@@296 (type $generated@@363))))
(= (type ($generated@@361 $generated@@363)) ($generated@@76 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@361 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@367) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@366) ($generated@@143 ($generated@@350 $generated@@136 $generated@@367)))) (= ($generated@@81 ($generated@@361 $generated@@366) ($generated@@143 ($generated@@350 $generated@@136 $generated@@367))) ($generated@@144 ($generated@@350 $generated@@136 $generated@@367))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@278 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@277 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@81 ($generated@@318 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@81 ($generated@@275 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@81 ($generated@@351 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@81 ($generated@@275 $generated@@368) $generated@@372))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@296 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@295 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@81 ($generated@@361 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@277 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@275 $generated@@381) $generated@@385))) (and ($generated@@243 ($generated@@81 ($generated@@351 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@243 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@275 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@64)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@389) $generated@@393))) (and ($generated@@243 ($generated@@81 ($generated@@361 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@243 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@T) ) (! (= (type ($generated@@394 $generated@@395)) ($generated@@76 $generated@@395 $generated@@4))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@297 (type $generated@@396))))
(let (($generated@@398 ($generated@@296 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@295 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@294 $generated@@398 $generated@@397)) (= ($generated@@293 $generated@@396) ($generated@@394 $generated@@398))))))
 :pattern ( ($generated@@293 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@297 (type $generated@@399))))
(let (($generated@@401 ($generated@@296 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@295 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@294 $generated@@401 $generated@@400)) (= ($generated@@329 $generated@@399) ($generated@@394 $generated@@400))))))
 :pattern ( ($generated@@329 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@297 (type $generated@@402))))
(let (($generated@@404 ($generated@@296 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@295 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@294 $generated@@404 $generated@@403)) (= ($generated@@360 $generated@@402) ($generated@@394 $generated@@145))))))
 :pattern ( ($generated@@360 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@279 (type $generated@@405))))
(let (($generated@@407 ($generated@@278 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@277 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@276 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (and (and (= (type $generated@@408) $generated@@145) (= (type $generated@@409) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@405) ($generated@@264 ($generated@@211 $generated@@408 $generated@@409)))))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@349 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@297 (type $generated@@410))))
(let (($generated@@412 ($generated@@296 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@295 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@294 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@145) (= (type $generated@@414) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@410) ($generated@@264 ($generated@@211 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@360 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@212 $generated@@415 $generated@@46)) (and (= ($generated@@264 ($generated@@350 $generated@@2 $generated@@415)) $generated@@415) ($generated@@132 ($generated@@350 $generated@@2 $generated@@415) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@415 $generated@@46))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@145) ($generated@@212 $generated@@416 $generated@@47)) (and (= ($generated@@264 ($generated@@350 $generated@@3 $generated@@416)) $generated@@416) ($generated@@132 ($generated@@350 $generated@@3 $generated@@416) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@416 $generated@@47))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@44)) (and (= ($generated@@264 ($generated@@350 $generated@@4 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@350 $generated@@4 $generated@@417) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@44))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@45)) (and (= ($generated@@264 ($generated@@350 $generated@@239 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@350 $generated@@239 $generated@@418) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@45))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (= (type $generated@@420) $generated@@64) (= ($generated@@212 ($generated@@264 $generated@@419) $generated@@420) ($generated@@132 $generated@@419 $generated@@420)))
 :pattern ( ($generated@@212 ($generated@@264 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@79 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@76 $generated@@422 $generated@@2)) (<= 0 ($generated@@269 $generated@@421))))
 :pattern ( ($generated@@269 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@258 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@257 $generated@@424)) (<= 0 ($generated@@256 $generated@@423))))
 :pattern ( ($generated@@256 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) $generated@@64)) (= ($generated@@425 ($generated@@378 $generated@@427 $generated@@428)) $generated@@427))
 :pattern ( ($generated@@378 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@64) (= (type $generated@@432) $generated@@64)) (= ($generated@@429 ($generated@@378 $generated@@431 $generated@@432)) $generated@@432))
 :pattern ( ($generated@@378 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@433 $generated@@434)) $generated@@58))
 :pattern ( ($generated@@378 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@386 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@386 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@386 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@386 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@386 $generated@@443 $generated@@444)) $generated@@59))
 :pattern ( ($generated@@386 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@145) (= (type $generated@@446) $generated@@145)) (= ($generated@@249 ($generated@@211 $generated@@445 $generated@@446)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@135 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@135 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@135 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@135 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@211 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) (= (type $generated@@458) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@211 $generated@@457 $generated@@458))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ($generated@@463 Int) ) (! (let (($generated@@464 ($generated@@258 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462 $generated@@463)) $generated@@464))
 :pattern ( ($generated@@460 $generated@@462 $generated@@463))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (= (type $generated@@465) ($generated@@257 $generated@@145)) (= (type $generated@@466) $generated@@64)) (= (type $generated@@467) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@465 ($generated@@459 $generated@@466) $generated@@467) (forall (($generated@@468 Int) ) (!  (=> (and (<= 0 $generated@@468) (< $generated@@468 ($generated@@256 $generated@@465))) ($generated@@243 ($generated@@460 $generated@@465 $generated@@468) $generated@@466 $generated@@467))
 :pattern ( ($generated@@460 $generated@@465 $generated@@468))
))))
 :pattern ( ($generated@@74 $generated@@465 ($generated@@459 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@470 Int) ) (! (= ($generated@@469 ($generated@@75 $generated@@470)) $generated@@470)
 :pattern ( ($generated@@75 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@471 ($generated@@221 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@221 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@474)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@475 ($generated@@226 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@226 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@478)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@150 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@150 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@482)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@459 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@459 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@459 $generated@@486)) $generated@@57))
 :pattern ( ($generated@@459 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(= ($generated@@350 $generated@@488 ($generated@@264 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@264 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@277 $generated@@145 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) $generated@@64)) (= ($generated@@132 $generated@@489 ($generated@@378 $generated@@490 $generated@@491)) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@275 $generated@@489) $generated@@492))) (and ($generated@@212 ($generated@@81 ($generated@@351 $generated@@489) $generated@@492) $generated@@491) ($generated@@212 $generated@@492 $generated@@490)))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@489) $generated@@492))
 :pattern ( ($generated@@81 ($generated@@275 $generated@@489) $generated@@492))
))))
 :pattern ( ($generated@@132 $generated@@489 ($generated@@378 $generated@@490 $generated@@491)))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@494) $generated@@64)) (= (type $generated@@495) $generated@@64)) (= ($generated@@132 $generated@@493 ($generated@@386 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@493) $generated@@496))) (and ($generated@@212 ($generated@@81 ($generated@@361 $generated@@493) $generated@@496) $generated@@495) ($generated@@212 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@493) $generated@@496))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@132 $generated@@493 ($generated@@386 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (< ($generated@@497 $generated@@499) ($generated@@498 ($generated@@211 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@211 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (< ($generated@@497 $generated@@502) ($generated@@498 ($generated@@211 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@211 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) ($generated@@212 $generated@@503 ($generated@@378 $generated@@504 $generated@@505))) (and (= ($generated@@264 ($generated@@350 ($generated@@277 $generated@@145 $generated@@145) $generated@@503)) $generated@@503) ($generated@@132 ($generated@@350 ($generated@@277 $generated@@145 $generated@@145) $generated@@503) ($generated@@378 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@212 $generated@@503 ($generated@@378 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@386 $generated@@507 $generated@@508))) (and (= ($generated@@264 ($generated@@350 ($generated@@295 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@350 ($generated@@295 $generated@@145 $generated@@145) $generated@@506) ($generated@@386 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@386 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@145)) ($generated@@212 $generated@@511 ($generated@@135 $generated@@509 $generated@@510))) (and (= ($generated@@264 ($generated@@350 $generated@@136 $generated@@511)) $generated@@511) ($generated@@132 ($generated@@350 $generated@@136 $generated@@511) ($generated@@135 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@212 $generated@@511 ($generated@@135 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
 (not ($generated@@0 ($generated@@81 ($generated@@394 $generated@@513) $generated@@512))))
 :pattern ( (let (($generated@@513 (type $generated@@512)))
($generated@@81 ($generated@@394 $generated@@513) $generated@@512)))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@69)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@516 $generated@@517)) $generated@@62) (= ($generated@@514 ($generated@@135 $generated@@516 $generated@@517)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@136) (= ($generated@@497 ($generated@@264 $generated@@518)) ($generated@@498 $generated@@518)))
 :pattern ( ($generated@@497 ($generated@@264 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) ($generated@@212 $generated@@519 ($generated@@75 0))) (and (= ($generated@@264 ($generated@@350 $generated@@2 $generated@@519)) $generated@@519) ($generated@@132 ($generated@@350 ($generated@@76 $generated@@145 $generated@@4) $generated@@519) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@75 0)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) ($generated@@212 $generated@@520 ($generated@@221 $generated@@521))) (and (= ($generated@@264 ($generated@@350 ($generated@@76 $generated@@145 $generated@@4) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@350 ($generated@@76 $generated@@145 $generated@@4) $generated@@520) ($generated@@221 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@520 ($generated@@221 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) ($generated@@212 $generated@@522 ($generated@@226 $generated@@523))) (and (= ($generated@@264 ($generated@@350 ($generated@@76 $generated@@145 $generated@@4) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@350 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@226 $generated@@523))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@226 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@212 $generated@@524 ($generated@@150 $generated@@525))) (and (= ($generated@@264 ($generated@@350 ($generated@@76 $generated@@145 $generated@@2) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@350 ($generated@@76 $generated@@145 $generated@@2) $generated@@524) ($generated@@150 $generated@@525))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@150 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@212 $generated@@526 ($generated@@459 $generated@@527))) (and (= ($generated@@264 ($generated@@350 ($generated@@257 $generated@@145) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@350 ($generated@@257 $generated@@145) $generated@@526) ($generated@@459 $generated@@527))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@459 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@528 ($generated@@150 $generated@@529) $generated@@530) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@528 $generated@@531)))) ($generated@@243 $generated@@531 $generated@@529 $generated@@530))
 :pattern ( ($generated@@81 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@74 $generated@@528 ($generated@@150 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@136) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@534) (and ($generated@@134 $generated@@532) (exists (($generated@@535 T@U) ) (!  (and (= (type $generated@@535) $generated@@64) ($generated@@74 $generated@@532 ($generated@@135 $generated@@533 $generated@@535) $generated@@534))
 :pattern ( ($generated@@74 $generated@@532 ($generated@@135 $generated@@533 $generated@@535) $generated@@534))
))))) ($generated@@243 ($generated@@143 $generated@@532) $generated@@533 $generated@@534))
 :pattern ( ($generated@@243 ($generated@@143 $generated@@532) $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@136) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@538) (and ($generated@@134 $generated@@536) (exists (($generated@@539 T@U) ) (!  (and (= (type $generated@@539) $generated@@64) ($generated@@74 $generated@@536 ($generated@@135 $generated@@539 $generated@@537) $generated@@538))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@135 $generated@@539 $generated@@537) $generated@@538))
))))) ($generated@@243 ($generated@@144 $generated@@536) $generated@@537 $generated@@538))
 :pattern ( ($generated@@243 ($generated@@144 $generated@@536) $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@540) ($generated@@233 $generated@@541)) ($generated@@233 ($generated@@211 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@540) ($generated@@233 $generated@@541)))
)))
(assert (forall (($generated@@542 Int) ) (! (= ($generated@@264 ($generated@@8 ($generated@@231 $generated@@542))) ($generated@@233 ($generated@@264 ($generated@@8 $generated@@542))))
 :pattern ( ($generated@@264 ($generated@@8 ($generated@@231 $generated@@542))))
)))
(assert (forall (($generated@@543 T@U) ) (! (= ($generated@@264 ($generated@@233 $generated@@543)) ($generated@@233 ($generated@@264 $generated@@543)))
 :pattern ( ($generated@@264 ($generated@@233 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@258 (type $generated@@544))))
 (=> (and (= (type $generated@@544) ($generated@@257 $generated@@545)) (= ($generated@@256 $generated@@544) 0)) (= $generated@@544 ($generated@@255 $generated@@545))))
 :pattern ( ($generated@@256 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@547)))
 (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@549 $generated@@2)) (= (type $generated@@548) $generated@@2)) (<= 0 ($generated $generated@@548))) (= ($generated@@269 ($generated@@82 $generated@@546 $generated@@547 $generated@@548)) (+ (- ($generated@@269 $generated@@546) ($generated ($generated@@81 $generated@@546 $generated@@547))) ($generated $generated@@548)))))
 :pattern ( ($generated@@269 ($generated@@82 $generated@@546 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@2)) ($generated@@74 $generated@@551 $generated@@46 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@46 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@3)) ($generated@@74 $generated@@553 $generated@@47 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@47 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@4)) ($generated@@74 $generated@@555 $generated@@44 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@44 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@239)) ($generated@@74 $generated@@557 $generated@@45 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@45 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@145)) ($generated@@74 $generated@@559 $generated@@48 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@48 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@257 $generated@@145)) (= (type $generated@@561) $generated@@64)) (= ($generated@@132 $generated@@560 ($generated@@459 $generated@@561)) (forall (($generated@@562 Int) ) (!  (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@256 $generated@@560))) ($generated@@212 ($generated@@460 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@460 $generated@@560 $generated@@562))
))))
 :pattern ( ($generated@@132 $generated@@560 ($generated@@459 $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 Int) ) (!  (=> (= (type $generated@@564) ($generated@@257 $generated@@145)) (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@256 $generated@@564))) (< ($generated@@498 ($generated@@350 $generated@@136 ($generated@@460 $generated@@564 $generated@@565))) ($generated@@563 $generated@@564))))
 :pattern ( ($generated@@498 ($generated@@350 $generated@@136 ($generated@@460 $generated@@564 $generated@@565))))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@277 $generated@@145 $generated@@145)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@132 $generated@@566 ($generated@@378 $generated@@567 $generated@@568))) (and (and ($generated@@132 ($generated@@275 $generated@@566) ($generated@@221 $generated@@567)) ($generated@@132 ($generated@@318 $generated@@566) ($generated@@221 $generated@@568))) ($generated@@132 ($generated@@349 $generated@@566) ($generated@@221 ($generated@@135 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@132 $generated@@566 ($generated@@378 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@386 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@293 $generated@@569) ($generated@@226 $generated@@570)) ($generated@@132 ($generated@@329 $generated@@569) ($generated@@226 $generated@@571))) ($generated@@132 ($generated@@360 $generated@@569) ($generated@@226 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@386 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@2) ($generated@@132 $generated@@572 $generated@@46))
 :pattern ( ($generated@@132 $generated@@572 $generated@@46))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@3) ($generated@@132 $generated@@573 $generated@@47))
 :pattern ( ($generated@@132 $generated@@573 $generated@@47))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@4) ($generated@@132 $generated@@574 $generated@@44))
 :pattern ( ($generated@@132 $generated@@574 $generated@@44))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@239) ($generated@@132 $generated@@575 $generated@@45))
 :pattern ( ($generated@@132 $generated@@575 $generated@@45))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@145) ($generated@@132 $generated@@576 $generated@@48))
 :pattern ( ($generated@@132 $generated@@576 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () Int)
(declare-fun $generated@@582 () Int)
(declare-fun $generated@@583 () Int)
(declare-fun $generated@@584 (T@U) Bool)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () Int)
(assert  (and (and (and (and (= (type $generated@@577) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@578) $generated@@77)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@580) $generated@@239)) (= (type $generated@@585) $generated@@239)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@589  (=> (= $generated@@577 ($generated@@156 $generated@@578 $generated@@579 $generated@@60 false)) (=> (and (= $generated@@580 ($generated@@233 ($generated@@237 56))) (= $generated@@581 ($generated@@238 $generated@@580))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@231 0) $generated@@581) (< $generated@@581 100000))) (=> (and (<= ($generated@@231 0) $generated@@581) (< $generated@@581 100000)) (=> (= $generated@@582 ($generated@@238 $generated@@580)) (=> (and (= $generated@@583 ($generated@@238 $generated@@580)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@231 0) $generated@@583) (< $generated@@583 100000))))))))))
(let (($generated@@590  (=> (and (and (and (and ($generated@@242 $generated@@579) ($generated@@584 $generated@@579)) (and ($generated@@132 $generated@@585 $generated@@45) true)) (and (and (<= ($generated@@231 0) $generated@@586) (< $generated@@586 100000)) true)) (and (and (and (<= ($generated@@231 0) $generated@@587) (< $generated@@587 100000)) true) (and (= 1 $generated@@588) (= (ControlFlow 0 4) 2)))) $generated@@589)))
$generated@@590)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
