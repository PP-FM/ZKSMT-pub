(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@271 (Int) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@78 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@67)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@67)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@80 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@70 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@80) (= (type $generated@@208) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@209) ($generated@@69 $generated@@4))) (= (type $generated@@211) $generated@@80)) (= (type $generated@@212) ($generated@@69 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (= (type $generated@@215) $generated@@67))
(assert (forall (($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@139) ($generated@@135 $generated@@216 $generated@@215)) ($generated@@214 $generated@@216))
 :pattern ( ($generated@@214 $generated@@216) ($generated@@135 $generated@@216 $generated@@215))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@139)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@67) (= (type $generated@@222) $generated@@67)) (= (type $generated@@223) $generated@@148)) (= (type $generated@@224) $generated@@148)) (= ($generated@@135 ($generated@@217 $generated@@223 $generated@@224) ($generated@@138 $generated@@221 $generated@@222))  (and ($generated@@218 $generated@@223 $generated@@221) ($generated@@218 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@135 ($generated@@217 $generated@@223 $generated@@224) ($generated@@138 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@139) (= (type $generated@@226) $generated@@139)) (= ($generated@@145 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@145 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@139) (= (type $generated@@229) $generated@@139)) (= ($generated@@227 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@67)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@233) $generated@@67)) (= ($generated@@135 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@148) ($generated@@0 ($generated@@84 $generated@@232 $generated@@234))) ($generated@@218 $generated@@234 $generated@@233))
 :pattern ( ($generated@@84 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@135 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@135 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@148) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@218 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@135 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@67) (= (type $generated@@249) $generated@@67)) (= (type $generated@@250) $generated@@148)) (= (type $generated@@251) $generated@@148)) (= (type $generated@@252) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@246 $generated@@252)) (= ($generated@@77 ($generated@@217 $generated@@250 $generated@@251) ($generated@@138 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@77 ($generated@@217 $generated@@250 $generated@@251) ($generated@@138 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@71)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@139) (= ($generated@@137 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@139) (= ($generated@@214 $generated@@256) (= ($generated@@253 $generated@@256) $generated@@63)))
 :pattern ( ($generated@@214 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@139) ($generated@@137 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@148) (= (type $generated@@259) $generated@@148)) (= $generated@@257 ($generated@@217 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@137 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@139) (= (type $generated@@270) $generated@@139)) true) (= ($generated@@227 $generated@@269 $generated@@270) (= ($generated@@268 $generated@@269) ($generated@@268 $generated@@270))))
 :pattern ( ($generated@@227 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 Int) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@139)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@139) ($generated@@214 $generated@@273)) (exists (($generated@@274 Int) ) (= $generated@@273 ($generated@@271 $generated@@274))))
 :pattern ( ($generated@@214 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@148)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@247 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@247 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@79 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@82 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@79 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@84 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@84 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@84 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@79 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@84 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@84 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@82 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@79 $generated@@323 $generated@@2)) (= ($generated@@154 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@84 $generated@@322 $generated@@324))) (<= ($generated ($generated@@84 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@84 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@154 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@148) ($generated@@218 $generated@@328 $generated@@215)) (and (= ($generated@@275 ($generated@@325 $generated@@139 $generated@@328)) $generated@@328) ($generated@@135 ($generated@@325 $generated@@139 $generated@@328) $generated@@215)))
 :pattern ( ($generated@@218 $generated@@328 $generated@@215))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@79 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@79 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@84 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@352) $generated@@67)) (= ($generated@@135 $generated@@351 ($generated@@153 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@351 $generated@@353)))) ($generated@@218 $generated@@353 $generated@@352))
 :pattern ( ($generated@@84 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@135 $generated@@351 ($generated@@153 $generated@@352)))
)))
(assert (forall (($generated@@354 Int) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@246 $generated@@355)) (= ($generated@@77 ($generated@@271 $generated@@354) $generated@@215 $generated@@355) ($generated@@77 ($generated@@8 $generated@@354) $generated@@46 $generated@@355)))
 :pattern ( ($generated@@77 ($generated@@271 $generated@@354) $generated@@215 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@230 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@148) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@247 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@230 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@148) ($generated@@0 ($generated@@84 $generated@@360 $generated@@363))) ($generated@@247 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@84 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@84 ($generated@@281 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@84 ($generated@@281 $generated@@365) $generated@@364)))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@290 (type $generated@@369))))
(let (($generated@@371 ($generated@@289 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@79 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@373) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@84 ($generated@@286 $generated@@372) ($generated@@146 ($generated@@325 $generated@@139 $generated@@373)))) (= ($generated@@84 ($generated@@367 $generated@@372) ($generated@@146 ($generated@@325 $generated@@139 $generated@@373))) ($generated@@147 ($generated@@325 $generated@@139 $generated@@373))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@308 (type $generated@@377))))
(let (($generated@@379 ($generated@@307 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@381) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@304 $generated@@380) ($generated@@146 ($generated@@325 $generated@@139 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@146 ($generated@@325 $generated@@139 $generated@@381))) ($generated@@147 ($generated@@325 $generated@@139 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@289 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@288 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@84 ($generated@@333 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@84 ($generated@@286 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@84 ($generated@@367 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@382) $generated@@386))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@84 ($generated@@333 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@307 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@306 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@84 ($generated@@344 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@84 ($generated@@304 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@84 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@387) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@84 ($generated@@344 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@67)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@395) $generated@@399))) (and ($generated@@247 ($generated@@84 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@247 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@77 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@403) $generated@@407))) (and ($generated@@247 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@247 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@79 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@308 (type $generated@@410))))
(let (($generated@@412 ($generated@@307 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@306 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@305 $generated@@412 $generated@@411)) (= ($generated@@304 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@304 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@308 (type $generated@@413))))
(let (($generated@@415 ($generated@@307 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@306 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@305 $generated@@415 $generated@@414)) (= ($generated@@344 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@344 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@308 (type $generated@@416))))
(let (($generated@@418 ($generated@@307 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@306 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@305 $generated@@418 $generated@@417)) (= ($generated@@374 $generated@@416) ($generated@@408 $generated@@148))))))
 :pattern ( ($generated@@374 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@290 (type $generated@@419))))
(let (($generated@@421 ($generated@@289 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@288 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@287 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@148) (= (type $generated@@423) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@419) ($generated@@275 ($generated@@217 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@308 (type $generated@@424))))
(let (($generated@@426 ($generated@@307 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@306 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@305 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@148) (= (type $generated@@428) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@424) ($generated@@275 ($generated@@217 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@374 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@148) ($generated@@218 $generated@@429 $generated@@46)) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@429)) $generated@@429) ($generated@@135 ($generated@@325 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@218 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@148) ($generated@@218 $generated@@430 $generated@@47)) (and (= ($generated@@275 ($generated@@325 $generated@@3 $generated@@430)) $generated@@430) ($generated@@135 ($generated@@325 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@218 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@148) ($generated@@218 $generated@@431 $generated@@44)) (and (= ($generated@@275 ($generated@@325 $generated@@4 $generated@@431)) $generated@@431) ($generated@@135 ($generated@@325 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@218 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@148) ($generated@@218 $generated@@433 $generated@@45)) (and (= ($generated@@275 ($generated@@325 $generated@@432 $generated@@433)) $generated@@433) ($generated@@135 ($generated@@325 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@218 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@67) (= ($generated@@218 ($generated@@275 $generated@@434) $generated@@435) ($generated@@135 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@218 ($generated@@275 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@82 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@79 $generated@@437 $generated@@2)) (<= 0 ($generated@@280 $generated@@436))))
 :pattern ( ($generated@@280 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@263 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@262 $generated@@439)) (<= 0 ($generated@@261 $generated@@438))))
 :pattern ( ($generated@@261 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@392 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@392 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@392 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@75 ($generated@@392 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@400 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@400 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@400 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@148) (= (type $generated@@461) $generated@@148)) (= ($generated@@253 ($generated@@217 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@217 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@138 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@138 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@138 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@138 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@148) (= (type $generated@@471) $generated@@148)) (= ($generated@@146 ($generated@@217 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@217 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@148) (= (type $generated@@473) $generated@@148)) (= ($generated@@147 ($generated@@217 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@217 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@263 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@262 $generated@@148)) (= (type $generated@@481) $generated@@67)) (= (type $generated@@482) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@261 $generated@@480))) ($generated@@247 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@77 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@78 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@78 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@230 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@230 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@235 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@235 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@153 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@153 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@153 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@474 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@474 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@474 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@501))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@253 ($generated@@271 $generated@@502)) $generated@@63)
 :pattern ( ($generated@@271 $generated@@502))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@268 ($generated@@271 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@271 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@325 $generated@@505 ($generated@@275 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@275 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@135 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@506) $generated@@509))) (and ($generated@@218 ($generated@@84 ($generated@@367 $generated@@506) $generated@@509) $generated@@508) ($generated@@218 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@506) $generated@@509))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@135 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= ($generated@@135 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@510) $generated@@513))) (and ($generated@@218 ($generated@@84 ($generated@@375 $generated@@510) $generated@@513) $generated@@512) ($generated@@218 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@510) $generated@@513))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@135 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) (= (type $generated@@517) $generated@@148)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@217 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@217 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@148) (= (type $generated@@519) $generated@@148)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@217 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@217 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@135 ($generated@@271 $generated@@520) $generated@@215) ($generated@@135 ($generated@@8 $generated@@520) $generated@@46))
 :pattern ( ($generated@@135 ($generated@@271 $generated@@520) $generated@@215))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@148) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@67)) ($generated@@218 $generated@@521 ($generated@@392 $generated@@522 $generated@@523))) (and (= ($generated@@275 ($generated@@325 ($generated@@288 $generated@@148 $generated@@148) $generated@@521)) $generated@@521) ($generated@@135 ($generated@@325 ($generated@@288 $generated@@148 $generated@@148) $generated@@521) ($generated@@392 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@218 $generated@@521 ($generated@@392 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@148) (= (type $generated@@525) $generated@@67)) (= (type $generated@@526) $generated@@67)) ($generated@@218 $generated@@524 ($generated@@400 $generated@@525 $generated@@526))) (and (= ($generated@@275 ($generated@@325 ($generated@@306 $generated@@148 $generated@@148) $generated@@524)) $generated@@524) ($generated@@135 ($generated@@325 ($generated@@306 $generated@@148 $generated@@148) $generated@@524) ($generated@@400 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@218 $generated@@524 ($generated@@400 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@148)) ($generated@@218 $generated@@529 ($generated@@138 $generated@@527 $generated@@528))) (and (= ($generated@@275 ($generated@@325 $generated@@139 $generated@@529)) $generated@@529) ($generated@@135 ($generated@@325 $generated@@139 $generated@@529) ($generated@@138 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@218 $generated@@529 ($generated@@138 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@84 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@84 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (and (= ($generated@@75 ($generated@@138 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@138 $generated@@534 $generated@@535)) $generated@@65)))
 :pattern ( ($generated@@138 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@139) (= (type $generated@@537) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@537) (and ($generated@@214 $generated@@536) ($generated@@77 $generated@@536 $generated@@215 $generated@@537)))) ($generated@@77 ($generated@@8 ($generated@@268 $generated@@536)) $generated@@46 $generated@@537))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@268 $generated@@536)) $generated@@46 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@139) (= ($generated@@514 ($generated@@275 $generated@@538)) ($generated@@515 $generated@@538)))
 :pattern ( ($generated@@514 ($generated@@275 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@148) ($generated@@218 $generated@@539 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@539)) $generated@@539) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@539) ($generated@@78 0))))
 :pattern ( ($generated@@218 $generated@@539 ($generated@@78 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@148) (= (type $generated@@541) $generated@@67)) ($generated@@218 $generated@@540 ($generated@@230 $generated@@541))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@540)) $generated@@540) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@540) ($generated@@230 $generated@@541))))
 :pattern ( ($generated@@218 $generated@@540 ($generated@@230 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@148) (= (type $generated@@543) $generated@@67)) ($generated@@218 $generated@@542 ($generated@@235 $generated@@543))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@542)) $generated@@542) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@542) ($generated@@235 $generated@@543))))
 :pattern ( ($generated@@218 $generated@@542 ($generated@@235 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@148) (= (type $generated@@545) $generated@@67)) ($generated@@218 $generated@@544 ($generated@@153 $generated@@545))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@2) $generated@@544)) $generated@@544) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@2) $generated@@544) ($generated@@153 $generated@@545))))
 :pattern ( ($generated@@218 $generated@@544 ($generated@@153 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@148) (= (type $generated@@547) $generated@@67)) ($generated@@218 $generated@@546 ($generated@@474 $generated@@547))) (and (= ($generated@@275 ($generated@@325 ($generated@@262 $generated@@148) $generated@@546)) $generated@@546) ($generated@@135 ($generated@@325 ($generated@@262 $generated@@148) $generated@@546) ($generated@@474 $generated@@547))))
 :pattern ( ($generated@@218 $generated@@546 ($generated@@474 $generated@@547)))
)))
(assert (= ($generated@@75 $generated@@215) $generated@@64))
(assert (= ($generated@@532 $generated@@215) $generated@@66))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@548 ($generated@@153 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@548 $generated@@551)))) ($generated@@247 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@84 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@77 $generated@@548 ($generated@@153 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@139) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@554) (and ($generated@@137 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@67) ($generated@@77 $generated@@552 ($generated@@138 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@77 $generated@@552 ($generated@@138 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@247 ($generated@@146 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@146 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@139) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@558) (and ($generated@@137 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@67) ($generated@@77 $generated@@556 ($generated@@138 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@138 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@247 ($generated@@147 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@247 ($generated@@147 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@148) (= (type $generated@@561) $generated@@148)) (= ($generated@@217 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)) ($generated@@242 ($generated@@217 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@217 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@240 $generated@@562))) ($generated@@242 ($generated@@275 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@240 $generated@@562))))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@271 ($generated@@240 $generated@@563)) ($generated@@242 ($generated@@271 $generated@@563)))
 :pattern ( ($generated@@271 ($generated@@240 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@275 ($generated@@242 $generated@@564)) ($generated@@242 ($generated@@275 $generated@@564)))
 :pattern ( ($generated@@275 ($generated@@242 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@263 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@262 $generated@@566)) (= ($generated@@261 $generated@@565) 0)) (= $generated@@565 ($generated@@260 $generated@@566))))
 :pattern ( ($generated@@261 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@79 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@280 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@280 $generated@@567) ($generated ($generated@@84 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@280 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@2)) ($generated@@77 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@3)) ($generated@@77 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@4)) ($generated@@77 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@432)) ($generated@@77 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@148)) ($generated@@77 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@262 $generated@@148)) (= (type $generated@@582) $generated@@67)) (= ($generated@@135 $generated@@581 ($generated@@474 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@261 $generated@@581))) ($generated@@218 ($generated@@475 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@475 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@135 $generated@@581 ($generated@@474 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@262 $generated@@148)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@261 $generated@@585))) (< ($generated@@515 ($generated@@325 $generated@@139 ($generated@@475 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@515 ($generated@@325 $generated@@139 ($generated@@475 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) $generated@@67)) ($generated@@135 $generated@@587 ($generated@@392 $generated@@588 $generated@@589))) (and (and ($generated@@135 ($generated@@286 $generated@@587) ($generated@@230 $generated@@588)) ($generated@@135 ($generated@@333 $generated@@587) ($generated@@230 $generated@@589))) ($generated@@135 ($generated@@366 $generated@@587) ($generated@@230 ($generated@@138 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@135 $generated@@587 ($generated@@392 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@135 $generated@@590 ($generated@@400 $generated@@591 $generated@@592))) (and (and ($generated@@135 ($generated@@304 $generated@@590) ($generated@@235 $generated@@591)) ($generated@@135 ($generated@@344 $generated@@590) ($generated@@235 $generated@@592))) ($generated@@135 ($generated@@374 $generated@@590) ($generated@@235 ($generated@@138 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@135 $generated@@590 ($generated@@400 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@135 $generated@@593 $generated@@46))
 :pattern ( ($generated@@135 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@135 $generated@@594 $generated@@47))
 :pattern ( ($generated@@135 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@135 $generated@@595 $generated@@44))
 :pattern ( ($generated@@135 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@432) ($generated@@135 $generated@@596 $generated@@45))
 :pattern ( ($generated@@135 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@148) ($generated@@135 $generated@@597 $generated@@48))
 :pattern ( ($generated@@135 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () Int)
(assert  (and (and (and (= (type $generated@@598) ($generated@@160 $generated@@80 $generated@@4)) (= (type $generated@@599) $generated@@80)) (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@601) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@606  (=> (= $generated@@598 ($generated@@159 $generated@@599 $generated@@600 $generated@@60 false)) (=> (and (= $generated@@601 ($generated@@242 ($generated@@217 ($generated@@275 ($generated@@242 ($generated@@271 ($generated@@240 1)))) ($generated@@275 ($generated@@8 ($generated@@240 2)))))) ($generated@@135 $generated@@601 ($generated@@138 $generated@@215 $generated@@46))) (=> (and (and ($generated@@137 $generated@@601) ($generated@@214 ($generated@@325 $generated@@139 ($generated@@146 $generated@@601)))) (and (= ($generated@@217 ($generated@@275 ($generated@@271 $generated@@602)) ($generated@@275 ($generated@@8 $generated@@603))) $generated@@601) (= (ControlFlow 0 2) (- 0 1)))) (= (let (($generated@@607 ($generated@@268 ($generated@@325 $generated@@139 ($generated@@146 ($generated@@242 ($generated@@217 ($generated@@275 ($generated@@242 ($generated@@271 ($generated@@240 1)))) ($generated@@275 ($generated@@8 ($generated@@240 2))))))))))
$generated@@607) ($generated@@240 1)))))))
(let (($generated@@608  (=> (and (and ($generated@@246 $generated@@600) ($generated@@604 $generated@@600)) (and (= 1 $generated@@605) (= (ControlFlow 0 3) 2))) $generated@@606)))
$generated@@608)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
