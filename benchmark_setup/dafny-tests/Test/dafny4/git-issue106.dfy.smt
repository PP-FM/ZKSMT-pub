(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U Int Int) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (Int Int) Bool)
(declare-fun $generated@@239 (Int) Int)
(declare-fun $generated@@240 (Int Int) Int)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@604 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@138)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@138))
))) (= (type $generated@@137) $generated@@136)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (= (type $generated@@139) $generated@@136) (= ($generated@@134 $generated@@139 $generated@@140 $generated@@141) ($generated@@134 $generated@@137 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@237 $generated@@241)) $generated@@136)
 :pattern ( ($generated@@237 $generated@@241))
)))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@242 T@U) ($generated@@243 Int) ($generated@@244 Int) ) (!  (=> (and (= (type $generated@@242) $generated@@136) (or ($generated@@238 $generated@@243 $generated@@244) (and (not (= 1 $generated@@236)) (and (<= ($generated@@239 0) $generated@@243) (<= ($generated@@239 0) $generated@@244))))) (and (=> (not (= $generated@@243 ($generated@@239 0))) (and ($generated@@238 (- $generated@@243 1) (+ ($generated@@240 $generated@@243 $generated@@244) 1)) ($generated@@238 (- $generated@@243 1) ($generated@@240 ($generated@@240 ($generated@@239 2) $generated@@243) $generated@@244)))) (= ($generated@@134 ($generated@@237 $generated@@242) $generated@@243 $generated@@244) (ite (= $generated@@243 ($generated@@239 0)) 0 (+ ($generated@@134 $generated@@242 (- $generated@@243 1) (+ ($generated@@240 $generated@@243 $generated@@244) 1)) ($generated@@134 $generated@@242 (- $generated@@243 1) ($generated@@240 ($generated@@240 ($generated@@239 2) $generated@@243) $generated@@244)))))))
 :pattern ( ($generated@@134 ($generated@@237 $generated@@242) $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@149)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@66) (= (type $generated@@250) $generated@@66)) (= (type $generated@@251) $generated@@158)) (= (type $generated@@252) $generated@@158)) (= ($generated@@145 ($generated@@245 $generated@@251 $generated@@252) ($generated@@148 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@145 ($generated@@245 $generated@@251 $generated@@252) ($generated@@148 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@149) (= (type $generated@@254) $generated@@149)) (= ($generated@@155 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@155 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@66)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@258) $generated@@66)) (= ($generated@@145 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@158) ($generated@@0 ($generated@@83 $generated@@257 $generated@@259))) ($generated@@246 $generated@@259 $generated@@258))
 :pattern ( ($generated@@83 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@145 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@66)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@263) $generated@@66)) (= ($generated@@145 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@158) ($generated@@0 ($generated@@83 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@83 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@145 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@239 $generated@@265) $generated@@265)
 :pattern ( ($generated@@239 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@66) (= (type $generated@@273) $generated@@66)) (= (type $generated@@274) $generated@@158)) (= (type $generated@@275) $generated@@158)) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@270 $generated@@276)) (= ($generated@@76 ($generated@@245 $generated@@274 $generated@@275) ($generated@@148 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@76 ($generated@@245 $generated@@274 $generated@@275) ($generated@@148 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@70)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@149) (= ($generated@@147 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@149) ($generated@@147 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@158) (= (type $generated@@282) $generated@@158)) (= $generated@@280 ($generated@@245 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@147 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 18)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@2) (= ($generated@@145 $generated@@291 $generated@@142) (<= ($generated@@239 0) ($generated $generated@@291))))
 :pattern ( ($generated@@145 $generated@@291 $generated@@142))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@158)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@66) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@271 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@76 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@271 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@78 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@81 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@78 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@83 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 20)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@78 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@83 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@83 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@81 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@78 $generated@@340 $generated@@2)) (= ($generated@@164 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@83 $generated@@339 $generated@@341))) (<= ($generated ($generated@@83 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@83 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@164 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@158) ($generated@@246 $generated@@345 $generated@@142)) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@345)) $generated@@345) ($generated@@145 ($generated@@342 $generated@@2 $generated@@345) $generated@@142)))
 :pattern ( ($generated@@246 $generated@@345 $generated@@142))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@303 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@78 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@307 (type $generated@@353))))
(let (($generated@@355 ($generated@@306 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@305 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@304 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@325 (type $generated@@357))))
(let (($generated@@359 ($generated@@324 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@323 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@322 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@321 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@78 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@83 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 Int) ($generated@@370 Int) ) (!  (=> (= (type $generated@@368) $generated@@136) (= ($generated@@134 ($generated@@237 $generated@@368) $generated@@369 $generated@@370) ($generated@@134 $generated@@368 $generated@@369 $generated@@370)))
 :pattern ( ($generated@@134 ($generated@@237 $generated@@368) $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@372) $generated@@66)) (= ($generated@@145 $generated@@371 ($generated@@163 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@371 $generated@@373)))) ($generated@@246 $generated@@373 $generated@@372))
 :pattern ( ($generated@@83 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@145 $generated@@371 ($generated@@163 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@375) $generated@@66)) (= (type $generated@@376) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@374 ($generated@@255 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@158) ($generated@@0 ($generated@@83 $generated@@374 $generated@@377))) ($generated@@271 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@83 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@76 $generated@@374 ($generated@@255 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@379) $generated@@66)) (= (type $generated@@380) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@378 ($generated@@260 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@158) ($generated@@0 ($generated@@83 $generated@@378 $generated@@381))) ($generated@@271 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@83 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@76 $generated@@378 ($generated@@260 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@83 ($generated@@298 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@83 ($generated@@298 $generated@@383) $generated@@382)))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@307 (type $generated@@387))))
(let (($generated@@389 ($generated@@306 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@78 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@305 $generated@@158 $generated@@158)) (= (type $generated@@391) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@390) ($generated@@156 ($generated@@342 $generated@@149 $generated@@391)))) (= ($generated@@83 ($generated@@385 $generated@@390) ($generated@@156 ($generated@@342 $generated@@149 $generated@@391))) ($generated@@157 ($generated@@342 $generated@@149 $generated@@391))))))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@325 (type $generated@@395))))
(let (($generated@@397 ($generated@@324 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@78 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@323 $generated@@158 $generated@@158)) (= (type $generated@@399) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@83 ($generated@@321 $generated@@398) ($generated@@156 ($generated@@342 $generated@@149 $generated@@399)))) (= ($generated@@83 ($generated@@393 $generated@@398) ($generated@@156 ($generated@@342 $generated@@149 $generated@@399))) ($generated@@157 ($generated@@342 $generated@@149 $generated@@399))))))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@306 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@305 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@83 ($generated@@350 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@83 ($generated@@385 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@83 ($generated@@350 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@324 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@323 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@83 ($generated@@361 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@83 ($generated@@321 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@83 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@405) $generated@@409))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@405) $generated@@406))
)))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@410 T@U) ($generated@@411 Int) ($generated@@412 Int) ) (!  (=> (and (= (type $generated@@410) $generated@@136) (or ($generated@@238 ($generated@@239 $generated@@411) ($generated@@239 $generated@@412)) (and (not (= 1 $generated@@236)) (and (<= ($generated@@239 0) $generated@@411) (<= ($generated@@239 0) $generated@@412))))) (and (=> (not (= ($generated@@239 $generated@@411) ($generated@@239 0))) (and ($generated@@238 ($generated@@239 (- $generated@@411 1)) ($generated@@239 (+ ($generated@@240 ($generated@@239 $generated@@411) ($generated@@239 $generated@@412)) 1))) ($generated@@238 ($generated@@239 (- $generated@@411 1)) ($generated@@239 ($generated@@240 ($generated@@239 ($generated@@240 ($generated@@239 2) ($generated@@239 $generated@@411))) ($generated@@239 $generated@@412)))))) (= ($generated@@134 ($generated@@237 $generated@@410) ($generated@@239 $generated@@411) ($generated@@239 $generated@@412)) (ite (= ($generated@@239 $generated@@411) ($generated@@239 0)) 0 (+ ($generated@@134 ($generated@@237 $generated@@410) ($generated@@239 (- $generated@@411 1)) ($generated@@239 (+ ($generated@@240 ($generated@@239 $generated@@411) ($generated@@239 $generated@@412)) 1))) ($generated@@134 ($generated@@237 $generated@@410) ($generated@@239 (- $generated@@411 1)) ($generated@@239 ($generated@@240 ($generated@@239 ($generated@@240 ($generated@@239 2) ($generated@@239 $generated@@411))) ($generated@@239 $generated@@412)))))))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@237 $generated@@410) ($generated@@239 $generated@@411) ($generated@@239 $generated@@412)))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@305 $generated@@158 $generated@@158)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@416) $generated@@420))) (and ($generated@@271 ($generated@@83 ($generated@@385 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@271 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@66)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@323 $generated@@158 $generated@@158)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) $generated@@66)) (= (type $generated@@427) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@424) $generated@@428))) (and ($generated@@271 ($generated@@83 ($generated@@393 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@271 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@424) $generated@@428))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@76 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@78 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@325 (type $generated@@431))))
(let (($generated@@433 ($generated@@324 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@323 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@322 $generated@@433 $generated@@432)) (= ($generated@@321 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@321 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@325 (type $generated@@434))))
(let (($generated@@436 ($generated@@324 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@323 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@322 $generated@@436 $generated@@435)) (= ($generated@@361 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@361 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@325 (type $generated@@437))))
(let (($generated@@439 ($generated@@324 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@323 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@322 $generated@@439 $generated@@438)) (= ($generated@@392 $generated@@437) ($generated@@429 $generated@@158))))))
 :pattern ( ($generated@@392 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@307 (type $generated@@440))))
(let (($generated@@442 ($generated@@306 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@305 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@304 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@158) (= (type $generated@@444) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@384 $generated@@440) ($generated@@292 ($generated@@245 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@384 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@325 (type $generated@@445))))
(let (($generated@@447 ($generated@@324 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@323 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@322 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@158) (= (type $generated@@449) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@392 $generated@@445) ($generated@@292 ($generated@@245 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@246 $generated@@450 $generated@@46)) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@342 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@246 $generated@@451 $generated@@47)) (and (= ($generated@@292 ($generated@@342 $generated@@3 $generated@@451)) $generated@@451) ($generated@@145 ($generated@@342 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@158) ($generated@@246 $generated@@452 $generated@@44)) (and (= ($generated@@292 ($generated@@342 $generated@@4 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@342 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 21))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@158) ($generated@@246 $generated@@454 $generated@@45)) (and (= ($generated@@292 ($generated@@342 $generated@@453 $generated@@454)) $generated@@454) ($generated@@145 ($generated@@342 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@66) (= ($generated@@246 ($generated@@292 $generated@@455) $generated@@456) ($generated@@145 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@246 ($generated@@292 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@81 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@78 $generated@@458 $generated@@2)) (<= 0 ($generated@@297 $generated@@457))))
 :pattern ( ($generated@@297 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@286 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@285 $generated@@460)) (<= 0 ($generated@@284 $generated@@459))))
 :pattern ( ($generated@@284 $generated@@459))
)))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@461 T@U) ($generated@@462 Int) ($generated@@463 Int) ) (!  (=> (and (= (type $generated@@461) $generated@@136) (or ($generated@@238 $generated@@462 $generated@@463) (and (not (= 1 $generated@@236)) (and (<= ($generated@@239 0) $generated@@462) (<= ($generated@@239 0) $generated@@463))))) true)
 :pattern ( ($generated@@134 $generated@@461 $generated@@462 $generated@@463))
))))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@413 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@413 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@413 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@413 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@421 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@421 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@421 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@421 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@74 ($generated@@421 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@158) (= (type $generated@@485) $generated@@158)) (= ($generated@@277 ($generated@@245 $generated@@484 $generated@@485)) $generated@@62))
 :pattern ( ($generated@@245 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@148 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@148 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@66) (= (type $generated@@493) $generated@@66)) (= ($generated@@490 ($generated@@148 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@148 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@158) (= (type $generated@@495) $generated@@158)) (= ($generated@@156 ($generated@@245 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@245 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@158) (= (type $generated@@497) $generated@@158)) (= ($generated@@157 ($generated@@245 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@245 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@286 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@285 $generated@@158)) (= (type $generated@@505) $generated@@66)) (= (type $generated@@506) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@284 $generated@@504))) ($generated@@271 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@76 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@77 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@77 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@255 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@255 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@255 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@260 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@260 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@74 ($generated@@260 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@66)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@518 ($generated@@163 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@163 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@66)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@66) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@66) (= ($generated@@74 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
(= ($generated@@342 $generated@@527 ($generated@@292 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@292 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@305 $generated@@158 $generated@@158)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) (= ($generated@@145 $generated@@528 ($generated@@413 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@528) $generated@@531))) (and ($generated@@246 ($generated@@83 ($generated@@385 $generated@@528) $generated@@531) $generated@@530) ($generated@@246 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@528) $generated@@531))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@145 $generated@@528 ($generated@@413 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@323 $generated@@158 $generated@@158)) (= (type $generated@@533) $generated@@66)) (= (type $generated@@534) $generated@@66)) (= ($generated@@145 $generated@@532 ($generated@@421 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@532) $generated@@535))) (and ($generated@@246 ($generated@@83 ($generated@@393 $generated@@532) $generated@@535) $generated@@534) ($generated@@246 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@532) $generated@@535))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@145 $generated@@532 ($generated@@421 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@158)) (< ($generated@@536 $generated@@538) ($generated@@537 ($generated@@245 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@245 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@158) (= (type $generated@@541) $generated@@158)) (< ($generated@@536 $generated@@541) ($generated@@537 ($generated@@245 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@245 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@158) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@66)) ($generated@@246 $generated@@542 ($generated@@413 $generated@@543 $generated@@544))) (and (= ($generated@@292 ($generated@@342 ($generated@@305 $generated@@158 $generated@@158) $generated@@542)) $generated@@542) ($generated@@145 ($generated@@342 ($generated@@305 $generated@@158 $generated@@158) $generated@@542) ($generated@@413 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@246 $generated@@542 ($generated@@413 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@158) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@66)) ($generated@@246 $generated@@545 ($generated@@421 $generated@@546 $generated@@547))) (and (= ($generated@@292 ($generated@@342 ($generated@@323 $generated@@158 $generated@@158) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@342 ($generated@@323 $generated@@158 $generated@@158) $generated@@545) ($generated@@421 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@246 $generated@@545 ($generated@@421 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@66) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) $generated@@158)) ($generated@@246 $generated@@550 ($generated@@148 $generated@@548 $generated@@549))) (and (= ($generated@@292 ($generated@@342 $generated@@149 $generated@@550)) $generated@@550) ($generated@@145 ($generated@@342 $generated@@149 $generated@@550) ($generated@@148 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@246 $generated@@550 ($generated@@148 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@83 ($generated@@429 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@83 ($generated@@429 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@66) (= (type $generated@@556) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@555 $generated@@556)) $generated@@63) (= ($generated@@553 ($generated@@148 $generated@@555 $generated@@556)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 Int) ($generated@@558 Int) ) (! (= ($generated@@240 $generated@@557 $generated@@558) (* $generated@@557 $generated@@558))
 :pattern ( ($generated@@240 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@149) (= ($generated@@536 ($generated@@292 $generated@@559)) ($generated@@537 $generated@@559)))
 :pattern ( ($generated@@536 ($generated@@292 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) ($generated@@246 $generated@@560 ($generated@@77 0))) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@560)) $generated@@560) ($generated@@145 ($generated@@342 ($generated@@78 $generated@@158 $generated@@4) $generated@@560) ($generated@@77 0))))
 :pattern ( ($generated@@246 $generated@@560 ($generated@@77 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@158) (= (type $generated@@562) $generated@@66)) ($generated@@246 $generated@@561 ($generated@@255 $generated@@562))) (and (= ($generated@@292 ($generated@@342 ($generated@@78 $generated@@158 $generated@@4) $generated@@561)) $generated@@561) ($generated@@145 ($generated@@342 ($generated@@78 $generated@@158 $generated@@4) $generated@@561) ($generated@@255 $generated@@562))))
 :pattern ( ($generated@@246 $generated@@561 ($generated@@255 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@158) (= (type $generated@@564) $generated@@66)) ($generated@@246 $generated@@563 ($generated@@260 $generated@@564))) (and (= ($generated@@292 ($generated@@342 ($generated@@78 $generated@@158 $generated@@4) $generated@@563)) $generated@@563) ($generated@@145 ($generated@@342 ($generated@@78 $generated@@158 $generated@@4) $generated@@563) ($generated@@260 $generated@@564))))
 :pattern ( ($generated@@246 $generated@@563 ($generated@@260 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@158) (= (type $generated@@566) $generated@@66)) ($generated@@246 $generated@@565 ($generated@@163 $generated@@566))) (and (= ($generated@@292 ($generated@@342 ($generated@@78 $generated@@158 $generated@@2) $generated@@565)) $generated@@565) ($generated@@145 ($generated@@342 ($generated@@78 $generated@@158 $generated@@2) $generated@@565) ($generated@@163 $generated@@566))))
 :pattern ( ($generated@@246 $generated@@565 ($generated@@163 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@158) (= (type $generated@@568) $generated@@66)) ($generated@@246 $generated@@567 ($generated@@498 $generated@@568))) (and (= ($generated@@292 ($generated@@342 ($generated@@285 $generated@@158) $generated@@567)) $generated@@567) ($generated@@145 ($generated@@342 ($generated@@285 $generated@@158) $generated@@567) ($generated@@498 $generated@@568))))
 :pattern ( ($generated@@246 $generated@@567 ($generated@@498 $generated@@568)))
)))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@553 $generated@@142) $generated@@64))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@569 ($generated@@163 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@569 $generated@@572)))) ($generated@@271 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@83 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@163 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@270 $generated@@575) (and ($generated@@147 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@66) ($generated@@76 $generated@@573 ($generated@@148 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@76 $generated@@573 ($generated@@148 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@271 ($generated@@156 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@271 ($generated@@156 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@149) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@270 $generated@@579) (and ($generated@@147 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@66) ($generated@@76 $generated@@577 ($generated@@148 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@76 $generated@@577 ($generated@@148 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@271 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@271 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@158) (= (type $generated@@582) $generated@@158)) (= ($generated@@245 ($generated@@266 $generated@@581) ($generated@@266 $generated@@582)) ($generated@@266 ($generated@@245 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@245 ($generated@@266 $generated@@581) ($generated@@266 $generated@@582)))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@239 $generated@@583))) ($generated@@266 ($generated@@292 ($generated@@8 $generated@@583))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@239 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@292 ($generated@@266 $generated@@584)) ($generated@@266 ($generated@@292 $generated@@584)))
 :pattern ( ($generated@@292 ($generated@@266 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@286 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@285 $generated@@586)) (= ($generated@@284 $generated@@585) 0)) (= $generated@@585 ($generated@@283 $generated@@586))))
 :pattern ( ($generated@@284 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@78 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@297 ($generated@@84 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@297 $generated@@587) ($generated ($generated@@83 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@297 ($generated@@84 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@2)) ($generated@@76 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@3)) ($generated@@76 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@4)) ($generated@@76 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@453)) ($generated@@76 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@600) $generated@@158)) ($generated@@76 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@76 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@285 $generated@@158)) (= (type $generated@@602) $generated@@66)) (= ($generated@@145 $generated@@601 ($generated@@498 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@284 $generated@@601))) ($generated@@246 ($generated@@499 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@499 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@145 $generated@@601 ($generated@@498 $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@285 $generated@@158)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@284 $generated@@605))) (< ($generated@@537 ($generated@@342 $generated@@149 ($generated@@499 $generated@@605 $generated@@606))) ($generated@@604 $generated@@605))))
 :pattern ( ($generated@@537 ($generated@@342 $generated@@149 ($generated@@499 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@305 $generated@@158 $generated@@158)) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@145 $generated@@607 ($generated@@413 $generated@@608 $generated@@609))) (and (and ($generated@@145 ($generated@@303 $generated@@607) ($generated@@255 $generated@@608)) ($generated@@145 ($generated@@350 $generated@@607) ($generated@@255 $generated@@609))) ($generated@@145 ($generated@@384 $generated@@607) ($generated@@255 ($generated@@148 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@145 $generated@@607 ($generated@@413 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@323 $generated@@158 $generated@@158)) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@66)) ($generated@@145 $generated@@610 ($generated@@421 $generated@@611 $generated@@612))) (and (and ($generated@@145 ($generated@@321 $generated@@610) ($generated@@260 $generated@@611)) ($generated@@145 ($generated@@361 $generated@@610) ($generated@@260 $generated@@612))) ($generated@@145 ($generated@@392 $generated@@610) ($generated@@260 ($generated@@148 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@145 $generated@@610 ($generated@@421 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@145 $generated@@613 $generated@@46))
 :pattern ( ($generated@@145 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@145 $generated@@614 $generated@@47))
 :pattern ( ($generated@@145 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@145 $generated@@615 $generated@@44))
 :pattern ( ($generated@@145 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@453) ($generated@@145 $generated@@616 $generated@@45))
 :pattern ( ($generated@@145 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@158) ($generated@@145 $generated@@617 $generated@@48))
 :pattern ( ($generated@@145 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@620) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@625) ($generated@@170 $generated@@79 $generated@@4))) (= (type $generated@@626) $generated@@79)) (= (type $generated@@627) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@629  (=> (not (= $generated@@618 ($generated@@239 0))) (and (=> (= (ControlFlow 0 4) (- 0 13)) ($generated@@145 ($generated@@8 (- $generated@@618 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- $generated@@618 1)) $generated@@142) (=> (and (= $generated@@619 (- $generated@@618 1)) ($generated@@76 ($generated@@8 $generated@@619) $generated@@142 $generated@@620)) (and (=> (= (ControlFlow 0 4) (- 0 12)) ($generated@@145 ($generated@@8 (+ ($generated@@240 $generated@@618 $generated@@621) 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (+ ($generated@@240 $generated@@618 $generated@@621) 1)) $generated@@142) (=> (and (= $generated@@622 (+ ($generated@@240 $generated@@618 $generated@@621) 1)) ($generated@@76 ($generated@@8 $generated@@622) $generated@@142 $generated@@620)) (and (=> (= (ControlFlow 0 4) (- 0 11)) (or (<= 0 $generated@@618) (= $generated@@619 $generated@@618))) (=> (or (<= 0 $generated@@618) (= $generated@@619 $generated@@618)) (and (=> (= (ControlFlow 0 4) (- 0 10)) (or (or (<= 0 $generated@@621) (< $generated@@619 $generated@@618)) (= $generated@@622 $generated@@621))) (=> (or (or (<= 0 $generated@@621) (< $generated@@619 $generated@@618)) (= $generated@@622 $generated@@621)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (or (< $generated@@619 $generated@@618) (and (= $generated@@619 $generated@@618) (< $generated@@622 $generated@@621)))) (=> (or (< $generated@@619 $generated@@618) (and (= $generated@@619 $generated@@618) (< $generated@@622 $generated@@621))) (=> ($generated@@238 (- $generated@@618 1) (+ ($generated@@240 $generated@@618 $generated@@621) 1)) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@145 ($generated@@8 (- $generated@@618 1)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- $generated@@618 1)) $generated@@142) (=> (and (= $generated@@623 (- $generated@@618 1)) ($generated@@76 ($generated@@8 $generated@@623) $generated@@142 $generated@@620)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@145 ($generated@@8 ($generated@@240 ($generated@@240 ($generated@@239 2) $generated@@618) $generated@@621)) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@240 ($generated@@240 ($generated@@239 2) $generated@@618) $generated@@621)) $generated@@142) (=> (and (= $generated@@624 ($generated@@240 ($generated@@240 ($generated@@239 2) $generated@@618) $generated@@621)) ($generated@@76 ($generated@@8 $generated@@624) $generated@@142 $generated@@620)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@618) (= $generated@@623 $generated@@618))) (=> (or (<= 0 $generated@@618) (= $generated@@623 $generated@@618)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (<= 0 $generated@@621) (< $generated@@623 $generated@@618)) (= $generated@@624 $generated@@621))) (=> (or (or (<= 0 $generated@@621) (< $generated@@623 $generated@@618)) (= $generated@@624 $generated@@621)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@623 $generated@@618) (and (= $generated@@623 $generated@@618) (< $generated@@624 $generated@@621))))))))))))))))))))))))))))))
(let (($generated@@630 true))
(let (($generated@@631  (=> (= $generated@@625 ($generated@@224 $generated@@626 $generated@@620 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 2) $generated@@630) (=> (= (ControlFlow 0 14) 4) $generated@@629)))))
(let (($generated@@632 true))
(let (($generated@@633  (=> (= $generated@@627 ($generated@@169 $generated@@626 $generated@@620 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@632) (=> (= (ControlFlow 0 15) 14) $generated@@631)))))
(let (($generated@@634  (=> (and ($generated@@270 $generated@@620) ($generated@@628 $generated@@620)) (=> (and (and (<= ($generated@@239 0) $generated@@618) (<= ($generated@@239 0) $generated@@621)) (and (= 1 $generated@@236) (= (ControlFlow 0 16) 15))) $generated@@633))))
$generated@@634)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U Int Int) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@226 (Int Int) Bool)
(declare-fun $generated@@227 (Int) Int)
(declare-fun $generated@@228 (Int Int) Int)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@138)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@138))
))) (= (type $generated@@137) $generated@@136)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (= (type $generated@@139) $generated@@136) (= ($generated@@134 $generated@@139 $generated@@140 $generated@@141) ($generated@@134 $generated@@137 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@225 $generated@@229)) $generated@@136)
 :pattern ( ($generated@@225 $generated@@229))
)))
(assert  (=> (<= 1 $generated@@224) (forall (($generated@@230 T@U) ($generated@@231 Int) ($generated@@232 Int) ) (!  (=> (and (= (type $generated@@230) $generated@@136) (or ($generated@@226 $generated@@231 $generated@@232) (and (not (= 1 $generated@@224)) (and (<= ($generated@@227 0) $generated@@231) (<= ($generated@@227 0) $generated@@232))))) (and (=> (not (= $generated@@231 ($generated@@227 0))) (and ($generated@@226 (- $generated@@231 1) (+ ($generated@@228 $generated@@231 $generated@@232) 1)) ($generated@@226 (- $generated@@231 1) ($generated@@228 ($generated@@228 ($generated@@227 2) $generated@@231) $generated@@232)))) (= ($generated@@134 ($generated@@225 $generated@@230) $generated@@231 $generated@@232) (ite (= $generated@@231 ($generated@@227 0)) 0 (+ ($generated@@134 $generated@@230 (- $generated@@231 1) (+ ($generated@@228 $generated@@231 $generated@@232) 1)) ($generated@@134 $generated@@230 (- $generated@@231 1) ($generated@@228 ($generated@@228 ($generated@@227 2) $generated@@231) $generated@@232)))))))
 :pattern ( ($generated@@134 ($generated@@225 $generated@@230) $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@149)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@66) (= (type $generated@@238) $generated@@66)) (= (type $generated@@239) $generated@@158)) (= (type $generated@@240) $generated@@158)) (= ($generated@@145 ($generated@@233 $generated@@239 $generated@@240) ($generated@@148 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@145 ($generated@@233 $generated@@239 $generated@@240) ($generated@@148 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@149) (= (type $generated@@242) $generated@@149)) (= ($generated@@155 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@155 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@145 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@158) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@145 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@227 $generated@@253) $generated@@253)
 :pattern ( ($generated@@227 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@158)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@258 $generated@@264)) (= ($generated@@76 ($generated@@233 $generated@@262 $generated@@263) ($generated@@148 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@262 $generated@@263) ($generated@@148 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@149) (= ($generated@@147 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@149) ($generated@@147 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@158) (= (type $generated@@270) $generated@@158)) (= $generated@@268 ($generated@@233 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 18)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@2) (= ($generated@@145 $generated@@279 $generated@@142) (<= ($generated@@227 0) ($generated $generated@@279))))
 :pattern ( ($generated@@145 $generated@@279 $generated@@142))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@158)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 19)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 20)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@81 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@78 $generated@@328 $generated@@2)) (= ($generated@@164 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@83 $generated@@327 $generated@@329))) (<= ($generated ($generated@@83 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@164 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@158) ($generated@@234 $generated@@333 $generated@@142)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@333)) $generated@@333) ($generated@@145 ($generated@@330 $generated@@2 $generated@@333) $generated@@142)))
 :pattern ( ($generated@@234 $generated@@333 $generated@@142))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@78 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 Int) ($generated@@358 Int) ) (!  (=> (= (type $generated@@356) $generated@@136) (= ($generated@@134 ($generated@@225 $generated@@356) $generated@@357 $generated@@358) ($generated@@134 $generated@@356 $generated@@357 $generated@@358)))
 :pattern ( ($generated@@134 ($generated@@225 $generated@@356) $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@360) $generated@@66)) (= ($generated@@145 $generated@@359 ($generated@@163 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@359 $generated@@361)))) ($generated@@234 $generated@@361 $generated@@360))
 :pattern ( ($generated@@83 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@145 $generated@@359 ($generated@@163 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@243 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@158) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@259 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@243 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@248 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@158) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@259 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@248 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@83 ($generated@@286 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@295 (type $generated@@375))))
(let (($generated@@377 ($generated@@294 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@379) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@378) ($generated@@156 ($generated@@330 $generated@@149 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@156 ($generated@@330 $generated@@149 $generated@@379))) ($generated@@157 ($generated@@330 $generated@@149 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@313 (type $generated@@383))))
(let (($generated@@385 ($generated@@312 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@386) ($generated@@156 ($generated@@330 $generated@@149 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@330 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@330 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@294 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@293 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@338 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@312 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@311 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@349 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@393) $generated@@394))
)))
(assert  (=> (<= 1 $generated@@224) (forall (($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 Int) ) (!  (=> (and (= (type $generated@@398) $generated@@136) (or ($generated@@226 ($generated@@227 $generated@@399) ($generated@@227 $generated@@400)) (and (not (= 1 $generated@@224)) (and (<= ($generated@@227 0) $generated@@399) (<= ($generated@@227 0) $generated@@400))))) (and (=> (not (= ($generated@@227 $generated@@399) ($generated@@227 0))) (and ($generated@@226 ($generated@@227 (- $generated@@399 1)) ($generated@@227 (+ ($generated@@228 ($generated@@227 $generated@@399) ($generated@@227 $generated@@400)) 1))) ($generated@@226 ($generated@@227 (- $generated@@399 1)) ($generated@@227 ($generated@@228 ($generated@@227 ($generated@@228 ($generated@@227 2) ($generated@@227 $generated@@399))) ($generated@@227 $generated@@400)))))) (= ($generated@@134 ($generated@@225 $generated@@398) ($generated@@227 $generated@@399) ($generated@@227 $generated@@400)) (ite (= ($generated@@227 $generated@@399) ($generated@@227 0)) 0 (+ ($generated@@134 ($generated@@225 $generated@@398) ($generated@@227 (- $generated@@399 1)) ($generated@@227 (+ ($generated@@228 ($generated@@227 $generated@@399) ($generated@@227 $generated@@400)) 1))) ($generated@@134 ($generated@@225 $generated@@398) ($generated@@227 (- $generated@@399 1)) ($generated@@227 ($generated@@228 ($generated@@227 ($generated@@228 ($generated@@227 2) ($generated@@227 $generated@@399))) ($generated@@227 $generated@@400)))))))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@225 $generated@@398) ($generated@@227 $generated@@399) ($generated@@227 $generated@@400)))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@404) $generated@@408))) (and ($generated@@259 ($generated@@83 ($generated@@373 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@259 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@66)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@413) $generated@@66)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@412) $generated@@416))) (and ($generated@@259 ($generated@@83 ($generated@@381 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@259 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@412) $generated@@416))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@78 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@313 (type $generated@@419))))
(let (($generated@@421 ($generated@@312 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@311 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@310 $generated@@421 $generated@@420)) (= ($generated@@309 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@309 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@313 (type $generated@@422))))
(let (($generated@@424 ($generated@@312 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@311 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@310 $generated@@424 $generated@@423)) (= ($generated@@349 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@349 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@313 (type $generated@@425))))
(let (($generated@@427 ($generated@@312 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@311 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@310 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@158))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@295 (type $generated@@428))))
(let (($generated@@430 ($generated@@294 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@293 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@292 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@158) (= (type $generated@@432) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@428) ($generated@@280 ($generated@@233 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@313 (type $generated@@433))))
(let (($generated@@435 ($generated@@312 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@311 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@310 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@158) (= (type $generated@@437) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@433) ($generated@@280 ($generated@@233 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@158) ($generated@@234 $generated@@438 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@438)) $generated@@438) ($generated@@145 ($generated@@330 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@158) ($generated@@234 $generated@@439 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@439)) $generated@@439) ($generated@@145 ($generated@@330 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@234 $generated@@440 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@440)) $generated@@440) ($generated@@145 ($generated@@330 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 21))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@158) ($generated@@234 $generated@@442 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@441 $generated@@442)) $generated@@442) ($generated@@145 ($generated@@330 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@66) (= ($generated@@234 ($generated@@280 $generated@@443) $generated@@444) ($generated@@145 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@234 ($generated@@280 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@81 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@78 $generated@@446 $generated@@2)) (<= 0 ($generated@@285 $generated@@445))))
 :pattern ( ($generated@@285 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@274 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@273 $generated@@448)) (<= 0 ($generated@@272 $generated@@447))))
 :pattern ( ($generated@@272 $generated@@447))
)))
(assert  (=> (<= 1 $generated@@224) (forall (($generated@@449 T@U) ($generated@@450 Int) ($generated@@451 Int) ) (!  (=> (and (= (type $generated@@449) $generated@@136) (or ($generated@@226 $generated@@450 $generated@@451) (and (not (= 1 $generated@@224)) (and (<= ($generated@@227 0) $generated@@450) (<= ($generated@@227 0) $generated@@451))))) true)
 :pattern ( ($generated@@134 $generated@@449 $generated@@450 $generated@@451))
))))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@401 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@401 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@401 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@401 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@409 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@409 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@74 ($generated@@409 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@158) (= (type $generated@@473) $generated@@158)) (= ($generated@@265 ($generated@@233 $generated@@472 $generated@@473)) $generated@@62))
 :pattern ( ($generated@@233 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@148 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@148 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@148 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@148 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@158) (= (type $generated@@483) $generated@@158)) (= ($generated@@156 ($generated@@233 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@233 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@158) (= (type $generated@@485) $generated@@158)) (= ($generated@@157 ($generated@@233 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@233 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@274 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@273 $generated@@158)) (= (type $generated@@493) $generated@@66)) (= (type $generated@@494) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@272 $generated@@492))) ($generated@@259 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@76 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@77 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@77 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@243 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@243 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@248 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@248 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@163 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@163 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@330 $generated@@515 ($generated@@280 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@280 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@517) $generated@@66)) (= (type $generated@@518) $generated@@66)) (= ($generated@@145 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@516) $generated@@519))) (and ($generated@@234 ($generated@@83 ($generated@@373 $generated@@516) $generated@@519) $generated@@518) ($generated@@234 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@516) $generated@@519))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@145 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) (= ($generated@@145 $generated@@520 ($generated@@409 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@520) $generated@@523))) (and ($generated@@234 ($generated@@83 ($generated@@381 $generated@@520) $generated@@523) $generated@@522) ($generated@@234 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@520) $generated@@523))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@145 $generated@@520 ($generated@@409 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@158) (= (type $generated@@527) $generated@@158)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@233 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@233 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@158) (= (type $generated@@529) $generated@@158)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@233 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@233 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@158) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@66)) ($generated@@234 $generated@@530 ($generated@@401 $generated@@531 $generated@@532))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@158 $generated@@158) $generated@@530)) $generated@@530) ($generated@@145 ($generated@@330 ($generated@@293 $generated@@158 $generated@@158) $generated@@530) ($generated@@401 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@234 $generated@@530 ($generated@@401 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) ($generated@@234 $generated@@533 ($generated@@409 $generated@@534 $generated@@535))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@158 $generated@@158) $generated@@533)) $generated@@533) ($generated@@145 ($generated@@330 ($generated@@311 $generated@@158 $generated@@158) $generated@@533) ($generated@@409 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@234 $generated@@533 ($generated@@409 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@158)) ($generated@@234 $generated@@538 ($generated@@148 $generated@@536 $generated@@537))) (and (= ($generated@@280 ($generated@@330 $generated@@149 $generated@@538)) $generated@@538) ($generated@@145 ($generated@@330 $generated@@149 $generated@@538) ($generated@@148 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@234 $generated@@538 ($generated@@148 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@83 ($generated@@417 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@83 ($generated@@417 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@543 $generated@@544)) $generated@@63) (= ($generated@@541 ($generated@@148 $generated@@543 $generated@@544)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 Int) ($generated@@546 Int) ) (! (= ($generated@@228 $generated@@545 $generated@@546) (* $generated@@545 $generated@@546))
 :pattern ( ($generated@@228 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@149) (= ($generated@@524 ($generated@@280 $generated@@547)) ($generated@@525 $generated@@547)))
 :pattern ( ($generated@@524 ($generated@@280 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@158) ($generated@@234 $generated@@548 ($generated@@77 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@548) ($generated@@77 0))))
 :pattern ( ($generated@@234 $generated@@548 ($generated@@77 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@66)) ($generated@@234 $generated@@549 ($generated@@243 $generated@@550))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@549) ($generated@@243 $generated@@550))))
 :pattern ( ($generated@@234 $generated@@549 ($generated@@243 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@66)) ($generated@@234 $generated@@551 ($generated@@248 $generated@@552))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@551) ($generated@@248 $generated@@552))))
 :pattern ( ($generated@@234 $generated@@551 ($generated@@248 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@158) (= (type $generated@@554) $generated@@66)) ($generated@@234 $generated@@553 ($generated@@163 $generated@@554))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@2) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@2) $generated@@553) ($generated@@163 $generated@@554))))
 :pattern ( ($generated@@234 $generated@@553 ($generated@@163 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@66)) ($generated@@234 $generated@@555 ($generated@@486 $generated@@556))) (and (= ($generated@@280 ($generated@@330 ($generated@@273 $generated@@158) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@330 ($generated@@273 $generated@@158) $generated@@555) ($generated@@486 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@555 ($generated@@486 $generated@@556)))
)))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@541 $generated@@142) $generated@@64))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@558) $generated@@66)) (= (type $generated@@559) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@557 ($generated@@163 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@557 $generated@@560)))) ($generated@@259 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@83 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@76 $generated@@557 ($generated@@163 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@563) (and ($generated@@147 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@66) ($generated@@76 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@76 $generated@@561 ($generated@@148 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@259 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@259 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@567) (and ($generated@@147 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@66) ($generated@@76 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@148 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@259 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@259 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@158) (= (type $generated@@570) $generated@@158)) (= ($generated@@233 ($generated@@254 $generated@@569) ($generated@@254 $generated@@570)) ($generated@@254 ($generated@@233 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@233 ($generated@@254 $generated@@569) ($generated@@254 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@227 $generated@@571))) ($generated@@254 ($generated@@280 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@227 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@280 ($generated@@254 $generated@@572)) ($generated@@254 ($generated@@280 $generated@@572)))
 :pattern ( ($generated@@280 ($generated@@254 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@274 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@273 $generated@@574)) (= ($generated@@272 $generated@@573) 0)) (= $generated@@573 ($generated@@271 $generated@@574))))
 :pattern ( ($generated@@272 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@78 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@285 ($generated@@84 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@285 $generated@@575) ($generated ($generated@@83 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@2)) ($generated@@76 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@582) $generated@@3)) ($generated@@76 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@76 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@4)) ($generated@@76 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@441)) ($generated@@76 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@158)) ($generated@@76 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@273 $generated@@158)) (= (type $generated@@590) $generated@@66)) (= ($generated@@145 $generated@@589 ($generated@@486 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@272 $generated@@589))) ($generated@@234 ($generated@@487 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@487 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@145 $generated@@589 ($generated@@486 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@273 $generated@@158)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@272 $generated@@593))) (< ($generated@@525 ($generated@@330 $generated@@149 ($generated@@487 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@525 ($generated@@330 $generated@@149 ($generated@@487 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) $generated@@66)) ($generated@@145 $generated@@595 ($generated@@401 $generated@@596 $generated@@597))) (and (and ($generated@@145 ($generated@@291 $generated@@595) ($generated@@243 $generated@@596)) ($generated@@145 ($generated@@338 $generated@@595) ($generated@@243 $generated@@597))) ($generated@@145 ($generated@@372 $generated@@595) ($generated@@243 ($generated@@148 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@145 $generated@@595 ($generated@@401 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) $generated@@66)) ($generated@@145 $generated@@598 ($generated@@409 $generated@@599 $generated@@600))) (and (and ($generated@@145 ($generated@@309 $generated@@598) ($generated@@248 $generated@@599)) ($generated@@145 ($generated@@349 $generated@@598) ($generated@@248 $generated@@600))) ($generated@@145 ($generated@@380 $generated@@598) ($generated@@248 ($generated@@148 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@409 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@145 $generated@@601 $generated@@46))
 :pattern ( ($generated@@145 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@145 $generated@@602 $generated@@47))
 :pattern ( ($generated@@145 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@145 $generated@@603 $generated@@44))
 :pattern ( ($generated@@145 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@441) ($generated@@145 $generated@@604 $generated@@45))
 :pattern ( ($generated@@145 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@158) ($generated@@145 $generated@@605 $generated@@48))
 :pattern ( ($generated@@145 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 (T@U) Bool)
(assert  (and (and (= (type $generated@@606) ($generated@@170 $generated@@79 $generated@@4)) (= (type $generated@@607) $generated@@79)) (= (type $generated@@608) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 10000000)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@612  (=> (= $generated@@606 ($generated@@169 $generated@@607 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@145 ($generated@@8 ($generated@@227 10)) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@227 10)) $generated@@142) (=> (and (= $generated@@609 ($generated@@227 10)) ($generated@@76 ($generated@@8 $generated@@609) $generated@@142 $generated@@608)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@145 ($generated@@8 ($generated@@227 5)) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@227 5)) $generated@@142) (=> (= $generated@@610 ($generated@@227 5)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@610) $generated@@142 $generated@@608) ($generated@@226 ($generated@@227 10) ($generated@@227 5))) (and ($generated@@226 ($generated@@227 10) ($generated@@227 5)) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@227 ($generated@@134 ($generated@@225 ($generated@@225 $generated@@137)) ($generated@@227 10) ($generated@@227 5))) ($generated@@227 0))))))))))))
(let (($generated@@613  (=> (and (and ($generated@@258 $generated@@608) ($generated@@611 $generated@@608)) (and (= 2 $generated@@224) (= (ControlFlow 0 5) 2))) $generated@@612)))
$generated@@613)))
))
(check-sat)
(get-info :reason-unknown)
(pop 1)
; Out of resource
(get-info :rlimit)
