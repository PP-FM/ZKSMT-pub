(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (Int) Int)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@T T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@360 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) Bool)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@528 (T@U T@U T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@136) ($generated@@135 $generated@@138)) ($generated@@137 $generated@@138))
 :pattern ( ($generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@67)) (= (type $generated@@147) $generated@@136)) ($generated@@139 $generated@@147 ($generated@@142 $generated@@145 $generated@@146))) ($generated@@141 $generated@@147))
 :pattern ( ($generated@@141 $generated@@147) ($generated@@139 $generated@@147 ($generated@@142 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@136) (= (type $generated@@155) $generated@@136)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@67)) ($generated@@139 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@139 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@80 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@70 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@80) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@212) ($generated@@69 $generated@@4))) (= (type $generated@@214) $generated@@80)) (= (type $generated@@215) ($generated@@69 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (= (type $generated@@217) $generated@@67))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@136) ($generated@@139 $generated@@218 $generated@@217)) ($generated@@137 $generated@@218))
 :pattern ( ($generated@@137 $generated@@218) ($generated@@139 $generated@@218 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@136)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@67) (= (type $generated@@224) $generated@@67)) (= (type $generated@@225) $generated@@151)) (= (type $generated@@226) $generated@@151)) (= ($generated@@139 ($generated@@219 $generated@@225 $generated@@226) ($generated@@142 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@139 ($generated@@219 $generated@@225 $generated@@226) ($generated@@142 $generated@@223 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@136) (= (type $generated@@228) $generated@@136)) (= ($generated@@148 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@148 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@136) (= (type $generated@@231) $generated@@136)) (= ($generated@@229 $generated@@230 $generated@@231) (= $generated@@230 $generated@@231)))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@67)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@235) $generated@@67)) (= ($generated@@139 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@151) ($generated@@0 ($generated@@84 $generated@@234 $generated@@236))) ($generated@@220 $generated@@236 $generated@@235))
 :pattern ( ($generated@@84 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@139 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@67)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@240) $generated@@67)) (= ($generated@@139 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@151) ($generated@@0 ($generated@@84 $generated@@239 $generated@@241))) ($generated@@220 $generated@@241 $generated@@240))
 :pattern ( ($generated@@84 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@139 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@242 $generated@@243) $generated@@243)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@151)) (= (type $generated@@253) $generated@@151)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@219 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@219 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@71)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@136) (= ($generated@@141 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@137 $generated@@258) (= ($generated@@255 $generated@@258) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@141 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@151) (= (type $generated@@261) $generated@@151)) (= $generated@@259 ($generated@@219 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@141 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert  (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@270 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@270 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@270 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@270 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (= (type ($generated@@271 $generated@@280)) $generated@@136)
 :pattern ( ($generated@@271 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@136) ($generated@@137 $generated@@281)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) ($generated@@270 $generated@@151 $generated@@151)) (= $generated@@281 ($generated@@271 $generated@@282)))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@137 $generated@@281))
)))
(assert  (and (and (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@272 (type $generated@@287))))
(= (type ($generated@@283 $generated@@287)) ($generated@@79 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@287))
)) (forall (($generated@@289 T@T) ($generated@@290 T@U) ) (! (= (type ($generated@@285 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@285 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@273 (type $generated@@291))))
(let (($generated@@293 ($generated@@272 (type $generated@@291))))
(= (type ($generated@@286 $generated@@291)) ($generated@@79 $generated@@293 $generated@@292))))
 :pattern ( ($generated@@286 $generated@@291))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@295) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@294) $generated@@295))) (< ($generated@@284 ($generated@@285 $generated@@136 ($generated@@84 ($generated@@286 $generated@@294) $generated@@295))) ($generated@@284 ($generated@@271 $generated@@294))))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@294) $generated@@295) ($generated@@271 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@151)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@77 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@249 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@79 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@82 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@79 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@84 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@307 $generated@@308 $generated@@309)) ($generated@@270 $generated@@308 $generated@@309))
 :pattern ( ($generated@@307 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@307 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@283 ($generated@@307 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@79 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@84 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@84 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@82 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@79 $generated@@332 $generated@@2)) (= ($generated@@157 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@84 $generated@@331 $generated@@333))) (<= ($generated ($generated@@84 $generated@@331 $generated@@333)) ($generated@@301 $generated@@331))))
 :pattern ( ($generated@@84 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@157 $generated@@331))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@151) ($generated@@220 $generated@@334 $generated@@217)) (and (= ($generated@@296 ($generated@@285 $generated@@136 $generated@@334)) $generated@@334) ($generated@@139 ($generated@@285 $generated@@136 $generated@@334) $generated@@217)))
 :pattern ( ($generated@@220 $generated@@334 $generated@@217))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@273 (type $generated@@335))))
(let (($generated@@337 ($generated@@272 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@270 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@307 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@283 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@273 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@79 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@273 (type $generated@@342))))
(let (($generated@@344 ($generated@@272 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@270 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@307 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@317 (type $generated@@346))))
(let (($generated@@348 ($generated@@316 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@315 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@314 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@313 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@317 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@79 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@317 (type $generated@@353))))
(let (($generated@@355 ($generated@@316 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@315 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@314 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@84 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@358) $generated@@67)) (= ($generated@@139 $generated@@357 ($generated@@156 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@151) (< 0 ($generated ($generated@@84 $generated@@357 $generated@@359)))) ($generated@@220 $generated@@359 $generated@@358))
 :pattern ( ($generated@@84 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@139 $generated@@357 ($generated@@156 $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@67)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@364)) (= ($generated@@77 ($generated@@271 $generated@@363) $generated@@217 $generated@@364) ($generated@@77 $generated@@363 ($generated@@360 $generated@@46 $generated@@44) $generated@@364)))
 :pattern ( ($generated@@77 ($generated@@271 $generated@@363) $generated@@217 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@366) $generated@@67)) (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@365 ($generated@@232 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@151) ($generated@@0 ($generated@@84 $generated@@365 $generated@@368))) ($generated@@249 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@84 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@77 $generated@@365 ($generated@@232 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@370) $generated@@67)) (= (type $generated@@371) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@369 ($generated@@237 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@151) ($generated@@0 ($generated@@84 $generated@@369 $generated@@372))) ($generated@@249 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@84 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@77 $generated@@369 ($generated@@237 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@84 ($generated@@302 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@84 ($generated@@302 $generated@@374) $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@151 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@378) $generated@@151)) (= ($generated@@0 ($generated@@84 ($generated@@375 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@84 ($generated@@283 $generated@@377) ($generated@@149 ($generated@@285 $generated@@136 $generated@@378)))) (= ($generated@@84 ($generated@@286 $generated@@377) ($generated@@149 ($generated@@285 $generated@@136 $generated@@378))) ($generated@@150 ($generated@@285 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@79 $generated@@151 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@317 (type $generated@@382))))
(let (($generated@@384 ($generated@@316 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@386) $generated@@151)) (= ($generated@@0 ($generated@@84 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@84 ($generated@@313 $generated@@385) ($generated@@149 ($generated@@285 $generated@@136 $generated@@386)))) (= ($generated@@84 ($generated@@380 $generated@@385) ($generated@@149 ($generated@@285 $generated@@136 $generated@@386))) ($generated@@150 ($generated@@285 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@272 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@270 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@84 ($generated@@339 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@84 ($generated@@283 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@84 ($generated@@286 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@387) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@316 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@315 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@84 ($generated@@350 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@84 ($generated@@313 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@84 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@392) $generated@@396))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@84 ($generated@@350 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@360 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@397) $generated@@401))) (and ($generated@@249 ($generated@@84 ($generated@@286 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@249 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@360 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@405) $generated@@409))) (and ($generated@@249 ($generated@@84 ($generated@@380 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@249 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@273 (type $generated@@411))))
(let (($generated@@414 ($generated@@272 (type $generated@@411))))
 (=> (and (and (= (type $generated@@411) ($generated@@270 $generated@@414 $generated@@413)) (= (type $generated@@412) ($generated@@270 $generated@@414 $generated@@413))) ($generated@@410 $generated@@411 $generated@@412)) (= $generated@@411 $generated@@412))))
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@79 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@317 (type $generated@@417))))
(let (($generated@@419 ($generated@@316 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@315 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@314 $generated@@419 $generated@@418)) (= ($generated@@313 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@313 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@317 (type $generated@@420))))
(let (($generated@@422 ($generated@@316 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@315 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@314 $generated@@422 $generated@@421)) (= ($generated@@350 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@350 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@317 (type $generated@@423))))
(let (($generated@@425 ($generated@@316 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@315 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@314 $generated@@425 $generated@@424)) (= ($generated@@379 $generated@@423) ($generated@@415 $generated@@151))))))
 :pattern ( ($generated@@379 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@273 (type $generated@@426))))
(let (($generated@@428 ($generated@@272 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@270 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@307 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@151) (= (type $generated@@430) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@375 $generated@@426) ($generated@@296 ($generated@@219 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@375 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@317 (type $generated@@431))))
(let (($generated@@433 ($generated@@316 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@315 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@314 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@151) (= (type $generated@@435) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@379 $generated@@431) ($generated@@296 ($generated@@219 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@379 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@151) ($generated@@220 $generated@@436 $generated@@46)) (and (= ($generated@@296 ($generated@@285 $generated@@2 $generated@@436)) $generated@@436) ($generated@@139 ($generated@@285 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@151) ($generated@@220 $generated@@437 $generated@@47)) (and (= ($generated@@296 ($generated@@285 $generated@@3 $generated@@437)) $generated@@437) ($generated@@139 ($generated@@285 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@151) ($generated@@220 $generated@@438 $generated@@44)) (and (= ($generated@@296 ($generated@@285 $generated@@4 $generated@@438)) $generated@@438) ($generated@@139 ($generated@@285 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@151) ($generated@@220 $generated@@440 $generated@@45)) (and (= ($generated@@296 ($generated@@285 $generated@@439 $generated@@440)) $generated@@440) ($generated@@139 ($generated@@285 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@67) (= ($generated@@220 ($generated@@296 $generated@@441) $generated@@442) ($generated@@139 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@220 ($generated@@296 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@82 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@79 $generated@@444 $generated@@2)) (<= 0 ($generated@@301 $generated@@443))))
 :pattern ( ($generated@@301 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@265 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@264 $generated@@446)) (<= 0 ($generated@@263 $generated@@445))))
 :pattern ( ($generated@@263 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@447 ($generated@@360 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@360 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@360 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@360 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@75 ($generated@@360 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@360 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@402 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@402 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@402 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@151) (= (type $generated@@468) $generated@@151)) (= ($generated@@255 ($generated@@219 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@219 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@142 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@142 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@142 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@142 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) (= ($generated@@149 ($generated@@219 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@219 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@151) (= (type $generated@@480) $generated@@151)) (= ($generated@@150 ($generated@@219 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@219 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@265 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@264 $generated@@151)) (= (type $generated@@488) $generated@@67)) (= (type $generated@@489) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@263 $generated@@487))) ($generated@@249 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@78 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@78 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@232 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@232 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@75 ($generated@@232 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@232 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@237 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@237 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@237 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@237 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@156 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@156 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@156 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) ($generated@@270 $generated@@151 $generated@@151)) (= ($generated@@255 ($generated@@271 $generated@@509)) $generated@@63))
 :pattern ( ($generated@@271 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) ($generated@@270 $generated@@151 $generated@@151))
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) ($generated@@270 $generated@@151 $generated@@151)) (= ($generated@@510 ($generated@@271 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@271 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@285 $generated@@514 ($generated@@296 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@296 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@139 $generated@@515 ($generated@@360 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@515) $generated@@518))) (and ($generated@@220 ($generated@@84 ($generated@@286 $generated@@515) $generated@@518) $generated@@517) ($generated@@220 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@515) $generated@@518))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@139 $generated@@515 ($generated@@360 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@139 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@519) $generated@@522))) (and ($generated@@220 ($generated@@84 ($generated@@380 $generated@@519) $generated@@522) $generated@@521) ($generated@@220 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@139 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@151) (= (type $generated@@525) $generated@@151)) (< ($generated@@523 $generated@@524) ($generated@@284 ($generated@@219 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@219 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@151) (= (type $generated@@527) $generated@@151)) (< ($generated@@523 $generated@@527) ($generated@@284 ($generated@@219 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@219 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(let (($generated@@533 (type $generated@@530)))
(= (type ($generated@@528 $generated@@529 $generated@@530 $generated@@531)) ($generated@@270 $generated@@533 $generated@@532))))
 :pattern ( ($generated@@528 $generated@@529 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(let (($generated@@539 (type $generated@@535)))
 (=> (and (= (type $generated@@534) ($generated@@270 $generated@@539 $generated@@538)) (= (type $generated@@536) $generated@@539)) (and (=> (= $generated@@536 $generated@@535) (and ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536)) (= ($generated@@84 ($generated@@286 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536) $generated@@537))) (=> (not (= $generated@@536 $generated@@535)) (and (= ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536)) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@534) $generated@@536))) (= ($generated@@84 ($generated@@286 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536) ($generated@@84 ($generated@@286 $generated@@534) $generated@@536))))))))
 :pattern ( ($generated@@84 ($generated@@283 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@84 ($generated@@286 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@136) (= (type $generated@@541) $generated@@136)) true) (= ($generated@@229 $generated@@540 $generated@@541) ($generated@@410 ($generated@@510 $generated@@540) ($generated@@510 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@151) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) ($generated@@220 $generated@@542 ($generated@@360 $generated@@543 $generated@@544))) (and (= ($generated@@296 ($generated@@285 ($generated@@270 $generated@@151 $generated@@151) $generated@@542)) $generated@@542) ($generated@@139 ($generated@@285 ($generated@@270 $generated@@151 $generated@@151) $generated@@542) ($generated@@360 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@220 $generated@@542 ($generated@@360 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@151) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) $generated@@67)) ($generated@@220 $generated@@545 ($generated@@402 $generated@@546 $generated@@547))) (and (= ($generated@@296 ($generated@@285 ($generated@@315 $generated@@151 $generated@@151) $generated@@545)) $generated@@545) ($generated@@139 ($generated@@285 ($generated@@315 $generated@@151 $generated@@151) $generated@@545) ($generated@@402 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@220 $generated@@545 ($generated@@402 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@67) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@151)) ($generated@@220 $generated@@550 ($generated@@142 $generated@@548 $generated@@549))) (and (= ($generated@@296 ($generated@@285 $generated@@136 $generated@@550)) $generated@@550) ($generated@@139 ($generated@@285 $generated@@136 $generated@@550) ($generated@@142 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@220 $generated@@550 ($generated@@142 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@84 ($generated@@415 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@84 ($generated@@415 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@72)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@67) (= (type $generated@@556) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@142 $generated@@555 $generated@@556)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@273 (type $generated@@557))))
(let (($generated@@560 ($generated@@272 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@270 $generated@@560 $generated@@559)) (= (type $generated@@558) ($generated@@270 $generated@@560 $generated@@559))) (= ($generated@@410 $generated@@557 $generated@@558)  (and (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@560) (= ($generated@@0 ($generated@@84 ($generated@@283 $generated@@557) $generated@@561)) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@558) $generated@@561))))
 :no-pattern (type $generated@@561)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@560) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@557) $generated@@562))) (= ($generated@@84 ($generated@@286 $generated@@557) $generated@@562) ($generated@@84 ($generated@@286 $generated@@558) $generated@@562)))
 :no-pattern (type $generated@@562)
 :no-pattern ($generated $generated@@562)
 :no-pattern ($generated@@0 $generated@@562)
)))))))
 :pattern ( ($generated@@410 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@564) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@563) ($generated@@296 $generated@@564)))) (< ($generated@@284 $generated@@564) ($generated@@284 ($generated@@271 $generated@@563))))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@563) ($generated@@296 $generated@@564)) ($generated@@271 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@136) (= ($generated@@523 ($generated@@296 $generated@@565)) ($generated@@284 $generated@@565)))
 :pattern ( ($generated@@523 ($generated@@296 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@151) ($generated@@220 $generated@@566 ($generated@@78 0))) (and (= ($generated@@296 ($generated@@285 $generated@@2 $generated@@566)) $generated@@566) ($generated@@139 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@566) ($generated@@78 0))))
 :pattern ( ($generated@@220 $generated@@566 ($generated@@78 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@151) (= (type $generated@@568) $generated@@67)) ($generated@@220 $generated@@567 ($generated@@232 $generated@@568))) (and (= ($generated@@296 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@567) ($generated@@232 $generated@@568))))
 :pattern ( ($generated@@220 $generated@@567 ($generated@@232 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@151) (= (type $generated@@570) $generated@@67)) ($generated@@220 $generated@@569 ($generated@@237 $generated@@570))) (and (= ($generated@@296 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@569) ($generated@@237 $generated@@570))))
 :pattern ( ($generated@@220 $generated@@569 ($generated@@237 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@151) (= (type $generated@@572) $generated@@67)) ($generated@@220 $generated@@571 ($generated@@156 $generated@@572))) (and (= ($generated@@296 ($generated@@285 ($generated@@79 $generated@@151 $generated@@2) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@285 ($generated@@79 $generated@@151 $generated@@2) $generated@@571) ($generated@@156 $generated@@572))))
 :pattern ( ($generated@@220 $generated@@571 ($generated@@156 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@151) (= (type $generated@@574) $generated@@67)) ($generated@@220 $generated@@573 ($generated@@481 $generated@@574))) (and (= ($generated@@296 ($generated@@285 ($generated@@264 $generated@@151) $generated@@573)) $generated@@573) ($generated@@139 ($generated@@285 ($generated@@264 $generated@@151) $generated@@573) ($generated@@481 $generated@@574))))
 :pattern ( ($generated@@220 $generated@@573 ($generated@@481 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) ($generated@@270 $generated@@151 $generated@@151)) (= ($generated@@139 ($generated@@271 $generated@@575) $generated@@217) ($generated@@139 $generated@@575 ($generated@@360 $generated@@46 $generated@@44))))
 :pattern ( ($generated@@139 ($generated@@271 $generated@@575) $generated@@217))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@136) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@577) (and ($generated@@137 $generated@@576) ($generated@@77 $generated@@576 $generated@@217 $generated@@577)))) ($generated@@77 ($generated@@510 $generated@@576) ($generated@@360 $generated@@46 $generated@@44) $generated@@577))
 :pattern ( ($generated@@77 ($generated@@510 $generated@@576) ($generated@@360 $generated@@46 $generated@@44) $generated@@577))
)))
(assert (= ($generated@@75 $generated@@217) $generated@@64))
(assert (= ($generated@@553 $generated@@217) $generated@@66))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@578 ($generated@@156 $generated@@579) $generated@@580) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@151) (< 0 ($generated ($generated@@84 $generated@@578 $generated@@581)))) ($generated@@249 $generated@@581 $generated@@579 $generated@@580))
 :pattern ( ($generated@@84 $generated@@578 $generated@@581))
))))
 :pattern ( ($generated@@77 $generated@@578 ($generated@@156 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@136) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@584) (and ($generated@@141 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@67) ($generated@@77 $generated@@582 ($generated@@142 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@77 $generated@@582 ($generated@@142 $generated@@583 $generated@@585) $generated@@584))
))))) ($generated@@249 ($generated@@149 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@249 ($generated@@149 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@136) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@588) (and ($generated@@141 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@67) ($generated@@77 $generated@@586 ($generated@@142 $generated@@589 $generated@@587) $generated@@588))
 :pattern ( ($generated@@77 $generated@@586 ($generated@@142 $generated@@589 $generated@@587) $generated@@588))
))))) ($generated@@249 ($generated@@150 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@151) (= (type $generated@@591) $generated@@151)) (= ($generated@@219 ($generated@@244 $generated@@590) ($generated@@244 $generated@@591)) ($generated@@244 ($generated@@219 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@219 ($generated@@244 $generated@@590) ($generated@@244 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@242 $generated@@592))) ($generated@@244 ($generated@@296 ($generated@@8 $generated@@592))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@242 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) ($generated@@270 $generated@@151 $generated@@151)) (= ($generated@@271 ($generated@@244 $generated@@593)) ($generated@@244 ($generated@@271 $generated@@593))))
 :pattern ( ($generated@@271 ($generated@@244 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@296 ($generated@@244 $generated@@594)) ($generated@@244 ($generated@@296 $generated@@594)))
 :pattern ( ($generated@@296 ($generated@@244 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@265 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@264 $generated@@596)) (= ($generated@@263 $generated@@595) 0)) (= $generated@@595 ($generated@@262 $generated@@596))))
 :pattern ( ($generated@@263 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@79 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@301 ($generated@@85 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@301 $generated@@597) ($generated ($generated@@84 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@301 ($generated@@85 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@2)) ($generated@@77 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@3)) ($generated@@77 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@4)) ($generated@@77 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@439)) ($generated@@77 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@151)) ($generated@@77 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@264 $generated@@151)) (= (type $generated@@612) $generated@@67)) (= ($generated@@139 $generated@@611 ($generated@@481 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@263 $generated@@611))) ($generated@@220 ($generated@@482 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@482 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@139 $generated@@611 ($generated@@481 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@264 $generated@@151)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@263 $generated@@615))) (< ($generated@@284 ($generated@@285 $generated@@136 ($generated@@482 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@284 ($generated@@285 $generated@@136 ($generated@@482 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@139 $generated@@617 ($generated@@360 $generated@@618 $generated@@619))) (and (and ($generated@@139 ($generated@@283 $generated@@617) ($generated@@232 $generated@@618)) ($generated@@139 ($generated@@339 $generated@@617) ($generated@@232 $generated@@619))) ($generated@@139 ($generated@@375 $generated@@617) ($generated@@232 ($generated@@142 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@139 $generated@@617 ($generated@@360 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@139 $generated@@620 ($generated@@402 $generated@@621 $generated@@622))) (and (and ($generated@@139 ($generated@@313 $generated@@620) ($generated@@237 $generated@@621)) ($generated@@139 ($generated@@350 $generated@@620) ($generated@@237 $generated@@622))) ($generated@@139 ($generated@@379 $generated@@620) ($generated@@237 ($generated@@142 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@139 $generated@@620 ($generated@@402 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@139 $generated@@623 $generated@@46))
 :pattern ( ($generated@@139 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@139 $generated@@624 $generated@@47))
 :pattern ( ($generated@@139 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@139 $generated@@625 $generated@@44))
 :pattern ( ($generated@@139 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@439) ($generated@@139 $generated@@626 $generated@@45))
 :pattern ( ($generated@@139 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@151) ($generated@@139 $generated@@627 $generated@@48))
 :pattern ( ($generated@@139 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@628) ($generated@@163 $generated@@80 $generated@@4)) (= (type $generated@@629) $generated@@80)) (= (type $generated@@630) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@631) $generated@@136)) (= (type $generated@@632) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@634) $generated@@136)) (= (type $generated@@635) $generated@@136)) (= (type $generated@@636) ($generated@@270 $generated@@151 $generated@@151))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@638  (=> (= $generated@@628 ($generated@@162 $generated@@629 $generated@@630 $generated@@60 false)) (=> (and ($generated@@137 $generated@@631) ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@510 $generated@@631)) ($generated@@296 ($generated@@8 42))))) (=> (and (and ($generated@@248 $generated@@632) ($generated@@633 $generated@@632)) (= $generated@@630 $generated@@632)) (=> (and (and (and (and ($generated@@139 $generated@@634 $generated@@217) ($generated@@77 $generated@@634 $generated@@217 $generated@@632)) (= $generated@@635 $generated@@631)) (and ($generated@@139 $generated@@635 $generated@@217) (= $generated@@634 $generated@@635))) (and (and (and ($generated@@139 $generated@@636 ($generated@@360 $generated@@46 $generated@@44)) ($generated@@77 $generated@@636 ($generated@@360 $generated@@46 $generated@@44) $generated@@632)) ($generated@@137 $generated@@631)) (and ($generated@@137 $generated@@631) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@510 $generated@@631)) ($generated@@296 ($generated@@8 ($generated@@242 42)))))))))))
(let (($generated@@639  (=> (and ($generated@@248 $generated@@630) ($generated@@633 $generated@@630)) (=> (and (and (and ($generated@@139 $generated@@631 $generated@@217) ($generated@@77 $generated@@631 $generated@@217 $generated@@630)) ($generated@@135 $generated@@631)) (and (= 1 $generated@@637) (= (ControlFlow 0 3) 2))) $generated@@638))))
$generated@@639)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (Int) Int)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@T T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@360 (T@U T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) Bool)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@528 (T@U T@U T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@136) ($generated@@135 $generated@@138)) ($generated@@137 $generated@@138))
 :pattern ( ($generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@67)) (= (type $generated@@147) $generated@@136)) ($generated@@139 $generated@@147 ($generated@@142 $generated@@145 $generated@@146))) ($generated@@141 $generated@@147))
 :pattern ( ($generated@@141 $generated@@147) ($generated@@139 $generated@@147 ($generated@@142 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@136) (= (type $generated@@155) $generated@@136)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@67)) ($generated@@139 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@139 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@80 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@70 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@80) (= (type $generated@@211) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@212) ($generated@@69 $generated@@4))) (= (type $generated@@214) $generated@@80)) (= (type $generated@@215) ($generated@@69 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (= (type $generated@@217) $generated@@67))
(assert (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@136) ($generated@@139 $generated@@218 $generated@@217)) ($generated@@137 $generated@@218))
 :pattern ( ($generated@@137 $generated@@218) ($generated@@139 $generated@@218 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@136)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@67) (= (type $generated@@224) $generated@@67)) (= (type $generated@@225) $generated@@151)) (= (type $generated@@226) $generated@@151)) (= ($generated@@139 ($generated@@219 $generated@@225 $generated@@226) ($generated@@142 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@139 ($generated@@219 $generated@@225 $generated@@226) ($generated@@142 $generated@@223 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@136) (= (type $generated@@228) $generated@@136)) (= ($generated@@148 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@148 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@136) (= (type $generated@@231) $generated@@136)) (= ($generated@@229 $generated@@230 $generated@@231) (= $generated@@230 $generated@@231)))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@67)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@235) $generated@@67)) (= ($generated@@139 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@151) ($generated@@0 ($generated@@84 $generated@@234 $generated@@236))) ($generated@@220 $generated@@236 $generated@@235))
 :pattern ( ($generated@@84 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@139 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@67)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@240) $generated@@67)) (= ($generated@@139 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@151) ($generated@@0 ($generated@@84 $generated@@239 $generated@@241))) ($generated@@220 $generated@@241 $generated@@240))
 :pattern ( ($generated@@84 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@139 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@242 $generated@@243) $generated@@243)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@151)) (= (type $generated@@253) $generated@@151)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@219 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@219 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@71)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@136) (= ($generated@@141 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@137 $generated@@258) (= ($generated@@255 $generated@@258) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@141 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@151) (= (type $generated@@261) $generated@@151)) (= $generated@@259 ($generated@@219 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@141 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert  (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@270 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@270 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@270 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@270 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (= (type ($generated@@271 $generated@@280)) $generated@@136)
 :pattern ( ($generated@@271 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@136) ($generated@@137 $generated@@281)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) ($generated@@270 $generated@@151 $generated@@151)) (= $generated@@281 ($generated@@271 $generated@@282)))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@137 $generated@@281))
)))
(assert  (and (and (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@272 (type $generated@@287))))
(= (type ($generated@@283 $generated@@287)) ($generated@@79 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@287))
)) (forall (($generated@@289 T@T) ($generated@@290 T@U) ) (! (= (type ($generated@@285 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@285 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@273 (type $generated@@291))))
(let (($generated@@293 ($generated@@272 (type $generated@@291))))
(= (type ($generated@@286 $generated@@291)) ($generated@@79 $generated@@293 $generated@@292))))
 :pattern ( ($generated@@286 $generated@@291))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@295) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@294) $generated@@295))) (< ($generated@@284 ($generated@@285 $generated@@136 ($generated@@84 ($generated@@286 $generated@@294) $generated@@295))) ($generated@@284 ($generated@@271 $generated@@294))))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@294) $generated@@295) ($generated@@271 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@151)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@77 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@249 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@79 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@82 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@79 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@84 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@307 $generated@@308 $generated@@309)) ($generated@@270 $generated@@308 $generated@@309))
 :pattern ( ($generated@@307 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@307 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@84 ($generated@@283 ($generated@@307 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@79 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@84 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@84 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@82 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@79 $generated@@332 $generated@@2)) (= ($generated@@157 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@84 $generated@@331 $generated@@333))) (<= ($generated ($generated@@84 $generated@@331 $generated@@333)) ($generated@@301 $generated@@331))))
 :pattern ( ($generated@@84 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@157 $generated@@331))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@151) ($generated@@220 $generated@@334 $generated@@217)) (and (= ($generated@@296 ($generated@@285 $generated@@136 $generated@@334)) $generated@@334) ($generated@@139 ($generated@@285 $generated@@136 $generated@@334) $generated@@217)))
 :pattern ( ($generated@@220 $generated@@334 $generated@@217))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@273 (type $generated@@335))))
(let (($generated@@337 ($generated@@272 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@270 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@307 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@283 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@273 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@79 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@273 (type $generated@@342))))
(let (($generated@@344 ($generated@@272 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@270 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@307 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@317 (type $generated@@346))))
(let (($generated@@348 ($generated@@316 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@315 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@314 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@313 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@317 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@79 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@317 (type $generated@@353))))
(let (($generated@@355 ($generated@@316 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@315 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@314 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@84 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@358) $generated@@67)) (= ($generated@@139 $generated@@357 ($generated@@156 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@151) (< 0 ($generated ($generated@@84 $generated@@357 $generated@@359)))) ($generated@@220 $generated@@359 $generated@@358))
 :pattern ( ($generated@@84 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@139 $generated@@357 ($generated@@156 $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@67)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@364)) (= ($generated@@77 ($generated@@271 $generated@@363) $generated@@217 $generated@@364) ($generated@@77 $generated@@363 ($generated@@360 $generated@@46 $generated@@44) $generated@@364)))
 :pattern ( ($generated@@77 ($generated@@271 $generated@@363) $generated@@217 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@366) $generated@@67)) (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@365 ($generated@@232 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@151) ($generated@@0 ($generated@@84 $generated@@365 $generated@@368))) ($generated@@249 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@84 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@77 $generated@@365 ($generated@@232 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@370) $generated@@67)) (= (type $generated@@371) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@369 ($generated@@237 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@151) ($generated@@0 ($generated@@84 $generated@@369 $generated@@372))) ($generated@@249 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@84 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@77 $generated@@369 ($generated@@237 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@84 ($generated@@302 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@84 ($generated@@302 $generated@@374) $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) ($generated@@79 $generated@@151 $generated@@4))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@378) $generated@@151)) (= ($generated@@0 ($generated@@84 ($generated@@375 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@84 ($generated@@283 $generated@@377) ($generated@@149 ($generated@@285 $generated@@136 $generated@@378)))) (= ($generated@@84 ($generated@@286 $generated@@377) ($generated@@149 ($generated@@285 $generated@@136 $generated@@378))) ($generated@@150 ($generated@@285 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@79 $generated@@151 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@317 (type $generated@@382))))
(let (($generated@@384 ($generated@@316 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@386) $generated@@151)) (= ($generated@@0 ($generated@@84 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@84 ($generated@@313 $generated@@385) ($generated@@149 ($generated@@285 $generated@@136 $generated@@386)))) (= ($generated@@84 ($generated@@380 $generated@@385) ($generated@@149 ($generated@@285 $generated@@136 $generated@@386))) ($generated@@150 ($generated@@285 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@272 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@270 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@84 ($generated@@339 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@84 ($generated@@283 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@84 ($generated@@286 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@387) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@316 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@315 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@84 ($generated@@350 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@84 ($generated@@313 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@84 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@392) $generated@@396))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@84 ($generated@@350 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@398) $generated@@67)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@397 ($generated@@360 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@397) $generated@@401))) (and ($generated@@249 ($generated@@84 ($generated@@286 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@249 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@77 $generated@@397 ($generated@@360 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@405) $generated@@409))) (and ($generated@@249 ($generated@@84 ($generated@@380 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@249 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@273 (type $generated@@411))))
(let (($generated@@414 ($generated@@272 (type $generated@@411))))
 (=> (and (and (= (type $generated@@411) ($generated@@270 $generated@@414 $generated@@413)) (= (type $generated@@412) ($generated@@270 $generated@@414 $generated@@413))) ($generated@@410 $generated@@411 $generated@@412)) (= $generated@@411 $generated@@412))))
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@79 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@317 (type $generated@@417))))
(let (($generated@@419 ($generated@@316 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@315 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@314 $generated@@419 $generated@@418)) (= ($generated@@313 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@313 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@317 (type $generated@@420))))
(let (($generated@@422 ($generated@@316 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@315 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@314 $generated@@422 $generated@@421)) (= ($generated@@350 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@350 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@317 (type $generated@@423))))
(let (($generated@@425 ($generated@@316 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@315 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@314 $generated@@425 $generated@@424)) (= ($generated@@379 $generated@@423) ($generated@@415 $generated@@151))))))
 :pattern ( ($generated@@379 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@273 (type $generated@@426))))
(let (($generated@@428 ($generated@@272 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@270 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@307 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@151) (= (type $generated@@430) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@375 $generated@@426) ($generated@@296 ($generated@@219 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@375 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@317 (type $generated@@431))))
(let (($generated@@433 ($generated@@316 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@315 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@314 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@151) (= (type $generated@@435) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@379 $generated@@431) ($generated@@296 ($generated@@219 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@379 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@151) ($generated@@220 $generated@@436 $generated@@46)) (and (= ($generated@@296 ($generated@@285 $generated@@2 $generated@@436)) $generated@@436) ($generated@@139 ($generated@@285 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@151) ($generated@@220 $generated@@437 $generated@@47)) (and (= ($generated@@296 ($generated@@285 $generated@@3 $generated@@437)) $generated@@437) ($generated@@139 ($generated@@285 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@151) ($generated@@220 $generated@@438 $generated@@44)) (and (= ($generated@@296 ($generated@@285 $generated@@4 $generated@@438)) $generated@@438) ($generated@@139 ($generated@@285 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@151) ($generated@@220 $generated@@440 $generated@@45)) (and (= ($generated@@296 ($generated@@285 $generated@@439 $generated@@440)) $generated@@440) ($generated@@139 ($generated@@285 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@67) (= ($generated@@220 ($generated@@296 $generated@@441) $generated@@442) ($generated@@139 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@220 ($generated@@296 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@82 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@79 $generated@@444 $generated@@2)) (<= 0 ($generated@@301 $generated@@443))))
 :pattern ( ($generated@@301 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@265 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@264 $generated@@446)) (<= 0 ($generated@@263 $generated@@445))))
 :pattern ( ($generated@@263 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@447 ($generated@@360 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@360 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@360 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@360 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@75 ($generated@@360 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@360 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@402 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@402 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@402 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@402 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@151) (= (type $generated@@468) $generated@@151)) (= ($generated@@255 ($generated@@219 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@219 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@142 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@142 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@142 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@142 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) (= ($generated@@149 ($generated@@219 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@219 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@151) (= (type $generated@@480) $generated@@151)) (= ($generated@@150 ($generated@@219 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@219 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@265 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@264 $generated@@151)) (= (type $generated@@488) $generated@@67)) (= (type $generated@@489) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@263 $generated@@487))) ($generated@@249 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@78 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@78 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@232 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@232 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@75 ($generated@@232 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@232 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@237 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@237 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@237 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@237 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@156 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@156 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@156 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) ($generated@@270 $generated@@151 $generated@@151)) (= ($generated@@255 ($generated@@271 $generated@@509)) $generated@@63))
 :pattern ( ($generated@@271 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) ($generated@@270 $generated@@151 $generated@@151))
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) ($generated@@270 $generated@@151 $generated@@151)) (= ($generated@@510 ($generated@@271 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@271 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@285 $generated@@514 ($generated@@296 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@296 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@139 $generated@@515 ($generated@@360 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@515) $generated@@518))) (and ($generated@@220 ($generated@@84 ($generated@@286 $generated@@515) $generated@@518) $generated@@517) ($generated@@220 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@515) $generated@@518))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@139 $generated@@515 ($generated@@360 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@139 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@313 $generated@@519) $generated@@522))) (and ($generated@@220 ($generated@@84 ($generated@@380 $generated@@519) $generated@@522) $generated@@521) ($generated@@220 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@313 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@139 $generated@@519 ($generated@@402 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@151) (= (type $generated@@525) $generated@@151)) (< ($generated@@523 $generated@@524) ($generated@@284 ($generated@@219 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@219 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@151) (= (type $generated@@527) $generated@@151)) (< ($generated@@523 $generated@@527) ($generated@@284 ($generated@@219 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@219 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(let (($generated@@533 (type $generated@@530)))
(= (type ($generated@@528 $generated@@529 $generated@@530 $generated@@531)) ($generated@@270 $generated@@533 $generated@@532))))
 :pattern ( ($generated@@528 $generated@@529 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(let (($generated@@539 (type $generated@@535)))
 (=> (and (= (type $generated@@534) ($generated@@270 $generated@@539 $generated@@538)) (= (type $generated@@536) $generated@@539)) (and (=> (= $generated@@536 $generated@@535) (and ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536)) (= ($generated@@84 ($generated@@286 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536) $generated@@537))) (=> (not (= $generated@@536 $generated@@535)) (and (= ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536)) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@534) $generated@@536))) (= ($generated@@84 ($generated@@286 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536) ($generated@@84 ($generated@@286 $generated@@534) $generated@@536))))))))
 :pattern ( ($generated@@84 ($generated@@283 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@84 ($generated@@286 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@136) (= (type $generated@@541) $generated@@136)) true) (= ($generated@@229 $generated@@540 $generated@@541) ($generated@@410 ($generated@@510 $generated@@540) ($generated@@510 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@151) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) ($generated@@220 $generated@@542 ($generated@@360 $generated@@543 $generated@@544))) (and (= ($generated@@296 ($generated@@285 ($generated@@270 $generated@@151 $generated@@151) $generated@@542)) $generated@@542) ($generated@@139 ($generated@@285 ($generated@@270 $generated@@151 $generated@@151) $generated@@542) ($generated@@360 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@220 $generated@@542 ($generated@@360 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@151) (= (type $generated@@546) $generated@@67)) (= (type $generated@@547) $generated@@67)) ($generated@@220 $generated@@545 ($generated@@402 $generated@@546 $generated@@547))) (and (= ($generated@@296 ($generated@@285 ($generated@@315 $generated@@151 $generated@@151) $generated@@545)) $generated@@545) ($generated@@139 ($generated@@285 ($generated@@315 $generated@@151 $generated@@151) $generated@@545) ($generated@@402 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@220 $generated@@545 ($generated@@402 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@67) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@151)) ($generated@@220 $generated@@550 ($generated@@142 $generated@@548 $generated@@549))) (and (= ($generated@@296 ($generated@@285 $generated@@136 $generated@@550)) $generated@@550) ($generated@@139 ($generated@@285 $generated@@136 $generated@@550) ($generated@@142 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@220 $generated@@550 ($generated@@142 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@84 ($generated@@415 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@84 ($generated@@415 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@72)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@67) (= (type $generated@@556) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@142 $generated@@555 $generated@@556)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@273 (type $generated@@557))))
(let (($generated@@560 ($generated@@272 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@270 $generated@@560 $generated@@559)) (= (type $generated@@558) ($generated@@270 $generated@@560 $generated@@559))) (= ($generated@@410 $generated@@557 $generated@@558)  (and (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@560) (= ($generated@@0 ($generated@@84 ($generated@@283 $generated@@557) $generated@@561)) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@558) $generated@@561))))
 :no-pattern (type $generated@@561)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@560) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@557) $generated@@562))) (= ($generated@@84 ($generated@@286 $generated@@557) $generated@@562) ($generated@@84 ($generated@@286 $generated@@558) $generated@@562)))
 :no-pattern (type $generated@@562)
 :no-pattern ($generated $generated@@562)
 :no-pattern ($generated@@0 $generated@@562)
)))))))
 :pattern ( ($generated@@410 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@564) $generated@@136)) ($generated@@0 ($generated@@84 ($generated@@283 $generated@@563) ($generated@@296 $generated@@564)))) (< ($generated@@284 $generated@@564) ($generated@@284 ($generated@@271 $generated@@563))))
 :pattern ( ($generated@@84 ($generated@@283 $generated@@563) ($generated@@296 $generated@@564)) ($generated@@271 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@136) (= ($generated@@523 ($generated@@296 $generated@@565)) ($generated@@284 $generated@@565)))
 :pattern ( ($generated@@523 ($generated@@296 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@151) ($generated@@220 $generated@@566 ($generated@@78 0))) (and (= ($generated@@296 ($generated@@285 $generated@@2 $generated@@566)) $generated@@566) ($generated@@139 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@566) ($generated@@78 0))))
 :pattern ( ($generated@@220 $generated@@566 ($generated@@78 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@151) (= (type $generated@@568) $generated@@67)) ($generated@@220 $generated@@567 ($generated@@232 $generated@@568))) (and (= ($generated@@296 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@567) ($generated@@232 $generated@@568))))
 :pattern ( ($generated@@220 $generated@@567 ($generated@@232 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@151) (= (type $generated@@570) $generated@@67)) ($generated@@220 $generated@@569 ($generated@@237 $generated@@570))) (and (= ($generated@@296 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@285 ($generated@@79 $generated@@151 $generated@@4) $generated@@569) ($generated@@237 $generated@@570))))
 :pattern ( ($generated@@220 $generated@@569 ($generated@@237 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@151) (= (type $generated@@572) $generated@@67)) ($generated@@220 $generated@@571 ($generated@@156 $generated@@572))) (and (= ($generated@@296 ($generated@@285 ($generated@@79 $generated@@151 $generated@@2) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@285 ($generated@@79 $generated@@151 $generated@@2) $generated@@571) ($generated@@156 $generated@@572))))
 :pattern ( ($generated@@220 $generated@@571 ($generated@@156 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@151) (= (type $generated@@574) $generated@@67)) ($generated@@220 $generated@@573 ($generated@@481 $generated@@574))) (and (= ($generated@@296 ($generated@@285 ($generated@@264 $generated@@151) $generated@@573)) $generated@@573) ($generated@@139 ($generated@@285 ($generated@@264 $generated@@151) $generated@@573) ($generated@@481 $generated@@574))))
 :pattern ( ($generated@@220 $generated@@573 ($generated@@481 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) ($generated@@270 $generated@@151 $generated@@151)) (= ($generated@@139 ($generated@@271 $generated@@575) $generated@@217) ($generated@@139 $generated@@575 ($generated@@360 $generated@@46 $generated@@44))))
 :pattern ( ($generated@@139 ($generated@@271 $generated@@575) $generated@@217))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@136) (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@577) (and ($generated@@137 $generated@@576) ($generated@@77 $generated@@576 $generated@@217 $generated@@577)))) ($generated@@77 ($generated@@510 $generated@@576) ($generated@@360 $generated@@46 $generated@@44) $generated@@577))
 :pattern ( ($generated@@77 ($generated@@510 $generated@@576) ($generated@@360 $generated@@46 $generated@@44) $generated@@577))
)))
(assert (= ($generated@@75 $generated@@217) $generated@@64))
(assert (= ($generated@@553 $generated@@217) $generated@@66))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@578 ($generated@@156 $generated@@579) $generated@@580) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@151) (< 0 ($generated ($generated@@84 $generated@@578 $generated@@581)))) ($generated@@249 $generated@@581 $generated@@579 $generated@@580))
 :pattern ( ($generated@@84 $generated@@578 $generated@@581))
))))
 :pattern ( ($generated@@77 $generated@@578 ($generated@@156 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@136) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@584) (and ($generated@@141 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@67) ($generated@@77 $generated@@582 ($generated@@142 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@77 $generated@@582 ($generated@@142 $generated@@583 $generated@@585) $generated@@584))
))))) ($generated@@249 ($generated@@149 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@249 ($generated@@149 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@136) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@588) (and ($generated@@141 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@67) ($generated@@77 $generated@@586 ($generated@@142 $generated@@589 $generated@@587) $generated@@588))
 :pattern ( ($generated@@77 $generated@@586 ($generated@@142 $generated@@589 $generated@@587) $generated@@588))
))))) ($generated@@249 ($generated@@150 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@151) (= (type $generated@@591) $generated@@151)) (= ($generated@@219 ($generated@@244 $generated@@590) ($generated@@244 $generated@@591)) ($generated@@244 ($generated@@219 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@219 ($generated@@244 $generated@@590) ($generated@@244 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@242 $generated@@592))) ($generated@@244 ($generated@@296 ($generated@@8 $generated@@592))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@242 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) ($generated@@270 $generated@@151 $generated@@151)) (= ($generated@@271 ($generated@@244 $generated@@593)) ($generated@@244 ($generated@@271 $generated@@593))))
 :pattern ( ($generated@@271 ($generated@@244 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@296 ($generated@@244 $generated@@594)) ($generated@@244 ($generated@@296 $generated@@594)))
 :pattern ( ($generated@@296 ($generated@@244 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@265 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@264 $generated@@596)) (= ($generated@@263 $generated@@595) 0)) (= $generated@@595 ($generated@@262 $generated@@596))))
 :pattern ( ($generated@@263 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@79 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@301 ($generated@@85 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@301 $generated@@597) ($generated ($generated@@84 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@301 ($generated@@85 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@2)) ($generated@@77 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@3)) ($generated@@77 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@4)) ($generated@@77 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@439)) ($generated@@77 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@151)) ($generated@@77 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@264 $generated@@151)) (= (type $generated@@612) $generated@@67)) (= ($generated@@139 $generated@@611 ($generated@@481 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@263 $generated@@611))) ($generated@@220 ($generated@@482 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@482 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@139 $generated@@611 ($generated@@481 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@264 $generated@@151)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@263 $generated@@615))) (< ($generated@@284 ($generated@@285 $generated@@136 ($generated@@482 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@284 ($generated@@285 $generated@@136 ($generated@@482 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@270 $generated@@151 $generated@@151)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@139 $generated@@617 ($generated@@360 $generated@@618 $generated@@619))) (and (and ($generated@@139 ($generated@@283 $generated@@617) ($generated@@232 $generated@@618)) ($generated@@139 ($generated@@339 $generated@@617) ($generated@@232 $generated@@619))) ($generated@@139 ($generated@@375 $generated@@617) ($generated@@232 ($generated@@142 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@139 $generated@@617 ($generated@@360 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@315 $generated@@151 $generated@@151)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@139 $generated@@620 ($generated@@402 $generated@@621 $generated@@622))) (and (and ($generated@@139 ($generated@@313 $generated@@620) ($generated@@237 $generated@@621)) ($generated@@139 ($generated@@350 $generated@@620) ($generated@@237 $generated@@622))) ($generated@@139 ($generated@@379 $generated@@620) ($generated@@237 ($generated@@142 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@139 $generated@@620 ($generated@@402 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@139 $generated@@623 $generated@@46))
 :pattern ( ($generated@@139 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@139 $generated@@624 $generated@@47))
 :pattern ( ($generated@@139 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@139 $generated@@625 $generated@@44))
 :pattern ( ($generated@@139 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@439) ($generated@@139 $generated@@626 $generated@@45))
 :pattern ( ($generated@@139 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@151) ($generated@@139 $generated@@627 $generated@@48))
 :pattern ( ($generated@@139 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@628) ($generated@@163 $generated@@80 $generated@@4)) (= (type $generated@@629) $generated@@80)) (= (type $generated@@630) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@631) $generated@@136)) (= (type $generated@@632) $generated@@136)) (= (type $generated@@633) $generated@@136)) (= (type $generated@@634) ($generated@@270 $generated@@151 $generated@@151))) (= (type $generated@@635) ($generated@@270 $generated@@151 $generated@@151))) (= (type $generated@@636) $generated@@136)) (= (type $generated@@638) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@640  (=> (= $generated@@628 ($generated@@162 $generated@@629 $generated@@630 $generated@@60 false)) (=> (and (and (and (and ($generated@@139 $generated@@631 $generated@@217) ($generated@@77 $generated@@631 $generated@@217 $generated@@630)) (= $generated@@632 $generated@@633)) (and ($generated@@139 $generated@@632 $generated@@217) (= $generated@@631 $generated@@632))) (and (and ($generated@@139 $generated@@634 ($generated@@360 $generated@@46 $generated@@44)) ($generated@@77 $generated@@634 ($generated@@360 $generated@@46 $generated@@44) $generated@@630)) (and ($generated@@137 $generated@@633) ($generated@@137 $generated@@633)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@510 $generated@@633)) ($generated@@296 ($generated@@8 ($generated@@242 42)))))) (=> ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@510 $generated@@633)) ($generated@@296 ($generated@@8 ($generated@@242 42))))) (=> (= $generated@@635 ($generated@@528 ($generated@@510 $generated@@633) ($generated@@296 ($generated@@8 ($generated@@242 42))) ($generated@@84 ($generated@@286 ($generated@@510 $generated@@633)) ($generated@@296 ($generated@@8 ($generated@@242 42)))))) (=> (and (and ($generated@@137 $generated@@633) ($generated@@137 $generated@@633)) (and ($generated@@139 $generated@@635 ($generated@@360 $generated@@46 $generated@@44)) (= $generated@@634 $generated@@635))) (=> (and (and (and ($generated@@137 $generated@@633) ($generated@@137 $generated@@633)) (= $generated@@636 (let (($generated@@641 ($generated@@528 ($generated@@510 $generated@@633) ($generated@@296 ($generated@@8 ($generated@@242 42))) ($generated@@84 ($generated@@286 ($generated@@510 $generated@@633)) ($generated@@296 ($generated@@8 ($generated@@242 42)))))))
($generated@@271 $generated@@641)))) (and (and ($generated@@137 $generated@@636) ($generated@@137 $generated@@633)) (and ($generated@@137 $generated@@636) ($generated@@137 $generated@@633)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@410 ($generated@@510 $generated@@636) ($generated@@510 $generated@@633))) (=> ($generated@@410 ($generated@@510 $generated@@636) ($generated@@510 $generated@@633)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@229 (let (($generated@@642 ($generated@@528 ($generated@@510 $generated@@633) ($generated@@296 ($generated@@8 ($generated@@242 42))) ($generated@@84 ($generated@@286 ($generated@@510 $generated@@633)) ($generated@@296 ($generated@@8 ($generated@@242 42)))))))
($generated@@271 $generated@@642)) $generated@@633)))))))))))))
(let (($generated@@643  (=> (and ($generated@@248 $generated@@630) ($generated@@637 $generated@@630)) (=> (and (and ($generated@@139 $generated@@633 $generated@@217) ($generated@@77 $generated@@633 $generated@@217 $generated@@630)) ($generated@@135 $generated@@633)) (=> (and (and (and (and ($generated@@139 $generated@@638 $generated@@217) ($generated@@77 $generated@@638 $generated@@217 $generated@@630)) true) (= 1 $generated@@639)) (and ($generated@@0 ($generated@@84 ($generated@@283 ($generated@@510 $generated@@633)) ($generated@@296 ($generated@@8 42)))) (= (ControlFlow 0 5) 2))) $generated@@640)))))
$generated@@643)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U) Bool)
(declare-fun $generated@@124 (Int) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 (T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 (Int Bool) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@U) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) Bool)
(declare-fun $generated@@396 (T@U) Int)
(declare-fun $generated@@400 (T@U) Bool)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@U) Bool)
(declare-fun $generated@@458 (T@U T@U) Bool)
(declare-fun $generated@@464 (T@T) T@U)
(declare-fun $generated@@488 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@560 (T@U Int) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(declare-fun $generated@@621 (T@T) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@717 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@72)) (= (type $generated@@67) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert  (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@82 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@87 (type $generated@@95))))
(= (type ($generated@@79 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@79 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@88 $generated@@98 $generated@@99 $generated@@100)) ($generated@@82 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@87 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@79 ($generated@@88 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@79 ($generated@@88 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@79 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@79 ($generated@@88 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@79 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@115 T@U) ) (! (= (type ($generated@@80 $generated@@115)) $generated@@83)
 :pattern ( ($generated@@80 $generated@@115))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= (type ($generated@@81 $generated@@116 $generated@@117)) $generated@@84)
 :pattern ( ($generated@@81 $generated@@116 $generated@@117))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and (and (and (= (type $generated@@118) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@119) $generated@@84)) (= (type $generated@@120) $generated@@84)) (> ($generated ($generated@@79 $generated@@118 ($generated@@80 $generated@@120))) 0)) (< ($generated@@85 $generated@@120) ($generated@@85 ($generated@@81 $generated@@118 $generated@@119))))
 :pattern ( ($generated@@79 $generated@@118 ($generated@@80 $generated@@120)) ($generated@@81 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ) (! (= (type ($generated@@121 $generated@@122)) $generated@@72)
 :pattern ( ($generated@@121 $generated@@122))
)))
(assert (= ($generated@@121 $generated@@44) $generated@@49))
(assert (= ($generated@@121 $generated@@45) $generated@@50))
(assert (= ($generated@@121 $generated@@46) $generated@@51))
(assert (= ($generated@@121 $generated@@47) $generated@@52))
(assert (= ($generated@@121 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@125) 14) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@74 (type $generated@@130))))
(= (type ($generated@@127 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@127 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@126) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@128 $generated@@132 $generated@@133 $generated@@134)) $generated@@126)
 :pattern ( ($generated@@128 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@74 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@127 ($generated@@128 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@127 ($generated@@128 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@127 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@127 ($generated@@128 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@127 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@124 $generated@@147)) $generated@@71)
 :pattern ( ($generated@@124 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@82 $generated@@125 $generated@@126))) ($generated@@123 $generated@@148 ($generated@@124 0) $generated@@149))
 :pattern ( ($generated@@123 $generated@@148 ($generated@@124 0) $generated@@149))
)))
(assert  (and (and (= (type $generated@@150) $generated@@71) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@71)
 :pattern ( ($generated@@152 $generated@@154))
))) (= (type $generated@@153) $generated@@71)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@156) $generated@@84)) (= (type $generated@@157) ($generated@@82 $generated@@125 $generated@@126))) ($generated@@151 $generated@@157)) (= ($generated@@123 ($generated@@81 $generated@@155 $generated@@156) $generated@@150 $generated@@157)  (and ($generated@@123 $generated@@155 ($generated@@152 $generated@@46) $generated@@157) ($generated@@123 $generated@@156 $generated@@153 $generated@@157))))
 :pattern ( ($generated@@123 ($generated@@81 $generated@@155 $generated@@156) $generated@@150 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@158 $generated@@159 ($generated@@124 0)))
 :pattern ( ($generated@@158 $generated@@159 ($generated@@124 0)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@162 $generated@@163)) $generated@@71)
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@71)) (= (type $generated@@166) $generated@@84)) ($generated@@158 $generated@@166 ($generated@@161 $generated@@164 $generated@@165))) ($generated@@160 $generated@@166))
 :pattern ( ($generated@@160 $generated@@166) ($generated@@158 $generated@@166 ($generated@@161 $generated@@164 $generated@@165)))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@83)
 :pattern ( ($generated@@168 $generated@@170))
)) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@83)
 :pattern ( ($generated@@169 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@84) (= (type $generated@@173) $generated@@84)) true) (= ($generated@@167 $generated@@172 $generated@@173)  (and (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)) (= ($generated@@169 $generated@@172) ($generated@@169 $generated@@173)))))
 :pattern ( ($generated@@167 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@176) $generated@@71)) ($generated@@158 $generated@@175 ($generated@@152 $generated@@176))) ($generated@@174 $generated@@175))
 :pattern ( ($generated@@158 $generated@@175 ($generated@@152 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 16)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@125 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@74 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@125) (= (type $generated@@227) ($generated@@82 $generated@@125 $generated@@126))) (= (type $generated@@228) ($generated@@73 $generated@@4))) (= (type $generated@@230) $generated@@125)) (= (type $generated@@231) ($generated@@73 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@127 ($generated@@79 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@84) ($generated@@158 $generated@@234 $generated@@153)) ($generated@@233 $generated@@234))
 :pattern ( ($generated@@233 $generated@@234) ($generated@@158 $generated@@234 $generated@@153))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@84)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@71) (= (type $generated@@240) $generated@@71)) (= (type $generated@@241) $generated@@83)) (= (type $generated@@242) $generated@@83)) (= ($generated@@158 ($generated@@235 $generated@@241 $generated@@242) ($generated@@161 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@158 ($generated@@235 $generated@@241 $generated@@242) ($generated@@161 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@244 Int) ($generated@@245 Bool) ) (! (= (type ($generated@@243 $generated@@244 $generated@@245)) $generated@@84)
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 Int) ($generated@@247 Bool) ) (! (= ($generated@@158 ($generated@@243 $generated@@246 $generated@@247) $generated@@150)  (and ($generated@@158 ($generated@@8 $generated@@246) $generated@@46) ($generated@@158 ($generated@@11 $generated@@247) $generated@@44)))
 :pattern ( ($generated@@158 ($generated@@243 $generated@@246 $generated@@247) $generated@@150))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@84) (= (type $generated@@249) $generated@@84)) (= ($generated@@167 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@167 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@84) (= (type $generated@@252) $generated@@84)) (= ($generated@@250 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@84) (= (type $generated@@255) $generated@@84)) (= ($generated@@253 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@259) $generated@@71)) (= ($generated@@158 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@83) ($generated@@0 ($generated@@79 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@79 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@158 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@264) $generated@@71)) (= ($generated@@158 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@83) ($generated@@0 ($generated@@79 $generated@@263 $generated@@265))) ($generated@@236 $generated@@265 $generated@@264))
 :pattern ( ($generated@@79 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@158 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@71) (= (type $generated@@274) $generated@@71)) (= (type $generated@@275) $generated@@83)) (= (type $generated@@276) $generated@@83)) (= (type $generated@@277) ($generated@@82 $generated@@125 $generated@@126))) ($generated@@151 $generated@@277)) (= ($generated@@123 ($generated@@235 $generated@@275 $generated@@276) ($generated@@161 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@123 ($generated@@235 $generated@@275 $generated@@276) ($generated@@161 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@75)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@84) (= ($generated@@160 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@160 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@84) (= ($generated@@233 $generated@@281) (= ($generated@@278 $generated@@281) $generated@@63)))
 :pattern ( ($generated@@233 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@84) (= ($generated@@282 $generated@@283) (= ($generated@@278 $generated@@283) $generated@@65)))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@84) (= ($generated@@284 $generated@@285) (= ($generated@@278 $generated@@285) $generated@@67)))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@84) ($generated@@160 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@83) (= (type $generated@@288) $generated@@83)) (= $generated@@286 ($generated@@235 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@160 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@84) ($generated@@282 $generated@@289)) (exists (($generated@@290 Int) ($generated@@291 Bool) ) (= $generated@@289 ($generated@@243 $generated@@290 $generated@@291))))
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@84) ($generated@@284 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@294) $generated@@84)) (= $generated@@292 ($generated@@81 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@284 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 17)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert  (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@303 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@303 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@303 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (= (type ($generated@@304 $generated@@313)) $generated@@84)
 :pattern ( ($generated@@304 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@84) ($generated@@233 $generated@@314)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) ($generated@@303 $generated@@83 $generated@@83)) (= $generated@@314 ($generated@@304 $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
)))
 :pattern ( ($generated@@233 $generated@@314))
)))
(assert  (and (and (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@305 (type $generated@@319))))
(= (type ($generated@@316 $generated@@319)) ($generated@@82 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@319))
)) (forall (($generated@@321 T@T) ($generated@@322 T@U) ) (! (= (type ($generated@@317 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@317 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@306 (type $generated@@323))))
(let (($generated@@325 ($generated@@305 (type $generated@@323))))
(= (type ($generated@@318 $generated@@323)) ($generated@@82 $generated@@325 $generated@@324))))
 :pattern ( ($generated@@318 $generated@@323))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (= (type $generated@@326) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@327) $generated@@83)) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@326) $generated@@327))) (< ($generated@@85 ($generated@@317 $generated@@84 ($generated@@79 ($generated@@318 $generated@@326) $generated@@327))) ($generated@@85 ($generated@@304 $generated@@326))))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@326) $generated@@327) ($generated@@304 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@71) (= (type $generated@@330) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@272 ($generated@@80 $generated@@328) $generated@@329 $generated@@330) ($generated@@123 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@272 ($generated@@80 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@333 T@T) ) (! (= (type ($generated@@332 $generated@@333)) ($generated@@82 $generated@@333 $generated@@2))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@86 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (and (= (= ($generated@@331 $generated@@334) 0) (= $generated@@334 ($generated@@332 $generated@@335))) (=> (not (= ($generated@@331 $generated@@334) 0)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) (< 0 ($generated ($generated@@79 $generated@@334 $generated@@336))))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) ($generated@@303 $generated@@338 $generated@@339))
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@79 ($generated@@316 ($generated@@337 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@79 ($generated@@316 ($generated@@337 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@82 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@79 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@79 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@86 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@82 $generated@@362 $generated@@2)) (= ($generated@@174 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@79 $generated@@361 $generated@@363))) (<= ($generated ($generated@@79 $generated@@361 $generated@@363)) ($generated@@331 $generated@@361))))
 :pattern ( ($generated@@79 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@174 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@83) ($generated@@236 $generated@@364 $generated@@153)) (and (= ($generated@@80 ($generated@@317 $generated@@84 $generated@@364)) $generated@@364) ($generated@@158 ($generated@@317 $generated@@84 $generated@@364) $generated@@153)))
 :pattern ( ($generated@@236 $generated@@364 $generated@@153))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@83) ($generated@@236 $generated@@365 $generated@@150)) (and (= ($generated@@80 ($generated@@317 $generated@@84 $generated@@365)) $generated@@365) ($generated@@158 ($generated@@317 $generated@@84 $generated@@365) $generated@@150)))
 :pattern ( ($generated@@236 $generated@@365 $generated@@150))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@306 (type $generated@@366))))
(let (($generated@@368 ($generated@@305 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@303 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@337 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@316 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@306 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@82 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@306 (type $generated@@373))))
(let (($generated@@375 ($generated@@305 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@303 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@337 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@79 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@347 (type $generated@@377))))
(let (($generated@@379 ($generated@@346 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@345 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@344 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@79 ($generated@@343 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@343 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@347 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@82 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@347 (type $generated@@384))))
(let (($generated@@386 ($generated@@346 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@345 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@344 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@79 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@389) $generated@@71)) (= ($generated@@158 $generated@@388 ($generated@@152 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@83) (< 0 ($generated ($generated@@79 $generated@@388 $generated@@390)))) ($generated@@236 $generated@@390 $generated@@389))
 :pattern ( ($generated@@79 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@158 $generated@@388 ($generated@@152 $generated@@389)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@86 (type $generated@@392))))
 (=> (and (= (type $generated@@392) ($generated@@82 $generated@@394 $generated@@2)) (= (type $generated@@393) ($generated@@82 $generated@@394 $generated@@2))) (= ($generated@@391 $generated@@392 $generated@@393) (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@394) (= ($generated ($generated@@79 $generated@@392 $generated@@395)) ($generated ($generated@@79 $generated@@393 $generated@@395))))
 :pattern ( ($generated@@79 $generated@@392 $generated@@395))
 :pattern ( ($generated@@79 $generated@@393 $generated@@395))
)))))
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@306 (type $generated@@397))))
(let (($generated@@399 ($generated@@305 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@303 $generated@@399 $generated@@398)) (= (= ($generated@@396 $generated@@397) 0) (= $generated@@397 ($generated@@337 $generated@@399 $generated@@398))))))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@84) ($generated@@400 $generated@@401)) (or ($generated@@282 $generated@@401) ($generated@@284 $generated@@401)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@71)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@406) ($generated@@82 $generated@@125 $generated@@126))) ($generated@@151 $generated@@406)) (= ($generated@@123 ($generated@@304 $generated@@405) $generated@@153 $generated@@406) ($generated@@123 $generated@@405 ($generated@@402 $generated@@46 $generated@@44) $generated@@406)))
 :pattern ( ($generated@@123 ($generated@@304 $generated@@405) $generated@@153 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@408) $generated@@71)) (= (type $generated@@409) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@407 ($generated@@256 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@83) ($generated@@0 ($generated@@79 $generated@@407 $generated@@410))) ($generated@@272 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@79 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@123 $generated@@407 ($generated@@256 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@412) $generated@@71)) (= (type $generated@@413) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@411 ($generated@@261 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@83) ($generated@@0 ($generated@@79 $generated@@411 $generated@@414))) ($generated@@272 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@79 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@123 $generated@@411 ($generated@@261 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(= ($generated ($generated@@79 ($generated@@332 $generated@@416) $generated@@415)) 0))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@79 ($generated@@332 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@82 $generated@@83 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@420) $generated@@83)) (= ($generated@@0 ($generated@@79 ($generated@@417 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@79 ($generated@@316 $generated@@419) ($generated@@168 ($generated@@317 $generated@@84 $generated@@420)))) (= ($generated@@79 ($generated@@318 $generated@@419) ($generated@@168 ($generated@@317 $generated@@84 $generated@@420))) ($generated@@169 ($generated@@317 $generated@@84 $generated@@420))))))
 :pattern ( ($generated@@79 ($generated@@417 $generated@@419) $generated@@420))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@82 $generated@@83 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@347 (type $generated@@424))))
(let (($generated@@426 ($generated@@346 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@82 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@345 $generated@@83 $generated@@83)) (= (type $generated@@428) $generated@@83)) (= ($generated@@0 ($generated@@79 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@79 ($generated@@343 $generated@@427) ($generated@@168 ($generated@@317 $generated@@84 $generated@@428)))) (= ($generated@@79 ($generated@@422 $generated@@427) ($generated@@168 ($generated@@317 $generated@@84 $generated@@428))) ($generated@@169 ($generated@@317 $generated@@84 $generated@@428))))))
 :pattern ( ($generated@@79 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@305 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@303 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@79 ($generated@@370 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@79 ($generated@@316 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@79 ($generated@@318 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@429) $generated@@433))
 :pattern ( ($generated@@79 ($generated@@318 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@79 ($generated@@370 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@346 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@345 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@79 ($generated@@381 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@79 ($generated@@343 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@79 ($generated@@422 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@79 ($generated@@343 $generated@@434) $generated@@438))
 :pattern ( ($generated@@79 ($generated@@422 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@79 ($generated@@381 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@440) $generated@@71)) (= (type $generated@@441) $generated@@71)) (= (type $generated@@442) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@439 ($generated@@402 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@83) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@439) $generated@@443))) (and ($generated@@272 ($generated@@79 ($generated@@318 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@272 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@79 ($generated@@318 $generated@@439) $generated@@443))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@123 $generated@@439 ($generated@@402 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@71)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@345 $generated@@83 $generated@@83)) (= (type $generated@@448) $generated@@71)) (= (type $generated@@449) $generated@@71)) (= (type $generated@@450) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@83) ($generated@@0 ($generated@@79 ($generated@@343 $generated@@447) $generated@@451))) (and ($generated@@272 ($generated@@79 ($generated@@422 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@272 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@79 ($generated@@422 $generated@@447) $generated@@451))
 :pattern ( ($generated@@79 ($generated@@343 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@123 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ($generated@@454 Bool) ) (! (= ($generated@@452 ($generated@@243 $generated@@453 $generated@@454)) $generated@@454)
 :pattern ( ($generated@@243 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@86 (type $generated@@455))))
 (=> (and (and (= (type $generated@@455) ($generated@@82 $generated@@457 $generated@@2)) (= (type $generated@@456) ($generated@@82 $generated@@457 $generated@@2))) ($generated@@391 $generated@@455 $generated@@456)) (= $generated@@455 $generated@@456)))
 :pattern ( ($generated@@391 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@306 (type $generated@@459))))
(let (($generated@@462 ($generated@@305 (type $generated@@459))))
 (=> (and (and (= (type $generated@@459) ($generated@@303 $generated@@462 $generated@@461)) (= (type $generated@@460) ($generated@@303 $generated@@462 $generated@@461))) ($generated@@458 $generated@@459 $generated@@460)) (= $generated@@459 $generated@@460))))
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@84) ($generated@@158 $generated@@463 $generated@@150)) (or ($generated@@282 $generated@@463) ($generated@@284 $generated@@463)))
 :pattern ( ($generated@@284 $generated@@463) ($generated@@158 $generated@@463 $generated@@150))
 :pattern ( ($generated@@282 $generated@@463) ($generated@@158 $generated@@463 $generated@@150))
)))
(assert (forall (($generated@@465 T@T) ) (! (= (type ($generated@@464 $generated@@465)) ($generated@@82 $generated@@465 $generated@@4))
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@347 (type $generated@@466))))
(let (($generated@@468 ($generated@@346 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@345 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@344 $generated@@468 $generated@@467)) (= ($generated@@343 $generated@@466) ($generated@@464 $generated@@468))))))
 :pattern ( ($generated@@343 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@347 (type $generated@@469))))
(let (($generated@@471 ($generated@@346 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@345 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@344 $generated@@471 $generated@@470)) (= ($generated@@381 $generated@@469) ($generated@@464 $generated@@470))))))
 :pattern ( ($generated@@381 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@347 (type $generated@@472))))
(let (($generated@@474 ($generated@@346 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@345 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@344 $generated@@474 $generated@@473)) (= ($generated@@421 $generated@@472) ($generated@@464 $generated@@83))))))
 :pattern ( ($generated@@421 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@306 (type $generated@@475))))
(let (($generated@@477 ($generated@@305 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@303 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@337 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@83) (= (type $generated@@479) $generated@@83)) ($generated@@0 ($generated@@79 ($generated@@417 $generated@@475) ($generated@@80 ($generated@@235 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@417 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@347 (type $generated@@480))))
(let (($generated@@482 ($generated@@346 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@345 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@344 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@83) (= (type $generated@@484) $generated@@83)) ($generated@@0 ($generated@@79 ($generated@@421 $generated@@480) ($generated@@80 ($generated@@235 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@421 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@83) ($generated@@236 $generated@@485 $generated@@46)) (and (= ($generated@@80 ($generated@@317 $generated@@2 $generated@@485)) $generated@@485) ($generated@@158 ($generated@@317 $generated@@2 $generated@@485) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@485 $generated@@46))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@83) ($generated@@236 $generated@@486 $generated@@47)) (and (= ($generated@@80 ($generated@@317 $generated@@3 $generated@@486)) $generated@@486) ($generated@@158 ($generated@@317 $generated@@3 $generated@@486) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@486 $generated@@47))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@83) ($generated@@236 $generated@@487 $generated@@44)) (and (= ($generated@@80 ($generated@@317 $generated@@4 $generated@@487)) $generated@@487) ($generated@@158 ($generated@@317 $generated@@4 $generated@@487) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@487 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@488) 20))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@83) ($generated@@236 $generated@@489 $generated@@45)) (and (= ($generated@@80 ($generated@@317 $generated@@488 $generated@@489)) $generated@@489) ($generated@@158 ($generated@@317 $generated@@488 $generated@@489) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@489 $generated@@45))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) ($generated@@82 $generated@@83 $generated@@2))
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@84)
 :pattern ( ($generated@@491 $generated@@493))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@494) $generated@@84) (= (type $generated@@495) $generated@@84)) (and ($generated@@284 $generated@@494) ($generated@@284 $generated@@495))) (= ($generated@@253 $generated@@494 $generated@@495)  (and ($generated@@391 ($generated@@490 $generated@@494) ($generated@@490 $generated@@495)) ($generated@@250 ($generated@@491 $generated@@494) ($generated@@491 $generated@@495)))))
 :pattern ( ($generated@@253 $generated@@494 $generated@@495) ($generated@@284 $generated@@494))
 :pattern ( ($generated@@253 $generated@@494 $generated@@495) ($generated@@284 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@71) (= ($generated@@236 ($generated@@80 $generated@@496) $generated@@497) ($generated@@158 $generated@@496 $generated@@497)))
 :pattern ( ($generated@@236 ($generated@@80 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@86 (type $generated@@499))))
(= (type ($generated@@498 $generated@@499)) ($generated@@82 $generated@@500 $generated@@2)))
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
 (=> (= (type $generated@@501) ($generated@@82 $generated@@503 $generated@@4)) (and (= (= ($generated ($generated@@79 ($generated@@498 $generated@@501) $generated@@502)) 0)  (not ($generated@@0 ($generated@@79 $generated@@501 $generated@@502)))) (= (= ($generated ($generated@@79 ($generated@@498 $generated@@501) $generated@@502)) 1) ($generated@@0 ($generated@@79 $generated@@501 $generated@@502))))))
 :pattern ( ($generated@@79 ($generated@@498 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@86 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@82 $generated@@506 $generated@@4)) (<= 0 ($generated@@504 $generated@@505))))
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@86 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@82 $generated@@508 $generated@@2)) (<= 0 ($generated@@331 $generated@@507))))
 :pattern ( ($generated@@331 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@298 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@297 $generated@@510)) (<= 0 ($generated@@296 $generated@@509))))
 :pattern ( ($generated@@296 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@306 (type $generated@@511))))
(let (($generated@@513 ($generated@@305 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@303 $generated@@513 $generated@@512)) (<= 0 ($generated@@396 $generated@@511)))))
 :pattern ( ($generated@@396 $generated@@511))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@71)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@71) (= (type $generated@@517) $generated@@71)) (= ($generated@@514 ($generated@@402 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@402 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@71)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@71) (= (type $generated@@521) $generated@@71)) (= ($generated@@518 ($generated@@402 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@402 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@71) (= (type $generated@@523) $generated@@71)) (= ($generated@@121 ($generated@@402 $generated@@522 $generated@@523)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@71)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@71) (= (type $generated@@527) $generated@@71)) (= ($generated@@524 ($generated@@444 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@444 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@71)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@71) (= (type $generated@@531) $generated@@71)) (= ($generated@@528 ($generated@@444 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@444 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@71) (= (type $generated@@533) $generated@@71)) (= ($generated@@121 ($generated@@444 $generated@@532 $generated@@533)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@83) (= (type $generated@@535) $generated@@83)) (= ($generated@@278 ($generated@@235 $generated@@534 $generated@@535)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@71) (= (type $generated@@539) $generated@@71)) (= ($generated@@536 ($generated@@161 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@161 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@71)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@71) (= (type $generated@@543) $generated@@71)) (= ($generated@@540 ($generated@@161 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@161 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@83) (= (type $generated@@545) $generated@@83)) (= ($generated@@168 ($generated@@235 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@235 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@83) (= (type $generated@@547) $generated@@83)) (= ($generated@@169 ($generated@@235 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@235 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ($generated@@549 Bool) ) (! (= ($generated@@278 ($generated@@243 $generated@@548 $generated@@549)) $generated@@65)
 :pattern ( ($generated@@243 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 Int) ($generated@@552 Bool) ) (! (= ($generated@@550 ($generated@@243 $generated@@551 $generated@@552)) $generated@@551)
 :pattern ( ($generated@@243 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@554) $generated@@84)) (= ($generated@@278 ($generated@@81 $generated@@553 $generated@@554)) $generated@@67))
 :pattern ( ($generated@@81 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@556) $generated@@84)) (= ($generated@@490 ($generated@@81 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@81 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@558) $generated@@84)) (= ($generated@@491 ($generated@@81 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@81 $generated@@557 $generated@@558))
)))
(assert  (and (forall (($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@561)) $generated@@71)
 :pattern ( ($generated@@559 $generated@@561))
)) (forall (($generated@@562 T@U) ($generated@@563 Int) ) (! (let (($generated@@564 ($generated@@298 (type $generated@@562))))
(= (type ($generated@@560 $generated@@562 $generated@@563)) $generated@@564))
 :pattern ( ($generated@@560 $generated@@562 $generated@@563))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@297 $generated@@83)) (= (type $generated@@566) $generated@@71)) (= (type $generated@@567) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@565 ($generated@@559 $generated@@566) $generated@@567) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@296 $generated@@565))) ($generated@@272 ($generated@@560 $generated@@565 $generated@@568) $generated@@566 $generated@@567))
 :pattern ( ($generated@@560 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@123 $generated@@565 ($generated@@559 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@569 ($generated@@124 $generated@@570)) $generated@@570)
 :pattern ( ($generated@@124 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@71)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@71) (= ($generated@@571 ($generated@@256 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@256 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@121 ($generated@@256 $generated@@574)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@71)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@71) (= ($generated@@575 ($generated@@261 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@261 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@71) (= ($generated@@121 ($generated@@261 $generated@@578)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@71)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@71) (= ($generated@@579 ($generated@@152 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@152 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@71) (= ($generated@@121 ($generated@@152 $generated@@582)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@71)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@71) (= ($generated@@583 ($generated@@559 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@559 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@71) (= ($generated@@121 ($generated@@559 $generated@@586)) $generated@@57))
 :pattern ( ($generated@@559 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) ($generated@@303 $generated@@83 $generated@@83)) (= ($generated@@278 ($generated@@304 $generated@@587)) $generated@@63))
 :pattern ( ($generated@@304 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) ($generated@@303 $generated@@83 $generated@@83))
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) ($generated@@303 $generated@@83 $generated@@83)) (= ($generated@@588 ($generated@@304 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@304 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
(= ($generated@@317 $generated@@592 ($generated@@80 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@80 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@594) $generated@@71)) (= (type $generated@@595) $generated@@71)) (= ($generated@@158 $generated@@593 ($generated@@402 $generated@@594 $generated@@595)) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@83) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@593) $generated@@596))) (and ($generated@@236 ($generated@@79 ($generated@@318 $generated@@593) $generated@@596) $generated@@595) ($generated@@236 $generated@@596 $generated@@594)))
 :pattern ( ($generated@@79 ($generated@@318 $generated@@593) $generated@@596))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@593) $generated@@596))
))))
 :pattern ( ($generated@@158 $generated@@593 ($generated@@402 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@345 $generated@@83 $generated@@83)) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) (= ($generated@@158 $generated@@597 ($generated@@444 $generated@@598 $generated@@599)) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@83) ($generated@@0 ($generated@@79 ($generated@@343 $generated@@597) $generated@@600))) (and ($generated@@236 ($generated@@79 ($generated@@422 $generated@@597) $generated@@600) $generated@@599) ($generated@@236 $generated@@600 $generated@@598)))
 :pattern ( ($generated@@79 ($generated@@422 $generated@@597) $generated@@600))
 :pattern ( ($generated@@79 ($generated@@343 $generated@@597) $generated@@600))
))))
 :pattern ( ($generated@@158 $generated@@597 ($generated@@444 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@84) (= (type $generated@@602) $generated@@84)) (and ($generated@@282 $generated@@601) ($generated@@282 $generated@@602))) (= ($generated@@253 $generated@@601 $generated@@602)  (and (= ($generated@@550 $generated@@601) ($generated@@550 $generated@@602)) (= ($generated@@452 $generated@@601) ($generated@@452 $generated@@602)))))
 :pattern ( ($generated@@253 $generated@@601 $generated@@602) ($generated@@282 $generated@@601))
 :pattern ( ($generated@@253 $generated@@601 $generated@@602) ($generated@@282 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@83) (= (type $generated@@605) $generated@@83)) (< ($generated@@603 $generated@@604) ($generated@@85 ($generated@@235 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@235 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@83) (= (type $generated@@607) $generated@@83)) (< ($generated@@603 $generated@@607) ($generated@@85 ($generated@@235 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@235 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@609) $generated@@84)) (< ($generated@@85 $generated@@609) ($generated@@85 ($generated@@81 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@81 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@84) (= (type $generated@@611) $generated@@84)) true) (= ($generated@@250 $generated@@610 $generated@@611) ($generated@@458 ($generated@@588 $generated@@610) ($generated@@588 $generated@@611))))
 :pattern ( ($generated@@250 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@83) (= (type $generated@@613) $generated@@71)) (= (type $generated@@614) $generated@@71)) ($generated@@236 $generated@@612 ($generated@@402 $generated@@613 $generated@@614))) (and (= ($generated@@80 ($generated@@317 ($generated@@303 $generated@@83 $generated@@83) $generated@@612)) $generated@@612) ($generated@@158 ($generated@@317 ($generated@@303 $generated@@83 $generated@@83) $generated@@612) ($generated@@402 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@236 $generated@@612 ($generated@@402 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@83) (= (type $generated@@616) $generated@@71)) (= (type $generated@@617) $generated@@71)) ($generated@@236 $generated@@615 ($generated@@444 $generated@@616 $generated@@617))) (and (= ($generated@@80 ($generated@@317 ($generated@@345 $generated@@83 $generated@@83) $generated@@615)) $generated@@615) ($generated@@158 ($generated@@317 ($generated@@345 $generated@@83 $generated@@83) $generated@@615) ($generated@@444 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@236 $generated@@615 ($generated@@444 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@71) (= (type $generated@@619) $generated@@71)) (= (type $generated@@620) $generated@@83)) ($generated@@236 $generated@@620 ($generated@@161 $generated@@618 $generated@@619))) (and (= ($generated@@80 ($generated@@317 $generated@@84 $generated@@620)) $generated@@620) ($generated@@158 ($generated@@317 $generated@@84 $generated@@620) ($generated@@161 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@236 $generated@@620 ($generated@@161 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@622 T@T) ) (! (= (type ($generated@@621 $generated@@622)) ($generated@@82 $generated@@622 $generated@@4))
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
 (not ($generated@@0 ($generated@@79 ($generated@@621 $generated@@624) $generated@@623))))
 :pattern ( (let (($generated@@624 (type $generated@@623)))
($generated@@79 ($generated@@621 $generated@@624) $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@625)))
 (not ($generated@@0 ($generated@@79 ($generated@@464 $generated@@626) $generated@@625))))
 :pattern ( (let (($generated@@626 (type $generated@@625)))
($generated@@79 ($generated@@464 $generated@@626) $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@76)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@71) (= (type $generated@@630) $generated@@71)) (and (= ($generated@@121 ($generated@@161 $generated@@629 $generated@@630)) $generated@@62) (= ($generated@@627 ($generated@@161 $generated@@629 $generated@@630)) $generated@@68)))
 :pattern ( ($generated@@161 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@84) (= (type $generated@@632) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@632) (and ($generated@@282 $generated@@631) ($generated@@123 $generated@@631 $generated@@150 $generated@@632)))) ($generated@@123 ($generated@@8 ($generated@@550 $generated@@631)) $generated@@46 $generated@@632))
 :pattern ( ($generated@@123 ($generated@@8 ($generated@@550 $generated@@631)) $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@84) (= (type $generated@@634) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@634) (and ($generated@@282 $generated@@633) ($generated@@123 $generated@@633 $generated@@150 $generated@@634)))) ($generated@@123 ($generated@@11 ($generated@@452 $generated@@633)) $generated@@44 $generated@@634))
 :pattern ( ($generated@@123 ($generated@@11 ($generated@@452 $generated@@633)) $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@306 (type $generated@@635))))
(let (($generated@@638 ($generated@@305 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@303 $generated@@638 $generated@@637)) (= (type $generated@@636) ($generated@@303 $generated@@638 $generated@@637))) (= ($generated@@458 $generated@@635 $generated@@636)  (and (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@638) (= ($generated@@0 ($generated@@79 ($generated@@316 $generated@@635) $generated@@639)) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@636) $generated@@639))))
 :no-pattern (type $generated@@639)
 :no-pattern ($generated $generated@@639)
 :no-pattern ($generated@@0 $generated@@639)
)) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@638) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@635) $generated@@640))) (= ($generated@@79 ($generated@@318 $generated@@635) $generated@@640) ($generated@@79 ($generated@@318 $generated@@636) $generated@@640)))
 :no-pattern (type $generated@@640)
 :no-pattern ($generated $generated@@640)
 :no-pattern ($generated@@0 $generated@@640)
)))))))
 :pattern ( ($generated@@458 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@642) $generated@@84)) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@641) ($generated@@80 $generated@@642)))) (< ($generated@@85 $generated@@642) ($generated@@85 ($generated@@304 $generated@@641))))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@641) ($generated@@80 $generated@@642)) ($generated@@304 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@84) (= ($generated@@603 ($generated@@80 $generated@@643)) ($generated@@85 $generated@@643)))
 :pattern ( ($generated@@603 ($generated@@80 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@86 (type $generated@@644))))
 (=> (= (type $generated@@644) ($generated@@82 $generated@@645 $generated@@4)) (= ($generated@@331 ($generated@@498 $generated@@644)) ($generated@@504 $generated@@644))))
 :pattern ( ($generated@@331 ($generated@@498 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@306 (type $generated@@646))))
(let (($generated@@648 ($generated@@305 (type $generated@@646))))
 (=> (= (type $generated@@646) ($generated@@303 $generated@@648 $generated@@647)) (= ($generated@@504 ($generated@@316 $generated@@646)) ($generated@@396 $generated@@646)))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@646)))
)))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@306 (type $generated@@649))))
(let (($generated@@651 ($generated@@305 (type $generated@@649))))
 (=> (= (type $generated@@649) ($generated@@303 $generated@@651 $generated@@650)) (= ($generated@@504 ($generated@@417 $generated@@649)) ($generated@@396 $generated@@649)))))
 :pattern ( ($generated@@504 ($generated@@417 $generated@@649)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@306 (type $generated@@652))))
(let (($generated@@654 ($generated@@305 (type $generated@@652))))
 (=> (= (type $generated@@652) ($generated@@303 $generated@@654 $generated@@653)) (<= ($generated@@504 ($generated@@370 $generated@@652)) ($generated@@396 $generated@@652)))))
 :pattern ( ($generated@@504 ($generated@@370 $generated@@652)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@83) ($generated@@236 $generated@@655 ($generated@@124 0))) (and (= ($generated@@80 ($generated@@317 $generated@@2 $generated@@655)) $generated@@655) ($generated@@158 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@655) ($generated@@124 0))))
 :pattern ( ($generated@@236 $generated@@655 ($generated@@124 0)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@83) (= (type $generated@@657) $generated@@71)) ($generated@@236 $generated@@656 ($generated@@256 $generated@@657))) (and (= ($generated@@80 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@656)) $generated@@656) ($generated@@158 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@656) ($generated@@256 $generated@@657))))
 :pattern ( ($generated@@236 $generated@@656 ($generated@@256 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@83) (= (type $generated@@659) $generated@@71)) ($generated@@236 $generated@@658 ($generated@@261 $generated@@659))) (and (= ($generated@@80 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@658)) $generated@@658) ($generated@@158 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@658) ($generated@@261 $generated@@659))))
 :pattern ( ($generated@@236 $generated@@658 ($generated@@261 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@83) (= (type $generated@@661) $generated@@71)) ($generated@@236 $generated@@660 ($generated@@152 $generated@@661))) (and (= ($generated@@80 ($generated@@317 ($generated@@82 $generated@@83 $generated@@2) $generated@@660)) $generated@@660) ($generated@@158 ($generated@@317 ($generated@@82 $generated@@83 $generated@@2) $generated@@660) ($generated@@152 $generated@@661))))
 :pattern ( ($generated@@236 $generated@@660 ($generated@@152 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@83) (= (type $generated@@663) $generated@@71)) ($generated@@236 $generated@@662 ($generated@@559 $generated@@663))) (and (= ($generated@@80 ($generated@@317 ($generated@@297 $generated@@83) $generated@@662)) $generated@@662) ($generated@@158 ($generated@@317 ($generated@@297 $generated@@83) $generated@@662) ($generated@@559 $generated@@663))))
 :pattern ( ($generated@@236 $generated@@662 ($generated@@559 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@83 $generated@@83)) (= ($generated@@158 ($generated@@304 $generated@@664) $generated@@153) ($generated@@158 $generated@@664 ($generated@@402 $generated@@46 $generated@@44))))
 :pattern ( ($generated@@158 ($generated@@304 $generated@@664) $generated@@153))
)))
(assert (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@86 (type $generated@@665))))
 (=> (= (type $generated@@665) ($generated@@82 $generated@@666 $generated@@4)) (and (= (= ($generated@@504 $generated@@665) 0) (= $generated@@665 ($generated@@621 $generated@@666))) (=> (not (= ($generated@@504 $generated@@665) 0)) (exists (($generated@@667 T@U) ) (!  (and (= (type $generated@@667) $generated@@666) ($generated@@0 ($generated@@79 $generated@@665 $generated@@667)))
 :no-pattern (type $generated@@667)
 :no-pattern ($generated $generated@@667)
 :no-pattern ($generated@@0 $generated@@667)
))))))
 :pattern ( ($generated@@504 $generated@@665))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@84) (= (type $generated@@669) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@669) (and ($generated@@233 $generated@@668) ($generated@@123 $generated@@668 $generated@@153 $generated@@669)))) ($generated@@123 ($generated@@588 $generated@@668) ($generated@@402 $generated@@46 $generated@@44) $generated@@669))
 :pattern ( ($generated@@123 ($generated@@588 $generated@@668) ($generated@@402 $generated@@46 $generated@@44) $generated@@669))
)))
(assert (= ($generated@@121 $generated@@153) $generated@@64))
(assert (= ($generated@@627 $generated@@153) $generated@@69))
(assert (= ($generated@@121 $generated@@150) $generated@@66))
(assert (= ($generated@@627 $generated@@150) $generated@@70))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@670) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@671) $generated@@71)) (= (type $generated@@672) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@670 ($generated@@152 $generated@@671) $generated@@672) (forall (($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@83) (< 0 ($generated ($generated@@79 $generated@@670 $generated@@673)))) ($generated@@272 $generated@@673 $generated@@671 $generated@@672))
 :pattern ( ($generated@@79 $generated@@670 $generated@@673))
))))
 :pattern ( ($generated@@123 $generated@@670 ($generated@@152 $generated@@671) $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@84) (= (type $generated@@675) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@675) (and ($generated@@284 $generated@@674) ($generated@@123 $generated@@674 $generated@@150 $generated@@675)))) ($generated@@123 ($generated@@490 $generated@@674) ($generated@@152 $generated@@46) $generated@@675))
 :pattern ( ($generated@@123 ($generated@@490 $generated@@674) ($generated@@152 $generated@@46) $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) $generated@@84) (= (type $generated@@677) $generated@@71)) (= (type $generated@@678) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@678) (and ($generated@@160 $generated@@676) (exists (($generated@@679 T@U) ) (!  (and (= (type $generated@@679) $generated@@71) ($generated@@123 $generated@@676 ($generated@@161 $generated@@677 $generated@@679) $generated@@678))
 :pattern ( ($generated@@123 $generated@@676 ($generated@@161 $generated@@677 $generated@@679) $generated@@678))
))))) ($generated@@272 ($generated@@168 $generated@@676) $generated@@677 $generated@@678))
 :pattern ( ($generated@@272 ($generated@@168 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@84) (= (type $generated@@681) $generated@@71)) (= (type $generated@@682) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@682) (and ($generated@@160 $generated@@680) (exists (($generated@@683 T@U) ) (!  (and (= (type $generated@@683) $generated@@71) ($generated@@123 $generated@@680 ($generated@@161 $generated@@683 $generated@@681) $generated@@682))
 :pattern ( ($generated@@123 $generated@@680 ($generated@@161 $generated@@683 $generated@@681) $generated@@682))
))))) ($generated@@272 ($generated@@169 $generated@@680) $generated@@681 $generated@@682))
 :pattern ( ($generated@@272 ($generated@@169 $generated@@680) $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@84) (= (type $generated@@685) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@685) (and ($generated@@284 $generated@@684) ($generated@@123 $generated@@684 $generated@@150 $generated@@685)))) ($generated@@123 ($generated@@491 $generated@@684) $generated@@153 $generated@@685))
 :pattern ( ($generated@@123 ($generated@@491 $generated@@684) $generated@@153 $generated@@685))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@83) (= (type $generated@@687) $generated@@83)) (= ($generated@@235 ($generated@@268 $generated@@686) ($generated@@268 $generated@@687)) ($generated@@268 ($generated@@235 $generated@@686 $generated@@687))))
 :pattern ( ($generated@@235 ($generated@@268 $generated@@686) ($generated@@268 $generated@@687)))
)))
(assert (forall (($generated@@688 Int) ($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@4) (= ($generated@@243 ($generated@@266 $generated@@688) ($generated@@0 ($generated@@268 $generated@@689))) ($generated@@268 ($generated@@243 $generated@@688 ($generated@@0 $generated@@689)))))
 :pattern ( ($generated@@243 ($generated@@266 $generated@@688) ($generated@@0 ($generated@@268 $generated@@689))))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@691) $generated@@84)) (= ($generated@@81 ($generated@@268 $generated@@690) ($generated@@268 $generated@@691)) ($generated@@268 ($generated@@81 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@81 ($generated@@268 $generated@@690) ($generated@@268 $generated@@691)))
)))
(assert (forall (($generated@@692 Int) ) (! (= ($generated@@80 ($generated@@8 ($generated@@266 $generated@@692))) ($generated@@268 ($generated@@80 ($generated@@8 $generated@@692))))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@266 $generated@@692))))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) ($generated@@303 $generated@@83 $generated@@83)) (= ($generated@@304 ($generated@@268 $generated@@693)) ($generated@@268 ($generated@@304 $generated@@693))))
 :pattern ( ($generated@@304 ($generated@@268 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (! (= ($generated@@80 ($generated@@268 $generated@@694)) ($generated@@268 ($generated@@80 $generated@@694)))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@694)))
)))
(assert (forall (($generated@@695 Int) ($generated@@696 Bool) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@82 $generated@@125 $generated@@126)) ($generated@@151 $generated@@697)) (= ($generated@@123 ($generated@@243 $generated@@695 $generated@@696) $generated@@150 $generated@@697)  (and ($generated@@123 ($generated@@8 $generated@@695) $generated@@46 $generated@@697) ($generated@@123 ($generated@@11 $generated@@696) $generated@@44 $generated@@697))))
 :pattern ( ($generated@@123 ($generated@@243 $generated@@695 $generated@@696) $generated@@150 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ) (! (let (($generated@@699 ($generated@@298 (type $generated@@698))))
 (=> (and (= (type $generated@@698) ($generated@@297 $generated@@699)) (= ($generated@@296 $generated@@698) 0)) (= $generated@@698 ($generated@@295 $generated@@699))))
 :pattern ( ($generated@@296 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (! (let (($generated@@703 (type $generated@@701)))
 (=> (and (and (= (type $generated@@700) ($generated@@82 $generated@@703 $generated@@2)) (= (type $generated@@702) $generated@@2)) (<= 0 ($generated $generated@@702))) (= ($generated@@331 ($generated@@88 $generated@@700 $generated@@701 $generated@@702)) (+ (- ($generated@@331 $generated@@700) ($generated ($generated@@79 $generated@@700 $generated@@701))) ($generated $generated@@702)))))
 :pattern ( ($generated@@331 ($generated@@88 $generated@@700 $generated@@701 $generated@@702)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@705) $generated@@2)) ($generated@@123 $generated@@705 $generated@@46 $generated@@704))
 :pattern ( ($generated@@123 $generated@@705 $generated@@46 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@707) $generated@@3)) ($generated@@123 $generated@@707 $generated@@47 $generated@@706))
 :pattern ( ($generated@@123 $generated@@707 $generated@@47 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@709) $generated@@4)) ($generated@@123 $generated@@709 $generated@@44 $generated@@708))
 :pattern ( ($generated@@123 $generated@@709 $generated@@44 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@711) $generated@@488)) ($generated@@123 $generated@@711 $generated@@45 $generated@@710))
 :pattern ( ($generated@@123 $generated@@711 $generated@@45 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@713) $generated@@83)) ($generated@@123 $generated@@713 $generated@@48 $generated@@712))
 :pattern ( ($generated@@123 $generated@@713 $generated@@48 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) ($generated@@297 $generated@@83)) (= (type $generated@@715) $generated@@71)) (= ($generated@@158 $generated@@714 ($generated@@559 $generated@@715)) (forall (($generated@@716 Int) ) (!  (=> (and (<= 0 $generated@@716) (< $generated@@716 ($generated@@296 $generated@@714))) ($generated@@236 ($generated@@560 $generated@@714 $generated@@716) $generated@@715))
 :pattern ( ($generated@@560 $generated@@714 $generated@@716))
))))
 :pattern ( ($generated@@158 $generated@@714 ($generated@@559 $generated@@715)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 Int) ) (!  (=> (= (type $generated@@718) ($generated@@297 $generated@@83)) (=> (and (<= 0 $generated@@719) (< $generated@@719 ($generated@@296 $generated@@718))) (< ($generated@@85 ($generated@@317 $generated@@84 ($generated@@560 $generated@@718 $generated@@719))) ($generated@@717 $generated@@718))))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@84 ($generated@@560 $generated@@718 $generated@@719))))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@721) $generated@@71)) (= (type $generated@@722) $generated@@71)) ($generated@@158 $generated@@720 ($generated@@402 $generated@@721 $generated@@722))) (and (and ($generated@@158 ($generated@@316 $generated@@720) ($generated@@256 $generated@@721)) ($generated@@158 ($generated@@370 $generated@@720) ($generated@@256 $generated@@722))) ($generated@@158 ($generated@@417 $generated@@720) ($generated@@256 ($generated@@161 $generated@@721 $generated@@722)))))
 :pattern ( ($generated@@158 $generated@@720 ($generated@@402 $generated@@721 $generated@@722)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (and (= (type $generated@@723) ($generated@@345 $generated@@83 $generated@@83)) (= (type $generated@@724) $generated@@71)) (= (type $generated@@725) $generated@@71)) ($generated@@158 $generated@@723 ($generated@@444 $generated@@724 $generated@@725))) (and (and ($generated@@158 ($generated@@343 $generated@@723) ($generated@@261 $generated@@724)) ($generated@@158 ($generated@@381 $generated@@723) ($generated@@261 $generated@@725))) ($generated@@158 ($generated@@421 $generated@@723) ($generated@@261 ($generated@@161 $generated@@724 $generated@@725)))))
 :pattern ( ($generated@@158 $generated@@723 ($generated@@444 $generated@@724 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@2) ($generated@@158 $generated@@726 $generated@@46))
 :pattern ( ($generated@@158 $generated@@726 $generated@@46))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@3) ($generated@@158 $generated@@727 $generated@@47))
 :pattern ( ($generated@@158 $generated@@727 $generated@@47))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@4) ($generated@@158 $generated@@728 $generated@@44))
 :pattern ( ($generated@@158 $generated@@728 $generated@@44))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@488) ($generated@@158 $generated@@729 $generated@@45))
 :pattern ( ($generated@@158 $generated@@729 $generated@@45))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@83) ($generated@@158 $generated@@730 $generated@@48))
 :pattern ( ($generated@@158 $generated@@730 $generated@@48))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@732) $generated@@84)) (= ($generated@@158 ($generated@@81 $generated@@731 $generated@@732) $generated@@150)  (and ($generated@@158 $generated@@731 ($generated@@152 $generated@@46)) ($generated@@158 $generated@@732 $generated@@153))))
 :pattern ( ($generated@@158 ($generated@@81 $generated@@731 $generated@@732) $generated@@150))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 (T@U) Bool)
(declare-fun $generated@@739 () Int)
(assert  (and (and (and (and (= (type $generated@@733) ($generated@@179 $generated@@125 $generated@@4)) (= (type $generated@@734) $generated@@125)) (= (type $generated@@735) ($generated@@82 $generated@@125 $generated@@126))) (= (type $generated@@736) $generated@@84)) (= (type $generated@@737) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@740  (=> (= $generated@@733 ($generated@@178 $generated@@734 $generated@@735 $generated@@60 false)) (=> (and ($generated@@284 $generated@@736) ($generated@@284 $generated@@737)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@284 $generated@@736)) (=> ($generated@@284 $generated@@736) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@284 $generated@@736)) (=> ($generated@@284 $generated@@736) (=> (and ($generated@@233 ($generated@@491 $generated@@736)) ($generated@@391 ($generated@@490 $generated@@736) ($generated@@498 ($generated@@316 ($generated@@588 ($generated@@491 $generated@@736)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@284 $generated@@737)) (=> ($generated@@284 $generated@@737) (=> (= ($generated@@331 ($generated@@490 $generated@@737)) ($generated@@266 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@284 $generated@@736)) (=> ($generated@@284 $generated@@736) (=> ($generated@@233 ($generated@@491 $generated@@736)) (=> (and ($generated@@458 ($generated@@588 ($generated@@491 $generated@@736)) ($generated@@337 $generated@@83 $generated@@83)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@284 $generated@@737)))))))))))))))))
(let (($generated@@741  (=> (and ($generated@@151 $generated@@735) ($generated@@738 $generated@@735)) (=> (and (and ($generated@@158 $generated@@736 $generated@@150) ($generated@@123 $generated@@736 $generated@@150 $generated@@735)) ($generated@@400 $generated@@736)) (=> (and (and (and ($generated@@158 $generated@@737 $generated@@150) ($generated@@123 $generated@@737 $generated@@150 $generated@@735)) ($generated@@400 $generated@@737)) (and (= 2 $generated@@739) (= (ControlFlow 0 7) 2))) $generated@@740)))))
$generated@@741)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U) Bool)
(declare-fun $generated@@124 (Int) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 (T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 (Int Bool) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@U) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) Bool)
(declare-fun $generated@@396 (T@U) Int)
(declare-fun $generated@@400 (T@U) Bool)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@U) Bool)
(declare-fun $generated@@458 (T@U T@U) Bool)
(declare-fun $generated@@464 (T@T) T@U)
(declare-fun $generated@@488 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@560 (T@U Int) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(declare-fun $generated@@621 (T@T) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@717 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@72)) (= (type $generated@@67) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert  (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@82 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@87 (type $generated@@95))))
(= (type ($generated@@79 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@79 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@88 $generated@@98 $generated@@99 $generated@@100)) ($generated@@82 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@87 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@79 ($generated@@88 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@79 ($generated@@88 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@79 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@79 ($generated@@88 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@79 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@115 T@U) ) (! (= (type ($generated@@80 $generated@@115)) $generated@@83)
 :pattern ( ($generated@@80 $generated@@115))
))) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= (type ($generated@@81 $generated@@116 $generated@@117)) $generated@@84)
 :pattern ( ($generated@@81 $generated@@116 $generated@@117))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and (and (and (= (type $generated@@118) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@119) $generated@@84)) (= (type $generated@@120) $generated@@84)) (> ($generated ($generated@@79 $generated@@118 ($generated@@80 $generated@@120))) 0)) (< ($generated@@85 $generated@@120) ($generated@@85 ($generated@@81 $generated@@118 $generated@@119))))
 :pattern ( ($generated@@79 $generated@@118 ($generated@@80 $generated@@120)) ($generated@@81 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ) (! (= (type ($generated@@121 $generated@@122)) $generated@@72)
 :pattern ( ($generated@@121 $generated@@122))
)))
(assert (= ($generated@@121 $generated@@44) $generated@@49))
(assert (= ($generated@@121 $generated@@45) $generated@@50))
(assert (= ($generated@@121 $generated@@46) $generated@@51))
(assert (= ($generated@@121 $generated@@47) $generated@@52))
(assert (= ($generated@@121 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@125) 14) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@74 (type $generated@@130))))
(= (type ($generated@@127 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@127 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@126) 15)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@128 $generated@@132 $generated@@133 $generated@@134)) $generated@@126)
 :pattern ( ($generated@@128 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@74 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@127 ($generated@@128 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@127 ($generated@@128 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@127 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@127 ($generated@@128 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@127 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@124 $generated@@147)) $generated@@71)
 :pattern ( ($generated@@124 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@82 $generated@@125 $generated@@126))) ($generated@@123 $generated@@148 ($generated@@124 0) $generated@@149))
 :pattern ( ($generated@@123 $generated@@148 ($generated@@124 0) $generated@@149))
)))
(assert  (and (and (= (type $generated@@150) $generated@@71) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@71)
 :pattern ( ($generated@@152 $generated@@154))
))) (= (type $generated@@153) $generated@@71)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@156) $generated@@84)) (= (type $generated@@157) ($generated@@82 $generated@@125 $generated@@126))) ($generated@@151 $generated@@157)) (= ($generated@@123 ($generated@@81 $generated@@155 $generated@@156) $generated@@150 $generated@@157)  (and ($generated@@123 $generated@@155 ($generated@@152 $generated@@46) $generated@@157) ($generated@@123 $generated@@156 $generated@@153 $generated@@157))))
 :pattern ( ($generated@@123 ($generated@@81 $generated@@155 $generated@@156) $generated@@150 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@158 $generated@@159 ($generated@@124 0)))
 :pattern ( ($generated@@158 $generated@@159 ($generated@@124 0)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@162 $generated@@163)) $generated@@71)
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@71)) (= (type $generated@@166) $generated@@84)) ($generated@@158 $generated@@166 ($generated@@161 $generated@@164 $generated@@165))) ($generated@@160 $generated@@166))
 :pattern ( ($generated@@160 $generated@@166) ($generated@@158 $generated@@166 ($generated@@161 $generated@@164 $generated@@165)))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@83)
 :pattern ( ($generated@@168 $generated@@170))
)) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@83)
 :pattern ( ($generated@@169 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@84) (= (type $generated@@173) $generated@@84)) true) (= ($generated@@167 $generated@@172 $generated@@173)  (and (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)) (= ($generated@@169 $generated@@172) ($generated@@169 $generated@@173)))))
 :pattern ( ($generated@@167 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@176) $generated@@71)) ($generated@@158 $generated@@175 ($generated@@152 $generated@@176))) ($generated@@174 $generated@@175))
 :pattern ( ($generated@@158 $generated@@175 ($generated@@152 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 16)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@125 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@74 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@125) (= (type $generated@@227) ($generated@@82 $generated@@125 $generated@@126))) (= (type $generated@@228) ($generated@@73 $generated@@4))) (= (type $generated@@230) $generated@@125)) (= (type $generated@@231) ($generated@@73 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@127 ($generated@@79 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@84) ($generated@@158 $generated@@234 $generated@@153)) ($generated@@233 $generated@@234))
 :pattern ( ($generated@@233 $generated@@234) ($generated@@158 $generated@@234 $generated@@153))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@84)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@71) (= (type $generated@@240) $generated@@71)) (= (type $generated@@241) $generated@@83)) (= (type $generated@@242) $generated@@83)) (= ($generated@@158 ($generated@@235 $generated@@241 $generated@@242) ($generated@@161 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@158 ($generated@@235 $generated@@241 $generated@@242) ($generated@@161 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@244 Int) ($generated@@245 Bool) ) (! (= (type ($generated@@243 $generated@@244 $generated@@245)) $generated@@84)
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 Int) ($generated@@247 Bool) ) (! (= ($generated@@158 ($generated@@243 $generated@@246 $generated@@247) $generated@@150)  (and ($generated@@158 ($generated@@8 $generated@@246) $generated@@46) ($generated@@158 ($generated@@11 $generated@@247) $generated@@44)))
 :pattern ( ($generated@@158 ($generated@@243 $generated@@246 $generated@@247) $generated@@150))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@84) (= (type $generated@@249) $generated@@84)) (= ($generated@@167 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@167 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@84) (= (type $generated@@252) $generated@@84)) (= ($generated@@250 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@84) (= (type $generated@@255) $generated@@84)) (= ($generated@@253 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@259) $generated@@71)) (= ($generated@@158 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@83) ($generated@@0 ($generated@@79 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@79 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@158 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@264) $generated@@71)) (= ($generated@@158 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@83) ($generated@@0 ($generated@@79 $generated@@263 $generated@@265))) ($generated@@236 $generated@@265 $generated@@264))
 :pattern ( ($generated@@79 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@158 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@71) (= (type $generated@@274) $generated@@71)) (= (type $generated@@275) $generated@@83)) (= (type $generated@@276) $generated@@83)) (= (type $generated@@277) ($generated@@82 $generated@@125 $generated@@126))) ($generated@@151 $generated@@277)) (= ($generated@@123 ($generated@@235 $generated@@275 $generated@@276) ($generated@@161 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@123 ($generated@@235 $generated@@275 $generated@@276) ($generated@@161 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@75)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@84) (= ($generated@@160 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@160 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@84) (= ($generated@@233 $generated@@281) (= ($generated@@278 $generated@@281) $generated@@63)))
 :pattern ( ($generated@@233 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@84) (= ($generated@@282 $generated@@283) (= ($generated@@278 $generated@@283) $generated@@65)))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@84) (= ($generated@@284 $generated@@285) (= ($generated@@278 $generated@@285) $generated@@67)))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@84) ($generated@@160 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@83) (= (type $generated@@288) $generated@@83)) (= $generated@@286 ($generated@@235 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@160 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@84) ($generated@@282 $generated@@289)) (exists (($generated@@290 Int) ($generated@@291 Bool) ) (= $generated@@289 ($generated@@243 $generated@@290 $generated@@291))))
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@84) ($generated@@284 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@294) $generated@@84)) (= $generated@@292 ($generated@@81 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@284 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 17)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert  (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@303 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@303 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@303 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (= (type ($generated@@304 $generated@@313)) $generated@@84)
 :pattern ( ($generated@@304 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@84) ($generated@@233 $generated@@314)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) ($generated@@303 $generated@@83 $generated@@83)) (= $generated@@314 ($generated@@304 $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
)))
 :pattern ( ($generated@@233 $generated@@314))
)))
(assert  (and (and (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@305 (type $generated@@319))))
(= (type ($generated@@316 $generated@@319)) ($generated@@82 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@319))
)) (forall (($generated@@321 T@T) ($generated@@322 T@U) ) (! (= (type ($generated@@317 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@317 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@306 (type $generated@@323))))
(let (($generated@@325 ($generated@@305 (type $generated@@323))))
(= (type ($generated@@318 $generated@@323)) ($generated@@82 $generated@@325 $generated@@324))))
 :pattern ( ($generated@@318 $generated@@323))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (= (type $generated@@326) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@327) $generated@@83)) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@326) $generated@@327))) (< ($generated@@85 ($generated@@317 $generated@@84 ($generated@@79 ($generated@@318 $generated@@326) $generated@@327))) ($generated@@85 ($generated@@304 $generated@@326))))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@326) $generated@@327) ($generated@@304 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@71) (= (type $generated@@330) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@272 ($generated@@80 $generated@@328) $generated@@329 $generated@@330) ($generated@@123 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@272 ($generated@@80 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@333 T@T) ) (! (= (type ($generated@@332 $generated@@333)) ($generated@@82 $generated@@333 $generated@@2))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@86 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@82 $generated@@335 $generated@@2)) (and (= (= ($generated@@331 $generated@@334) 0) (= $generated@@334 ($generated@@332 $generated@@335))) (=> (not (= ($generated@@331 $generated@@334) 0)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) (< 0 ($generated ($generated@@79 $generated@@334 $generated@@336))))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) ($generated@@303 $generated@@338 $generated@@339))
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@79 ($generated@@316 ($generated@@337 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@79 ($generated@@316 ($generated@@337 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@82 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@79 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@79 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@86 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@82 $generated@@362 $generated@@2)) (= ($generated@@174 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@79 $generated@@361 $generated@@363))) (<= ($generated ($generated@@79 $generated@@361 $generated@@363)) ($generated@@331 $generated@@361))))
 :pattern ( ($generated@@79 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@174 $generated@@361))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@83) ($generated@@236 $generated@@364 $generated@@153)) (and (= ($generated@@80 ($generated@@317 $generated@@84 $generated@@364)) $generated@@364) ($generated@@158 ($generated@@317 $generated@@84 $generated@@364) $generated@@153)))
 :pattern ( ($generated@@236 $generated@@364 $generated@@153))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@83) ($generated@@236 $generated@@365 $generated@@150)) (and (= ($generated@@80 ($generated@@317 $generated@@84 $generated@@365)) $generated@@365) ($generated@@158 ($generated@@317 $generated@@84 $generated@@365) $generated@@150)))
 :pattern ( ($generated@@236 $generated@@365 $generated@@150))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@306 (type $generated@@366))))
(let (($generated@@368 ($generated@@305 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@303 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@337 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@316 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@306 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@82 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@306 (type $generated@@373))))
(let (($generated@@375 ($generated@@305 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@303 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@337 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@79 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@347 (type $generated@@377))))
(let (($generated@@379 ($generated@@346 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@345 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@344 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@79 ($generated@@343 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@343 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@347 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@82 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@347 (type $generated@@384))))
(let (($generated@@386 ($generated@@346 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@345 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@344 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@79 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@389) $generated@@71)) (= ($generated@@158 $generated@@388 ($generated@@152 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@83) (< 0 ($generated ($generated@@79 $generated@@388 $generated@@390)))) ($generated@@236 $generated@@390 $generated@@389))
 :pattern ( ($generated@@79 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@158 $generated@@388 ($generated@@152 $generated@@389)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@86 (type $generated@@392))))
 (=> (and (= (type $generated@@392) ($generated@@82 $generated@@394 $generated@@2)) (= (type $generated@@393) ($generated@@82 $generated@@394 $generated@@2))) (= ($generated@@391 $generated@@392 $generated@@393) (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@394) (= ($generated ($generated@@79 $generated@@392 $generated@@395)) ($generated ($generated@@79 $generated@@393 $generated@@395))))
 :pattern ( ($generated@@79 $generated@@392 $generated@@395))
 :pattern ( ($generated@@79 $generated@@393 $generated@@395))
)))))
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@306 (type $generated@@397))))
(let (($generated@@399 ($generated@@305 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@303 $generated@@399 $generated@@398)) (= (= ($generated@@396 $generated@@397) 0) (= $generated@@397 ($generated@@337 $generated@@399 $generated@@398))))))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@84) ($generated@@400 $generated@@401)) (or ($generated@@282 $generated@@401) ($generated@@284 $generated@@401)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@71)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@406) ($generated@@82 $generated@@125 $generated@@126))) ($generated@@151 $generated@@406)) (= ($generated@@123 ($generated@@304 $generated@@405) $generated@@153 $generated@@406) ($generated@@123 $generated@@405 ($generated@@402 $generated@@46 $generated@@44) $generated@@406)))
 :pattern ( ($generated@@123 ($generated@@304 $generated@@405) $generated@@153 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@408) $generated@@71)) (= (type $generated@@409) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@407 ($generated@@256 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@83) ($generated@@0 ($generated@@79 $generated@@407 $generated@@410))) ($generated@@272 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@79 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@123 $generated@@407 ($generated@@256 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@412) $generated@@71)) (= (type $generated@@413) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@411 ($generated@@261 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@83) ($generated@@0 ($generated@@79 $generated@@411 $generated@@414))) ($generated@@272 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@79 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@123 $generated@@411 ($generated@@261 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(= ($generated ($generated@@79 ($generated@@332 $generated@@416) $generated@@415)) 0))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@79 ($generated@@332 $generated@@416) $generated@@415)))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@82 $generated@@83 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@420) $generated@@83)) (= ($generated@@0 ($generated@@79 ($generated@@417 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@79 ($generated@@316 $generated@@419) ($generated@@168 ($generated@@317 $generated@@84 $generated@@420)))) (= ($generated@@79 ($generated@@318 $generated@@419) ($generated@@168 ($generated@@317 $generated@@84 $generated@@420))) ($generated@@169 ($generated@@317 $generated@@84 $generated@@420))))))
 :pattern ( ($generated@@79 ($generated@@417 $generated@@419) $generated@@420))
)))
(assert  (and (forall (($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@423)) ($generated@@82 $generated@@83 $generated@@4))
 :pattern ( ($generated@@421 $generated@@423))
)) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@347 (type $generated@@424))))
(let (($generated@@426 ($generated@@346 (type $generated@@424))))
(= (type ($generated@@422 $generated@@424)) ($generated@@82 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@422 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@345 $generated@@83 $generated@@83)) (= (type $generated@@428) $generated@@83)) (= ($generated@@0 ($generated@@79 ($generated@@421 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@79 ($generated@@343 $generated@@427) ($generated@@168 ($generated@@317 $generated@@84 $generated@@428)))) (= ($generated@@79 ($generated@@422 $generated@@427) ($generated@@168 ($generated@@317 $generated@@84 $generated@@428))) ($generated@@169 ($generated@@317 $generated@@84 $generated@@428))))))
 :pattern ( ($generated@@79 ($generated@@421 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@305 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@303 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@79 ($generated@@370 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@79 ($generated@@316 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@79 ($generated@@318 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@429) $generated@@433))
 :pattern ( ($generated@@79 ($generated@@318 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@79 ($generated@@370 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@346 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@345 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@79 ($generated@@381 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@79 ($generated@@343 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@79 ($generated@@422 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@79 ($generated@@343 $generated@@434) $generated@@438))
 :pattern ( ($generated@@79 ($generated@@422 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@79 ($generated@@381 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@440) $generated@@71)) (= (type $generated@@441) $generated@@71)) (= (type $generated@@442) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@439 ($generated@@402 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@83) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@439) $generated@@443))) (and ($generated@@272 ($generated@@79 ($generated@@318 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@272 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@79 ($generated@@318 $generated@@439) $generated@@443))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@123 $generated@@439 ($generated@@402 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@71)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@345 $generated@@83 $generated@@83)) (= (type $generated@@448) $generated@@71)) (= (type $generated@@449) $generated@@71)) (= (type $generated@@450) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@83) ($generated@@0 ($generated@@79 ($generated@@343 $generated@@447) $generated@@451))) (and ($generated@@272 ($generated@@79 ($generated@@422 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@272 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@79 ($generated@@422 $generated@@447) $generated@@451))
 :pattern ( ($generated@@79 ($generated@@343 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@123 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 Int) ($generated@@454 Bool) ) (! (= ($generated@@452 ($generated@@243 $generated@@453 $generated@@454)) $generated@@454)
 :pattern ( ($generated@@243 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@86 (type $generated@@455))))
 (=> (and (and (= (type $generated@@455) ($generated@@82 $generated@@457 $generated@@2)) (= (type $generated@@456) ($generated@@82 $generated@@457 $generated@@2))) ($generated@@391 $generated@@455 $generated@@456)) (= $generated@@455 $generated@@456)))
 :pattern ( ($generated@@391 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@306 (type $generated@@459))))
(let (($generated@@462 ($generated@@305 (type $generated@@459))))
 (=> (and (and (= (type $generated@@459) ($generated@@303 $generated@@462 $generated@@461)) (= (type $generated@@460) ($generated@@303 $generated@@462 $generated@@461))) ($generated@@458 $generated@@459 $generated@@460)) (= $generated@@459 $generated@@460))))
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@84) ($generated@@158 $generated@@463 $generated@@150)) (or ($generated@@282 $generated@@463) ($generated@@284 $generated@@463)))
 :pattern ( ($generated@@284 $generated@@463) ($generated@@158 $generated@@463 $generated@@150))
 :pattern ( ($generated@@282 $generated@@463) ($generated@@158 $generated@@463 $generated@@150))
)))
(assert (forall (($generated@@465 T@T) ) (! (= (type ($generated@@464 $generated@@465)) ($generated@@82 $generated@@465 $generated@@4))
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@347 (type $generated@@466))))
(let (($generated@@468 ($generated@@346 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@345 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@344 $generated@@468 $generated@@467)) (= ($generated@@343 $generated@@466) ($generated@@464 $generated@@468))))))
 :pattern ( ($generated@@343 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@347 (type $generated@@469))))
(let (($generated@@471 ($generated@@346 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@345 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@344 $generated@@471 $generated@@470)) (= ($generated@@381 $generated@@469) ($generated@@464 $generated@@470))))))
 :pattern ( ($generated@@381 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@347 (type $generated@@472))))
(let (($generated@@474 ($generated@@346 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@345 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@344 $generated@@474 $generated@@473)) (= ($generated@@421 $generated@@472) ($generated@@464 $generated@@83))))))
 :pattern ( ($generated@@421 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@306 (type $generated@@475))))
(let (($generated@@477 ($generated@@305 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@303 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@337 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@83) (= (type $generated@@479) $generated@@83)) ($generated@@0 ($generated@@79 ($generated@@417 $generated@@475) ($generated@@80 ($generated@@235 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@417 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@347 (type $generated@@480))))
(let (($generated@@482 ($generated@@346 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@345 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@344 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@83) (= (type $generated@@484) $generated@@83)) ($generated@@0 ($generated@@79 ($generated@@421 $generated@@480) ($generated@@80 ($generated@@235 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@421 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@83) ($generated@@236 $generated@@485 $generated@@46)) (and (= ($generated@@80 ($generated@@317 $generated@@2 $generated@@485)) $generated@@485) ($generated@@158 ($generated@@317 $generated@@2 $generated@@485) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@485 $generated@@46))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@83) ($generated@@236 $generated@@486 $generated@@47)) (and (= ($generated@@80 ($generated@@317 $generated@@3 $generated@@486)) $generated@@486) ($generated@@158 ($generated@@317 $generated@@3 $generated@@486) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@486 $generated@@47))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@83) ($generated@@236 $generated@@487 $generated@@44)) (and (= ($generated@@80 ($generated@@317 $generated@@4 $generated@@487)) $generated@@487) ($generated@@158 ($generated@@317 $generated@@4 $generated@@487) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@487 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@488) 20))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@83) ($generated@@236 $generated@@489 $generated@@45)) (and (= ($generated@@80 ($generated@@317 $generated@@488 $generated@@489)) $generated@@489) ($generated@@158 ($generated@@317 $generated@@488 $generated@@489) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@489 $generated@@45))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) ($generated@@82 $generated@@83 $generated@@2))
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@84)
 :pattern ( ($generated@@491 $generated@@493))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@494) $generated@@84) (= (type $generated@@495) $generated@@84)) (and ($generated@@284 $generated@@494) ($generated@@284 $generated@@495))) (= ($generated@@253 $generated@@494 $generated@@495)  (and ($generated@@391 ($generated@@490 $generated@@494) ($generated@@490 $generated@@495)) ($generated@@250 ($generated@@491 $generated@@494) ($generated@@491 $generated@@495)))))
 :pattern ( ($generated@@253 $generated@@494 $generated@@495) ($generated@@284 $generated@@494))
 :pattern ( ($generated@@253 $generated@@494 $generated@@495) ($generated@@284 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@71) (= ($generated@@236 ($generated@@80 $generated@@496) $generated@@497) ($generated@@158 $generated@@496 $generated@@497)))
 :pattern ( ($generated@@236 ($generated@@80 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@86 (type $generated@@499))))
(= (type ($generated@@498 $generated@@499)) ($generated@@82 $generated@@500 $generated@@2)))
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
 (=> (= (type $generated@@501) ($generated@@82 $generated@@503 $generated@@4)) (and (= (= ($generated ($generated@@79 ($generated@@498 $generated@@501) $generated@@502)) 0)  (not ($generated@@0 ($generated@@79 $generated@@501 $generated@@502)))) (= (= ($generated ($generated@@79 ($generated@@498 $generated@@501) $generated@@502)) 1) ($generated@@0 ($generated@@79 $generated@@501 $generated@@502))))))
 :pattern ( ($generated@@79 ($generated@@498 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@86 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@82 $generated@@506 $generated@@4)) (<= 0 ($generated@@504 $generated@@505))))
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@86 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@82 $generated@@508 $generated@@2)) (<= 0 ($generated@@331 $generated@@507))))
 :pattern ( ($generated@@331 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@298 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@297 $generated@@510)) (<= 0 ($generated@@296 $generated@@509))))
 :pattern ( ($generated@@296 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@306 (type $generated@@511))))
(let (($generated@@513 ($generated@@305 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@303 $generated@@513 $generated@@512)) (<= 0 ($generated@@396 $generated@@511)))))
 :pattern ( ($generated@@396 $generated@@511))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@71)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@71) (= (type $generated@@517) $generated@@71)) (= ($generated@@514 ($generated@@402 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@402 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@71)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@71) (= (type $generated@@521) $generated@@71)) (= ($generated@@518 ($generated@@402 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@402 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@71) (= (type $generated@@523) $generated@@71)) (= ($generated@@121 ($generated@@402 $generated@@522 $generated@@523)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@71)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@71) (= (type $generated@@527) $generated@@71)) (= ($generated@@524 ($generated@@444 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@444 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@71)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@71) (= (type $generated@@531) $generated@@71)) (= ($generated@@528 ($generated@@444 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@444 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@71) (= (type $generated@@533) $generated@@71)) (= ($generated@@121 ($generated@@444 $generated@@532 $generated@@533)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@83) (= (type $generated@@535) $generated@@83)) (= ($generated@@278 ($generated@@235 $generated@@534 $generated@@535)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@71) (= (type $generated@@539) $generated@@71)) (= ($generated@@536 ($generated@@161 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@161 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@71)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@71) (= (type $generated@@543) $generated@@71)) (= ($generated@@540 ($generated@@161 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@161 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@83) (= (type $generated@@545) $generated@@83)) (= ($generated@@168 ($generated@@235 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@235 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@83) (= (type $generated@@547) $generated@@83)) (= ($generated@@169 ($generated@@235 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@235 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ($generated@@549 Bool) ) (! (= ($generated@@278 ($generated@@243 $generated@@548 $generated@@549)) $generated@@65)
 :pattern ( ($generated@@243 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 Int) ($generated@@552 Bool) ) (! (= ($generated@@550 ($generated@@243 $generated@@551 $generated@@552)) $generated@@551)
 :pattern ( ($generated@@243 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@554) $generated@@84)) (= ($generated@@278 ($generated@@81 $generated@@553 $generated@@554)) $generated@@67))
 :pattern ( ($generated@@81 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@556) $generated@@84)) (= ($generated@@490 ($generated@@81 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@81 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@558) $generated@@84)) (= ($generated@@491 ($generated@@81 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@81 $generated@@557 $generated@@558))
)))
(assert  (and (forall (($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@561)) $generated@@71)
 :pattern ( ($generated@@559 $generated@@561))
)) (forall (($generated@@562 T@U) ($generated@@563 Int) ) (! (let (($generated@@564 ($generated@@298 (type $generated@@562))))
(= (type ($generated@@560 $generated@@562 $generated@@563)) $generated@@564))
 :pattern ( ($generated@@560 $generated@@562 $generated@@563))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@297 $generated@@83)) (= (type $generated@@566) $generated@@71)) (= (type $generated@@567) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@565 ($generated@@559 $generated@@566) $generated@@567) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@296 $generated@@565))) ($generated@@272 ($generated@@560 $generated@@565 $generated@@568) $generated@@566 $generated@@567))
 :pattern ( ($generated@@560 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@123 $generated@@565 ($generated@@559 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@569 ($generated@@124 $generated@@570)) $generated@@570)
 :pattern ( ($generated@@124 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@71)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@71) (= ($generated@@571 ($generated@@256 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@256 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@121 ($generated@@256 $generated@@574)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@71)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@71) (= ($generated@@575 ($generated@@261 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@261 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@71) (= ($generated@@121 ($generated@@261 $generated@@578)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@71)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@71) (= ($generated@@579 ($generated@@152 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@152 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@71) (= ($generated@@121 ($generated@@152 $generated@@582)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@71)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@71) (= ($generated@@583 ($generated@@559 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@559 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@71) (= ($generated@@121 ($generated@@559 $generated@@586)) $generated@@57))
 :pattern ( ($generated@@559 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) ($generated@@303 $generated@@83 $generated@@83)) (= ($generated@@278 ($generated@@304 $generated@@587)) $generated@@63))
 :pattern ( ($generated@@304 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) ($generated@@303 $generated@@83 $generated@@83))
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) ($generated@@303 $generated@@83 $generated@@83)) (= ($generated@@588 ($generated@@304 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@304 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
(= ($generated@@317 $generated@@592 ($generated@@80 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@80 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@594) $generated@@71)) (= (type $generated@@595) $generated@@71)) (= ($generated@@158 $generated@@593 ($generated@@402 $generated@@594 $generated@@595)) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@83) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@593) $generated@@596))) (and ($generated@@236 ($generated@@79 ($generated@@318 $generated@@593) $generated@@596) $generated@@595) ($generated@@236 $generated@@596 $generated@@594)))
 :pattern ( ($generated@@79 ($generated@@318 $generated@@593) $generated@@596))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@593) $generated@@596))
))))
 :pattern ( ($generated@@158 $generated@@593 ($generated@@402 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@345 $generated@@83 $generated@@83)) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) (= ($generated@@158 $generated@@597 ($generated@@444 $generated@@598 $generated@@599)) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@83) ($generated@@0 ($generated@@79 ($generated@@343 $generated@@597) $generated@@600))) (and ($generated@@236 ($generated@@79 ($generated@@422 $generated@@597) $generated@@600) $generated@@599) ($generated@@236 $generated@@600 $generated@@598)))
 :pattern ( ($generated@@79 ($generated@@422 $generated@@597) $generated@@600))
 :pattern ( ($generated@@79 ($generated@@343 $generated@@597) $generated@@600))
))))
 :pattern ( ($generated@@158 $generated@@597 ($generated@@444 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@84) (= (type $generated@@602) $generated@@84)) (and ($generated@@282 $generated@@601) ($generated@@282 $generated@@602))) (= ($generated@@253 $generated@@601 $generated@@602)  (and (= ($generated@@550 $generated@@601) ($generated@@550 $generated@@602)) (= ($generated@@452 $generated@@601) ($generated@@452 $generated@@602)))))
 :pattern ( ($generated@@253 $generated@@601 $generated@@602) ($generated@@282 $generated@@601))
 :pattern ( ($generated@@253 $generated@@601 $generated@@602) ($generated@@282 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@83) (= (type $generated@@605) $generated@@83)) (< ($generated@@603 $generated@@604) ($generated@@85 ($generated@@235 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@235 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@83) (= (type $generated@@607) $generated@@83)) (< ($generated@@603 $generated@@607) ($generated@@85 ($generated@@235 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@235 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@609) $generated@@84)) (< ($generated@@85 $generated@@609) ($generated@@85 ($generated@@81 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@81 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@84) (= (type $generated@@611) $generated@@84)) true) (= ($generated@@250 $generated@@610 $generated@@611) ($generated@@458 ($generated@@588 $generated@@610) ($generated@@588 $generated@@611))))
 :pattern ( ($generated@@250 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@83) (= (type $generated@@613) $generated@@71)) (= (type $generated@@614) $generated@@71)) ($generated@@236 $generated@@612 ($generated@@402 $generated@@613 $generated@@614))) (and (= ($generated@@80 ($generated@@317 ($generated@@303 $generated@@83 $generated@@83) $generated@@612)) $generated@@612) ($generated@@158 ($generated@@317 ($generated@@303 $generated@@83 $generated@@83) $generated@@612) ($generated@@402 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@236 $generated@@612 ($generated@@402 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@83) (= (type $generated@@616) $generated@@71)) (= (type $generated@@617) $generated@@71)) ($generated@@236 $generated@@615 ($generated@@444 $generated@@616 $generated@@617))) (and (= ($generated@@80 ($generated@@317 ($generated@@345 $generated@@83 $generated@@83) $generated@@615)) $generated@@615) ($generated@@158 ($generated@@317 ($generated@@345 $generated@@83 $generated@@83) $generated@@615) ($generated@@444 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@236 $generated@@615 ($generated@@444 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@71) (= (type $generated@@619) $generated@@71)) (= (type $generated@@620) $generated@@83)) ($generated@@236 $generated@@620 ($generated@@161 $generated@@618 $generated@@619))) (and (= ($generated@@80 ($generated@@317 $generated@@84 $generated@@620)) $generated@@620) ($generated@@158 ($generated@@317 $generated@@84 $generated@@620) ($generated@@161 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@236 $generated@@620 ($generated@@161 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@622 T@T) ) (! (= (type ($generated@@621 $generated@@622)) ($generated@@82 $generated@@622 $generated@@4))
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
 (not ($generated@@0 ($generated@@79 ($generated@@621 $generated@@624) $generated@@623))))
 :pattern ( (let (($generated@@624 (type $generated@@623)))
($generated@@79 ($generated@@621 $generated@@624) $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@625)))
 (not ($generated@@0 ($generated@@79 ($generated@@464 $generated@@626) $generated@@625))))
 :pattern ( (let (($generated@@626 (type $generated@@625)))
($generated@@79 ($generated@@464 $generated@@626) $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@76)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@71) (= (type $generated@@630) $generated@@71)) (and (= ($generated@@121 ($generated@@161 $generated@@629 $generated@@630)) $generated@@62) (= ($generated@@627 ($generated@@161 $generated@@629 $generated@@630)) $generated@@68)))
 :pattern ( ($generated@@161 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@84) (= (type $generated@@632) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@632) (and ($generated@@282 $generated@@631) ($generated@@123 $generated@@631 $generated@@150 $generated@@632)))) ($generated@@123 ($generated@@8 ($generated@@550 $generated@@631)) $generated@@46 $generated@@632))
 :pattern ( ($generated@@123 ($generated@@8 ($generated@@550 $generated@@631)) $generated@@46 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@84) (= (type $generated@@634) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@634) (and ($generated@@282 $generated@@633) ($generated@@123 $generated@@633 $generated@@150 $generated@@634)))) ($generated@@123 ($generated@@11 ($generated@@452 $generated@@633)) $generated@@44 $generated@@634))
 :pattern ( ($generated@@123 ($generated@@11 ($generated@@452 $generated@@633)) $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@306 (type $generated@@635))))
(let (($generated@@638 ($generated@@305 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@303 $generated@@638 $generated@@637)) (= (type $generated@@636) ($generated@@303 $generated@@638 $generated@@637))) (= ($generated@@458 $generated@@635 $generated@@636)  (and (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@638) (= ($generated@@0 ($generated@@79 ($generated@@316 $generated@@635) $generated@@639)) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@636) $generated@@639))))
 :no-pattern (type $generated@@639)
 :no-pattern ($generated $generated@@639)
 :no-pattern ($generated@@0 $generated@@639)
)) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@638) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@635) $generated@@640))) (= ($generated@@79 ($generated@@318 $generated@@635) $generated@@640) ($generated@@79 ($generated@@318 $generated@@636) $generated@@640)))
 :no-pattern (type $generated@@640)
 :no-pattern ($generated $generated@@640)
 :no-pattern ($generated@@0 $generated@@640)
)))))))
 :pattern ( ($generated@@458 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@642) $generated@@84)) ($generated@@0 ($generated@@79 ($generated@@316 $generated@@641) ($generated@@80 $generated@@642)))) (< ($generated@@85 $generated@@642) ($generated@@85 ($generated@@304 $generated@@641))))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@641) ($generated@@80 $generated@@642)) ($generated@@304 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@84) (= ($generated@@603 ($generated@@80 $generated@@643)) ($generated@@85 $generated@@643)))
 :pattern ( ($generated@@603 ($generated@@80 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@86 (type $generated@@644))))
 (=> (= (type $generated@@644) ($generated@@82 $generated@@645 $generated@@4)) (= ($generated@@331 ($generated@@498 $generated@@644)) ($generated@@504 $generated@@644))))
 :pattern ( ($generated@@331 ($generated@@498 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@306 (type $generated@@646))))
(let (($generated@@648 ($generated@@305 (type $generated@@646))))
 (=> (= (type $generated@@646) ($generated@@303 $generated@@648 $generated@@647)) (= ($generated@@504 ($generated@@316 $generated@@646)) ($generated@@396 $generated@@646)))))
 :pattern ( ($generated@@504 ($generated@@316 $generated@@646)))
)))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@306 (type $generated@@649))))
(let (($generated@@651 ($generated@@305 (type $generated@@649))))
 (=> (= (type $generated@@649) ($generated@@303 $generated@@651 $generated@@650)) (= ($generated@@504 ($generated@@417 $generated@@649)) ($generated@@396 $generated@@649)))))
 :pattern ( ($generated@@504 ($generated@@417 $generated@@649)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@306 (type $generated@@652))))
(let (($generated@@654 ($generated@@305 (type $generated@@652))))
 (=> (= (type $generated@@652) ($generated@@303 $generated@@654 $generated@@653)) (<= ($generated@@504 ($generated@@370 $generated@@652)) ($generated@@396 $generated@@652)))))
 :pattern ( ($generated@@504 ($generated@@370 $generated@@652)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@83) ($generated@@236 $generated@@655 ($generated@@124 0))) (and (= ($generated@@80 ($generated@@317 $generated@@2 $generated@@655)) $generated@@655) ($generated@@158 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@655) ($generated@@124 0))))
 :pattern ( ($generated@@236 $generated@@655 ($generated@@124 0)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@83) (= (type $generated@@657) $generated@@71)) ($generated@@236 $generated@@656 ($generated@@256 $generated@@657))) (and (= ($generated@@80 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@656)) $generated@@656) ($generated@@158 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@656) ($generated@@256 $generated@@657))))
 :pattern ( ($generated@@236 $generated@@656 ($generated@@256 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (= (type $generated@@658) $generated@@83) (= (type $generated@@659) $generated@@71)) ($generated@@236 $generated@@658 ($generated@@261 $generated@@659))) (and (= ($generated@@80 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@658)) $generated@@658) ($generated@@158 ($generated@@317 ($generated@@82 $generated@@83 $generated@@4) $generated@@658) ($generated@@261 $generated@@659))))
 :pattern ( ($generated@@236 $generated@@658 ($generated@@261 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@83) (= (type $generated@@661) $generated@@71)) ($generated@@236 $generated@@660 ($generated@@152 $generated@@661))) (and (= ($generated@@80 ($generated@@317 ($generated@@82 $generated@@83 $generated@@2) $generated@@660)) $generated@@660) ($generated@@158 ($generated@@317 ($generated@@82 $generated@@83 $generated@@2) $generated@@660) ($generated@@152 $generated@@661))))
 :pattern ( ($generated@@236 $generated@@660 ($generated@@152 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@83) (= (type $generated@@663) $generated@@71)) ($generated@@236 $generated@@662 ($generated@@559 $generated@@663))) (and (= ($generated@@80 ($generated@@317 ($generated@@297 $generated@@83) $generated@@662)) $generated@@662) ($generated@@158 ($generated@@317 ($generated@@297 $generated@@83) $generated@@662) ($generated@@559 $generated@@663))))
 :pattern ( ($generated@@236 $generated@@662 ($generated@@559 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@83 $generated@@83)) (= ($generated@@158 ($generated@@304 $generated@@664) $generated@@153) ($generated@@158 $generated@@664 ($generated@@402 $generated@@46 $generated@@44))))
 :pattern ( ($generated@@158 ($generated@@304 $generated@@664) $generated@@153))
)))
(assert (forall (($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@86 (type $generated@@665))))
 (=> (= (type $generated@@665) ($generated@@82 $generated@@666 $generated@@4)) (and (= (= ($generated@@504 $generated@@665) 0) (= $generated@@665 ($generated@@621 $generated@@666))) (=> (not (= ($generated@@504 $generated@@665) 0)) (exists (($generated@@667 T@U) ) (!  (and (= (type $generated@@667) $generated@@666) ($generated@@0 ($generated@@79 $generated@@665 $generated@@667)))
 :no-pattern (type $generated@@667)
 :no-pattern ($generated $generated@@667)
 :no-pattern ($generated@@0 $generated@@667)
))))))
 :pattern ( ($generated@@504 $generated@@665))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@84) (= (type $generated@@669) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@669) (and ($generated@@233 $generated@@668) ($generated@@123 $generated@@668 $generated@@153 $generated@@669)))) ($generated@@123 ($generated@@588 $generated@@668) ($generated@@402 $generated@@46 $generated@@44) $generated@@669))
 :pattern ( ($generated@@123 ($generated@@588 $generated@@668) ($generated@@402 $generated@@46 $generated@@44) $generated@@669))
)))
(assert (= ($generated@@121 $generated@@153) $generated@@64))
(assert (= ($generated@@627 $generated@@153) $generated@@69))
(assert (= ($generated@@121 $generated@@150) $generated@@66))
(assert (= ($generated@@627 $generated@@150) $generated@@70))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@670) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@671) $generated@@71)) (= (type $generated@@672) ($generated@@82 $generated@@125 $generated@@126))) (= ($generated@@123 $generated@@670 ($generated@@152 $generated@@671) $generated@@672) (forall (($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@83) (< 0 ($generated ($generated@@79 $generated@@670 $generated@@673)))) ($generated@@272 $generated@@673 $generated@@671 $generated@@672))
 :pattern ( ($generated@@79 $generated@@670 $generated@@673))
))))
 :pattern ( ($generated@@123 $generated@@670 ($generated@@152 $generated@@671) $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@84) (= (type $generated@@675) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@675) (and ($generated@@284 $generated@@674) ($generated@@123 $generated@@674 $generated@@150 $generated@@675)))) ($generated@@123 ($generated@@490 $generated@@674) ($generated@@152 $generated@@46) $generated@@675))
 :pattern ( ($generated@@123 ($generated@@490 $generated@@674) ($generated@@152 $generated@@46) $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) $generated@@84) (= (type $generated@@677) $generated@@71)) (= (type $generated@@678) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@678) (and ($generated@@160 $generated@@676) (exists (($generated@@679 T@U) ) (!  (and (= (type $generated@@679) $generated@@71) ($generated@@123 $generated@@676 ($generated@@161 $generated@@677 $generated@@679) $generated@@678))
 :pattern ( ($generated@@123 $generated@@676 ($generated@@161 $generated@@677 $generated@@679) $generated@@678))
))))) ($generated@@272 ($generated@@168 $generated@@676) $generated@@677 $generated@@678))
 :pattern ( ($generated@@272 ($generated@@168 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@84) (= (type $generated@@681) $generated@@71)) (= (type $generated@@682) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@682) (and ($generated@@160 $generated@@680) (exists (($generated@@683 T@U) ) (!  (and (= (type $generated@@683) $generated@@71) ($generated@@123 $generated@@680 ($generated@@161 $generated@@683 $generated@@681) $generated@@682))
 :pattern ( ($generated@@123 $generated@@680 ($generated@@161 $generated@@683 $generated@@681) $generated@@682))
))))) ($generated@@272 ($generated@@169 $generated@@680) $generated@@681 $generated@@682))
 :pattern ( ($generated@@272 ($generated@@169 $generated@@680) $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@84) (= (type $generated@@685) ($generated@@82 $generated@@125 $generated@@126))) (and ($generated@@151 $generated@@685) (and ($generated@@284 $generated@@684) ($generated@@123 $generated@@684 $generated@@150 $generated@@685)))) ($generated@@123 ($generated@@491 $generated@@684) $generated@@153 $generated@@685))
 :pattern ( ($generated@@123 ($generated@@491 $generated@@684) $generated@@153 $generated@@685))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@83) (= (type $generated@@687) $generated@@83)) (= ($generated@@235 ($generated@@268 $generated@@686) ($generated@@268 $generated@@687)) ($generated@@268 ($generated@@235 $generated@@686 $generated@@687))))
 :pattern ( ($generated@@235 ($generated@@268 $generated@@686) ($generated@@268 $generated@@687)))
)))
(assert (forall (($generated@@688 Int) ($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@4) (= ($generated@@243 ($generated@@266 $generated@@688) ($generated@@0 ($generated@@268 $generated@@689))) ($generated@@268 ($generated@@243 $generated@@688 ($generated@@0 $generated@@689)))))
 :pattern ( ($generated@@243 ($generated@@266 $generated@@688) ($generated@@0 ($generated@@268 $generated@@689))))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@691) $generated@@84)) (= ($generated@@81 ($generated@@268 $generated@@690) ($generated@@268 $generated@@691)) ($generated@@268 ($generated@@81 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@81 ($generated@@268 $generated@@690) ($generated@@268 $generated@@691)))
)))
(assert (forall (($generated@@692 Int) ) (! (= ($generated@@80 ($generated@@8 ($generated@@266 $generated@@692))) ($generated@@268 ($generated@@80 ($generated@@8 $generated@@692))))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@266 $generated@@692))))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) ($generated@@303 $generated@@83 $generated@@83)) (= ($generated@@304 ($generated@@268 $generated@@693)) ($generated@@268 ($generated@@304 $generated@@693))))
 :pattern ( ($generated@@304 ($generated@@268 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (! (= ($generated@@80 ($generated@@268 $generated@@694)) ($generated@@268 ($generated@@80 $generated@@694)))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@694)))
)))
(assert (forall (($generated@@695 Int) ($generated@@696 Bool) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@82 $generated@@125 $generated@@126)) ($generated@@151 $generated@@697)) (= ($generated@@123 ($generated@@243 $generated@@695 $generated@@696) $generated@@150 $generated@@697)  (and ($generated@@123 ($generated@@8 $generated@@695) $generated@@46 $generated@@697) ($generated@@123 ($generated@@11 $generated@@696) $generated@@44 $generated@@697))))
 :pattern ( ($generated@@123 ($generated@@243 $generated@@695 $generated@@696) $generated@@150 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ) (! (let (($generated@@699 ($generated@@298 (type $generated@@698))))
 (=> (and (= (type $generated@@698) ($generated@@297 $generated@@699)) (= ($generated@@296 $generated@@698) 0)) (= $generated@@698 ($generated@@295 $generated@@699))))
 :pattern ( ($generated@@296 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (! (let (($generated@@703 (type $generated@@701)))
 (=> (and (and (= (type $generated@@700) ($generated@@82 $generated@@703 $generated@@2)) (= (type $generated@@702) $generated@@2)) (<= 0 ($generated $generated@@702))) (= ($generated@@331 ($generated@@88 $generated@@700 $generated@@701 $generated@@702)) (+ (- ($generated@@331 $generated@@700) ($generated ($generated@@79 $generated@@700 $generated@@701))) ($generated $generated@@702)))))
 :pattern ( ($generated@@331 ($generated@@88 $generated@@700 $generated@@701 $generated@@702)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@705) $generated@@2)) ($generated@@123 $generated@@705 $generated@@46 $generated@@704))
 :pattern ( ($generated@@123 $generated@@705 $generated@@46 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@707) $generated@@3)) ($generated@@123 $generated@@707 $generated@@47 $generated@@706))
 :pattern ( ($generated@@123 $generated@@707 $generated@@47 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@709) $generated@@4)) ($generated@@123 $generated@@709 $generated@@44 $generated@@708))
 :pattern ( ($generated@@123 $generated@@709 $generated@@44 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@711) $generated@@488)) ($generated@@123 $generated@@711 $generated@@45 $generated@@710))
 :pattern ( ($generated@@123 $generated@@711 $generated@@45 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) ($generated@@82 $generated@@125 $generated@@126)) (= (type $generated@@713) $generated@@83)) ($generated@@123 $generated@@713 $generated@@48 $generated@@712))
 :pattern ( ($generated@@123 $generated@@713 $generated@@48 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) ($generated@@297 $generated@@83)) (= (type $generated@@715) $generated@@71)) (= ($generated@@158 $generated@@714 ($generated@@559 $generated@@715)) (forall (($generated@@716 Int) ) (!  (=> (and (<= 0 $generated@@716) (< $generated@@716 ($generated@@296 $generated@@714))) ($generated@@236 ($generated@@560 $generated@@714 $generated@@716) $generated@@715))
 :pattern ( ($generated@@560 $generated@@714 $generated@@716))
))))
 :pattern ( ($generated@@158 $generated@@714 ($generated@@559 $generated@@715)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 Int) ) (!  (=> (= (type $generated@@718) ($generated@@297 $generated@@83)) (=> (and (<= 0 $generated@@719) (< $generated@@719 ($generated@@296 $generated@@718))) (< ($generated@@85 ($generated@@317 $generated@@84 ($generated@@560 $generated@@718 $generated@@719))) ($generated@@717 $generated@@718))))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@84 ($generated@@560 $generated@@718 $generated@@719))))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) ($generated@@303 $generated@@83 $generated@@83)) (= (type $generated@@721) $generated@@71)) (= (type $generated@@722) $generated@@71)) ($generated@@158 $generated@@720 ($generated@@402 $generated@@721 $generated@@722))) (and (and ($generated@@158 ($generated@@316 $generated@@720) ($generated@@256 $generated@@721)) ($generated@@158 ($generated@@370 $generated@@720) ($generated@@256 $generated@@722))) ($generated@@158 ($generated@@417 $generated@@720) ($generated@@256 ($generated@@161 $generated@@721 $generated@@722)))))
 :pattern ( ($generated@@158 $generated@@720 ($generated@@402 $generated@@721 $generated@@722)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (and (= (type $generated@@723) ($generated@@345 $generated@@83 $generated@@83)) (= (type $generated@@724) $generated@@71)) (= (type $generated@@725) $generated@@71)) ($generated@@158 $generated@@723 ($generated@@444 $generated@@724 $generated@@725))) (and (and ($generated@@158 ($generated@@343 $generated@@723) ($generated@@261 $generated@@724)) ($generated@@158 ($generated@@381 $generated@@723) ($generated@@261 $generated@@725))) ($generated@@158 ($generated@@421 $generated@@723) ($generated@@261 ($generated@@161 $generated@@724 $generated@@725)))))
 :pattern ( ($generated@@158 $generated@@723 ($generated@@444 $generated@@724 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@2) ($generated@@158 $generated@@726 $generated@@46))
 :pattern ( ($generated@@158 $generated@@726 $generated@@46))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@3) ($generated@@158 $generated@@727 $generated@@47))
 :pattern ( ($generated@@158 $generated@@727 $generated@@47))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@4) ($generated@@158 $generated@@728 $generated@@44))
 :pattern ( ($generated@@158 $generated@@728 $generated@@44))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@488) ($generated@@158 $generated@@729 $generated@@45))
 :pattern ( ($generated@@158 $generated@@729 $generated@@45))
)))
(assert (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@83) ($generated@@158 $generated@@730 $generated@@48))
 :pattern ( ($generated@@158 $generated@@730 $generated@@48))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@732) $generated@@84)) (= ($generated@@158 ($generated@@81 $generated@@731 $generated@@732) $generated@@150)  (and ($generated@@158 $generated@@731 ($generated@@152 $generated@@46)) ($generated@@158 $generated@@732 $generated@@153))))
 :pattern ( ($generated@@158 ($generated@@81 $generated@@731 $generated@@732) $generated@@150))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () T@U)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 (T@U) Bool)
(declare-fun $generated@@739 () Int)
(assert  (and (and (and (and (= (type $generated@@733) ($generated@@179 $generated@@125 $generated@@4)) (= (type $generated@@734) $generated@@125)) (= (type $generated@@735) ($generated@@82 $generated@@125 $generated@@126))) (= (type $generated@@736) $generated@@84)) (= (type $generated@@737) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@740  (=> (= $generated@@733 ($generated@@178 $generated@@734 $generated@@735 $generated@@60 false)) (=> (and (and ($generated@@400 $generated@@736) ($generated@@400 $generated@@737)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@253 $generated@@736 $generated@@737)))))
(let (($generated@@741  (=> (and ($generated@@151 $generated@@735) ($generated@@738 $generated@@735)) (=> (and (and (and (and ($generated@@158 $generated@@736 $generated@@150) ($generated@@123 $generated@@736 $generated@@150 $generated@@735)) ($generated@@400 $generated@@736)) (and (and ($generated@@158 $generated@@737 $generated@@150) ($generated@@123 $generated@@737 $generated@@150 $generated@@735)) ($generated@@400 $generated@@737))) (and (and (and (= 2 $generated@@739) ($generated@@284 $generated@@736)) (and ($generated@@284 $generated@@737) ($generated@@391 ($generated@@490 $generated@@736) ($generated@@498 ($generated@@316 ($generated@@588 ($generated@@491 $generated@@736))))))) (and (and (= ($generated@@331 ($generated@@490 $generated@@737)) ($generated@@266 0)) ($generated@@458 ($generated@@588 ($generated@@491 $generated@@736)) ($generated@@337 $generated@@83 $generated@@83))) (and (= ($generated@@396 ($generated@@588 ($generated@@491 $generated@@737))) ($generated@@266 0)) (= (ControlFlow 0 3) 2))))) $generated@@740))))
$generated@@741)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@150 (T@U Int T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Bool)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) Bool)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@T T@T) T@U)
(declare-fun $generated@@352 (T@T T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@T T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@T) T@U)
(declare-fun $generated@@483 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@534 (T@U Int) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@592 (T@U) Bool)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@698 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (and (= ($generated@@1 $generated@@139) 14) (= ($generated@@1 $generated@@141) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@140 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@140 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@139) (= (type $generated@@144) $generated@@139)) (and ($generated@@138 $generated@@143) ($generated@@138 $generated@@144))) (= ($generated@@137 $generated@@143 $generated@@144) (= ($generated@@140 $generated@@143) ($generated@@140 $generated@@144))))
 :pattern ( ($generated@@137 $generated@@143 $generated@@144) ($generated@@138 $generated@@143))
 :pattern ( ($generated@@137 $generated@@143 $generated@@144) ($generated@@138 $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@141)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@139) (= (type $generated@@149) $generated@@139)) (and ($generated@@145 $generated@@148) ($generated@@145 $generated@@149))) (= ($generated@@137 $generated@@148 $generated@@149) (= ($generated@@146 $generated@@148) ($generated@@146 $generated@@149))))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149) ($generated@@145 $generated@@148))
 :pattern ( ($generated@@137 $generated@@148 $generated@@149) ($generated@@145 $generated@@149))
)))
(assert  (and (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153 $generated@@154)) $generated@@139)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@73)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 Int) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@141) (= (type $generated@@158) $generated@@141)) (= ($generated@@151 ($generated@@150 $generated@@156 $generated@@157 $generated@@158)) $generated@@65))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@141)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@141) (= (type $generated@@163) $generated@@141)) (= ($generated@@159 ($generated@@150 $generated@@161 $generated@@162 $generated@@163)) $generated@@161))
 :pattern ( ($generated@@150 $generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 Int) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@141) (= (type $generated@@167) $generated@@141)) (= ($generated@@164 ($generated@@150 $generated@@165 $generated@@166 $generated@@167)) $generated@@166))
 :pattern ( ($generated@@150 $generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@141)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@141) (= (type $generated@@172) $generated@@141)) (= ($generated@@168 ($generated@@150 $generated@@170 $generated@@171 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@150 $generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@173 $generated@@174 ($generated@@80 0)))
 :pattern ( ($generated@@173 $generated@@174 ($generated@@80 0)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@177 $generated@@178)) $generated@@69)
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@69) (= (type $generated@@180) $generated@@69)) (= (type $generated@@181) $generated@@139)) ($generated@@173 $generated@@181 ($generated@@176 $generated@@179 $generated@@180))) ($generated@@175 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181) ($generated@@173 $generated@@181 ($generated@@176 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@141)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@141)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@139) (= (type $generated@@188) $generated@@139)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@69)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@81 $generated@@141 $generated@@2)) (= (type $generated@@193) $generated@@69)) ($generated@@173 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@173 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 16)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@82 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@72 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@82) (= (type $generated@@244) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@245) ($generated@@71 $generated@@4))) (= (type $generated@@247) $generated@@82)) (= (type $generated@@248) ($generated@@71 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@69)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Int) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@69) (= (type $generated@@255) $generated@@69)) (= (type $generated@@256) $generated@@141)) (= (type $generated@@258) $generated@@141)) (= ($generated@@173 ($generated@@150 $generated@@256 $generated@@257 $generated@@258) ($generated@@250 $generated@@254 $generated@@255))  (and (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@173 ($generated@@8 $generated@@257) $generated@@46)) ($generated@@251 $generated@@258 $generated@@255))))
 :pattern ( ($generated@@173 ($generated@@150 $generated@@256 $generated@@257 $generated@@258) ($generated@@250 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@259 $generated@@260 $generated@@261)) $generated@@139)
 :pattern ( ($generated@@259 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@69) (= (type $generated@@263) $generated@@69)) (= (type $generated@@264) $generated@@141)) (= (type $generated@@265) $generated@@141)) (= ($generated@@173 ($generated@@259 $generated@@264 $generated@@265) ($generated@@176 $generated@@262 $generated@@263))  (and ($generated@@251 $generated@@264 $generated@@262) ($generated@@251 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@173 ($generated@@259 $generated@@264 $generated@@265) ($generated@@176 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@139) (= (type $generated@@267) $generated@@139)) (= ($generated@@182 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@182 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@139) (= (type $generated@@269) $generated@@139)) (= ($generated@@137 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@137 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@69)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@81 $generated@@141 $generated@@4)) (= (type $generated@@273) $generated@@69)) (= ($generated@@173 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@141) ($generated@@0 ($generated@@86 $generated@@272 $generated@@274))) ($generated@@251 $generated@@274 $generated@@273))
 :pattern ( ($generated@@86 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@173 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@69)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@81 $generated@@141 $generated@@4)) (= (type $generated@@278) $generated@@69)) (= ($generated@@173 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@141) ($generated@@0 ($generated@@86 $generated@@277 $generated@@279))) ($generated@@251 $generated@@279 $generated@@278))
 :pattern ( ($generated@@86 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@173 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@280 $generated@@281) $generated@@281)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@69) (= (type $generated@@289) $generated@@69)) (= (type $generated@@290) $generated@@141)) (= (type $generated@@291) $generated@@141)) (= (type $generated@@292) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@286 $generated@@292)) (= ($generated@@79 ($generated@@259 $generated@@290 $generated@@291) ($generated@@176 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@79 ($generated@@259 $generated@@290 $generated@@291) ($generated@@176 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@139) (= ($generated@@175 $generated@@293) (= ($generated@@151 $generated@@293) $generated@@61)))
 :pattern ( ($generated@@175 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@139) (= ($generated@@138 $generated@@294) (= ($generated@@151 $generated@@294) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@139) (= ($generated@@295 $generated@@296) (= ($generated@@151 $generated@@296) $generated@@65)))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@139) (= ($generated@@145 $generated@@297) (= ($generated@@151 $generated@@297) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@139) ($generated@@295 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@141) (= (type $generated@@301) $generated@@141)) (= $generated@@298 ($generated@@150 $generated@@299 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@139) ($generated@@175 $generated@@302)) (exists (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (and (and (= (type $generated@@303) $generated@@141) (= (type $generated@@304) $generated@@141)) (= $generated@@302 ($generated@@259 $generated@@303 $generated@@304)))
 :no-pattern (type $generated@@303)
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@175 $generated@@302))
)))
(assert  (and (and (forall (($generated@@309 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@309)) 17)) (forall (($generated@@310 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
))) (forall (($generated@@311 T@T) ) (! (= (type ($generated@@305 $generated@@311)) ($generated@@307 $generated@@311))
 :pattern ( ($generated@@305 $generated@@311))
))))
(assert (forall (($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@312)) 0)
 :pattern ( ($generated@@305 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@139)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@139) ($generated@@138 $generated@@315)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@141) (= $generated@@315 ($generated@@313 $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@138 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@139)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@139) ($generated@@145 $generated@@319)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@141) (= $generated@@319 ($generated@@317 $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@145 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@141)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@69) (= (type $generated@@325) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@287 ($generated@@321 $generated@@323) $generated@@324 $generated@@325) ($generated@@79 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@287 ($generated@@321 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@T) ) (! (= (type ($generated@@327 $generated@@328)) ($generated@@81 $generated@@328 $generated@@2))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@84 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@81 $generated@@330 $generated@@2)) (and (= (= ($generated@@326 $generated@@329) 0) (= $generated@@329 ($generated@@327 $generated@@330))) (=> (not (= ($generated@@326 $generated@@329) 0)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) (< 0 ($generated ($generated@@86 $generated@@329 $generated@@331))))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 18)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@81 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@86 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@86 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert  (and (and (and (and (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (= ($generated@@1 ($generated@@352 $generated@@355 $generated@@356)) 19)) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@353 ($generated@@352 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@352 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@352 $generated@@359 $generated@@360)) $generated@@360)
 :pattern ( ($generated@@352 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@353 (type $generated@@361))))
(= (type ($generated@@350 $generated@@361)) ($generated@@81 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@361))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= (type ($generated@@351 $generated@@363 $generated@@364)) ($generated@@352 $generated@@363 $generated@@364))
 :pattern ( ($generated@@351 $generated@@363 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@T) ) (! (let (($generated@@367 (type $generated@@365)))
 (not ($generated@@0 ($generated@@86 ($generated@@350 ($generated@@351 $generated@@367 $generated@@366)) $generated@@365))))
 :pattern ( (let (($generated@@367 (type $generated@@365)))
($generated@@86 ($generated@@350 ($generated@@351 $generated@@367 $generated@@366)) $generated@@365)))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@84 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@81 $generated@@369 $generated@@2)) (= ($generated@@190 $generated@@368) (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@369) (and (<= 0 ($generated ($generated@@86 $generated@@368 $generated@@370))) (<= ($generated ($generated@@86 $generated@@368 $generated@@370)) ($generated@@326 $generated@@368))))
 :pattern ( ($generated@@86 $generated@@368 $generated@@370))
)))))
 :pattern ( ($generated@@190 $generated@@368))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 Int) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@371) $generated@@69) (= (type $generated@@372) $generated@@69)) (= (type $generated@@373) $generated@@141)) (= (type $generated@@375) $generated@@141)) (= (type $generated@@376) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@286 $generated@@376)) (= ($generated@@79 ($generated@@150 $generated@@373 $generated@@374 $generated@@375) ($generated@@250 $generated@@371 $generated@@372) $generated@@376)  (and (and ($generated@@287 $generated@@373 $generated@@371 $generated@@376) ($generated@@79 ($generated@@8 $generated@@374) $generated@@46 $generated@@376)) ($generated@@287 $generated@@375 $generated@@372 $generated@@376))))
 :pattern ( ($generated@@79 ($generated@@150 $generated@@373 $generated@@374 $generated@@375) ($generated@@250 $generated@@371 $generated@@372) $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@336 (type $generated@@377))))
(let (($generated@@379 ($generated@@335 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@334 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@333 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@86 ($generated@@332 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@332 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@336 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@81 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@336 (type $generated@@384))))
(let (($generated@@386 ($generated@@335 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@334 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@333 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@86 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@354 (type $generated@@388))))
(let (($generated@@390 ($generated@@353 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@352 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@351 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@86 ($generated@@350 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@350 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@354 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@81 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@354 (type $generated@@395))))
(let (($generated@@397 ($generated@@353 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@352 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@351 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@86 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@81 $generated@@141 $generated@@2)) (= (type $generated@@400) $generated@@69)) (= ($generated@@173 $generated@@399 ($generated@@189 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@141) (< 0 ($generated ($generated@@86 $generated@@399 $generated@@401)))) ($generated@@251 $generated@@401 $generated@@400))
 :pattern ( ($generated@@86 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@173 $generated@@399 ($generated@@189 $generated@@400)))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@402) $generated@@139) (= (type $generated@@403) $generated@@139)) (and ($generated@@295 $generated@@402) ($generated@@295 $generated@@403))) (= ($generated@@137 $generated@@402 $generated@@403)  (and (and (= ($generated@@159 $generated@@402) ($generated@@159 $generated@@403)) (= ($generated@@164 $generated@@402) ($generated@@164 $generated@@403))) (= ($generated@@168 $generated@@402) ($generated@@168 $generated@@403)))))
 :pattern ( ($generated@@137 $generated@@402 $generated@@403) ($generated@@295 $generated@@402))
 :pattern ( ($generated@@137 $generated@@402 $generated@@403) ($generated@@295 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@81 $generated@@141 $generated@@4)) (= (type $generated@@405) $generated@@69)) (= (type $generated@@406) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@404 ($generated@@270 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@141) ($generated@@0 ($generated@@86 $generated@@404 $generated@@407))) ($generated@@287 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@86 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@79 $generated@@404 ($generated@@270 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@81 $generated@@141 $generated@@4)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@408 ($generated@@275 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@141) ($generated@@0 ($generated@@86 $generated@@408 $generated@@411))) ($generated@@287 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@86 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@79 $generated@@408 ($generated@@275 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@86 ($generated@@327 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@86 ($generated@@327 $generated@@413) $generated@@412)))
)))
(assert  (and (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@414 $generated@@417)) ($generated@@81 $generated@@141 $generated@@4))
 :pattern ( ($generated@@414 $generated@@417))
)) (forall (($generated@@418 T@T) ($generated@@419 T@U) ) (! (= (type ($generated@@415 $generated@@418 $generated@@419)) $generated@@418)
 :pattern ( ($generated@@415 $generated@@418 $generated@@419))
))) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@336 (type $generated@@420))))
(let (($generated@@422 ($generated@@335 (type $generated@@420))))
(= (type ($generated@@416 $generated@@420)) ($generated@@81 $generated@@422 $generated@@421))))
 :pattern ( ($generated@@416 $generated@@420))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@334 $generated@@141 $generated@@141)) (= (type $generated@@424) $generated@@141)) (= ($generated@@0 ($generated@@86 ($generated@@414 $generated@@423) $generated@@424))  (and ($generated@@0 ($generated@@86 ($generated@@332 $generated@@423) ($generated@@183 ($generated@@415 $generated@@139 $generated@@424)))) (= ($generated@@86 ($generated@@416 $generated@@423) ($generated@@183 ($generated@@415 $generated@@139 $generated@@424))) ($generated@@184 ($generated@@415 $generated@@139 $generated@@424))))))
 :pattern ( ($generated@@86 ($generated@@414 $generated@@423) $generated@@424))
)))
(assert  (and (forall (($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@427)) ($generated@@81 $generated@@141 $generated@@4))
 :pattern ( ($generated@@425 $generated@@427))
)) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@354 (type $generated@@428))))
(let (($generated@@430 ($generated@@353 (type $generated@@428))))
(= (type ($generated@@426 $generated@@428)) ($generated@@81 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@426 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@352 $generated@@141 $generated@@141)) (= (type $generated@@432) $generated@@141)) (= ($generated@@0 ($generated@@86 ($generated@@425 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@86 ($generated@@350 $generated@@431) ($generated@@183 ($generated@@415 $generated@@139 $generated@@432)))) (= ($generated@@86 ($generated@@426 $generated@@431) ($generated@@183 ($generated@@415 $generated@@139 $generated@@432))) ($generated@@184 ($generated@@415 $generated@@139 $generated@@432))))))
 :pattern ( ($generated@@86 ($generated@@425 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@335 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@334 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@86 ($generated@@381 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@86 ($generated@@332 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@86 ($generated@@416 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@86 ($generated@@332 $generated@@433) $generated@@437))
 :pattern ( ($generated@@86 ($generated@@416 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@86 ($generated@@381 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(let (($generated@@441 ($generated@@353 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@352 $generated@@441 $generated@@440)) (= ($generated@@0 ($generated@@86 ($generated@@392 $generated@@438) $generated@@439)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@441) (and ($generated@@0 ($generated@@86 ($generated@@350 $generated@@438) $generated@@442)) (= $generated@@439 ($generated@@86 ($generated@@426 $generated@@438) $generated@@442))))
 :pattern ( ($generated@@86 ($generated@@350 $generated@@438) $generated@@442))
 :pattern ( ($generated@@86 ($generated@@426 $generated@@438) $generated@@442))
))))))
 :pattern ( ($generated@@86 ($generated@@392 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@69)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@334 $generated@@141 $generated@@141)) (= (type $generated@@447) $generated@@69)) (= (type $generated@@448) $generated@@69)) (= (type $generated@@449) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@141) ($generated@@0 ($generated@@86 ($generated@@332 $generated@@446) $generated@@450))) (and ($generated@@287 ($generated@@86 ($generated@@416 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@287 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@86 ($generated@@416 $generated@@446) $generated@@450))
 :pattern ( ($generated@@86 ($generated@@332 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@79 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@69)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@352 $generated@@141 $generated@@141)) (= (type $generated@@455) $generated@@69)) (= (type $generated@@456) $generated@@69)) (= (type $generated@@457) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@141) ($generated@@0 ($generated@@86 ($generated@@350 $generated@@454) $generated@@458))) (and ($generated@@287 ($generated@@86 ($generated@@426 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@287 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@86 ($generated@@426 $generated@@454) $generated@@458))
 :pattern ( ($generated@@86 ($generated@@350 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@79 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@T) ) (! (= (type ($generated@@459 $generated@@460)) ($generated@@81 $generated@@460 $generated@@4))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@354 (type $generated@@461))))
(let (($generated@@463 ($generated@@353 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@352 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@351 $generated@@463 $generated@@462)) (= ($generated@@350 $generated@@461) ($generated@@459 $generated@@463))))))
 :pattern ( ($generated@@350 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@354 (type $generated@@464))))
(let (($generated@@466 ($generated@@353 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@352 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@351 $generated@@466 $generated@@465)) (= ($generated@@392 $generated@@464) ($generated@@459 $generated@@465))))))
 :pattern ( ($generated@@392 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@354 (type $generated@@467))))
(let (($generated@@469 ($generated@@353 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@352 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@351 $generated@@469 $generated@@468)) (= ($generated@@425 $generated@@467) ($generated@@459 $generated@@141))))))
 :pattern ( ($generated@@425 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@336 (type $generated@@470))))
(let (($generated@@472 ($generated@@335 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@334 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@333 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@141) (= (type $generated@@474) $generated@@141)) ($generated@@0 ($generated@@86 ($generated@@414 $generated@@470) ($generated@@321 ($generated@@259 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@414 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@354 (type $generated@@475))))
(let (($generated@@477 ($generated@@353 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@352 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@351 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@141) (= (type $generated@@479) $generated@@141)) ($generated@@0 ($generated@@86 ($generated@@425 $generated@@475) ($generated@@321 ($generated@@259 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@425 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@141) ($generated@@251 $generated@@480 $generated@@46)) (and (= ($generated@@321 ($generated@@415 $generated@@2 $generated@@480)) $generated@@480) ($generated@@173 ($generated@@415 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@141) ($generated@@251 $generated@@481 $generated@@47)) (and (= ($generated@@321 ($generated@@415 $generated@@3 $generated@@481)) $generated@@481) ($generated@@173 ($generated@@415 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@141) ($generated@@251 $generated@@482 $generated@@44)) (and (= ($generated@@321 ($generated@@415 $generated@@4 $generated@@482)) $generated@@482) ($generated@@173 ($generated@@415 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@482 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@483) 20))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@141) ($generated@@251 $generated@@484 $generated@@45)) (and (= ($generated@@321 ($generated@@415 $generated@@483 $generated@@484)) $generated@@484) ($generated@@173 ($generated@@415 $generated@@483 $generated@@484) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@484 $generated@@45))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@69) (= ($generated@@251 ($generated@@321 $generated@@485) $generated@@486) ($generated@@173 $generated@@485 $generated@@486)))
 :pattern ( ($generated@@251 ($generated@@321 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@84 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@81 $generated@@488 $generated@@2)) (<= 0 ($generated@@326 $generated@@487))))
 :pattern ( ($generated@@326 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@308 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@307 $generated@@490)) (<= 0 ($generated@@306 $generated@@489))))
 :pattern ( ($generated@@306 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@491 ($generated@@443 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@443 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@495 ($generated@@443 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@443 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@69) (= (type $generated@@500) $generated@@69)) (= ($generated@@77 ($generated@@443 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@443 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@69) (= (type $generated@@504) $generated@@69)) (= ($generated@@501 ($generated@@451 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@451 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@69) (= (type $generated@@508) $generated@@69)) (= ($generated@@505 ($generated@@451 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@451 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@69) (= (type $generated@@510) $generated@@69)) (= ($generated@@77 ($generated@@451 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@141) (= (type $generated@@512) $generated@@141)) (= ($generated@@151 ($generated@@259 $generated@@511 $generated@@512)) $generated@@61))
 :pattern ( ($generated@@259 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@69)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@69) (= (type $generated@@516) $generated@@69)) (= ($generated@@513 ($generated@@176 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@176 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@69) (= (type $generated@@520) $generated@@69)) (= ($generated@@517 ($generated@@176 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@176 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@141) (= (type $generated@@522) $generated@@141)) (= ($generated@@183 ($generated@@259 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@259 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@141) (= (type $generated@@524) $generated@@141)) (= ($generated@@184 ($generated@@259 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@259 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@69) (= (type $generated@@528) $generated@@69)) (= ($generated@@525 ($generated@@250 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@250 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@69) (= (type $generated@@532) $generated@@69)) (= ($generated@@529 ($generated@@250 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@250 $generated@@531 $generated@@532))
)))
(assert  (and (forall (($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@535))
)) (forall (($generated@@536 T@U) ($generated@@537 Int) ) (! (let (($generated@@538 ($generated@@308 (type $generated@@536))))
(= (type ($generated@@534 $generated@@536 $generated@@537)) $generated@@538))
 :pattern ( ($generated@@534 $generated@@536 $generated@@537))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@307 $generated@@141)) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@539 ($generated@@533 $generated@@540) $generated@@541) (forall (($generated@@542 Int) ) (!  (=> (and (<= 0 $generated@@542) (< $generated@@542 ($generated@@306 $generated@@539))) ($generated@@287 ($generated@@534 $generated@@539 $generated@@542) $generated@@540 $generated@@541))
 :pattern ( ($generated@@534 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@79 $generated@@539 ($generated@@533 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 Int) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@141) (= (type $generated@@545) $generated@@141)) (= ($generated@@150 ($generated@@282 $generated@@543) ($generated@@280 $generated@@544) ($generated@@282 $generated@@545)) ($generated@@282 ($generated@@150 $generated@@543 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@150 ($generated@@282 $generated@@543) ($generated@@280 $generated@@544) ($generated@@282 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@69) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@141)) (= ($generated@@173 ($generated@@313 $generated@@548) ($generated@@250 $generated@@546 $generated@@547)) ($generated@@251 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@173 ($generated@@313 $generated@@548) ($generated@@250 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@69) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@141)) (= ($generated@@173 ($generated@@317 $generated@@551) ($generated@@250 $generated@@549 $generated@@550)) ($generated@@251 $generated@@551 $generated@@550)))
 :pattern ( ($generated@@173 ($generated@@317 $generated@@551) ($generated@@250 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@552 ($generated@@80 $generated@@553)) $generated@@553)
 :pattern ( ($generated@@80 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@69) (= ($generated@@554 ($generated@@270 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@270 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@69) (= ($generated@@77 ($generated@@270 $generated@@557)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@69)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@69) (= ($generated@@558 ($generated@@275 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@275 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@69) (= ($generated@@77 ($generated@@275 $generated@@561)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@69)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@69) (= ($generated@@562 ($generated@@189 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@69) (= ($generated@@77 ($generated@@189 $generated@@565)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@69)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@69) (= ($generated@@566 ($generated@@533 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@533 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@69) (= ($generated@@77 ($generated@@533 $generated@@569)) $generated@@57))
 :pattern ( ($generated@@533 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@141) (= ($generated@@151 ($generated@@313 $generated@@570)) $generated@@63))
 :pattern ( ($generated@@313 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@141) (= ($generated@@140 ($generated@@313 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@313 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@141) (= ($generated@@151 ($generated@@317 $generated@@572)) $generated@@66))
 :pattern ( ($generated@@317 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@141) (= ($generated@@146 ($generated@@317 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@317 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
(= ($generated@@415 $generated@@575 ($generated@@321 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@321 $generated@@574))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@141) (= (type $generated@@580) $generated@@141)) (< ($generated@@576 $generated@@578) ($generated@@577 ($generated@@150 $generated@@578 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@150 $generated@@578 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@141) (= (type $generated@@583) $generated@@141)) (< ($generated@@576 $generated@@583) ($generated@@577 ($generated@@150 $generated@@581 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@150 $generated@@581 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@334 $generated@@141 $generated@@141)) (= (type $generated@@585) $generated@@69)) (= (type $generated@@586) $generated@@69)) (= ($generated@@173 $generated@@584 ($generated@@443 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@141) ($generated@@0 ($generated@@86 ($generated@@332 $generated@@584) $generated@@587))) (and ($generated@@251 ($generated@@86 ($generated@@416 $generated@@584) $generated@@587) $generated@@586) ($generated@@251 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@86 ($generated@@416 $generated@@584) $generated@@587))
 :pattern ( ($generated@@86 ($generated@@332 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@173 $generated@@584 ($generated@@443 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@352 $generated@@141 $generated@@141)) (= (type $generated@@589) $generated@@69)) (= (type $generated@@590) $generated@@69)) (= ($generated@@173 $generated@@588 ($generated@@451 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@141) ($generated@@0 ($generated@@86 ($generated@@350 $generated@@588) $generated@@591))) (and ($generated@@251 ($generated@@86 ($generated@@426 $generated@@588) $generated@@591) $generated@@590) ($generated@@251 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@86 ($generated@@426 $generated@@588) $generated@@591))
 :pattern ( ($generated@@86 ($generated@@350 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@173 $generated@@588 ($generated@@451 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@139) ($generated@@592 $generated@@593)) (or (or ($generated@@138 $generated@@593) ($generated@@295 $generated@@593)) ($generated@@145 $generated@@593)))
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@141) (= (type $generated@@595) $generated@@141)) (< ($generated@@576 $generated@@594) ($generated@@577 ($generated@@259 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@259 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@141) (= (type $generated@@597) $generated@@141)) (< ($generated@@576 $generated@@597) ($generated@@577 ($generated@@259 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@259 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@69) (= (type $generated@@599) $generated@@69)) (= (type $generated@@600) $generated@@139)) ($generated@@173 $generated@@600 ($generated@@250 $generated@@598 $generated@@599))) (or (or ($generated@@138 $generated@@600) ($generated@@295 $generated@@600)) ($generated@@145 $generated@@600)))
 :pattern ( ($generated@@145 $generated@@600) ($generated@@173 $generated@@600 ($generated@@250 $generated@@598 $generated@@599)))
 :pattern ( ($generated@@295 $generated@@600) ($generated@@173 $generated@@600 ($generated@@250 $generated@@598 $generated@@599)))
 :pattern ( ($generated@@138 $generated@@600) ($generated@@173 $generated@@600 ($generated@@250 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@141) (= (type $generated@@602) $generated@@69)) (= (type $generated@@603) $generated@@69)) ($generated@@251 $generated@@601 ($generated@@443 $generated@@602 $generated@@603))) (and (= ($generated@@321 ($generated@@415 ($generated@@334 $generated@@141 $generated@@141) $generated@@601)) $generated@@601) ($generated@@173 ($generated@@415 ($generated@@334 $generated@@141 $generated@@141) $generated@@601) ($generated@@443 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@251 $generated@@601 ($generated@@443 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@141) (= (type $generated@@605) $generated@@69)) (= (type $generated@@606) $generated@@69)) ($generated@@251 $generated@@604 ($generated@@451 $generated@@605 $generated@@606))) (and (= ($generated@@321 ($generated@@415 ($generated@@352 $generated@@141 $generated@@141) $generated@@604)) $generated@@604) ($generated@@173 ($generated@@415 ($generated@@352 $generated@@141 $generated@@141) $generated@@604) ($generated@@451 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@251 $generated@@604 ($generated@@451 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@69) (= (type $generated@@608) $generated@@69)) (= (type $generated@@609) $generated@@141)) ($generated@@251 $generated@@609 ($generated@@176 $generated@@607 $generated@@608))) (and (= ($generated@@321 ($generated@@415 $generated@@139 $generated@@609)) $generated@@609) ($generated@@173 ($generated@@415 $generated@@139 $generated@@609) ($generated@@176 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@251 $generated@@609 ($generated@@176 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@69) (= (type $generated@@611) $generated@@69)) (= (type $generated@@612) $generated@@141)) ($generated@@251 $generated@@612 ($generated@@250 $generated@@610 $generated@@611))) (and (= ($generated@@321 ($generated@@415 $generated@@139 $generated@@612)) $generated@@612) ($generated@@173 ($generated@@415 $generated@@139 $generated@@612) ($generated@@250 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@251 $generated@@612 ($generated@@250 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@141) (< ($generated@@576 $generated@@613) ($generated@@577 ($generated@@313 $generated@@613))))
 :pattern ( ($generated@@313 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@141) (< ($generated@@576 $generated@@614) ($generated@@577 ($generated@@317 $generated@@614))))
 :pattern ( ($generated@@317 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@615)))
 (not ($generated@@0 ($generated@@86 ($generated@@459 $generated@@616) $generated@@615))))
 :pattern ( (let (($generated@@616 (type $generated@@615)))
($generated@@86 ($generated@@459 $generated@@616) $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@74)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@69) (= (type $generated@@620) $generated@@69)) (and (= ($generated@@77 ($generated@@176 $generated@@619 $generated@@620)) $generated@@62) (= ($generated@@617 ($generated@@176 $generated@@619 $generated@@620)) $generated@@67)))
 :pattern ( ($generated@@176 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@69) (= (type $generated@@622) $generated@@69)) (and (= ($generated@@77 ($generated@@250 $generated@@621 $generated@@622)) $generated@@64) (= ($generated@@617 ($generated@@250 $generated@@621 $generated@@622)) $generated@@68)))
 :pattern ( ($generated@@250 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@139) (= ($generated@@576 ($generated@@321 $generated@@623)) ($generated@@577 $generated@@623)))
 :pattern ( ($generated@@576 ($generated@@321 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@141) ($generated@@251 $generated@@624 ($generated@@80 0))) (and (= ($generated@@321 ($generated@@415 $generated@@2 $generated@@624)) $generated@@624) ($generated@@173 ($generated@@415 ($generated@@81 $generated@@141 $generated@@4) $generated@@624) ($generated@@80 0))))
 :pattern ( ($generated@@251 $generated@@624 ($generated@@80 0)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@141) (= (type $generated@@626) $generated@@69)) ($generated@@251 $generated@@625 ($generated@@270 $generated@@626))) (and (= ($generated@@321 ($generated@@415 ($generated@@81 $generated@@141 $generated@@4) $generated@@625)) $generated@@625) ($generated@@173 ($generated@@415 ($generated@@81 $generated@@141 $generated@@4) $generated@@625) ($generated@@270 $generated@@626))))
 :pattern ( ($generated@@251 $generated@@625 ($generated@@270 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@141) (= (type $generated@@628) $generated@@69)) ($generated@@251 $generated@@627 ($generated@@275 $generated@@628))) (and (= ($generated@@321 ($generated@@415 ($generated@@81 $generated@@141 $generated@@4) $generated@@627)) $generated@@627) ($generated@@173 ($generated@@415 ($generated@@81 $generated@@141 $generated@@4) $generated@@627) ($generated@@275 $generated@@628))))
 :pattern ( ($generated@@251 $generated@@627 ($generated@@275 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@141) (= (type $generated@@630) $generated@@69)) ($generated@@251 $generated@@629 ($generated@@189 $generated@@630))) (and (= ($generated@@321 ($generated@@415 ($generated@@81 $generated@@141 $generated@@2) $generated@@629)) $generated@@629) ($generated@@173 ($generated@@415 ($generated@@81 $generated@@141 $generated@@2) $generated@@629) ($generated@@189 $generated@@630))))
 :pattern ( ($generated@@251 $generated@@629 ($generated@@189 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@141) (= (type $generated@@632) $generated@@69)) ($generated@@251 $generated@@631 ($generated@@533 $generated@@632))) (and (= ($generated@@321 ($generated@@415 ($generated@@307 $generated@@141) $generated@@631)) $generated@@631) ($generated@@173 ($generated@@415 ($generated@@307 $generated@@141) $generated@@631) ($generated@@533 $generated@@632))))
 :pattern ( ($generated@@251 $generated@@631 ($generated@@533 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@633) ($generated@@81 $generated@@141 $generated@@2)) (= (type $generated@@634) $generated@@69)) (= (type $generated@@635) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@633 ($generated@@189 $generated@@634) $generated@@635) (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@141) (< 0 ($generated ($generated@@86 $generated@@633 $generated@@636)))) ($generated@@287 $generated@@636 $generated@@634 $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 $generated@@636))
))))
 :pattern ( ($generated@@79 $generated@@633 ($generated@@189 $generated@@634) $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@139) (= (type $generated@@638) $generated@@69)) (= (type $generated@@639) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@286 $generated@@639) (and ($generated@@175 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@69) ($generated@@79 $generated@@637 ($generated@@176 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@79 $generated@@637 ($generated@@176 $generated@@638 $generated@@640) $generated@@639))
))))) ($generated@@287 ($generated@@183 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@287 ($generated@@183 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@139) (= (type $generated@@642) $generated@@69)) (= (type $generated@@643) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@286 $generated@@643) (and ($generated@@175 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@69) ($generated@@79 $generated@@641 ($generated@@176 $generated@@644 $generated@@642) $generated@@643))
 :pattern ( ($generated@@79 $generated@@641 ($generated@@176 $generated@@644 $generated@@642) $generated@@643))
))))) ($generated@@287 ($generated@@184 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@287 ($generated@@184 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) $generated@@139) (= (type $generated@@646) $generated@@69)) (= (type $generated@@647) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@286 $generated@@647) (and ($generated@@138 $generated@@645) (exists (($generated@@648 T@U) ) (!  (and (= (type $generated@@648) $generated@@69) ($generated@@79 $generated@@645 ($generated@@250 $generated@@646 $generated@@648) $generated@@647))
 :pattern ( ($generated@@79 $generated@@645 ($generated@@250 $generated@@646 $generated@@648) $generated@@647))
))))) ($generated@@287 ($generated@@140 $generated@@645) $generated@@646 $generated@@647))
 :pattern ( ($generated@@287 ($generated@@140 $generated@@645) $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@139) (= (type $generated@@650) $generated@@69)) (= (type $generated@@651) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@286 $generated@@651) (and ($generated@@295 $generated@@649) (exists (($generated@@652 T@U) ) (!  (and (= (type $generated@@652) $generated@@69) ($generated@@79 $generated@@649 ($generated@@250 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@79 $generated@@649 ($generated@@250 $generated@@650 $generated@@652) $generated@@651))
))))) ($generated@@287 ($generated@@159 $generated@@649) $generated@@650 $generated@@651))
 :pattern ( ($generated@@287 ($generated@@159 $generated@@649) $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@139) (= (type $generated@@654) $generated@@69)) (= (type $generated@@655) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@286 $generated@@655) (and ($generated@@295 $generated@@653) (exists (($generated@@656 T@U) ) (!  (and (= (type $generated@@656) $generated@@69) ($generated@@79 $generated@@653 ($generated@@250 $generated@@656 $generated@@654) $generated@@655))
 :pattern ( ($generated@@79 $generated@@653 ($generated@@250 $generated@@656 $generated@@654) $generated@@655))
))))) ($generated@@287 ($generated@@168 $generated@@653) $generated@@654 $generated@@655))
 :pattern ( ($generated@@287 ($generated@@168 $generated@@653) $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) $generated@@139) (= (type $generated@@658) $generated@@69)) (= (type $generated@@659) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@286 $generated@@659) (and ($generated@@145 $generated@@657) (exists (($generated@@660 T@U) ) (!  (and (= (type $generated@@660) $generated@@69) ($generated@@79 $generated@@657 ($generated@@250 $generated@@660 $generated@@658) $generated@@659))
 :pattern ( ($generated@@79 $generated@@657 ($generated@@250 $generated@@660 $generated@@658) $generated@@659))
))))) ($generated@@287 ($generated@@146 $generated@@657) $generated@@658 $generated@@659))
 :pattern ( ($generated@@287 ($generated@@146 $generated@@657) $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@661) $generated@@139) (= (type $generated@@662) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@286 $generated@@662) (and ($generated@@295 $generated@@661) (exists (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (and (and (= (type $generated@@663) $generated@@69) (= (type $generated@@664) $generated@@69)) ($generated@@79 $generated@@661 ($generated@@250 $generated@@663 $generated@@664) $generated@@662))
 :pattern ( ($generated@@79 $generated@@661 ($generated@@250 $generated@@663 $generated@@664) $generated@@662))
))))) ($generated@@79 ($generated@@8 ($generated@@164 $generated@@661)) $generated@@46 $generated@@662))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@164 $generated@@661)) $generated@@46 $generated@@662))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@665) $generated@@69) (= (type $generated@@666) $generated@@69)) (= (type $generated@@667) $generated@@141)) (= (type $generated@@668) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@286 $generated@@668)) (= ($generated@@79 ($generated@@313 $generated@@667) ($generated@@250 $generated@@665 $generated@@666) $generated@@668) ($generated@@287 $generated@@667 $generated@@665 $generated@@668)))
 :pattern ( ($generated@@79 ($generated@@313 $generated@@667) ($generated@@250 $generated@@665 $generated@@666) $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@669) $generated@@69) (= (type $generated@@670) $generated@@69)) (= (type $generated@@671) $generated@@141)) (= (type $generated@@672) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@286 $generated@@672)) (= ($generated@@79 ($generated@@317 $generated@@671) ($generated@@250 $generated@@669 $generated@@670) $generated@@672) ($generated@@287 $generated@@671 $generated@@670 $generated@@672)))
 :pattern ( ($generated@@79 ($generated@@317 $generated@@671) ($generated@@250 $generated@@669 $generated@@670) $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@141) (= (type $generated@@674) $generated@@141)) (= ($generated@@259 ($generated@@282 $generated@@673) ($generated@@282 $generated@@674)) ($generated@@282 ($generated@@259 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@259 ($generated@@282 $generated@@673) ($generated@@282 $generated@@674)))
)))
(assert (forall (($generated@@675 Int) ) (! (= ($generated@@321 ($generated@@8 ($generated@@280 $generated@@675))) ($generated@@282 ($generated@@321 ($generated@@8 $generated@@675))))
 :pattern ( ($generated@@321 ($generated@@8 ($generated@@280 $generated@@675))))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@141) (= ($generated@@313 ($generated@@282 $generated@@676)) ($generated@@282 ($generated@@313 $generated@@676))))
 :pattern ( ($generated@@313 ($generated@@282 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@141) (= ($generated@@317 ($generated@@282 $generated@@677)) ($generated@@282 ($generated@@317 $generated@@677))))
 :pattern ( ($generated@@317 ($generated@@282 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ) (! (= ($generated@@321 ($generated@@282 $generated@@678)) ($generated@@282 ($generated@@321 $generated@@678)))
 :pattern ( ($generated@@321 ($generated@@282 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@308 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@307 $generated@@680)) (= ($generated@@306 $generated@@679) 0)) (= $generated@@679 ($generated@@305 $generated@@680))))
 :pattern ( ($generated@@306 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 (type $generated@@682)))
 (=> (and (and (= (type $generated@@681) ($generated@@81 $generated@@684 $generated@@2)) (= (type $generated@@683) $generated@@2)) (<= 0 ($generated $generated@@683))) (= ($generated@@326 ($generated@@87 $generated@@681 $generated@@682 $generated@@683)) (+ (- ($generated@@326 $generated@@681) ($generated ($generated@@86 $generated@@681 $generated@@682))) ($generated $generated@@683)))))
 :pattern ( ($generated@@326 ($generated@@87 $generated@@681 $generated@@682 $generated@@683)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@686) $generated@@2)) ($generated@@79 $generated@@686 $generated@@46 $generated@@685))
 :pattern ( ($generated@@79 $generated@@686 $generated@@46 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@688) $generated@@3)) ($generated@@79 $generated@@688 $generated@@47 $generated@@687))
 :pattern ( ($generated@@79 $generated@@688 $generated@@47 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@690) $generated@@4)) ($generated@@79 $generated@@690 $generated@@44 $generated@@689))
 :pattern ( ($generated@@79 $generated@@690 $generated@@44 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@692) $generated@@483)) ($generated@@79 $generated@@692 $generated@@45 $generated@@691))
 :pattern ( ($generated@@79 $generated@@692 $generated@@45 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@694) $generated@@141)) ($generated@@79 $generated@@694 $generated@@48 $generated@@693))
 :pattern ( ($generated@@79 $generated@@694 $generated@@48 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@307 $generated@@141)) (= (type $generated@@696) $generated@@69)) (= ($generated@@173 $generated@@695 ($generated@@533 $generated@@696)) (forall (($generated@@697 Int) ) (!  (=> (and (<= 0 $generated@@697) (< $generated@@697 ($generated@@306 $generated@@695))) ($generated@@251 ($generated@@534 $generated@@695 $generated@@697) $generated@@696))
 :pattern ( ($generated@@534 $generated@@695 $generated@@697))
))))
 :pattern ( ($generated@@173 $generated@@695 ($generated@@533 $generated@@696)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 Int) ) (!  (=> (= (type $generated@@699) ($generated@@307 $generated@@141)) (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@306 $generated@@699))) (< ($generated@@577 ($generated@@415 $generated@@139 ($generated@@534 $generated@@699 $generated@@700))) ($generated@@698 $generated@@699))))
 :pattern ( ($generated@@577 ($generated@@415 $generated@@139 ($generated@@534 $generated@@699 $generated@@700))))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@334 $generated@@141 $generated@@141)) (= (type $generated@@702) $generated@@69)) (= (type $generated@@703) $generated@@69)) ($generated@@173 $generated@@701 ($generated@@443 $generated@@702 $generated@@703))) (and (and ($generated@@173 ($generated@@332 $generated@@701) ($generated@@270 $generated@@702)) ($generated@@173 ($generated@@381 $generated@@701) ($generated@@270 $generated@@703))) ($generated@@173 ($generated@@414 $generated@@701) ($generated@@270 ($generated@@176 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@173 $generated@@701 ($generated@@443 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) ($generated@@352 $generated@@141 $generated@@141)) (= (type $generated@@705) $generated@@69)) (= (type $generated@@706) $generated@@69)) ($generated@@173 $generated@@704 ($generated@@451 $generated@@705 $generated@@706))) (and (and ($generated@@173 ($generated@@350 $generated@@704) ($generated@@275 $generated@@705)) ($generated@@173 ($generated@@392 $generated@@704) ($generated@@275 $generated@@706))) ($generated@@173 ($generated@@425 $generated@@704) ($generated@@275 ($generated@@176 $generated@@705 $generated@@706)))))
 :pattern ( ($generated@@173 $generated@@704 ($generated@@451 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@2) ($generated@@173 $generated@@707 $generated@@46))
 :pattern ( ($generated@@173 $generated@@707 $generated@@46))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@3) ($generated@@173 $generated@@708 $generated@@47))
 :pattern ( ($generated@@173 $generated@@708 $generated@@47))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@4) ($generated@@173 $generated@@709 $generated@@44))
 :pattern ( ($generated@@173 $generated@@709 $generated@@44))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@483) ($generated@@173 $generated@@710 $generated@@45))
 :pattern ( ($generated@@173 $generated@@710 $generated@@45))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@141) ($generated@@173 $generated@@711 $generated@@48))
 :pattern ( ($generated@@173 $generated@@711 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 (T@U) Bool)
(declare-fun $generated@@731 () Bool)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@712) $generated@@139) (= (type $generated@@713) $generated@@141)) (= (type $generated@@714) $generated@@69)) (= (type $generated@@715) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@716) $generated@@141)) (= (type $generated@@717) $generated@@141)) (= (type $generated@@718) $generated@@139)) (= (type $generated@@719) $generated@@69)) (= (type $generated@@720) $generated@@139)) (= (type $generated@@721) $generated@@141)) (= (type $generated@@722) $generated@@141)) (= (type $generated@@723) $generated@@139)) (= (type $generated@@724) $generated@@141)) (= (type $generated@@726) $generated@@141)) (= (type $generated@@727) $generated@@141)) (= (type $generated@@728) ($generated@@196 $generated@@82 $generated@@4))) (= (type $generated@@729) $generated@@82)) (= (type $generated@@732) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@734 true))
(let (($generated@@735  (=> (= $generated@@712 ($generated@@317 $generated@@713)) (=> (and ($generated@@251 $generated@@713 $generated@@714) ($generated@@287 $generated@@713 $generated@@714 $generated@@715)) (=> (and (and (and ($generated@@251 $generated@@716 $generated@@714) ($generated@@287 $generated@@716 $generated@@714 $generated@@715)) (= $generated@@717 $generated@@713)) (and ($generated@@251 $generated@@717 $generated@@714) (= $generated@@716 $generated@@717))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@145 $generated@@712)) (=> ($generated@@145 $generated@@712) (=> (and (and ($generated@@173 $generated@@718 ($generated@@250 $generated@@719 $generated@@714)) ($generated@@79 $generated@@718 ($generated@@250 $generated@@719 $generated@@714) $generated@@715)) (= $generated@@720 $generated@@712)) (=> (and (and (and ($generated@@173 $generated@@720 ($generated@@250 $generated@@719 $generated@@714)) (= $generated@@718 $generated@@720)) (and ($generated@@251 $generated@@721 $generated@@714) ($generated@@287 $generated@@721 $generated@@714 $generated@@715))) (and (and (= $generated@@722 $generated@@716) ($generated@@251 $generated@@722 $generated@@714)) (and (= $generated@@721 $generated@@722) (= $generated@@723 (let (($generated@@736 $generated@@716))
($generated@@317 $generated@@736)))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) true) (=> (and (and ($generated@@592 $generated@@712) ($generated@@592 $generated@@723)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@137 $generated@@712 $generated@@723))))))))))))
(let (($generated@@737  (=> (not (= $generated@@712 ($generated@@150 $generated@@724 $generated@@725 $generated@@726))) (and (=> (= (ControlFlow 0 8) 4) $generated@@735) (=> (= (ControlFlow 0 8) 7) $generated@@734)))))
(let (($generated@@738 true))
(let (($generated@@739  (=> (not (= $generated@@712 ($generated@@313 $generated@@727))) (and (=> (= (ControlFlow 0 9) 2) $generated@@738) (=> (= (ControlFlow 0 9) 8) $generated@@737)))))
(let (($generated@@740 true))
(let (($generated@@741  (=> (= $generated@@728 ($generated@@195 $generated@@729 $generated@@715 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@740) (=> (= (ControlFlow 0 10) 9) $generated@@739)))))
(let (($generated@@742  (=> (and ($generated@@286 $generated@@715) ($generated@@730 $generated@@715)) (=> (and (and (and ($generated@@173 $generated@@712 ($generated@@250 $generated@@719 $generated@@714)) ($generated@@79 $generated@@712 ($generated@@250 $generated@@719 $generated@@714) $generated@@715)) ($generated@@592 $generated@@712)) (and (and (=> $generated@@731 (and ($generated@@173 $generated@@732 ($generated@@250 $generated@@719 $generated@@714)) ($generated@@79 $generated@@732 ($generated@@250 $generated@@719 $generated@@714) $generated@@715))) true) (and (= 1 $generated@@733) (= (ControlFlow 0 11) 10)))) $generated@@741))))
$generated@@742)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (Int) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@379 (T@U T@U) Bool)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@U) Bool)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@T T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@T) T@U)
(declare-fun $generated@@489 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@544 (T@U Int) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@673 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@94 $generated@@95)) 12))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@82 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@82 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@82 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@82 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@71 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@85) 15)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@85)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@71 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= (type ($generated@@79 $generated@@138 $generated@@139)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (= (type ($generated@@80 $generated@@140)) $generated@@68)
 :pattern ( ($generated@@80 $generated@@140))
))) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@68)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@142) $generated@@68) (= (type $generated@@143) $generated@@81)) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@4))) (= (type $generated@@145) ($generated@@82 $generated@@84 $generated@@85))) ($generated@@86 $generated@@145)) (= ($generated@@78 ($generated@@79 $generated@@143 $generated@@144) ($generated@@80 $generated@@142) $generated@@145)  (and ($generated@@78 $generated@@143 ($generated@@80 $generated@@142) $generated@@145) ($generated@@78 $generated@@144 ($generated@@87 $generated@@142) $generated@@145))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@143 $generated@@144) ($generated@@80 $generated@@142) $generated@@145))
)))
(assert (forall (($generated@@147 Int) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@82 $generated@@84 $generated@@85))) ($generated@@78 $generated@@148 ($generated@@146 0) $generated@@149))
 :pattern ( ($generated@@78 $generated@@148 ($generated@@146 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@146 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@146 0)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@154 $generated@@155)) $generated@@68)
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@68) (= (type $generated@@157) $generated@@68)) (= (type $generated@@158) $generated@@81)) ($generated@@150 $generated@@158 ($generated@@153 $generated@@156 $generated@@157))) ($generated@@152 $generated@@158))
 :pattern ( ($generated@@152 $generated@@158) ($generated@@150 $generated@@158 ($generated@@153 $generated@@156 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@83)
 :pattern ( ($generated@@160 $generated@@162))
)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@83)
 :pattern ( ($generated@@161 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@81) (= (type $generated@@165) $generated@@81)) true) (= ($generated@@159 $generated@@164 $generated@@165)  (and (= ($generated@@160 $generated@@164) ($generated@@160 $generated@@165)) (= ($generated@@161 $generated@@164) ($generated@@161 $generated@@165)))))
 :pattern ( ($generated@@159 $generated@@164 $generated@@165))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@72)
 :pattern ( ($generated@@166 $generated@@168))
)) (= (type $generated@@167) $generated@@81)))
(assert (= ($generated@@166 $generated@@167) $generated@@63))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@68)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@173) $generated@@68)) ($generated@@150 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@150 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@84 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@71 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@84) (= (type $generated@@224) ($generated@@82 $generated@@84 $generated@@85))) (= (type $generated@@225) ($generated@@70 $generated@@4))) (= (type $generated@@227) $generated@@84)) (= (type $generated@@228) ($generated@@70 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@88 (type $generated@@231))))
(= (type ($generated@@230 $generated@@231 $generated@@232)) ($generated@@82 $generated@@233 $generated@@4)))
 :pattern ( ($generated@@230 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@88 (type $generated@@234))))
 (=> (and (= (type $generated@@234) ($generated@@82 $generated@@236 $generated@@4)) (= (type $generated@@235) ($generated@@82 $generated@@236 $generated@@4))) (= ($generated@@230 ($generated@@230 $generated@@234 $generated@@235) $generated@@235) ($generated@@230 $generated@@234 $generated@@235))))
 :pattern ( ($generated@@230 ($generated@@230 $generated@@234 $generated@@235) $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (= (type $generated@@237) $generated@@68) (= (type $generated@@238) ($generated@@82 $generated@@84 $generated@@85))) ($generated@@86 $generated@@238)) ($generated@@78 $generated@@167 ($generated@@80 $generated@@237) $generated@@238))
 :pattern ( ($generated@@78 $generated@@167 ($generated@@80 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@81)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) $generated@@68)) (= (type $generated@@245) $generated@@83)) (= (type $generated@@246) $generated@@83)) (= ($generated@@150 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@150 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (= (type $generated@@247) $generated@@68) ($generated@@150 $generated@@167 ($generated@@80 $generated@@247)))
 :pattern ( ($generated@@150 $generated@@167 ($generated@@80 $generated@@247)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@81) (= (type $generated@@249) $generated@@81)) (= ($generated@@159 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@159 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@81) (= (type $generated@@252) $generated@@81)) (= ($generated@@250 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@150 $generated@@253 ($generated@@87 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@83) ($generated@@0 ($generated@@90 $generated@@253 $generated@@255))) ($generated@@240 $generated@@255 $generated@@254))
 :pattern ( ($generated@@90 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@150 $generated@@253 ($generated@@87 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@150 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@83) ($generated@@0 ($generated@@90 $generated@@258 $generated@@260))) ($generated@@240 $generated@@260 $generated@@259))
 :pattern ( ($generated@@90 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@150 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@81) (= (type $generated@@267) $generated@@81)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@250 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@250 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@250 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@68) (= (type $generated@@270) $generated@@68)) (= (type $generated@@271) $generated@@83)) (= (type $generated@@272) $generated@@83)) (= (type $generated@@273) ($generated@@82 $generated@@84 $generated@@85))) ($generated@@86 $generated@@273)) (= ($generated@@78 ($generated@@239 $generated@@271 $generated@@272) ($generated@@153 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@271 $generated@@272) ($generated@@153 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@81) (= ($generated@@152 $generated@@274) (= ($generated@@166 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@81) (= ($generated@@265 $generated@@275) (= ($generated@@166 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@265 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@81) (= ($generated@@276 $generated@@277) (= ($generated@@166 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@81) ($generated@@152 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@83) (= (type $generated@@280) $generated@@83)) (= $generated@@278 ($generated@@239 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@152 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@81) ($generated@@276 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@81) (= (type $generated@@283) ($generated@@82 $generated@@83 $generated@@4))) (= $generated@@281 ($generated@@79 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@276 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 17)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (= (type $generated@@292) $generated@@68) (= (type $generated@@293) $generated@@81)) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@4))) (= ($generated@@150 ($generated@@79 $generated@@293 $generated@@294) ($generated@@80 $generated@@292))  (and ($generated@@150 $generated@@293 ($generated@@80 $generated@@292)) ($generated@@150 $generated@@294 ($generated@@87 $generated@@292)))))
 :pattern ( ($generated@@150 ($generated@@79 $generated@@293 $generated@@294) ($generated@@80 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@81) ($generated@@265 $generated@@295)) (= $generated@@295 $generated@@167))
 :pattern ( ($generated@@265 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@83)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) ($generated@@82 $generated@@84 $generated@@85))) (= ($generated@@268 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@78 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@268 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@82 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@88 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@82 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@90 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@73)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@68) (and (= ($generated@@76 ($generated@@80 $generated@@309)) $generated@@64) (= ($generated@@307 ($generated@@80 $generated@@309)) $generated@@67)))
 :pattern ( ($generated@@80 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@82 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@90 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@90 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@82 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@90 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@90 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@88 (type $generated@@347))))
 (=> (and (= (type $generated@@347) ($generated@@82 $generated@@349 $generated@@4)) (= (type $generated@@348) ($generated@@82 $generated@@349 $generated@@4))) (= ($generated@@346 $generated@@347 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (= ($generated@@0 ($generated@@90 $generated@@347 $generated@@350)) ($generated@@0 ($generated@@90 $generated@@348 $generated@@350))))
 :pattern ( ($generated@@90 $generated@@347 $generated@@350))
 :pattern ( ($generated@@90 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@88 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@82 $generated@@352 $generated@@2)) (= ($generated@@170 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@90 $generated@@351 $generated@@353))) (<= ($generated ($generated@@90 $generated@@351 $generated@@353)) ($generated@@301 $generated@@351))))
 :pattern ( ($generated@@90 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@170 $generated@@351))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@314 (type $generated@@354))))
(let (($generated@@356 ($generated@@313 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@312 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@311 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@90 ($generated@@310 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@310 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@314 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@314 (type $generated@@361))))
(let (($generated@@363 ($generated@@313 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@312 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@311 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@90 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@332 (type $generated@@365))))
(let (($generated@@367 ($generated@@331 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@330 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@329 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@90 ($generated@@328 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@328 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@332 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@82 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@332 (type $generated@@372))))
(let (($generated@@374 ($generated@@331 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@330 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@329 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@90 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@377) $generated@@68)) (= ($generated@@150 $generated@@376 ($generated@@169 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@83) (< 0 ($generated ($generated@@90 $generated@@376 $generated@@378)))) ($generated@@240 $generated@@378 $generated@@377))
 :pattern ( ($generated@@90 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@150 $generated@@376 ($generated@@169 $generated@@377)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@88 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381 $generated@@382)) ($generated@@82 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@88 (type $generated@@384))))
 (=> (and (and (= (type $generated@@384) ($generated@@82 $generated@@386 $generated@@4)) (= (type $generated@@385) ($generated@@82 $generated@@386 $generated@@4))) ($generated@@379 $generated@@384 $generated@@385)) (and (= ($generated@@380 ($generated@@230 $generated@@384 $generated@@385) $generated@@384) $generated@@385) (= ($generated@@380 ($generated@@230 $generated@@384 $generated@@385) $generated@@385) $generated@@384))))
 :pattern ( ($generated@@230 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@81) ($generated@@387 $generated@@388)) (or ($generated@@265 $generated@@388) ($generated@@276 $generated@@388)))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
 (=> (and (= (type $generated@@389) ($generated@@82 $generated@@392 $generated@@4)) (= (type $generated@@390) ($generated@@82 $generated@@392 $generated@@4))) (= ($generated@@0 ($generated@@90 ($generated@@380 $generated@@389 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@90 $generated@@389 $generated@@391)) (not ($generated@@0 ($generated@@90 $generated@@390 $generated@@391)))))))
 :pattern ( ($generated@@90 ($generated@@380 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@394) $generated@@68)) (= (type $generated@@395) ($generated@@82 $generated@@84 $generated@@85))) (= ($generated@@78 $generated@@393 ($generated@@87 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@83) ($generated@@0 ($generated@@90 $generated@@393 $generated@@396))) ($generated@@268 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@90 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@78 $generated@@393 ($generated@@87 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@82 $generated@@83 $generated@@4)) (= (type $generated@@398) $generated@@68)) (= (type $generated@@399) ($generated@@82 $generated@@84 $generated@@85))) (= ($generated@@78 $generated@@397 ($generated@@256 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@83) ($generated@@0 ($generated@@90 $generated@@397 $generated@@400))) ($generated@@268 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@90 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@256 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@90 ($generated@@302 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@90 ($generated@@302 $generated@@402) $generated@@401)))
)))
(assert  (and (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@403 $generated@@406)) ($generated@@82 $generated@@83 $generated@@4))
 :pattern ( ($generated@@403 $generated@@406))
)) (forall (($generated@@407 T@T) ($generated@@408 T@U) ) (! (= (type ($generated@@404 $generated@@407 $generated@@408)) $generated@@407)
 :pattern ( ($generated@@404 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@314 (type $generated@@409))))
(let (($generated@@411 ($generated@@313 (type $generated@@409))))
(= (type ($generated@@405 $generated@@409)) ($generated@@82 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@405 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@312 $generated@@83 $generated@@83)) (= (type $generated@@413) $generated@@83)) (= ($generated@@0 ($generated@@90 ($generated@@403 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@90 ($generated@@310 $generated@@412) ($generated@@160 ($generated@@404 $generated@@81 $generated@@413)))) (= ($generated@@90 ($generated@@405 $generated@@412) ($generated@@160 ($generated@@404 $generated@@81 $generated@@413))) ($generated@@161 ($generated@@404 $generated@@81 $generated@@413))))))
 :pattern ( ($generated@@90 ($generated@@403 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@82 $generated@@83 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@332 (type $generated@@417))))
(let (($generated@@419 ($generated@@331 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@82 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@330 $generated@@83 $generated@@83)) (= (type $generated@@421) $generated@@83)) (= ($generated@@0 ($generated@@90 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@90 ($generated@@328 $generated@@420) ($generated@@160 ($generated@@404 $generated@@81 $generated@@421)))) (= ($generated@@90 ($generated@@415 $generated@@420) ($generated@@160 ($generated@@404 $generated@@81 $generated@@421))) ($generated@@161 ($generated@@404 $generated@@81 $generated@@421))))))
 :pattern ( ($generated@@90 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@90 ($generated@@358 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@90 ($generated@@310 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@90 ($generated@@405 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@90 ($generated@@310 $generated@@422) $generated@@426))
 :pattern ( ($generated@@90 ($generated@@405 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@90 ($generated@@358 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@331 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@330 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@90 ($generated@@369 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@90 ($generated@@328 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@90 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@90 ($generated@@328 $generated@@427) $generated@@431))
 :pattern ( ($generated@@90 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@90 ($generated@@369 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@68)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@312 $generated@@83 $generated@@83)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) $generated@@68)) (= (type $generated@@438) ($generated@@82 $generated@@84 $generated@@85))) (= ($generated@@78 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@83) ($generated@@0 ($generated@@90 ($generated@@310 $generated@@435) $generated@@439))) (and ($generated@@268 ($generated@@90 ($generated@@405 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@268 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@90 ($generated@@405 $generated@@435) $generated@@439))
 :pattern ( ($generated@@90 ($generated@@310 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@78 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@68)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@330 $generated@@83 $generated@@83)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) $generated@@68)) (= (type $generated@@446) ($generated@@82 $generated@@84 $generated@@85))) (= ($generated@@78 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@83) ($generated@@0 ($generated@@90 ($generated@@328 $generated@@443) $generated@@447))) (and ($generated@@268 ($generated@@90 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@268 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@90 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@90 ($generated@@328 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@78 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@448) $generated@@68) (= (type $generated@@449) $generated@@81)) ($generated@@150 $generated@@449 ($generated@@80 $generated@@448))) (or ($generated@@265 $generated@@449) ($generated@@276 $generated@@449)))
 :pattern ( ($generated@@276 $generated@@449) ($generated@@150 $generated@@449 ($generated@@80 $generated@@448)))
 :pattern ( ($generated@@265 $generated@@449) ($generated@@150 $generated@@449 ($generated@@80 $generated@@448)))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@88 (type $generated@@450))))
 (=> (and (and (= (type $generated@@450) ($generated@@82 $generated@@452 $generated@@4)) (= (type $generated@@451) ($generated@@82 $generated@@452 $generated@@4))) ($generated@@346 $generated@@450 $generated@@451)) (= $generated@@450 $generated@@451)))
 :pattern ( ($generated@@346 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
 (=> (and (and (= (type $generated@@453) ($generated@@82 $generated@@456 $generated@@4)) (= (type $generated@@454) ($generated@@82 $generated@@456 $generated@@4))) ($generated@@0 ($generated@@90 $generated@@453 $generated@@455))) ($generated@@0 ($generated@@90 ($generated@@230 $generated@@453 $generated@@454) $generated@@455))))
 :pattern ( ($generated@@230 $generated@@453 $generated@@454) ($generated@@90 $generated@@453 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 (type $generated@@459)))
 (=> (and (and (= (type $generated@@457) ($generated@@82 $generated@@460 $generated@@4)) (= (type $generated@@458) ($generated@@82 $generated@@460 $generated@@4))) ($generated@@0 ($generated@@90 $generated@@458 $generated@@459))) ($generated@@0 ($generated@@90 ($generated@@230 $generated@@457 $generated@@458) $generated@@459))))
 :pattern ( ($generated@@230 $generated@@457 $generated@@458) ($generated@@90 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
 (=> (and (and (= (type $generated@@461) ($generated@@82 $generated@@464 $generated@@4)) (= (type $generated@@462) ($generated@@82 $generated@@464 $generated@@4))) ($generated@@0 ($generated@@90 $generated@@462 $generated@@463))) (not ($generated@@0 ($generated@@90 ($generated@@380 $generated@@461 $generated@@462) $generated@@463)))))
 :pattern ( ($generated@@380 $generated@@461 $generated@@462) ($generated@@90 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@466 T@T) ) (! (= (type ($generated@@465 $generated@@466)) ($generated@@82 $generated@@466 $generated@@4))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@332 (type $generated@@467))))
(let (($generated@@469 ($generated@@331 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@330 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@329 $generated@@469 $generated@@468)) (= ($generated@@328 $generated@@467) ($generated@@465 $generated@@469))))))
 :pattern ( ($generated@@328 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@332 (type $generated@@470))))
(let (($generated@@472 ($generated@@331 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@330 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@329 $generated@@472 $generated@@471)) (= ($generated@@369 $generated@@470) ($generated@@465 $generated@@471))))))
 :pattern ( ($generated@@369 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@332 (type $generated@@473))))
(let (($generated@@475 ($generated@@331 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@330 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@329 $generated@@475 $generated@@474)) (= ($generated@@414 $generated@@473) ($generated@@465 $generated@@83))))))
 :pattern ( ($generated@@414 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@314 (type $generated@@476))))
(let (($generated@@478 ($generated@@313 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@312 $generated@@478 $generated@@477)) (or (= $generated@@476 ($generated@@311 $generated@@478 $generated@@477)) (exists (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (and (and (= (type $generated@@479) $generated@@83) (= (type $generated@@480) $generated@@83)) ($generated@@0 ($generated@@90 ($generated@@403 $generated@@476) ($generated@@296 ($generated@@239 $generated@@479 $generated@@480)))))
 :no-pattern (type $generated@@479)
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@403 $generated@@476))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@332 (type $generated@@481))))
(let (($generated@@483 ($generated@@331 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@330 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@329 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@83) (= (type $generated@@485) $generated@@83)) ($generated@@0 ($generated@@90 ($generated@@414 $generated@@481) ($generated@@296 ($generated@@239 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@414 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@83) ($generated@@240 $generated@@486 $generated@@46)) (and (= ($generated@@296 ($generated@@404 $generated@@2 $generated@@486)) $generated@@486) ($generated@@150 ($generated@@404 $generated@@2 $generated@@486) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@486 $generated@@46))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@83) ($generated@@240 $generated@@487 $generated@@47)) (and (= ($generated@@296 ($generated@@404 $generated@@3 $generated@@487)) $generated@@487) ($generated@@150 ($generated@@404 $generated@@3 $generated@@487) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@487 $generated@@47))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@83) ($generated@@240 $generated@@488 $generated@@44)) (and (= ($generated@@296 ($generated@@404 $generated@@4 $generated@@488)) $generated@@488) ($generated@@150 ($generated@@404 $generated@@4 $generated@@488) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@488 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@489) 20))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@83) ($generated@@240 $generated@@490 $generated@@45)) (and (= ($generated@@296 ($generated@@404 $generated@@489 $generated@@490)) $generated@@490) ($generated@@150 ($generated@@404 $generated@@489 $generated@@490) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@490 $generated@@45))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@81)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) ($generated@@82 $generated@@83 $generated@@4))
 :pattern ( ($generated@@492 $generated@@494))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@495) $generated@@81) (= (type $generated@@496) $generated@@81)) (and ($generated@@276 $generated@@495) ($generated@@276 $generated@@496))) (= ($generated@@250 $generated@@495 $generated@@496)  (and ($generated@@250 ($generated@@491 $generated@@495) ($generated@@491 $generated@@496)) ($generated@@346 ($generated@@492 $generated@@495) ($generated@@492 $generated@@496)))))
 :pattern ( ($generated@@250 $generated@@495 $generated@@496) ($generated@@276 $generated@@495))
 :pattern ( ($generated@@250 $generated@@495 $generated@@496) ($generated@@276 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@68) (= ($generated@@240 ($generated@@296 $generated@@497) $generated@@498) ($generated@@150 $generated@@497 $generated@@498)))
 :pattern ( ($generated@@240 ($generated@@296 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@88 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@82 $generated@@500 $generated@@2)) (<= 0 ($generated@@301 $generated@@499))))
 :pattern ( ($generated@@301 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@287 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@286 $generated@@502)) (<= 0 ($generated@@285 $generated@@501))))
 :pattern ( ($generated@@285 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@432 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@432 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@432 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@432 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@76 ($generated@@432 $generated@@511 $generated@@512)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@513 ($generated@@440 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@440 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@440 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@440 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@76 ($generated@@440 $generated@@521 $generated@@522)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@83) (= (type $generated@@524) $generated@@83)) (= ($generated@@166 ($generated@@239 $generated@@523 $generated@@524)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@153 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@153 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@153 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@153 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@83) (= (type $generated@@534) $generated@@83)) (= ($generated@@160 ($generated@@239 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@239 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@83) (= (type $generated@@536) $generated@@83)) (= ($generated@@161 ($generated@@239 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@239 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@81) (= (type $generated@@538) ($generated@@82 $generated@@83 $generated@@4))) (= ($generated@@166 ($generated@@79 $generated@@537 $generated@@538)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@81) (= (type $generated@@540) ($generated@@82 $generated@@83 $generated@@4))) (= ($generated@@491 ($generated@@79 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@79 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@81) (= (type $generated@@542) ($generated@@82 $generated@@83 $generated@@4))) (= ($generated@@492 ($generated@@79 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@79 $generated@@541 $generated@@542))
)))
(assert  (and (forall (($generated@@545 T@U) ) (! (= (type ($generated@@543 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@545))
)) (forall (($generated@@546 T@U) ($generated@@547 Int) ) (! (let (($generated@@548 ($generated@@287 (type $generated@@546))))
(= (type ($generated@@544 $generated@@546 $generated@@547)) $generated@@548))
 :pattern ( ($generated@@544 $generated@@546 $generated@@547))
))))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@286 $generated@@83)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) ($generated@@82 $generated@@84 $generated@@85))) (= ($generated@@78 $generated@@549 ($generated@@543 $generated@@550) $generated@@551) (forall (($generated@@552 Int) ) (!  (=> (and (<= 0 $generated@@552) (< $generated@@552 ($generated@@285 $generated@@549))) ($generated@@268 ($generated@@544 $generated@@549 $generated@@552) $generated@@550 $generated@@551))
 :pattern ( ($generated@@544 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@78 $generated@@549 ($generated@@543 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@553 ($generated@@146 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@146 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@87 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@87 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@87 $generated@@558)) $generated@@54))
 :pattern ( ($generated@@87 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@256 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@256 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@256 $generated@@562)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@169 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@169 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@76 ($generated@@169 $generated@@566)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@543 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@543 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@76 ($generated@@543 $generated@@570)) $generated@@57))
 :pattern ( ($generated@@543 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@68)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@571 ($generated@@80 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@80 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
(= ($generated@@404 $generated@@575 ($generated@@296 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@296 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@312 $generated@@83 $generated@@83)) (= (type $generated@@577) $generated@@68)) (= (type $generated@@578) $generated@@68)) (= ($generated@@150 $generated@@576 ($generated@@432 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@83) ($generated@@0 ($generated@@90 ($generated@@310 $generated@@576) $generated@@579))) (and ($generated@@240 ($generated@@90 ($generated@@405 $generated@@576) $generated@@579) $generated@@578) ($generated@@240 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@90 ($generated@@405 $generated@@576) $generated@@579))
 :pattern ( ($generated@@90 ($generated@@310 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@150 $generated@@576 ($generated@@432 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@330 $generated@@83 $generated@@83)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) (= ($generated@@150 $generated@@580 ($generated@@440 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@83) ($generated@@0 ($generated@@90 ($generated@@328 $generated@@580) $generated@@583))) (and ($generated@@240 ($generated@@90 ($generated@@415 $generated@@580) $generated@@583) $generated@@582) ($generated@@240 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@90 ($generated@@415 $generated@@580) $generated@@583))
 :pattern ( ($generated@@90 ($generated@@328 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@150 $generated@@580 ($generated@@440 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@4))) (= (type $generated@@587) $generated@@81)) ($generated@@0 ($generated@@90 $generated@@586 ($generated@@296 $generated@@587)))) (< ($generated@@584 $generated@@587) ($generated@@584 ($generated@@79 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@90 $generated@@586 ($generated@@296 $generated@@587)) ($generated@@79 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@83) (= (type $generated@@590) $generated@@83)) (< ($generated@@588 $generated@@589) ($generated@@584 ($generated@@239 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@239 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@83) (= (type $generated@@592) $generated@@83)) (< ($generated@@588 $generated@@592) ($generated@@584 ($generated@@239 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@239 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@81) (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@4))) (< ($generated@@584 $generated@@593) ($generated@@584 ($generated@@79 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@79 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@88 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@82 $generated@@597 $generated@@4)) (= (type $generated@@596) ($generated@@82 $generated@@597 $generated@@4))) (= ($generated@@230 $generated@@595 ($generated@@230 $generated@@595 $generated@@596)) ($generated@@230 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@230 $generated@@595 ($generated@@230 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@83) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@240 $generated@@598 ($generated@@432 $generated@@599 $generated@@600))) (and (= ($generated@@296 ($generated@@404 ($generated@@312 $generated@@83 $generated@@83) $generated@@598)) $generated@@598) ($generated@@150 ($generated@@404 ($generated@@312 $generated@@83 $generated@@83) $generated@@598) ($generated@@432 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@240 $generated@@598 ($generated@@432 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@83) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@240 $generated@@601 ($generated@@440 $generated@@602 $generated@@603))) (and (= ($generated@@296 ($generated@@404 ($generated@@330 $generated@@83 $generated@@83) $generated@@601)) $generated@@601) ($generated@@150 ($generated@@404 ($generated@@330 $generated@@83 $generated@@83) $generated@@601) ($generated@@440 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@240 $generated@@601 ($generated@@440 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@83)) ($generated@@240 $generated@@606 ($generated@@153 $generated@@604 $generated@@605))) (and (= ($generated@@296 ($generated@@404 $generated@@81 $generated@@606)) $generated@@606) ($generated@@150 ($generated@@404 $generated@@81 $generated@@606) ($generated@@153 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@240 $generated@@606 ($generated@@153 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@90 ($generated@@465 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@90 ($generated@@465 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@68)) (and (= ($generated@@76 ($generated@@153 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@307 ($generated@@153 $generated@@609 $generated@@610)) $generated@@66)))
 :pattern ( ($generated@@153 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@81) (= ($generated@@588 ($generated@@296 $generated@@611)) ($generated@@584 $generated@@611)))
 :pattern ( ($generated@@588 ($generated@@296 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@83) ($generated@@240 $generated@@612 ($generated@@146 0))) (and (= ($generated@@296 ($generated@@404 $generated@@2 $generated@@612)) $generated@@612) ($generated@@150 ($generated@@404 ($generated@@82 $generated@@83 $generated@@4) $generated@@612) ($generated@@146 0))))
 :pattern ( ($generated@@240 $generated@@612 ($generated@@146 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@83) (= (type $generated@@614) $generated@@68)) ($generated@@240 $generated@@613 ($generated@@87 $generated@@614))) (and (= ($generated@@296 ($generated@@404 ($generated@@82 $generated@@83 $generated@@4) $generated@@613)) $generated@@613) ($generated@@150 ($generated@@404 ($generated@@82 $generated@@83 $generated@@4) $generated@@613) ($generated@@87 $generated@@614))))
 :pattern ( ($generated@@240 $generated@@613 ($generated@@87 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@83) (= (type $generated@@616) $generated@@68)) ($generated@@240 $generated@@615 ($generated@@256 $generated@@616))) (and (= ($generated@@296 ($generated@@404 ($generated@@82 $generated@@83 $generated@@4) $generated@@615)) $generated@@615) ($generated@@150 ($generated@@404 ($generated@@82 $generated@@83 $generated@@4) $generated@@615) ($generated@@256 $generated@@616))))
 :pattern ( ($generated@@240 $generated@@615 ($generated@@256 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@83) (= (type $generated@@618) $generated@@68)) ($generated@@240 $generated@@617 ($generated@@169 $generated@@618))) (and (= ($generated@@296 ($generated@@404 ($generated@@82 $generated@@83 $generated@@2) $generated@@617)) $generated@@617) ($generated@@150 ($generated@@404 ($generated@@82 $generated@@83 $generated@@2) $generated@@617) ($generated@@169 $generated@@618))))
 :pattern ( ($generated@@240 $generated@@617 ($generated@@169 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@83) (= (type $generated@@620) $generated@@68)) ($generated@@240 $generated@@619 ($generated@@543 $generated@@620))) (and (= ($generated@@296 ($generated@@404 ($generated@@286 $generated@@83) $generated@@619)) $generated@@619) ($generated@@150 ($generated@@404 ($generated@@286 $generated@@83) $generated@@619) ($generated@@543 $generated@@620))))
 :pattern ( ($generated@@240 $generated@@619 ($generated@@543 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@68) (= (type $generated@@622) $generated@@83)) ($generated@@240 $generated@@622 ($generated@@80 $generated@@621))) (and (= ($generated@@296 ($generated@@404 $generated@@81 $generated@@622)) $generated@@622) ($generated@@150 ($generated@@404 $generated@@81 $generated@@622) ($generated@@80 $generated@@621))))
 :pattern ( ($generated@@240 $generated@@622 ($generated@@80 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) ($generated@@82 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@625) (and ($generated@@276 $generated@@623) ($generated@@78 $generated@@623 ($generated@@80 $generated@@624) $generated@@625)))) ($generated@@78 ($generated@@491 $generated@@623) ($generated@@80 $generated@@624) $generated@@625))
 :pattern ( ($generated@@78 ($generated@@491 $generated@@623) ($generated@@80 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@81) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@82 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@628) (and ($generated@@276 $generated@@626) ($generated@@78 $generated@@626 ($generated@@80 $generated@@627) $generated@@628)))) ($generated@@78 ($generated@@492 $generated@@626) ($generated@@87 $generated@@627) $generated@@628))
 :pattern ( ($generated@@78 ($generated@@492 $generated@@626) ($generated@@87 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@2)) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@82 $generated@@84 $generated@@85))) (= ($generated@@78 $generated@@629 ($generated@@169 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@83) (< 0 ($generated ($generated@@90 $generated@@629 $generated@@632)))) ($generated@@268 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@90 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@78 $generated@@629 ($generated@@169 $generated@@630) $generated@@631))
)))
(assert (= $generated@@167 ($generated@@261 $generated@@167)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@88 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@82 $generated@@635 $generated@@4)) (= (type $generated@@634) ($generated@@82 $generated@@635 $generated@@4))) (= ($generated@@379 $generated@@633 $generated@@634) (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@635) (or (not ($generated@@0 ($generated@@90 $generated@@633 $generated@@636))) (not ($generated@@0 ($generated@@90 $generated@@634 $generated@@636)))))
 :pattern ( ($generated@@90 $generated@@633 $generated@@636))
 :pattern ( ($generated@@90 $generated@@634 $generated@@636))
)))))
 :pattern ( ($generated@@379 $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@81) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) ($generated@@82 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@639) (and ($generated@@152 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@68) ($generated@@78 $generated@@637 ($generated@@153 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@78 $generated@@637 ($generated@@153 $generated@@638 $generated@@640) $generated@@639))
))))) ($generated@@268 ($generated@@160 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@268 ($generated@@160 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@81) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) ($generated@@82 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@643) (and ($generated@@152 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@68) ($generated@@78 $generated@@641 ($generated@@153 $generated@@644 $generated@@642) $generated@@643))
 :pattern ( ($generated@@78 $generated@@641 ($generated@@153 $generated@@644 $generated@@642) $generated@@643))
))))) ($generated@@268 ($generated@@161 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@268 ($generated@@161 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@83) (= (type $generated@@646) $generated@@83)) (= ($generated@@239 ($generated@@261 $generated@@645) ($generated@@261 $generated@@646)) ($generated@@261 ($generated@@239 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@645) ($generated@@261 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@81) (= (type $generated@@648) ($generated@@82 $generated@@83 $generated@@4))) (= ($generated@@79 ($generated@@261 $generated@@647) ($generated@@261 $generated@@648)) ($generated@@261 ($generated@@79 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@79 ($generated@@261 $generated@@647) ($generated@@261 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (= ($generated@@296 ($generated@@261 $generated@@649)) ($generated@@261 ($generated@@296 $generated@@649)))
 :pattern ( ($generated@@296 ($generated@@261 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@287 (type $generated@@650))))
 (=> (and (= (type $generated@@650) ($generated@@286 $generated@@651)) (= ($generated@@285 $generated@@650) 0)) (= $generated@@650 ($generated@@284 $generated@@651))))
 :pattern ( ($generated@@285 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 (type $generated@@653)))
 (=> (and (and (= (type $generated@@652) ($generated@@82 $generated@@655 $generated@@2)) (= (type $generated@@654) $generated@@2)) (<= 0 ($generated $generated@@654))) (= ($generated@@301 ($generated@@91 $generated@@652 $generated@@653 $generated@@654)) (+ (- ($generated@@301 $generated@@652) ($generated ($generated@@90 $generated@@652 $generated@@653))) ($generated $generated@@654)))))
 :pattern ( ($generated@@301 ($generated@@91 $generated@@652 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (! (let (($generated@@659 (type $generated@@658)))
 (=> (and (= (type $generated@@656) ($generated@@82 $generated@@659 $generated@@4)) (= (type $generated@@657) ($generated@@82 $generated@@659 $generated@@4))) (= ($generated@@0 ($generated@@90 ($generated@@230 $generated@@656 $generated@@657) $generated@@658))  (or ($generated@@0 ($generated@@90 $generated@@656 $generated@@658)) ($generated@@0 ($generated@@90 $generated@@657 $generated@@658))))))
 :pattern ( ($generated@@90 ($generated@@230 $generated@@656 $generated@@657) $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@82 $generated@@84 $generated@@85)) (= (type $generated@@661) $generated@@2)) ($generated@@78 $generated@@661 $generated@@46 $generated@@660))
 :pattern ( ($generated@@78 $generated@@661 $generated@@46 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@82 $generated@@84 $generated@@85)) (= (type $generated@@663) $generated@@3)) ($generated@@78 $generated@@663 $generated@@47 $generated@@662))
 :pattern ( ($generated@@78 $generated@@663 $generated@@47 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@82 $generated@@84 $generated@@85)) (= (type $generated@@665) $generated@@4)) ($generated@@78 $generated@@665 $generated@@44 $generated@@664))
 :pattern ( ($generated@@78 $generated@@665 $generated@@44 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@82 $generated@@84 $generated@@85)) (= (type $generated@@667) $generated@@489)) ($generated@@78 $generated@@667 $generated@@45 $generated@@666))
 :pattern ( ($generated@@78 $generated@@667 $generated@@45 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@82 $generated@@84 $generated@@85)) (= (type $generated@@669) $generated@@83)) ($generated@@78 $generated@@669 $generated@@48 $generated@@668))
 :pattern ( ($generated@@78 $generated@@669 $generated@@48 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@286 $generated@@83)) (= (type $generated@@671) $generated@@68)) (= ($generated@@150 $generated@@670 ($generated@@543 $generated@@671)) (forall (($generated@@672 Int) ) (!  (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@285 $generated@@670))) ($generated@@240 ($generated@@544 $generated@@670 $generated@@672) $generated@@671))
 :pattern ( ($generated@@544 $generated@@670 $generated@@672))
))))
 :pattern ( ($generated@@150 $generated@@670 ($generated@@543 $generated@@671)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 Int) ) (!  (=> (= (type $generated@@674) ($generated@@286 $generated@@83)) (=> (and (<= 0 $generated@@675) (< $generated@@675 ($generated@@285 $generated@@674))) (< ($generated@@584 ($generated@@404 $generated@@81 ($generated@@544 $generated@@674 $generated@@675))) ($generated@@673 $generated@@674))))
 :pattern ( ($generated@@584 ($generated@@404 $generated@@81 ($generated@@544 $generated@@674 $generated@@675))))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) ($generated@@312 $generated@@83 $generated@@83)) (= (type $generated@@677) $generated@@68)) (= (type $generated@@678) $generated@@68)) ($generated@@150 $generated@@676 ($generated@@432 $generated@@677 $generated@@678))) (and (and ($generated@@150 ($generated@@310 $generated@@676) ($generated@@87 $generated@@677)) ($generated@@150 ($generated@@358 $generated@@676) ($generated@@87 $generated@@678))) ($generated@@150 ($generated@@403 $generated@@676) ($generated@@87 ($generated@@153 $generated@@677 $generated@@678)))))
 :pattern ( ($generated@@150 $generated@@676 ($generated@@432 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) ($generated@@330 $generated@@83 $generated@@83)) (= (type $generated@@680) $generated@@68)) (= (type $generated@@681) $generated@@68)) ($generated@@150 $generated@@679 ($generated@@440 $generated@@680 $generated@@681))) (and (and ($generated@@150 ($generated@@328 $generated@@679) ($generated@@256 $generated@@680)) ($generated@@150 ($generated@@369 $generated@@679) ($generated@@256 $generated@@681))) ($generated@@150 ($generated@@414 $generated@@679) ($generated@@256 ($generated@@153 $generated@@680 $generated@@681)))))
 :pattern ( ($generated@@150 $generated@@679 ($generated@@440 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@2) ($generated@@150 $generated@@682 $generated@@46))
 :pattern ( ($generated@@150 $generated@@682 $generated@@46))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@3) ($generated@@150 $generated@@683 $generated@@47))
 :pattern ( ($generated@@150 $generated@@683 $generated@@47))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@4) ($generated@@150 $generated@@684 $generated@@44))
 :pattern ( ($generated@@150 $generated@@684 $generated@@44))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@489) ($generated@@150 $generated@@685 $generated@@45))
 :pattern ( ($generated@@150 $generated@@685 $generated@@45))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@83) ($generated@@150 $generated@@686 $generated@@48))
 :pattern ( ($generated@@150 $generated@@686 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 (T@U) Bool)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@687) $generated@@81) (= (type $generated@@688) $generated@@81)) (= (type $generated@@703) $generated@@81)) (= (type $generated@@689) $generated@@81)) (= (type $generated@@690) ($generated@@82 $generated@@83 $generated@@4))) (= (type $generated@@691) $generated@@68)) (= (type $generated@@692) ($generated@@82 $generated@@83 $generated@@4))) (= (type $generated@@693) ($generated@@82 $generated@@84 $generated@@85))) (= (type $generated@@694) ($generated@@82 $generated@@83 $generated@@4))) (= (type $generated@@695) $generated@@81)) (= (type $generated@@696) $generated@@81)) (= (type $generated@@697) $generated@@81)) (= (type $generated@@698) $generated@@68)) (= (type $generated@@699) ($generated@@82 $generated@@84 $generated@@85))) (= (type $generated@@701) $generated@@81)) (= (type $generated@@702) $generated@@81)) (= (type $generated@@704) ($generated@@176 $generated@@84 $generated@@4))) (= (type $generated@@705) $generated@@84)) (= (type $generated@@706) $generated@@81)) (= (type $generated@@707) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@709  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@250 $generated@@687 $generated@@688))))
(let (($generated@@710  (=> (= $generated@@687 ($generated@@79 $generated@@689 $generated@@690)) (=> (and ($generated@@150 $generated@@689 ($generated@@80 $generated@@691)) ($generated@@150 $generated@@690 ($generated@@87 $generated@@691))) (=> (and (and (and (and ($generated@@150 $generated@@692 ($generated@@87 $generated@@691)) ($generated@@78 $generated@@692 ($generated@@87 $generated@@691) $generated@@693)) (= $generated@@694 $generated@@690)) (and ($generated@@150 $generated@@694 ($generated@@87 $generated@@691)) (= $generated@@692 $generated@@694))) (and (and (and ($generated@@150 $generated@@695 ($generated@@80 $generated@@691)) ($generated@@78 $generated@@695 ($generated@@80 $generated@@691) $generated@@693)) (= $generated@@696 $generated@@689)) (and ($generated@@150 $generated@@696 ($generated@@80 $generated@@691)) (= $generated@@695 $generated@@696)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@584 $generated@@695) ($generated@@584 $generated@@687))) (=> (< ($generated@@584 $generated@@695) ($generated@@584 $generated@@687)) (=> (and ($generated@@150 $generated@@697 ($generated@@80 $generated@@698)) ($generated@@78 $generated@@697 ($generated@@80 $generated@@698) $generated@@693)) (=> (and (and ($generated@@86 $generated@@699) ($generated@@700 $generated@@699)) (and ($generated@@150 $generated@@701 ($generated@@80 $generated@@691)) ($generated@@78 $generated@@701 ($generated@@80 $generated@@691) $generated@@699))) (=> (and (and (and ($generated@@387 $generated@@695) ($generated@@387 $generated@@701)) ($generated@@250 $generated@@695 $generated@@701)) (and (and (= $generated@@693 $generated@@699) (= $generated@@702 ($generated@@79 $generated@@701 ($generated@@230 $generated@@692 $generated@@692)))) (and (= $generated@@688 $generated@@702) (= (ControlFlow 0 5) 3)))) $generated@@709))))))))))
(let (($generated@@711  (=> (and (and (= $generated@@687 $generated@@167) (= $generated@@703 ($generated@@261 $generated@@167))) (and (= $generated@@688 $generated@@703) (= (ControlFlow 0 4) 3))) $generated@@709)))
(let (($generated@@712 true))
(let (($generated@@713  (=> (not (= $generated@@687 $generated@@167)) (and (=> (= (ControlFlow 0 7) 5) $generated@@710) (=> (= (ControlFlow 0 7) 1) $generated@@712)))))
(let (($generated@@714  (=> (= $generated@@704 ($generated@@175 $generated@@705 $generated@@693 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@711) (=> (= (ControlFlow 0 8) 7) $generated@@713)))))
(let (($generated@@715  (=> (and ($generated@@86 $generated@@693) ($generated@@700 $generated@@693)) (=> (and (and (and (and ($generated@@150 $generated@@687 ($generated@@80 $generated@@691)) ($generated@@78 $generated@@687 ($generated@@80 $generated@@691) $generated@@693)) ($generated@@387 $generated@@687)) (and ($generated@@150 $generated@@706 ($generated@@80 $generated@@691)) ($generated@@78 $generated@@706 ($generated@@80 $generated@@691) $generated@@693))) (and (and (and ($generated@@150 $generated@@707 ($generated@@80 $generated@@691)) ($generated@@78 $generated@@707 ($generated@@80 $generated@@691) $generated@@693)) true) (and (= 1 $generated@@708) (= (ControlFlow 0 9) 8)))) $generated@@714))))
$generated@@715))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
