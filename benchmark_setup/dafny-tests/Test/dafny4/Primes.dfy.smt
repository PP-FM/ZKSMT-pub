(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int) Bool)
(declare-fun $generated@@134 (Int) Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int Int) Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@137 Int) ) (!  (=> (or ($generated@@135 ($generated@@134 $generated@@137)) (not (= 0 $generated@@132))) (= ($generated@@133 ($generated@@134 $generated@@137))  (and (<= ($generated@@134 2) ($generated@@134 $generated@@137)) (forall (($generated@@138 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@138) (< $generated@@138 $generated@@137)) (not (= ($generated@@136 $generated@@137 $generated@@138) 0))))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@137)))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@75 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@64)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@64) (= (type $generated@@147) $generated@@64)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@143)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@64) (= (type $generated@@235) $generated@@64)) (= (type $generated@@236) $generated@@152)) (= (type $generated@@237) $generated@@152)) (= ($generated@@139 ($generated@@230 $generated@@236 $generated@@237) ($generated@@142 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@139 ($generated@@230 $generated@@236 $generated@@237) ($generated@@142 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@143) (= (type $generated@@239) $generated@@143)) (= ($generated@@149 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@149 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@243) $generated@@64)) (= ($generated@@139 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@152) ($generated@@0 ($generated@@81 $generated@@242 $generated@@244))) ($generated@@231 $generated@@244 $generated@@243))
 :pattern ( ($generated@@81 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@139 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@139 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@152) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@139 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@134 $generated@@250) $generated@@250)
 :pattern ( ($generated@@134 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@255 Int) ) (!  (=> (or ($generated@@135 $generated@@255) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@133 $generated@@255))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@64) (= (type $generated@@259) $generated@@64)) (= (type $generated@@260) $generated@@152)) (= (type $generated@@261) $generated@@152)) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@256 $generated@@262)) (= ($generated@@74 ($generated@@230 $generated@@260 $generated@@261) ($generated@@142 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@74 ($generated@@230 $generated@@260 $generated@@261) ($generated@@142 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@143) (= ($generated@@141 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@143) ($generated@@141 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@152) (= (type $generated@@268) $generated@@152)) (= $generated@@266 ($generated@@230 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@141 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@152)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@257 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@76 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@81 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@158 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@282 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@158 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@292 (type $generated@@327))))
(let (($generated@@329 ($generated@@291 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@290 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@289 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@288 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@292 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@292 (type $generated@@334))))
(let (($generated@@336 ($generated@@291 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@290 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@289 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@310 (type $generated@@338))))
(let (($generated@@340 ($generated@@309 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@308 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@307 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@306 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@310 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@310 (type $generated@@345))))
(let (($generated@@347 ($generated@@309 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@308 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@307 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@231 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@240 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@257 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@240 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@245 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@257 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@245 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@283 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@292 (type $generated@@368))))
(let (($generated@@370 ($generated@@291 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@371) ($generated@@150 ($generated@@363 $generated@@143 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@150 ($generated@@363 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@363 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@310 (type $generated@@376))))
(let (($generated@@378 ($generated@@309 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@380) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@379) ($generated@@150 ($generated@@363 $generated@@143 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@150 ($generated@@363 $generated@@143 $generated@@380))) ($generated@@151 ($generated@@363 $generated@@143 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@291 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@290 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@288 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@309 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@308 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@394) $generated@@398))) (and ($generated@@257 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@257 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@402) $generated@@406))) (and ($generated@@257 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@257 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@76 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@310 (type $generated@@409))))
(let (($generated@@411 ($generated@@309 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@308 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@307 $generated@@411 $generated@@410)) (= ($generated@@306 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@306 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@310 (type $generated@@412))))
(let (($generated@@414 ($generated@@309 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@308 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@307 $generated@@414 $generated@@413)) (= ($generated@@342 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@342 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@310 (type $generated@@415))))
(let (($generated@@417 ($generated@@309 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@308 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@307 $generated@@417 $generated@@416)) (= ($generated@@373 $generated@@415) ($generated@@407 $generated@@152))))))
 :pattern ( ($generated@@373 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@292 (type $generated@@418))))
(let (($generated@@420 ($generated@@291 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@290 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@289 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@152) (= (type $generated@@422) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@418) ($generated@@277 ($generated@@230 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@362 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@310 (type $generated@@423))))
(let (($generated@@425 ($generated@@309 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@308 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@307 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@152) (= (type $generated@@427) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@423) ($generated@@277 ($generated@@230 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@373 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@152) ($generated@@231 $generated@@428 $generated@@46)) (and (= ($generated@@277 ($generated@@363 $generated@@2 $generated@@428)) $generated@@428) ($generated@@139 ($generated@@363 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@231 $generated@@429 $generated@@47)) (and (= ($generated@@277 ($generated@@363 $generated@@3 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@363 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@152) ($generated@@231 $generated@@430 $generated@@44)) (and (= ($generated@@277 ($generated@@363 $generated@@4 $generated@@430)) $generated@@430) ($generated@@139 ($generated@@363 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@152) ($generated@@231 $generated@@432 $generated@@45)) (and (= ($generated@@277 ($generated@@363 $generated@@431 $generated@@432)) $generated@@432) ($generated@@139 ($generated@@363 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@64) (= ($generated@@231 ($generated@@277 $generated@@433) $generated@@434) ($generated@@139 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@231 ($generated@@277 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@76 $generated@@436 $generated@@2)) (<= 0 ($generated@@282 $generated@@435))))
 :pattern ( ($generated@@282 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@272 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@271 $generated@@438)) (<= 0 ($generated@@270 $generated@@437))))
 :pattern ( ($generated@@270 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@391 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@391 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@391 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@391 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@399 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@399 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@399 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@152) (= (type $generated@@460) $generated@@152)) (= ($generated@@263 ($generated@@230 $generated@@459 $generated@@460)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@142 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@142 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@142 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@142 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@152) (= (type $generated@@470) $generated@@152)) (= ($generated@@150 ($generated@@230 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@230 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@152) (= (type $generated@@472) $generated@@152)) (= ($generated@@151 ($generated@@230 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@230 $generated@@471 $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@272 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@474 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@271 $generated@@152)) (= (type $generated@@480) $generated@@64)) (= (type $generated@@481) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@479 ($generated@@473 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@270 $generated@@479))) ($generated@@257 ($generated@@474 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@474 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@74 $generated@@479 ($generated@@473 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@75 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@75 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@240 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@240 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@240 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@245 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@245 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@157 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@157 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@473 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@473 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@473 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@473 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@363 $generated@@502 ($generated@@277 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@277 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@139 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@288 $generated@@503) $generated@@506))) (and ($generated@@231 ($generated@@81 ($generated@@364 $generated@@503) $generated@@506) $generated@@505) ($generated@@231 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@288 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@139 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@139 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@507) $generated@@510))) (and ($generated@@231 ($generated@@81 ($generated@@374 $generated@@507) $generated@@510) $generated@@509) ($generated@@231 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@139 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@152) (= (type $generated@@514) $generated@@152)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@230 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@230 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@152)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@230 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@230 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@231 $generated@@517 ($generated@@391 $generated@@518 $generated@@519))) (and (= ($generated@@277 ($generated@@363 ($generated@@290 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@363 ($generated@@290 $generated@@152 $generated@@152) $generated@@517) ($generated@@391 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@231 $generated@@517 ($generated@@391 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@152) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@231 $generated@@520 ($generated@@399 $generated@@521 $generated@@522))) (and (= ($generated@@277 ($generated@@363 ($generated@@308 $generated@@152 $generated@@152) $generated@@520)) $generated@@520) ($generated@@139 ($generated@@363 ($generated@@308 $generated@@152 $generated@@152) $generated@@520) ($generated@@399 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@231 $generated@@520 ($generated@@399 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@152)) ($generated@@231 $generated@@525 ($generated@@142 $generated@@523 $generated@@524))) (and (= ($generated@@277 ($generated@@363 $generated@@143 $generated@@525)) $generated@@525) ($generated@@139 ($generated@@363 $generated@@143 $generated@@525) ($generated@@142 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@231 $generated@@525 ($generated@@142 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@81 ($generated@@407 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@81 ($generated@@407 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@528 Int) ($generated@@529 Int) ) (! (= ($generated@@136 $generated@@528 $generated@@529) (mod $generated@@528 $generated@@529))
 :pattern ( ($generated@@136 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (and (= ($generated@@72 ($generated@@142 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@142 $generated@@532 $generated@@533)) $generated@@63)))
 :pattern ( ($generated@@142 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@143) (= ($generated@@511 ($generated@@277 $generated@@534)) ($generated@@512 $generated@@534)))
 :pattern ( ($generated@@511 ($generated@@277 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@152) ($generated@@231 $generated@@535 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@363 $generated@@2 $generated@@535)) $generated@@535) ($generated@@139 ($generated@@363 ($generated@@76 $generated@@152 $generated@@4) $generated@@535) ($generated@@75 0))))
 :pattern ( ($generated@@231 $generated@@535 ($generated@@75 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@64)) ($generated@@231 $generated@@536 ($generated@@240 $generated@@537))) (and (= ($generated@@277 ($generated@@363 ($generated@@76 $generated@@152 $generated@@4) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@363 ($generated@@76 $generated@@152 $generated@@4) $generated@@536) ($generated@@240 $generated@@537))))
 :pattern ( ($generated@@231 $generated@@536 ($generated@@240 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@152) (= (type $generated@@539) $generated@@64)) ($generated@@231 $generated@@538 ($generated@@245 $generated@@539))) (and (= ($generated@@277 ($generated@@363 ($generated@@76 $generated@@152 $generated@@4) $generated@@538)) $generated@@538) ($generated@@139 ($generated@@363 ($generated@@76 $generated@@152 $generated@@4) $generated@@538) ($generated@@245 $generated@@539))))
 :pattern ( ($generated@@231 $generated@@538 ($generated@@245 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@152) (= (type $generated@@541) $generated@@64)) ($generated@@231 $generated@@540 ($generated@@157 $generated@@541))) (and (= ($generated@@277 ($generated@@363 ($generated@@76 $generated@@152 $generated@@2) $generated@@540)) $generated@@540) ($generated@@139 ($generated@@363 ($generated@@76 $generated@@152 $generated@@2) $generated@@540) ($generated@@157 $generated@@541))))
 :pattern ( ($generated@@231 $generated@@540 ($generated@@157 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@152) (= (type $generated@@543) $generated@@64)) ($generated@@231 $generated@@542 ($generated@@473 $generated@@543))) (and (= ($generated@@277 ($generated@@363 ($generated@@271 $generated@@152) $generated@@542)) $generated@@542) ($generated@@139 ($generated@@363 ($generated@@271 $generated@@152) $generated@@542) ($generated@@473 $generated@@543))))
 :pattern ( ($generated@@231 $generated@@542 ($generated@@473 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@544 ($generated@@157 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@544 $generated@@547)))) ($generated@@257 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@81 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@157 $generated@@545) $generated@@546))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@548 Int) ) (!  (=> (or ($generated@@135 $generated@@548) (not (= 0 $generated@@132))) (= ($generated@@133 $generated@@548)  (and (<= ($generated@@134 2) $generated@@548) (forall (($generated@@549 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@549) (< $generated@@549 $generated@@548)) (not (= ($generated@@136 $generated@@548 $generated@@549) 0))))
 :pattern ( ($generated@@136 $generated@@548 $generated@@549))
)))))
 :pattern ( ($generated@@133 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@143) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@256 $generated@@552) (and ($generated@@141 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@142 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@142 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@257 ($generated@@150 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@257 ($generated@@150 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@143) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@256 $generated@@556) (and ($generated@@141 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@142 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@142 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@257 ($generated@@151 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@257 ($generated@@151 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@152) (= (type $generated@@559) $generated@@152)) (= ($generated@@230 ($generated@@251 $generated@@558) ($generated@@251 $generated@@559)) ($generated@@251 ($generated@@230 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@230 ($generated@@251 $generated@@558) ($generated@@251 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@134 $generated@@560))) ($generated@@251 ($generated@@277 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@134 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@277 ($generated@@251 $generated@@561)) ($generated@@251 ($generated@@277 $generated@@561)))
 :pattern ( ($generated@@277 ($generated@@251 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@272 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@271 $generated@@563)) (= ($generated@@270 $generated@@562) 0)) (= $generated@@562 ($generated@@269 $generated@@563))))
 :pattern ( ($generated@@270 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@282 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@282 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@431)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@152)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@271 $generated@@152)) (= (type $generated@@579) $generated@@64)) (= ($generated@@139 $generated@@578 ($generated@@473 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@270 $generated@@578))) ($generated@@231 ($generated@@474 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@474 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@473 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@271 $generated@@152)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@270 $generated@@582))) (< ($generated@@512 ($generated@@363 $generated@@143 ($generated@@474 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@512 ($generated@@363 $generated@@143 ($generated@@474 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@290 $generated@@152 $generated@@152)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@139 $generated@@584 ($generated@@391 $generated@@585 $generated@@586))) (and (and ($generated@@139 ($generated@@288 $generated@@584) ($generated@@240 $generated@@585)) ($generated@@139 ($generated@@331 $generated@@584) ($generated@@240 $generated@@586))) ($generated@@139 ($generated@@362 $generated@@584) ($generated@@240 ($generated@@142 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@139 $generated@@584 ($generated@@391 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@308 $generated@@152 $generated@@152)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@139 $generated@@587 ($generated@@399 $generated@@588 $generated@@589))) (and (and ($generated@@139 ($generated@@306 $generated@@587) ($generated@@245 $generated@@588)) ($generated@@139 ($generated@@342 $generated@@587) ($generated@@245 $generated@@589))) ($generated@@139 ($generated@@373 $generated@@587) ($generated@@245 ($generated@@142 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@139 $generated@@587 ($generated@@399 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@139 $generated@@590 $generated@@46))
 :pattern ( ($generated@@139 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@139 $generated@@591 $generated@@47))
 :pattern ( ($generated@@139 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@139 $generated@@592 $generated@@44))
 :pattern ( ($generated@@139 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@431) ($generated@@139 $generated@@593 $generated@@45))
 :pattern ( ($generated@@139 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@152) ($generated@@139 $generated@@594 $generated@@48))
 :pattern ( ($generated@@139 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@597) ($generated@@164 $generated@@77 $generated@@4)) (= (type $generated@@598) $generated@@77)) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@600) ($generated@@164 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@602 true))
(let (($generated@@603 true))
(let (($generated@@604  (=> (and (not (and (<= ($generated@@134 2) $generated@@595) (< $generated@@595 $generated@@596))) (= (ControlFlow 0 7) 2)) $generated@@603)))
(let (($generated@@605  (=> (and (<= ($generated@@134 2) $generated@@595) (< $generated@@595 $generated@@596)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@595 0))) (=> (not (= $generated@@595 0)) (=> (= (ControlFlow 0 5) 2) $generated@@603))))))
(let (($generated@@606  (=> (< $generated@@595 ($generated@@134 2)) (and (=> (= (ControlFlow 0 9) 5) $generated@@605) (=> (= (ControlFlow 0 9) 7) $generated@@604)))))
(let (($generated@@607  (=> (<= ($generated@@134 2) $generated@@595) (and (=> (= (ControlFlow 0 8) 5) $generated@@605) (=> (= (ControlFlow 0 8) 7) $generated@@604)))))
(let (($generated@@608  (and (=> (= (ControlFlow 0 10) 8) $generated@@607) (=> (= (ControlFlow 0 10) 9) $generated@@606))))
(let (($generated@@609  (=> (<= ($generated@@134 2) $generated@@596) (and (=> (= (ControlFlow 0 11) 10) $generated@@608) (=> (= (ControlFlow 0 11) 4) $generated@@602)))))
(let (($generated@@610  (=> (and (< $generated@@596 ($generated@@134 2)) (= (ControlFlow 0 3) 2)) $generated@@603)))
(let (($generated@@611  (=> (= $generated@@597 ($generated@@218 $generated@@598 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 11) $generated@@609) (=> (= (ControlFlow 0 12) 3) $generated@@610)))))
(let (($generated@@612 true))
(let (($generated@@613  (=> (= $generated@@600 ($generated@@163 $generated@@598 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 1) $generated@@612) (=> (= (ControlFlow 0 13) 12) $generated@@611)))))
(let (($generated@@614  (=> (and (and ($generated@@256 $generated@@599) ($generated@@601 $generated@@599)) (and (= 0 $generated@@132) (= (ControlFlow 0 14) 13))) $generated@@613)))
$generated@@614))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int) Bool)
(declare-fun $generated@@134 (Int) Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int Int) Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@T) T@U)
(declare-fun $generated@@258 (T@U) Int)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U Int) Bool)
(declare-fun $generated@@313 (T@U Int) Bool)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U Int) T@U)
(declare-fun $generated@@475 (T@U Int Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@533 (T@T) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@137 Int) ) (!  (=> (or ($generated@@135 ($generated@@134 $generated@@137)) (not (= 0 $generated@@132))) (= ($generated@@133 ($generated@@134 $generated@@137))  (and (<= ($generated@@134 2) ($generated@@134 $generated@@137)) (forall (($generated@@138 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@138) (< $generated@@138 $generated@@137)) (not (= ($generated@@136 $generated@@137 $generated@@138) 0))))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@137)))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@75 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@64)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@64) (= (type $generated@@147) $generated@@64)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@143)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@152)) (= (type $generated@@225) $generated@@152)) (= ($generated@@139 ($generated@@218 $generated@@224 $generated@@225) ($generated@@142 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@139 ($generated@@218 $generated@@224 $generated@@225) ($generated@@142 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@143) (= (type $generated@@227) $generated@@143)) (= ($generated@@149 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@149 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@139 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@152) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@219 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@139 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@139 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@152) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@219 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@139 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@238 Int) ) (! (= ($generated@@134 $generated@@238) $generated@@238)
 :pattern ( ($generated@@134 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= ($generated@@239 $generated@@242) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@243 Int) ) (!  (=> (or ($generated@@135 $generated@@243) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@133 $generated@@243))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) $generated@@64) (= (type $generated@@247) $generated@@64)) (= (type $generated@@248) $generated@@152)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@244 $generated@@250)) (= ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@142 $generated@@246 $generated@@247) $generated@@250)  (and ($generated@@245 $generated@@248 $generated@@246 $generated@@250) ($generated@@245 $generated@@249 $generated@@247 $generated@@250))))
 :pattern ( ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@142 $generated@@246 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@143) (= ($generated@@141 $generated@@253) (= ($generated@@251 $generated@@253) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@143) ($generated@@141 $generated@@254)) (exists (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (and (and (= (type $generated@@255) $generated@@152) (= (type $generated@@256) $generated@@152)) (= $generated@@254 ($generated@@218 $generated@@255 $generated@@256)))
 :no-pattern (type $generated@@255)
 :no-pattern (type $generated@@256)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert  (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@T) ) (! (= (type ($generated@@257 $generated@@263)) ($generated@@259 $generated@@263))
 :pattern ( ($generated@@257 $generated@@263))
))))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@264)) 0)
 :pattern ( ($generated@@257 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@152)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@64) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@74 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@76 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@79 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@76 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@81 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 18)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@76 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@314 T@U) ($generated@@315 Int) ) (!  (=> (and (= (type $generated@@314) ($generated@@76 $generated@@152 $generated@@4)) (or ($generated@@313 $generated@@314 $generated@@315) (and (not (= 1 $generated@@132)) ($generated@@139 $generated@@314 ($generated@@228 $generated@@46))))) true)
 :pattern ( ($generated@@312 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@79 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@76 $generated@@317 $generated@@2)) (= ($generated@@158 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@81 $generated@@316 $generated@@318))) (<= ($generated ($generated@@81 $generated@@316 $generated@@318)) ($generated@@270 $generated@@316))))
 :pattern ( ($generated@@81 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@158 $generated@@316))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@280 (type $generated@@319))))
(let (($generated@@321 ($generated@@279 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@278 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@277 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@276 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@280 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@280 (type $generated@@326))))
(let (($generated@@328 ($generated@@279 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@278 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@277 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@298 (type $generated@@330))))
(let (($generated@@332 ($generated@@297 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@296 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@295 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@294 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@298 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@298 (type $generated@@337))))
(let (($generated@@339 ($generated@@297 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@296 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@295 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@342) $generated@@64)) (= ($generated@@139 $generated@@341 ($generated@@157 $generated@@342)) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@341 $generated@@343)))) ($generated@@219 $generated@@343 $generated@@342))
 :pattern ( ($generated@@81 $generated@@341 $generated@@343))
))))
 :pattern ( ($generated@@139 $generated@@341 ($generated@@157 $generated@@342)))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@228 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@152) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@245 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@228 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@349) $generated@@64)) (= (type $generated@@350) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@348 ($generated@@233 $generated@@349) $generated@@350) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) ($generated@@0 ($generated@@81 $generated@@348 $generated@@351))) ($generated@@245 $generated@@351 $generated@@349 $generated@@350))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
))))
 :pattern ( ($generated@@74 $generated@@348 ($generated@@233 $generated@@349) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
(= ($generated ($generated@@81 ($generated@@271 $generated@@353) $generated@@352)) 0))
 :pattern ( (let (($generated@@353 (type $generated@@352)))
($generated@@81 ($generated@@271 $generated@@353) $generated@@352)))
)))
(assert  (and (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@354 $generated@@357)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@354 $generated@@357))
)) (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@355 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@280 (type $generated@@360))))
(let (($generated@@362 ($generated@@279 (type $generated@@360))))
(= (type ($generated@@356 $generated@@360)) ($generated@@76 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@356 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@278 $generated@@152 $generated@@152)) (= (type $generated@@364) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@363) ($generated@@150 ($generated@@355 $generated@@143 $generated@@364)))) (= ($generated@@81 ($generated@@356 $generated@@363) ($generated@@150 ($generated@@355 $generated@@143 $generated@@364))) ($generated@@151 ($generated@@355 $generated@@143 $generated@@364))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@363) $generated@@364))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@298 (type $generated@@368))))
(let (($generated@@370 ($generated@@297 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@372) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@371) ($generated@@150 ($generated@@355 $generated@@143 $generated@@372)))) (= ($generated@@81 ($generated@@366 $generated@@371) ($generated@@150 ($generated@@355 $generated@@143 $generated@@372))) ($generated@@151 ($generated@@355 $generated@@143 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(let (($generated@@376 ($generated@@279 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@278 $generated@@376 $generated@@375)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@373) $generated@@374)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@373) $generated@@377)) (= $generated@@374 ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@373) $generated@@377))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@297 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@296 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@334 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@334 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@278 $generated@@152 $generated@@152)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@386) $generated@@390))) (and ($generated@@245 ($generated@@81 ($generated@@356 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@245 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@394) $generated@@398))) (and ($generated@@245 ($generated@@81 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@245 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@76 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@298 (type $generated@@401))))
(let (($generated@@403 ($generated@@297 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@296 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@295 $generated@@403 $generated@@402)) (= ($generated@@294 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@294 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@298 (type $generated@@404))))
(let (($generated@@406 ($generated@@297 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@296 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@295 $generated@@406 $generated@@405)) (= ($generated@@334 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@334 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@298 (type $generated@@407))))
(let (($generated@@409 ($generated@@297 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@296 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@295 $generated@@409 $generated@@408)) (= ($generated@@365 $generated@@407) ($generated@@399 $generated@@152))))))
 :pattern ( ($generated@@365 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@280 (type $generated@@410))))
(let (($generated@@412 ($generated@@279 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@278 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@277 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@152) (= (type $generated@@414) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@410) ($generated@@265 ($generated@@218 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@354 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@298 (type $generated@@415))))
(let (($generated@@417 ($generated@@297 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@296 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@295 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@415) ($generated@@265 ($generated@@218 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@365 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@219 $generated@@420 $generated@@46)) (and (= ($generated@@265 ($generated@@355 $generated@@2 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@355 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@219 $generated@@421 $generated@@47)) (and (= ($generated@@265 ($generated@@355 $generated@@3 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@355 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@219 $generated@@422 $generated@@44)) (and (= ($generated@@265 ($generated@@355 $generated@@4 $generated@@422)) $generated@@422) ($generated@@139 ($generated@@355 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 20))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@152) ($generated@@219 $generated@@424 $generated@@45)) (and (= ($generated@@265 ($generated@@355 $generated@@423 $generated@@424)) $generated@@424) ($generated@@139 ($generated@@355 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@64) (= ($generated@@219 ($generated@@265 $generated@@425) $generated@@426) ($generated@@139 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@219 ($generated@@265 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@79 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@76 $generated@@428 $generated@@2)) (<= 0 ($generated@@270 $generated@@427))))
 :pattern ( ($generated@@270 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@260 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@259 $generated@@430)) (<= 0 ($generated@@258 $generated@@429))))
 :pattern ( ($generated@@258 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@383 $generated@@433 $generated@@434)) $generated@@433))
 :pattern ( ($generated@@383 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@383 $generated@@437 $generated@@438)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@72 ($generated@@383 $generated@@439 $generated@@440)) $generated@@58))
 :pattern ( ($generated@@383 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@391 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@391 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@391 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@449 $generated@@450)) $generated@@59))
 :pattern ( ($generated@@391 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) (= (type $generated@@452) $generated@@152)) (= ($generated@@251 ($generated@@218 $generated@@451 $generated@@452)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@142 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@142 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@142 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@152)) (= ($generated@@150 ($generated@@218 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@218 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@152)) (= ($generated@@151 ($generated@@218 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@218 $generated@@463 $generated@@464))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (! (let (($generated@@470 ($generated@@260 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468 $generated@@469)) $generated@@470))
 :pattern ( ($generated@@466 $generated@@468 $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@259 $generated@@152)) (= (type $generated@@472) $generated@@64)) (= (type $generated@@473) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@471 ($generated@@465 $generated@@472) $generated@@473) (forall (($generated@@474 Int) ) (!  (=> (and (<= 0 $generated@@474) (< $generated@@474 ($generated@@258 $generated@@471))) ($generated@@245 ($generated@@466 $generated@@471 $generated@@474) $generated@@472 $generated@@473))
 :pattern ( ($generated@@466 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@74 $generated@@471 ($generated@@465 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 Int) ($generated@@478 Int) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477 $generated@@478)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@475 $generated@@476 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 Int) ($generated@@481 Int) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@482) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@475 $generated@@479 $generated@@480 $generated@@481) $generated@@482))  (and ($generated@@219 $generated@@482 $generated@@479) (and (and (<= $generated@@480 ($generated ($generated@@355 $generated@@2 $generated@@482))) (<= ($generated ($generated@@355 $generated@@2 $generated@@482)) $generated@@481)) ($generated@@133 ($generated ($generated@@355 $generated@@2 $generated@@482)))))))
 :pattern ( ($generated@@81 ($generated@@475 $generated@@479 $generated@@480 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@75 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@75 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@228 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@228 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@233 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@233 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@157 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@157 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@465 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@465 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@465 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@465 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@355 $generated@@502 ($generated@@265 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@265 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@278 $generated@@152 $generated@@152)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@139 $generated@@503 ($generated@@383 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@503) $generated@@506))) (and ($generated@@219 ($generated@@81 ($generated@@356 $generated@@503) $generated@@506) $generated@@505) ($generated@@219 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@139 $generated@@503 ($generated@@383 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@139 $generated@@507 ($generated@@391 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@507) $generated@@510))) (and ($generated@@219 ($generated@@81 ($generated@@366 $generated@@507) $generated@@510) $generated@@509) ($generated@@219 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@139 $generated@@507 ($generated@@391 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@152) (= (type $generated@@514) $generated@@152)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@218 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@218 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@152)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@218 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@218 $generated@@515 $generated@@516))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@517 T@U) ($generated@@518 Int) ) (!  (=> (and (= (type $generated@@517) ($generated@@76 $generated@@152 $generated@@4)) (or ($generated@@313 ($generated@@239 $generated@@517) ($generated@@134 $generated@@518)) (and (not (= 1 $generated@@132)) ($generated@@139 $generated@@517 ($generated@@228 $generated@@46))))) (and (and (forall (($generated@@519 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@239 $generated@@517) ($generated@@265 ($generated@@8 $generated@@519)))) ($generated@@135 $generated@@519))
 :pattern ( ($generated@@133 $generated@@519))
 :pattern ( ($generated@@81 $generated@@517 ($generated@@265 ($generated@@8 $generated@@519))))
)) (=> (forall (($generated@@520 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 ($generated@@239 $generated@@517) ($generated@@265 ($generated@@8 $generated@@520)))) ($generated@@133 $generated@@520)))
 :pattern ( ($generated@@133 $generated@@520))
 :pattern ( ($generated@@81 $generated@@517 ($generated@@265 ($generated@@8 $generated@@520))))
)) (forall (($generated@@521 Int) ) (! ($generated@@135 $generated@@521)
 :pattern ( ($generated@@81 $generated@@517 ($generated@@265 ($generated@@8 $generated@@521))))
 :pattern ( ($generated@@133 $generated@@521))
)))) (= ($generated@@312 ($generated@@239 $generated@@517) ($generated@@134 $generated@@518))  (and (forall (($generated@@522 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 ($generated@@239 $generated@@517) ($generated@@265 ($generated@@8 $generated@@522)))) ($generated@@133 $generated@@522)))
 :pattern ( ($generated@@133 $generated@@522))
 :pattern ( ($generated@@81 $generated@@517 ($generated@@265 ($generated@@8 $generated@@522))))
)) (forall (($generated@@523 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@523) (<= $generated@@523 ($generated@@134 $generated@@518))) ($generated@@0 ($generated@@81 ($generated@@239 $generated@@517) ($generated@@265 ($generated@@8 $generated@@523))))))
 :pattern ( ($generated@@81 $generated@@517 ($generated@@265 ($generated@@8 $generated@@523))))
 :pattern ( ($generated@@133 $generated@@523))
))))))
 :weight 3
 :pattern ( ($generated@@312 ($generated@@239 $generated@@517) ($generated@@134 $generated@@518)))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@152) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@219 $generated@@524 ($generated@@383 $generated@@525 $generated@@526))) (and (= ($generated@@265 ($generated@@355 ($generated@@278 $generated@@152 $generated@@152) $generated@@524)) $generated@@524) ($generated@@139 ($generated@@355 ($generated@@278 $generated@@152 $generated@@152) $generated@@524) ($generated@@383 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@219 $generated@@524 ($generated@@383 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@152) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@219 $generated@@527 ($generated@@391 $generated@@528 $generated@@529))) (and (= ($generated@@265 ($generated@@355 ($generated@@296 $generated@@152 $generated@@152) $generated@@527)) $generated@@527) ($generated@@139 ($generated@@355 ($generated@@296 $generated@@152 $generated@@152) $generated@@527) ($generated@@391 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@219 $generated@@527 ($generated@@391 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@152)) ($generated@@219 $generated@@532 ($generated@@142 $generated@@530 $generated@@531))) (and (= ($generated@@265 ($generated@@355 $generated@@143 $generated@@532)) $generated@@532) ($generated@@139 ($generated@@355 $generated@@143 $generated@@532) ($generated@@142 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@219 $generated@@532 ($generated@@142 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@534 T@T) ) (! (= (type ($generated@@533 $generated@@534)) ($generated@@76 $generated@@534 $generated@@4))
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@81 ($generated@@533 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@81 ($generated@@533 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@399 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@399 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@539 Int) ($generated@@540 Int) ) (! (= ($generated@@136 $generated@@539 $generated@@540) (mod $generated@@539 $generated@@540))
 :pattern ( ($generated@@136 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@69)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@64) (= (type $generated@@544) $generated@@64)) (and (= ($generated@@72 ($generated@@142 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@142 $generated@@543 $generated@@544)) $generated@@63)))
 :pattern ( ($generated@@142 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@143) (= ($generated@@511 ($generated@@265 $generated@@545)) ($generated@@512 $generated@@545)))
 :pattern ( ($generated@@511 ($generated@@265 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@152) ($generated@@219 $generated@@546 ($generated@@75 0))) (and (= ($generated@@265 ($generated@@355 $generated@@2 $generated@@546)) $generated@@546) ($generated@@139 ($generated@@355 ($generated@@76 $generated@@152 $generated@@4) $generated@@546) ($generated@@75 0))))
 :pattern ( ($generated@@219 $generated@@546 ($generated@@75 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@152) (= (type $generated@@548) $generated@@64)) ($generated@@219 $generated@@547 ($generated@@228 $generated@@548))) (and (= ($generated@@265 ($generated@@355 ($generated@@76 $generated@@152 $generated@@4) $generated@@547)) $generated@@547) ($generated@@139 ($generated@@355 ($generated@@76 $generated@@152 $generated@@4) $generated@@547) ($generated@@228 $generated@@548))))
 :pattern ( ($generated@@219 $generated@@547 ($generated@@228 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@152) (= (type $generated@@550) $generated@@64)) ($generated@@219 $generated@@549 ($generated@@233 $generated@@550))) (and (= ($generated@@265 ($generated@@355 ($generated@@76 $generated@@152 $generated@@4) $generated@@549)) $generated@@549) ($generated@@139 ($generated@@355 ($generated@@76 $generated@@152 $generated@@4) $generated@@549) ($generated@@233 $generated@@550))))
 :pattern ( ($generated@@219 $generated@@549 ($generated@@233 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@152) (= (type $generated@@552) $generated@@64)) ($generated@@219 $generated@@551 ($generated@@157 $generated@@552))) (and (= ($generated@@265 ($generated@@355 ($generated@@76 $generated@@152 $generated@@2) $generated@@551)) $generated@@551) ($generated@@139 ($generated@@355 ($generated@@76 $generated@@152 $generated@@2) $generated@@551) ($generated@@157 $generated@@552))))
 :pattern ( ($generated@@219 $generated@@551 ($generated@@157 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@152) (= (type $generated@@554) $generated@@64)) ($generated@@219 $generated@@553 ($generated@@465 $generated@@554))) (and (= ($generated@@265 ($generated@@355 ($generated@@259 $generated@@152) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@355 ($generated@@259 $generated@@152) $generated@@553) ($generated@@465 $generated@@554))))
 :pattern ( ($generated@@219 $generated@@553 ($generated@@465 $generated@@554)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@555 T@U) ($generated@@556 Int) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@152 $generated@@4)) (or ($generated@@313 $generated@@555 $generated@@556) (and (not (= 1 $generated@@132)) ($generated@@139 $generated@@555 ($generated@@228 $generated@@46))))) (and (and (forall (($generated@@557 Int) ) (!  (=> ($generated@@0 ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@557)))) ($generated@@135 $generated@@557))
 :pattern ( ($generated@@133 $generated@@557))
 :pattern ( ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@557))))
)) (=> (forall (($generated@@558 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@558)))) ($generated@@133 $generated@@558)))
 :pattern ( ($generated@@133 $generated@@558))
 :pattern ( ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@558))))
)) (forall (($generated@@559 Int) ) (! ($generated@@135 $generated@@559)
 :pattern ( ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@133 $generated@@559))
)))) (= ($generated@@312 $generated@@555 $generated@@556)  (and (forall (($generated@@560 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@560)))) ($generated@@133 $generated@@560)))
 :pattern ( ($generated@@133 $generated@@560))
 :pattern ( ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@560))))
)) (forall (($generated@@561 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@561) (<= $generated@@561 $generated@@556)) ($generated@@0 ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@561))))))
 :pattern ( ($generated@@81 $generated@@555 ($generated@@265 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@133 $generated@@561))
))))))
 :pattern ( ($generated@@312 $generated@@555 $generated@@556))
))))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@157 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@562 $generated@@565)))) ($generated@@245 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@81 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@157 $generated@@563) $generated@@564))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@566 Int) ) (!  (=> (or ($generated@@135 $generated@@566) (not (= 0 $generated@@132))) (= ($generated@@133 $generated@@566)  (and (<= ($generated@@134 2) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@567) (< $generated@@567 $generated@@566)) (not (= ($generated@@136 $generated@@566 $generated@@567) 0))))
 :pattern ( ($generated@@136 $generated@@566 $generated@@567))
)))))
 :pattern ( ($generated@@133 $generated@@566))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@143) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@570) (and ($generated@@141 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@64) ($generated@@74 $generated@@568 ($generated@@142 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@142 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@245 ($generated@@150 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@245 ($generated@@150 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@143) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@574) (and ($generated@@141 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@142 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@142 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@245 ($generated@@151 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@245 ($generated@@151 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@152) (= (type $generated@@577) $generated@@152)) (= ($generated@@218 ($generated@@239 $generated@@576) ($generated@@239 $generated@@577)) ($generated@@239 ($generated@@218 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@218 ($generated@@239 $generated@@576) ($generated@@239 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@134 $generated@@578))) ($generated@@239 ($generated@@265 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@134 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@265 ($generated@@239 $generated@@579)) ($generated@@239 ($generated@@265 $generated@@579)))
 :pattern ( ($generated@@265 ($generated@@239 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@260 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@259 $generated@@581)) (= ($generated@@258 $generated@@580) 0)) (= $generated@@580 ($generated@@257 $generated@@581))))
 :pattern ( ($generated@@258 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@76 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@270 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@270 $generated@@582) ($generated ($generated@@81 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@270 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@2)) ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@3)) ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@4)) ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@423)) ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@152)) ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@259 $generated@@152)) (= (type $generated@@597) $generated@@64)) (= ($generated@@139 $generated@@596 ($generated@@465 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@258 $generated@@596))) ($generated@@219 ($generated@@466 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@466 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@139 $generated@@596 ($generated@@465 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@259 $generated@@152)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@258 $generated@@600))) (< ($generated@@512 ($generated@@355 $generated@@143 ($generated@@466 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@512 ($generated@@355 $generated@@143 ($generated@@466 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@278 $generated@@152 $generated@@152)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@139 $generated@@602 ($generated@@383 $generated@@603 $generated@@604))) (and (and ($generated@@139 ($generated@@276 $generated@@602) ($generated@@228 $generated@@603)) ($generated@@139 ($generated@@323 $generated@@602) ($generated@@228 $generated@@604))) ($generated@@139 ($generated@@354 $generated@@602) ($generated@@228 ($generated@@142 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@139 $generated@@602 ($generated@@383 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@139 $generated@@605 ($generated@@391 $generated@@606 $generated@@607))) (and (and ($generated@@139 ($generated@@294 $generated@@605) ($generated@@233 $generated@@606)) ($generated@@139 ($generated@@334 $generated@@605) ($generated@@233 $generated@@607))) ($generated@@139 ($generated@@365 $generated@@605) ($generated@@233 ($generated@@142 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@139 $generated@@605 ($generated@@391 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@139 $generated@@608 $generated@@46))
 :pattern ( ($generated@@139 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@139 $generated@@609 $generated@@47))
 :pattern ( ($generated@@139 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@139 $generated@@610 $generated@@44))
 :pattern ( ($generated@@139 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@423) ($generated@@139 $generated@@611 $generated@@45))
 :pattern ( ($generated@@139 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@152) ($generated@@139 $generated@@612 $generated@@48))
 :pattern ( ($generated@@139 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Bool)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@615) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@621) ($generated@@76 $generated@@152 $generated@@4))) (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@626) $generated@@77)) (= (type $generated@@627) ($generated@@164 $generated@@77 $generated@@4))) (= (type $generated@@629) ($generated@@76 $generated@@152 $generated@@4))) (= (type $generated@@630) ($generated@@76 $generated@@152 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@631  (=> (= (ControlFlow 0 18) (- 0 17)) (exists (($generated@@632 Int) ) (!  (and (<= $generated@@613 $generated@@632) ($generated@@133 $generated@@632))
 :pattern ( ($generated@@133 $generated@@632))
)))))
(let (($generated@@633  (=> (and (<= $generated@@613 $generated@@614) (= (ControlFlow 0 20) 18)) $generated@@631)))
(let (($generated@@634  (=> (and (not ($generated@@0 ($generated@@239 ($generated@@11 true)))) (= (ControlFlow 0 19) 18)) $generated@@631)))
(let (($generated@@635  (=> (and (forall (($generated@@636 Int) ) (!  (=> (and (<= ($generated@@134 2) $generated@@636) (<= $generated@@636 $generated@@614)) ($generated@@135 $generated@@636))
 :pattern ( ($generated@@133 $generated@@636))
)) (= $generated@@615 ($generated@@475 $generated@@46 ($generated@@134 2) $generated@@614))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (<= 0 $generated@@616) (= (- $generated@@613 $generated@@614) $generated@@616))) (=> (or (<= 0 $generated@@616) (= (- $generated@@613 $generated@@614) $generated@@616)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< (- $generated@@613 $generated@@614) $generated@@616)) (=> (< (- $generated@@613 $generated@@614) $generated@@616) (=> ($generated@@313 $generated@@615 $generated@@614) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@617 (=> ($generated@@313 $generated@@615 $generated@@614) (or ($generated@@312 $generated@@615 $generated@@614) (forall (($generated@@637 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@615 ($generated@@265 ($generated@@8 $generated@@637)))) ($generated@@133 $generated@@637)))
 :pattern ( ($generated@@133 $generated@@637))
 :pattern ( ($generated@@81 $generated@@615 ($generated@@265 ($generated@@8 $generated@@637))))
)))))) (=> (=> $generated@@617 (=> ($generated@@313 $generated@@615 $generated@@614) (or ($generated@@312 $generated@@615 $generated@@614) (forall (($generated@@638 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@615 ($generated@@265 ($generated@@8 $generated@@638)))) ($generated@@133 $generated@@638)))
 :pattern ( ($generated@@133 $generated@@638))
 :pattern ( ($generated@@81 $generated@@615 ($generated@@265 ($generated@@8 $generated@@638))))
))))) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@617 (=> ($generated@@313 $generated@@615 $generated@@614) (or ($generated@@312 $generated@@615 $generated@@614) (forall (($generated@@639 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@639) (<= $generated@@639 $generated@@614)) ($generated@@0 ($generated@@81 $generated@@615 ($generated@@265 ($generated@@8 $generated@@639))))))
 :pattern ( ($generated@@81 $generated@@615 ($generated@@265 ($generated@@8 $generated@@639))))
 :pattern ( ($generated@@133 $generated@@639))
))))))))))))))))
(let (($generated@@640  (=> (and (not (and (and (<= ($generated@@134 2) $generated@@618) (<= $generated@@618 $generated@@614)) ($generated@@133 $generated@@618))) (= (ControlFlow 0 10) 5)) $generated@@635)))
(let (($generated@@641  (=> (and (and (and (<= ($generated@@134 2) $generated@@618) (<= $generated@@618 $generated@@614)) ($generated@@133 $generated@@618)) (= (ControlFlow 0 9) 5)) $generated@@635)))
(let (($generated@@642  (=> (not (and (<= ($generated@@134 2) $generated@@618) (<= $generated@@618 $generated@@614))) (and (=> (= (ControlFlow 0 12) 9) $generated@@641) (=> (= (ControlFlow 0 12) 10) $generated@@640)))))
(let (($generated@@643  (=> (and (and (<= ($generated@@134 2) $generated@@618) (<= $generated@@618 $generated@@614)) (and ($generated@@74 ($generated@@8 $generated@@618) $generated@@46 $generated@@619) ($generated@@135 $generated@@618))) (and (=> (= (ControlFlow 0 11) 9) $generated@@641) (=> (= (ControlFlow 0 11) 10) $generated@@640)))))
(let (($generated@@644  (=> (< $generated@@618 ($generated@@134 2)) (and (=> (= (ControlFlow 0 14) 11) $generated@@643) (=> (= (ControlFlow 0 14) 12) $generated@@642)))))
(let (($generated@@645  (=> (<= ($generated@@134 2) $generated@@618) (and (=> (= (ControlFlow 0 13) 11) $generated@@643) (=> (= (ControlFlow 0 13) 12) $generated@@642)))))
(let (($generated@@646  (and (=> (= (ControlFlow 0 15) 13) $generated@@645) (=> (= (ControlFlow 0 15) 14) $generated@@644))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (< $generated@@614 $generated@@613) (and (=> (= (ControlFlow 0 16) 15) $generated@@646) (=> (= (ControlFlow 0 16) 3) $generated@@647)))))
(let (($generated@@649  (=> (and ($generated@@0 ($generated@@239 ($generated@@11 true))) (= $generated@@616 (- $generated@@613 $generated@@620))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (=> ($generated@@313 $generated@@621 $generated@@620) (or ($generated@@312 $generated@@621 $generated@@620) (forall (($generated@@650 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@650)))) ($generated@@133 $generated@@650)))
 :pattern ( ($generated@@133 $generated@@650))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@650))))
))))) (=> (=> ($generated@@313 $generated@@621 $generated@@620) (or ($generated@@312 $generated@@621 $generated@@620) (forall (($generated@@651 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@651)))) ($generated@@133 $generated@@651)))
 :pattern ( ($generated@@133 $generated@@651))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@651))))
)))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> ($generated@@313 $generated@@621 $generated@@620) (or ($generated@@312 $generated@@621 $generated@@620) (forall (($generated@@652 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@652) (<= $generated@@652 $generated@@620)) ($generated@@0 ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@652))))))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@652))))
 :pattern ( ($generated@@133 $generated@@652))
))))) (=> (=> ($generated@@313 $generated@@621 $generated@@620) (or ($generated@@312 $generated@@621 $generated@@620) (forall (($generated@@653 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@653) (<= $generated@@653 $generated@@620)) ($generated@@0 ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@653))))))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@133 $generated@@653))
)))) (=> (and (and (and ($generated@@244 $generated@@619) ($generated@@622 $generated@@619)) (and (=> (< $generated@@620 $generated@@614) ($generated@@135 $generated@@614)) (< $generated@@620 $generated@@614))) (and (and ($generated@@135 $generated@@614) (and ($generated@@133 $generated@@614) (and (<= ($generated@@134 2) $generated@@614) (forall (($generated@@654 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@654) (< $generated@@654 $generated@@614)) (not (= ($generated@@136 $generated@@614 $generated@@654) 0))))
 :pattern ( ($generated@@136 $generated@@614 $generated@@654))
))))) (= $generated@@623 $generated@@619))) (and (=> (= (ControlFlow 0 21) 20) $generated@@633) (=> (= (ControlFlow 0 21) 16) $generated@@648))))))))))
(let (($generated@@655  (=> $generated@@617 (and (=> (= (ControlFlow 0 24) 19) $generated@@634) (=> (= (ControlFlow 0 24) 21) $generated@@649)))))
(let (($generated@@656 true))
(let (($generated@@657  (and (=> (= (ControlFlow 0 25) 2) $generated@@656) (=> (= (ControlFlow 0 25) 24) $generated@@655))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (and (and (and (and ($generated@@139 $generated@@621 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@621 ($generated@@228 $generated@@46) $generated@@623)) (and ($generated@@244 $generated@@623) ($generated@@622 $generated@@623))) (and (and (not false) (<= 0 $generated@@620)) (= $generated@@624 0))) (and (and (and (=> $generated@@617 ($generated@@313 $generated@@621 $generated@@620)) (=> $generated@@617 (=> ($generated@@313 $generated@@621 $generated@@620) (or ($generated@@312 $generated@@621 $generated@@620) (forall (($generated@@660 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@660)))) ($generated@@133 $generated@@660)))
 :pattern ( ($generated@@133 $generated@@660))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@660))))
)))))) (and (=> $generated@@617 (=> ($generated@@313 $generated@@621 $generated@@620) (or ($generated@@312 $generated@@621 $generated@@620) (forall (($generated@@661 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@661) (<= $generated@@661 $generated@@620)) ($generated@@0 ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@661))))))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@661))))
 :pattern ( ($generated@@133 $generated@@661))
))))) (=> $generated@@617 (and ($generated@@313 $generated@@621 $generated@@620) (and ($generated@@312 $generated@@621 $generated@@620) (and (forall (($generated@@662 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@662)))) ($generated@@133 $generated@@662)))
 :pattern ( ($generated@@133 $generated@@662))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@662))))
)) (forall (($generated@@663 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@663) (<= $generated@@663 $generated@@620)) ($generated@@0 ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@663))))))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@265 ($generated@@8 $generated@@663))))
 :pattern ( ($generated@@133 $generated@@663))
)))))))) (and (and (= $generated@@625 $generated@@623) (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 ($generated@@67 (type $generated@@665))))
 (=> (and (and (= (type $generated@@664) $generated@@77) (= (type $generated@@665) ($generated@@66 $generated@@666))) (and (not (= $generated@@664 $generated@@626)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@625 $generated@@664) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@623 $generated@@664) $generated@@665) ($generated@@83 ($generated@@81 $generated@@625 $generated@@664) $generated@@665)) ($generated@@0 ($generated@@162 $generated@@627 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@623 $generated@@664) $generated@@665))
))) (and (<= (- $generated@@613 $generated@@620) $generated@@628) (=> (= (- $generated@@613 $generated@@620) $generated@@628) true))))) (and (=> (= (ControlFlow 0 26) 1) $generated@@658) (=> (= (ControlFlow 0 26) 25) $generated@@657)))))
(let (($generated@@667  (=> (and (and (= $generated@@627 ($generated@@163 $generated@@626 $generated@@625 $generated@@60 false)) (= $generated@@624 ($generated@@134 0))) (and (= $generated@@629 ($generated@@239 ($generated@@533 $generated@@152))) (= $generated@@628 (- $generated@@613 $generated@@624)))) (and (=> (= (ControlFlow 0 27) (- 0 29)) (=> $generated@@617 (=> ($generated@@313 $generated@@629 $generated@@624) (or ($generated@@312 $generated@@629 $generated@@624) (forall (($generated@@668 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@629 ($generated@@265 ($generated@@8 $generated@@668)))) ($generated@@133 $generated@@668)))
 :pattern ( ($generated@@133 $generated@@668))
 :pattern ( ($generated@@81 $generated@@629 ($generated@@265 ($generated@@8 $generated@@668))))
)))))) (=> (=> $generated@@617 (=> ($generated@@313 $generated@@629 $generated@@624) (or ($generated@@312 $generated@@629 $generated@@624) (forall (($generated@@669 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@629 ($generated@@265 ($generated@@8 $generated@@669)))) ($generated@@133 $generated@@669)))
 :pattern ( ($generated@@133 $generated@@669))
 :pattern ( ($generated@@81 $generated@@629 ($generated@@265 ($generated@@8 $generated@@669))))
))))) (and (=> (= (ControlFlow 0 27) (- 0 28)) (=> $generated@@617 (=> ($generated@@313 $generated@@629 $generated@@624) (or ($generated@@312 $generated@@629 $generated@@624) (forall (($generated@@670 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@670) (<= $generated@@670 $generated@@624)) ($generated@@0 ($generated@@81 $generated@@629 ($generated@@265 ($generated@@8 $generated@@670))))))
 :pattern ( ($generated@@81 $generated@@629 ($generated@@265 ($generated@@8 $generated@@670))))
 :pattern ( ($generated@@133 $generated@@670))
)))))) (=> (=> $generated@@617 (=> ($generated@@313 $generated@@629 $generated@@624) (or ($generated@@312 $generated@@629 $generated@@624) (forall (($generated@@671 Int) ) (!  (=> true (=> (and ($generated@@133 $generated@@671) (<= $generated@@671 $generated@@624)) ($generated@@0 ($generated@@81 $generated@@629 ($generated@@265 ($generated@@8 $generated@@671))))))
 :pattern ( ($generated@@81 $generated@@629 ($generated@@265 ($generated@@8 $generated@@671))))
 :pattern ( ($generated@@133 $generated@@671))
))))) (=> (= (ControlFlow 0 27) 26) $generated@@659))))))))
(let (($generated@@672  (=> (and ($generated@@244 $generated@@625) ($generated@@622 $generated@@625)) (=> (and (and (and ($generated@@139 $generated@@630 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@630 ($generated@@228 $generated@@46) $generated@@625)) true) (and (= 6 $generated@@132) (= (ControlFlow 0 30) 27))) $generated@@667))))
$generated@@672))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int) Bool)
(declare-fun $generated@@134 (Int) Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int Int) Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@T) T@U)
(declare-fun $generated@@258 (T@U) Int)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@137 Int) ) (!  (=> (or ($generated@@135 ($generated@@134 $generated@@137)) (not (= 0 $generated@@132))) (= ($generated@@133 ($generated@@134 $generated@@137))  (and (<= ($generated@@134 2) ($generated@@134 $generated@@137)) (forall (($generated@@138 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@138) (< $generated@@138 $generated@@137)) (not (= ($generated@@136 $generated@@137 $generated@@138) 0))))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@137)))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@75 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@64)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@64) (= (type $generated@@147) $generated@@64)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@143)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@152)) (= (type $generated@@225) $generated@@152)) (= ($generated@@139 ($generated@@218 $generated@@224 $generated@@225) ($generated@@142 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@139 ($generated@@218 $generated@@224 $generated@@225) ($generated@@142 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@143) (= (type $generated@@227) $generated@@143)) (= ($generated@@149 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@149 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@139 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@152) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@219 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@139 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@139 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@152) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@219 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@139 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@238 Int) ) (! (= ($generated@@134 $generated@@238) $generated@@238)
 :pattern ( ($generated@@134 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= ($generated@@239 $generated@@242) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@243 Int) ) (!  (=> (or ($generated@@135 $generated@@243) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@133 $generated@@243))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) $generated@@64) (= (type $generated@@247) $generated@@64)) (= (type $generated@@248) $generated@@152)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@244 $generated@@250)) (= ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@142 $generated@@246 $generated@@247) $generated@@250)  (and ($generated@@245 $generated@@248 $generated@@246 $generated@@250) ($generated@@245 $generated@@249 $generated@@247 $generated@@250))))
 :pattern ( ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@142 $generated@@246 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@143) (= ($generated@@141 $generated@@253) (= ($generated@@251 $generated@@253) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@143) ($generated@@141 $generated@@254)) (exists (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (and (and (= (type $generated@@255) $generated@@152) (= (type $generated@@256) $generated@@152)) (= $generated@@254 ($generated@@218 $generated@@255 $generated@@256)))
 :no-pattern (type $generated@@255)
 :no-pattern (type $generated@@256)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert  (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@T) ) (! (= (type ($generated@@257 $generated@@263)) ($generated@@259 $generated@@263))
 :pattern ( ($generated@@257 $generated@@263))
))))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@264)) 0)
 :pattern ( ($generated@@257 $generated@@264))
)))
(assert (forall (($generated@@269 T@T) ) (! (= (type ($generated@@268 $generated@@269)) ($generated@@76 $generated@@269 $generated@@4))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@76 $generated@@152 $generated@@4)) (or ($generated@@266 $generated@@270) (and (not (= 1 $generated@@132)) (and ($generated@@139 $generated@@270 ($generated@@228 $generated@@46)) (not ($generated@@267 $generated@@270 ($generated@@268 $generated@@152))))))) true)
 :pattern ( ($generated@@265 $generated@@270))
))))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@245 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@74 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@245 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@76 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@79 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@76 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@81 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@76 $generated@@152 $generated@@4)) ($generated@@283 $generated@@284)) (and ($generated@@0 ($generated@@81 $generated@@284 ($generated@@271 ($generated@@8 ($generated@@282 $generated@@284))))) (forall (($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@284 ($generated@@271 $generated@@285)))) (<= ($generated $generated@@285) ($generated@@282 $generated@@284)))
 :pattern ( ($generated@@81 $generated@@284 ($generated@@271 $generated@@285)))
))))
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@76 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@81 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@81 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@322))))
 (=> (and (= (type $generated@@322) ($generated@@76 $generated@@324 $generated@@4)) (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@4))) (= ($generated@@267 $generated@@322 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (= ($generated@@0 ($generated@@81 $generated@@322 $generated@@325)) ($generated@@0 ($generated@@81 $generated@@323 $generated@@325))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@325))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@267 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@79 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@76 $generated@@327 $generated@@2)) (= ($generated@@158 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@81 $generated@@326 $generated@@328))) (<= ($generated ($generated@@81 $generated@@326 $generated@@328)) ($generated@@276 $generated@@326))))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@158 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@76 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@76 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@352) $generated@@64)) (= ($generated@@139 $generated@@351 ($generated@@157 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@351 $generated@@353)))) ($generated@@219 $generated@@353 $generated@@352))
 :pattern ( ($generated@@81 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@139 $generated@@351 ($generated@@157 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@228 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@152) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@245 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@228 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@233 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@152) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@245 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@233 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@277 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@277 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@290 (type $generated@@370))))
(let (($generated@@372 ($generated@@289 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@288 $generated@@152 $generated@@152)) (= (type $generated@@374) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@286 $generated@@373) ($generated@@150 ($generated@@365 $generated@@143 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@150 ($generated@@365 $generated@@143 $generated@@374))) ($generated@@151 ($generated@@365 $generated@@143 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@308 (type $generated@@378))))
(let (($generated@@380 ($generated@@307 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@306 $generated@@152 $generated@@152)) (= (type $generated@@382) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@381) ($generated@@150 ($generated@@365 $generated@@143 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@150 ($generated@@365 $generated@@143 $generated@@382))) ($generated@@151 ($generated@@365 $generated@@143 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@289 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@288 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@333 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@286 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@333 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@307 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@306 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@344 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@344 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@288 $generated@@152 $generated@@152)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@396) $generated@@400))) (and ($generated@@245 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@245 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@306 $generated@@152 $generated@@152)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@404) $generated@@408))) (and ($generated@@245 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@245 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@79 (type $generated@@409))))
 (=> (and (and (= (type $generated@@409) ($generated@@76 $generated@@411 $generated@@4)) (= (type $generated@@410) ($generated@@76 $generated@@411 $generated@@4))) ($generated@@267 $generated@@409 $generated@@410)) (= $generated@@409 $generated@@410)))
 :pattern ( ($generated@@267 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@76 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@308 (type $generated@@414))))
(let (($generated@@416 ($generated@@307 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@306 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@305 $generated@@416 $generated@@415)) (= ($generated@@304 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@304 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@308 (type $generated@@417))))
(let (($generated@@419 ($generated@@307 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@306 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@305 $generated@@419 $generated@@418)) (= ($generated@@344 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@344 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@308 (type $generated@@420))))
(let (($generated@@422 ($generated@@307 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@306 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@305 $generated@@422 $generated@@421)) (= ($generated@@375 $generated@@420) ($generated@@412 $generated@@152))))))
 :pattern ( ($generated@@375 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@290 (type $generated@@423))))
(let (($generated@@425 ($generated@@289 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@288 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@287 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@152) (= (type $generated@@427) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@423) ($generated@@271 ($generated@@218 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@364 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@308 (type $generated@@428))))
(let (($generated@@430 ($generated@@307 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@306 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@305 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@152) (= (type $generated@@432) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@428) ($generated@@271 ($generated@@218 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@375 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@152) ($generated@@219 $generated@@433 $generated@@46)) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@433)) $generated@@433) ($generated@@139 ($generated@@365 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@152) ($generated@@219 $generated@@434 $generated@@47)) (and (= ($generated@@271 ($generated@@365 $generated@@3 $generated@@434)) $generated@@434) ($generated@@139 ($generated@@365 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@152) ($generated@@219 $generated@@435 $generated@@44)) (and (= ($generated@@271 ($generated@@365 $generated@@4 $generated@@435)) $generated@@435) ($generated@@139 ($generated@@365 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@152) ($generated@@219 $generated@@437 $generated@@45)) (and (= ($generated@@271 ($generated@@365 $generated@@436 $generated@@437)) $generated@@437) ($generated@@139 ($generated@@365 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@64) (= ($generated@@219 ($generated@@271 $generated@@438) $generated@@439) ($generated@@139 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@219 ($generated@@271 $generated@@438) $generated@@439))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@440) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@441) ($generated@@76 $generated@@152 $generated@@4))) (or ($generated@@266 $generated@@441) (and (not (= 1 $generated@@132)) (and (and ($generated@@244 $generated@@440) ($generated@@139 $generated@@441 ($generated@@228 $generated@@46))) (not ($generated@@267 $generated@@441 ($generated@@268 $generated@@152))))))) (and ($generated@@283 $generated@@441) (= ($generated@@265 $generated@@441) (let (($generated@@442 ($generated@@282 $generated@@441)))
$generated@@442))))
 :pattern ( ($generated@@265 $generated@@441) ($generated@@244 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@276 $generated@@443))))
 :pattern ( ($generated@@276 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@260 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@259 $generated@@446)) (<= 0 ($generated@@258 $generated@@445))))
 :pattern ( ($generated@@258 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@393 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@393 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@401 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@401 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@152) (= (type $generated@@468) $generated@@152)) (= ($generated@@251 ($generated@@218 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@142 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@142 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@142 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@142 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@152) (= (type $generated@@478) $generated@@152)) (= ($generated@@150 ($generated@@218 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@218 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@152) (= (type $generated@@480) $generated@@152)) (= ($generated@@151 ($generated@@218 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@218 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@260 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@259 $generated@@152)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@258 $generated@@487))) ($generated@@245 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@228 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@228 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@233 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@233 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@157 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@157 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@365 $generated@@510 ($generated@@271 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@271 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@288 $generated@@152 $generated@@152)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@139 $generated@@511 ($generated@@393 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@286 $generated@@511) $generated@@514))) (and ($generated@@219 ($generated@@81 ($generated@@366 $generated@@511) $generated@@514) $generated@@513) ($generated@@219 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@286 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@139 $generated@@511 ($generated@@393 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@306 $generated@@152 $generated@@152)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@139 $generated@@515 ($generated@@401 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@515) $generated@@518))) (and ($generated@@219 ($generated@@81 ($generated@@376 $generated@@515) $generated@@518) $generated@@517) ($generated@@219 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@139 $generated@@515 ($generated@@401 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@152) (= (type $generated@@522) $generated@@152)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@218 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@218 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@152) (= (type $generated@@524) $generated@@152)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@218 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@218 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@152) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@219 $generated@@525 ($generated@@393 $generated@@526 $generated@@527))) (and (= ($generated@@271 ($generated@@365 ($generated@@288 $generated@@152 $generated@@152) $generated@@525)) $generated@@525) ($generated@@139 ($generated@@365 ($generated@@288 $generated@@152 $generated@@152) $generated@@525) ($generated@@393 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@219 $generated@@525 ($generated@@393 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@219 $generated@@528 ($generated@@401 $generated@@529 $generated@@530))) (and (= ($generated@@271 ($generated@@365 ($generated@@306 $generated@@152 $generated@@152) $generated@@528)) $generated@@528) ($generated@@139 ($generated@@365 ($generated@@306 $generated@@152 $generated@@152) $generated@@528) ($generated@@401 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@219 $generated@@528 ($generated@@401 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@152)) ($generated@@219 $generated@@533 ($generated@@142 $generated@@531 $generated@@532))) (and (= ($generated@@271 ($generated@@365 $generated@@143 $generated@@533)) $generated@@533) ($generated@@139 ($generated@@365 $generated@@143 $generated@@533) ($generated@@142 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@219 $generated@@533 ($generated@@142 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@81 ($generated@@268 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@81 ($generated@@268 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@81 ($generated@@412 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@81 ($generated@@412 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@538 Int) ($generated@@539 Int) ) (! (= ($generated@@136 $generated@@538 $generated@@539) (mod $generated@@538 $generated@@539))
 :pattern ( ($generated@@136 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@142 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@142 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@142 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@143) (= ($generated@@519 ($generated@@271 $generated@@544)) ($generated@@520 $generated@@544)))
 :pattern ( ($generated@@519 ($generated@@271 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@152) ($generated@@219 $generated@@545 ($generated@@75 0))) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@545)) $generated@@545) ($generated@@139 ($generated@@365 ($generated@@76 $generated@@152 $generated@@4) $generated@@545) ($generated@@75 0))))
 :pattern ( ($generated@@219 $generated@@545 ($generated@@75 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@152) (= (type $generated@@547) $generated@@64)) ($generated@@219 $generated@@546 ($generated@@228 $generated@@547))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@152 $generated@@4) $generated@@546)) $generated@@546) ($generated@@139 ($generated@@365 ($generated@@76 $generated@@152 $generated@@4) $generated@@546) ($generated@@228 $generated@@547))))
 :pattern ( ($generated@@219 $generated@@546 ($generated@@228 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@152) (= (type $generated@@549) $generated@@64)) ($generated@@219 $generated@@548 ($generated@@233 $generated@@549))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@152 $generated@@4) $generated@@548)) $generated@@548) ($generated@@139 ($generated@@365 ($generated@@76 $generated@@152 $generated@@4) $generated@@548) ($generated@@233 $generated@@549))))
 :pattern ( ($generated@@219 $generated@@548 ($generated@@233 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@152) (= (type $generated@@551) $generated@@64)) ($generated@@219 $generated@@550 ($generated@@157 $generated@@551))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@152 $generated@@2) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@365 ($generated@@76 $generated@@152 $generated@@2) $generated@@550) ($generated@@157 $generated@@551))))
 :pattern ( ($generated@@219 $generated@@550 ($generated@@157 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@152) (= (type $generated@@553) $generated@@64)) ($generated@@219 $generated@@552 ($generated@@481 $generated@@553))) (and (= ($generated@@271 ($generated@@365 ($generated@@259 $generated@@152) $generated@@552)) $generated@@552) ($generated@@139 ($generated@@365 ($generated@@259 $generated@@152) $generated@@552) ($generated@@481 $generated@@553))))
 :pattern ( ($generated@@219 $generated@@552 ($generated@@481 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@554 ($generated@@157 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@554 $generated@@557)))) ($generated@@245 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@81 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@157 $generated@@555) $generated@@556))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@558 Int) ) (!  (=> (or ($generated@@135 $generated@@558) (not (= 0 $generated@@132))) (= ($generated@@133 $generated@@558)  (and (<= ($generated@@134 2) $generated@@558) (forall (($generated@@559 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@559) (< $generated@@559 $generated@@558)) (not (= ($generated@@136 $generated@@558 $generated@@559) 0))))
 :pattern ( ($generated@@136 $generated@@558 $generated@@559))
)))))
 :pattern ( ($generated@@133 $generated@@558))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@143) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@562) (and ($generated@@141 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@142 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@142 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@245 ($generated@@150 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@245 ($generated@@150 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@143) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@566) (and ($generated@@141 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@64) ($generated@@74 $generated@@564 ($generated@@142 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@74 $generated@@564 ($generated@@142 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@245 ($generated@@151 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@245 ($generated@@151 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@152) (= (type $generated@@569) $generated@@152)) (= ($generated@@218 ($generated@@239 $generated@@568) ($generated@@239 $generated@@569)) ($generated@@239 ($generated@@218 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@218 ($generated@@239 $generated@@568) ($generated@@239 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@134 $generated@@570))) ($generated@@239 ($generated@@271 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@134 $generated@@570))))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@271 ($generated@@239 $generated@@571)) ($generated@@239 ($generated@@271 $generated@@571)))
 :pattern ( ($generated@@271 ($generated@@239 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@260 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@259 $generated@@573)) (= ($generated@@258 $generated@@572) 0)) (= $generated@@572 ($generated@@257 $generated@@573))))
 :pattern ( ($generated@@258 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@76 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@276 ($generated@@82 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@276 $generated@@574) ($generated ($generated@@81 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@276 ($generated@@82 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) ($generated@@76 $generated@@152 $generated@@4))) (or ($generated@@266 ($generated@@239 $generated@@579)) (and (not (= 1 $generated@@132)) (and (and ($generated@@244 $generated@@578) ($generated@@139 $generated@@579 ($generated@@228 $generated@@46))) (not ($generated@@267 $generated@@579 ($generated@@268 $generated@@152))))))) (and ($generated@@283 ($generated@@239 $generated@@579)) (= ($generated@@265 ($generated@@239 $generated@@579)) (let (($generated@@580 ($generated@@282 ($generated@@239 $generated@@579))))
$generated@@580))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@239 $generated@@579)) ($generated@@244 $generated@@578))
))))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@2)) ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@3)) ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@4)) ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@436)) ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@152)) ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@259 $generated@@152)) (= (type $generated@@592) $generated@@64)) (= ($generated@@139 $generated@@591 ($generated@@481 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@258 $generated@@591))) ($generated@@219 ($generated@@482 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@482 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@139 $generated@@591 ($generated@@481 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@259 $generated@@152)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@258 $generated@@595))) (< ($generated@@520 ($generated@@365 $generated@@143 ($generated@@482 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@520 ($generated@@365 $generated@@143 ($generated@@482 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@288 $generated@@152 $generated@@152)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) ($generated@@139 $generated@@597 ($generated@@393 $generated@@598 $generated@@599))) (and (and ($generated@@139 ($generated@@286 $generated@@597) ($generated@@228 $generated@@598)) ($generated@@139 ($generated@@333 $generated@@597) ($generated@@228 $generated@@599))) ($generated@@139 ($generated@@364 $generated@@597) ($generated@@228 ($generated@@142 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@139 $generated@@597 ($generated@@393 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@306 $generated@@152 $generated@@152)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@139 $generated@@600 ($generated@@401 $generated@@601 $generated@@602))) (and (and ($generated@@139 ($generated@@304 $generated@@600) ($generated@@233 $generated@@601)) ($generated@@139 ($generated@@344 $generated@@600) ($generated@@233 $generated@@602))) ($generated@@139 ($generated@@375 $generated@@600) ($generated@@233 ($generated@@142 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@139 $generated@@600 ($generated@@401 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@139 $generated@@603 $generated@@46))
 :pattern ( ($generated@@139 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@139 $generated@@604 $generated@@47))
 :pattern ( ($generated@@139 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@139 $generated@@605 $generated@@44))
 :pattern ( ($generated@@139 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@436) ($generated@@139 $generated@@606 $generated@@45))
 :pattern ( ($generated@@139 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@152) ($generated@@139 $generated@@607 $generated@@48))
 :pattern ( ($generated@@139 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(assert  (and (and (and (and (= (type $generated@@608) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@613) ($generated@@164 $generated@@77 $generated@@4))) (= (type $generated@@614) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@615  (=> (and (and (and (=> (not ($generated@@267 $generated@@608 ($generated@@268 $generated@@152))) ($generated@@266 $generated@@608)) (= $generated@@609 (ite ($generated@@267 $generated@@608 ($generated@@268 $generated@@152)) 0 (+ ($generated@@265 $generated@@608) 1)))) (and ($generated@@244 $generated@@610) ($generated@@611 $generated@@610))) (and (and (forall (($generated@@616 Int) ) (!  (=> (<= $generated@@609 $generated@@616) ($generated@@135 $generated@@616))
 :pattern ( ($generated@@133 $generated@@616))
)) (exists (($generated@@617 Int) ) (!  (and (<= $generated@@609 $generated@@617) ($generated@@133 $generated@@617))
 :pattern ( ($generated@@133 $generated@@617))
))) (and (= $generated@@612 $generated@@610) (= (ControlFlow 0 2) (- 0 1))))) (exists (($generated@@618 Int) ) (!  (and ($generated@@133 $generated@@618) (not ($generated@@0 ($generated@@81 $generated@@608 ($generated@@271 ($generated@@8 $generated@@618))))))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@271 ($generated@@8 $generated@@618))))
 :pattern ( ($generated@@133 $generated@@618))
)))))
(let (($generated@@619  (=> (and (not ($generated@@267 $generated@@608 ($generated@@268 $generated@@152))) ($generated@@74 $generated@@608 ($generated@@228 $generated@@46) $generated@@612)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@267 $generated@@608 ($generated@@268 $generated@@152)))) (=> (not ($generated@@267 $generated@@608 ($generated@@268 $generated@@152))) (=> (and ($generated@@266 $generated@@608) (= (ControlFlow 0 4) 2)) $generated@@615))))))
(let (($generated@@620  (=> (and ($generated@@267 $generated@@608 ($generated@@268 $generated@@152)) (= (ControlFlow 0 3) 2)) $generated@@615)))
(let (($generated@@621  (=> (= $generated@@613 ($generated@@163 $generated@@614 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@620) (=> (= (ControlFlow 0 6) 4) $generated@@619)))))
(let (($generated@@622  (=> (and ($generated@@244 $generated@@612) ($generated@@611 $generated@@612)) (=> (and (and ($generated@@139 $generated@@608 ($generated@@228 $generated@@46)) ($generated@@74 $generated@@608 ($generated@@228 $generated@@46) $generated@@612)) (and (= 7 $generated@@132) (= (ControlFlow 0 7) 6))) $generated@@621))))
$generated@@622))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 (Int) Bool)
(declare-fun $generated@@143 (Int) Int)
(declare-fun $generated@@144 (Int) Bool)
(declare-fun $generated@@145 (Int Int) Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (Int Int) Int)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U Int) Bool)
(declare-fun $generated@@343 (T@U Int) Bool)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@522 () T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@527 (T@U Int) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@664 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@138 $generated@@139)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 $generated@@141) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@141 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@140 $generated@@141))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@146 Int) ) (!  (=> (or ($generated@@144 ($generated@@143 $generated@@146)) (not (= 0 $generated@@132))) (= ($generated@@142 ($generated@@143 $generated@@146))  (and (<= ($generated@@143 2) ($generated@@143 $generated@@146)) (forall (($generated@@147 Int) ) (!  (=> true (=> (and (<= ($generated@@143 2) $generated@@147) (< $generated@@147 $generated@@146)) (not (= ($generated@@145 $generated@@146 $generated@@147) 0))))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))))
 :weight 3
 :pattern ( ($generated@@142 ($generated@@143 $generated@@146)))
))))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@137 $generated@@148 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@148 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 16) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@64) (= (type $generated@@155) $generated@@64)) (= (type $generated@@156) $generated@@151)) ($generated@@137 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@137 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@135)
 :pattern ( ($generated@@158 $generated@@160))
)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@135)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@151) (= (type $generated@@163) $generated@@151)) true) (= ($generated@@157 $generated@@162 $generated@@163)  (and (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)) (= ($generated@@159 $generated@@162) ($generated@@159 $generated@@163)))))
 :pattern ( ($generated@@157 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@64)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@168) $generated@@64)) ($generated@@137 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@137 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@77 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@67 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@77) (= (type $generated@@219) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@220) ($generated@@66 $generated@@4))) (= (type $generated@@222) $generated@@77)) (= (type $generated@@223) ($generated@@66 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@151)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@64) (= (type $generated@@230) $generated@@64)) (= (type $generated@@231) $generated@@135)) (= (type $generated@@232) $generated@@135)) (= ($generated@@137 ($generated@@225 $generated@@231 $generated@@232) ($generated@@150 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@137 ($generated@@225 $generated@@231 $generated@@232) ($generated@@150 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@151) (= (type $generated@@234) $generated@@151)) (= ($generated@@157 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@157 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@137 $generated@@235 ($generated@@138 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@135) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@226 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@137 $generated@@235 ($generated@@138 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@135) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@226 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@143 $generated@@243) $generated@@243)
 :pattern ( ($generated@@143 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@248 Int) ) (!  (=> (or ($generated@@144 $generated@@248) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@142 $generated@@248))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@135)) (= (type $generated@@254) $generated@@135)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@225 $generated@@253 $generated@@254) ($generated@@150 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@225 $generated@@253 $generated@@254) ($generated@@150 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@151) (= ($generated@@149 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@149 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@151) ($generated@@149 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@135) (= (type $generated@@261) $generated@@135)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@149 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 18)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@274 T@T) ) (! (= (type ($generated@@273 $generated@@274)) ($generated@@76 $generated@@274 $generated@@4))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@76 $generated@@135 $generated@@4)) (or ($generated@@271 $generated@@275) (and (not (= 1 $generated@@132)) (and ($generated@@137 $generated@@275 ($generated@@138 $generated@@46)) (not ($generated@@272 $generated@@275 ($generated@@273 $generated@@135))))))) true)
 :pattern ( ($generated@@270 $generated@@275))
))))
(assert  (and (and (and (forall (($generated@@281 T@U) ) (! (= (type ($generated@@276 $generated@@281)) $generated@@134)
 :pattern ( ($generated@@276 $generated@@281))
)) (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@79 (type $generated@@282))))
(= (type ($generated@@277 $generated@@282 $generated@@283)) ($generated@@76 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@278 $generated@@285 $generated@@286)) ($generated@@76 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@288 T@U) ) (! (= (type ($generated@@279 $generated@@288)) $generated@@135)
 :pattern ( ($generated@@279 $generated@@288))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@289) $generated@@134) (= (type $generated@@290) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 ($generated@@244 $generated@@290)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@290 ($generated@@138 $generated@@46))))) (and (=> (not ($generated@@272 $generated@@290 ($generated@@273 $generated@@135))) (and ($generated@@271 ($generated@@244 $generated@@290)) (let (($generated@@291 ($generated@@143 ($generated@@270 ($generated@@244 $generated@@290)))))
($generated@@136 ($generated@@277 $generated@@290 ($generated@@278 ($generated@@273 $generated@@135) ($generated@@279 ($generated@@8 $generated@@291)))))))) (= ($generated@@133 ($generated@@276 $generated@@289) ($generated@@244 $generated@@290)) (ite ($generated@@272 $generated@@290 ($generated@@273 $generated@@135)) 1 (let (($generated@@292 ($generated@@143 ($generated@@270 ($generated@@244 $generated@@290)))))
($generated@@280 $generated@@292 ($generated@@133 ($generated@@276 $generated@@289) ($generated@@277 $generated@@290 ($generated@@278 ($generated@@273 $generated@@135) ($generated@@279 ($generated@@8 $generated@@292)))))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@276 $generated@@289) ($generated@@244 $generated@@290)))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@64) (= (type $generated@@295) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@279 $generated@@293) $generated@@294 $generated@@295) ($generated@@74 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@250 ($generated@@279 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@76 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@79 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@76 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@81 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) ($generated@@76 $generated@@135 $generated@@4)) ($generated@@303 $generated@@304)) (and ($generated@@0 ($generated@@81 $generated@@304 ($generated@@279 ($generated@@8 ($generated@@302 $generated@@304))))) (forall (($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@305) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@304 ($generated@@279 $generated@@305)))) (<= ($generated $generated@@305) ($generated@@302 $generated@@304)))
 :pattern ( ($generated@@81 $generated@@304 ($generated@@279 $generated@@305)))
))))
 :pattern ( ($generated@@302 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 20)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@344 T@U) ($generated@@345 Int) ) (!  (=> (and (= (type $generated@@344) ($generated@@76 $generated@@135 $generated@@4)) (or ($generated@@343 $generated@@344 $generated@@345) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@344 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@342 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@79 (type $generated@@346))))
 (=> (and (= (type $generated@@346) ($generated@@76 $generated@@348 $generated@@4)) (= (type $generated@@347) ($generated@@76 $generated@@348 $generated@@4))) (= ($generated@@272 $generated@@346 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (= ($generated@@0 ($generated@@81 $generated@@346 $generated@@349)) ($generated@@0 ($generated@@81 $generated@@347 $generated@@349))))
 :pattern ( ($generated@@81 $generated@@346 $generated@@349))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@272 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@76 $generated@@351 $generated@@2)) (= ($generated@@165 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@81 $generated@@350 $generated@@352))) (<= ($generated ($generated@@81 $generated@@350 $generated@@352)) ($generated@@296 $generated@@350))))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@165 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(let (($generated@@355 ($generated@@309 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@308 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@307 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@306 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@310 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@310 (type $generated@@360))))
(let (($generated@@362 ($generated@@309 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@308 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@307 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@328 (type $generated@@364))))
(let (($generated@@366 ($generated@@327 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@326 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@325 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@324 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@328 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@76 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@328 (type $generated@@371))))
(let (($generated@@373 ($generated@@327 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@326 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@325 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@376) $generated@@64)) (= ($generated@@137 $generated@@375 ($generated@@164 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@375 $generated@@377)))) ($generated@@226 $generated@@377 $generated@@376))
 :pattern ( ($generated@@81 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@137 $generated@@375 ($generated@@164 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
 (=> (and (= (type $generated@@378) ($generated@@76 $generated@@381 $generated@@4)) (= (type $generated@@379) ($generated@@76 $generated@@381 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@277 $generated@@378 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 $generated@@378 $generated@@380)) (not ($generated@@0 ($generated@@81 $generated@@379 $generated@@380)))))))
 :pattern ( ($generated@@81 ($generated@@277 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@382 ($generated@@138 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@135) ($generated@@0 ($generated@@81 $generated@@382 $generated@@385))) ($generated@@250 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@81 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@382 ($generated@@138 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@238 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@135) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@250 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@238 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@81 ($generated@@297 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@81 ($generated@@297 $generated@@391) $generated@@390)))
)))
(assert  (and (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@392 $generated@@395)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@392 $generated@@395))
)) (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@393 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@393 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@310 (type $generated@@398))))
(let (($generated@@400 ($generated@@309 (type $generated@@398))))
(= (type ($generated@@394 $generated@@398)) ($generated@@76 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@394 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@308 $generated@@135 $generated@@135)) (= (type $generated@@402) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@401) ($generated@@158 ($generated@@393 $generated@@151 $generated@@402)))) (= ($generated@@81 ($generated@@394 $generated@@401) ($generated@@158 ($generated@@393 $generated@@151 $generated@@402))) ($generated@@159 ($generated@@393 $generated@@151 $generated@@402))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@328 (type $generated@@406))))
(let (($generated@@408 ($generated@@327 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@76 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@326 $generated@@135 $generated@@135)) (= (type $generated@@410) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@409) ($generated@@158 ($generated@@393 $generated@@151 $generated@@410)))) (= ($generated@@81 ($generated@@404 $generated@@409) ($generated@@158 ($generated@@393 $generated@@151 $generated@@410))) ($generated@@159 ($generated@@393 $generated@@151 $generated@@410))))))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@309 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@308 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@81 ($generated@@394 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@327 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@326 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@81 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@308 $generated@@135 $generated@@135)) (= (type $generated@@425) $generated@@64)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@424) $generated@@428))) (and ($generated@@250 ($generated@@81 ($generated@@394 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@250 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@424) $generated@@428))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@326 $generated@@135 $generated@@135)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) $generated@@64)) (= (type $generated@@435) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@432) $generated@@436))) (and ($generated@@250 ($generated@@81 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@250 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@437))))
 (=> (and (and (= (type $generated@@437) ($generated@@76 $generated@@439 $generated@@4)) (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@4))) ($generated@@272 $generated@@437 $generated@@438)) (= $generated@@437 $generated@@438)))
 :pattern ( ($generated@@272 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@441)))
 (=> (and (and (= (type $generated@@440) ($generated@@76 $generated@@443 $generated@@4)) (= (type $generated@@442) $generated@@443)) ($generated@@0 ($generated@@81 $generated@@440 $generated@@442))) ($generated@@0 ($generated@@81 ($generated@@278 $generated@@440 $generated@@441) $generated@@442))))
 :pattern ( ($generated@@278 $generated@@440 $generated@@441) ($generated@@81 $generated@@440 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@445)))
 (=> (and (= (type $generated@@444) ($generated@@76 $generated@@447 $generated@@4)) (= (type $generated@@446) $generated@@447)) (= ($generated@@0 ($generated@@81 ($generated@@278 $generated@@444 $generated@@445) $generated@@446))  (or (= $generated@@446 $generated@@445) ($generated@@0 ($generated@@81 $generated@@444 $generated@@446))))))
 :pattern ( ($generated@@81 ($generated@@278 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
 (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@451 $generated@@4)) (= (type $generated@@449) ($generated@@76 $generated@@451 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@449 $generated@@450))) (not ($generated@@0 ($generated@@81 ($generated@@277 $generated@@448 $generated@@449) $generated@@450)))))
 :pattern ( ($generated@@277 $generated@@448 $generated@@449) ($generated@@81 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@76 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@328 (type $generated@@454))))
(let (($generated@@456 ($generated@@327 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@326 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@325 $generated@@456 $generated@@455)) (= ($generated@@324 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@324 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@328 (type $generated@@457))))
(let (($generated@@459 ($generated@@327 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@326 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@325 $generated@@459 $generated@@458)) (= ($generated@@368 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@368 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@328 (type $generated@@460))))
(let (($generated@@462 ($generated@@327 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@326 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@325 $generated@@462 $generated@@461)) (= ($generated@@403 $generated@@460) ($generated@@452 $generated@@135))))))
 :pattern ( ($generated@@403 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@310 (type $generated@@463))))
(let (($generated@@465 ($generated@@309 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@308 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@307 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@135) (= (type $generated@@467) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@463) ($generated@@279 ($generated@@225 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@392 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@328 (type $generated@@468))))
(let (($generated@@470 ($generated@@327 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@326 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@325 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@135) (= (type $generated@@472) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@403 $generated@@468) ($generated@@279 ($generated@@225 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@403 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@135) ($generated@@226 $generated@@473 $generated@@46)) (and (= ($generated@@279 ($generated@@393 $generated@@2 $generated@@473)) $generated@@473) ($generated@@137 ($generated@@393 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@135) ($generated@@226 $generated@@474 $generated@@47)) (and (= ($generated@@279 ($generated@@393 $generated@@3 $generated@@474)) $generated@@474) ($generated@@137 ($generated@@393 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@135) ($generated@@226 $generated@@475 $generated@@44)) (and (= ($generated@@279 ($generated@@393 $generated@@4 $generated@@475)) $generated@@475) ($generated@@137 ($generated@@393 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 21))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@135) ($generated@@226 $generated@@477 $generated@@45)) (and (= ($generated@@279 ($generated@@393 $generated@@476 $generated@@477)) $generated@@477) ($generated@@137 ($generated@@393 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@226 ($generated@@279 $generated@@478) $generated@@479) ($generated@@137 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@226 ($generated@@279 $generated@@478) $generated@@479))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@481) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@271 $generated@@481) (and (not (= 1 $generated@@132)) (and (and ($generated@@249 $generated@@480) ($generated@@137 $generated@@481 ($generated@@138 $generated@@46))) (not ($generated@@272 $generated@@481 ($generated@@273 $generated@@135))))))) (and ($generated@@303 $generated@@481) (= ($generated@@270 $generated@@481) (let (($generated@@482 ($generated@@302 $generated@@481)))
$generated@@482))))
 :pattern ( ($generated@@270 $generated@@481) ($generated@@249 $generated@@480))
))))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@79 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@76 $generated@@484 $generated@@2)) (<= 0 ($generated@@296 $generated@@483))))
 :pattern ( ($generated@@296 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@265 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@264 $generated@@486)) (<= 0 ($generated@@263 $generated@@485))))
 :pattern ( ($generated@@263 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@421 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@421 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@421 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@421 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@72 ($generated@@421 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@429 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@429 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@64) (= (type $generated@@504) $generated@@64)) (= ($generated@@501 ($generated@@429 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@429 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@72 ($generated@@429 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@135) (= (type $generated@@508) $generated@@135)) (= ($generated@@256 ($generated@@225 $generated@@507 $generated@@508)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= ($generated@@509 ($generated@@150 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@150 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@150 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@150 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@135) (= (type $generated@@518) $generated@@135)) (= ($generated@@158 ($generated@@225 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@225 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@135) (= (type $generated@@520) $generated@@135)) (= ($generated@@159 ($generated@@225 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@225 $generated@@519 $generated@@520))
)))
(assert  (and (forall (($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@523)) $generated@@134)
 :pattern ( ($generated@@521 $generated@@523))
)) (= (type $generated@@522) $generated@@134)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@134) (= (type $generated@@525) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@133 $generated@@524 $generated@@525) ($generated@@133 $generated@@522 $generated@@525)))
 :pattern ( ($generated@@133 ($generated@@521 $generated@@524) $generated@@525))
)))
(assert  (and (forall (($generated@@528 T@U) ) (! (= (type ($generated@@526 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@528))
)) (forall (($generated@@529 T@U) ($generated@@530 Int) ) (! (let (($generated@@531 ($generated@@265 (type $generated@@529))))
(= (type ($generated@@527 $generated@@529 $generated@@530)) $generated@@531))
 :pattern ( ($generated@@527 $generated@@529 $generated@@530))
))))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@264 $generated@@135)) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@532 ($generated@@526 $generated@@533) $generated@@534) (forall (($generated@@535 Int) ) (!  (=> (and (<= 0 $generated@@535) (< $generated@@535 ($generated@@263 $generated@@532))) ($generated@@250 ($generated@@527 $generated@@532 $generated@@535) $generated@@533 $generated@@534))
 :pattern ( ($generated@@527 $generated@@532 $generated@@535))
))))
 :pattern ( ($generated@@74 $generated@@532 ($generated@@526 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (=> (= (type $generated@@536) ($generated@@76 $generated@@538 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@278 $generated@@536 $generated@@537) $generated@@537))))
 :pattern ( ($generated@@278 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@539 ($generated@@75 $generated@@540)) $generated@@540)
 :pattern ( ($generated@@75 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@64)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@64) (= ($generated@@541 ($generated@@138 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@138 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@544)) $generated@@54))
 :pattern ( ($generated@@138 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@545 ($generated@@238 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@238 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@548)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@549 ($generated@@164 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@164 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@64) (= ($generated@@72 ($generated@@164 $generated@@552)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@64)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@553 ($generated@@526 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@526 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@64) (= ($generated@@72 ($generated@@526 $generated@@556)) $generated@@57))
 :pattern ( ($generated@@526 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@393 $generated@@558 ($generated@@279 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@279 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@308 $generated@@135 $generated@@135)) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) $generated@@64)) (= ($generated@@137 $generated@@559 ($generated@@421 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@559) $generated@@562))) (and ($generated@@226 ($generated@@81 ($generated@@394 $generated@@559) $generated@@562) $generated@@561) ($generated@@226 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@559) $generated@@562))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@137 $generated@@559 ($generated@@421 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@326 $generated@@135 $generated@@135)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) (= ($generated@@137 $generated@@563 ($generated@@429 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@563) $generated@@566))) (and ($generated@@226 ($generated@@81 ($generated@@404 $generated@@563) $generated@@566) $generated@@565) ($generated@@226 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@563) $generated@@566))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@137 $generated@@563 ($generated@@429 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@135) (= (type $generated@@570) $generated@@135)) (< ($generated@@567 $generated@@569) ($generated@@568 ($generated@@225 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@225 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@135) (= (type $generated@@572) $generated@@135)) (< ($generated@@567 $generated@@572) ($generated@@568 ($generated@@225 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@225 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@134) (= (type $generated@@574) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@133 ($generated@@276 $generated@@573) $generated@@574) ($generated@@133 $generated@@573 $generated@@574)))
 :pattern ( ($generated@@133 ($generated@@276 $generated@@573) $generated@@574))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@135 $generated@@4)) (or ($generated@@343 ($generated@@244 $generated@@575) ($generated@@143 $generated@@576)) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@575 ($generated@@138 $generated@@46))))) (and (and (forall (($generated@@577 Int) ) (!  (=> ($generated@@0 ($generated@@81 ($generated@@244 $generated@@575) ($generated@@279 ($generated@@8 $generated@@577)))) ($generated@@144 $generated@@577))
 :pattern ( ($generated@@142 $generated@@577))
 :pattern ( ($generated@@81 $generated@@575 ($generated@@279 ($generated@@8 $generated@@577))))
)) (=> (forall (($generated@@578 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 ($generated@@244 $generated@@575) ($generated@@279 ($generated@@8 $generated@@578)))) ($generated@@142 $generated@@578)))
 :pattern ( ($generated@@142 $generated@@578))
 :pattern ( ($generated@@81 $generated@@575 ($generated@@279 ($generated@@8 $generated@@578))))
)) (forall (($generated@@579 Int) ) (! ($generated@@144 $generated@@579)
 :pattern ( ($generated@@81 $generated@@575 ($generated@@279 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@142 $generated@@579))
)))) (= ($generated@@342 ($generated@@244 $generated@@575) ($generated@@143 $generated@@576))  (and (forall (($generated@@580 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 ($generated@@244 $generated@@575) ($generated@@279 ($generated@@8 $generated@@580)))) ($generated@@142 $generated@@580)))
 :pattern ( ($generated@@142 $generated@@580))
 :pattern ( ($generated@@81 $generated@@575 ($generated@@279 ($generated@@8 $generated@@580))))
)) (forall (($generated@@581 Int) ) (!  (=> true (=> (and ($generated@@142 $generated@@581) (<= $generated@@581 ($generated@@143 $generated@@576))) ($generated@@0 ($generated@@81 ($generated@@244 $generated@@575) ($generated@@279 ($generated@@8 $generated@@581))))))
 :pattern ( ($generated@@81 $generated@@575 ($generated@@279 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@142 $generated@@581))
))))))
 :weight 3
 :pattern ( ($generated@@342 ($generated@@244 $generated@@575) ($generated@@143 $generated@@576)))
))))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@135) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@226 $generated@@582 ($generated@@421 $generated@@583 $generated@@584))) (and (= ($generated@@279 ($generated@@393 ($generated@@308 $generated@@135 $generated@@135) $generated@@582)) $generated@@582) ($generated@@137 ($generated@@393 ($generated@@308 $generated@@135 $generated@@135) $generated@@582) ($generated@@421 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@226 $generated@@582 ($generated@@421 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@135) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@226 $generated@@585 ($generated@@429 $generated@@586 $generated@@587))) (and (= ($generated@@279 ($generated@@393 ($generated@@326 $generated@@135 $generated@@135) $generated@@585)) $generated@@585) ($generated@@137 ($generated@@393 ($generated@@326 $generated@@135 $generated@@135) $generated@@585) ($generated@@429 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@226 $generated@@585 ($generated@@429 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@64) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@135)) ($generated@@226 $generated@@590 ($generated@@150 $generated@@588 $generated@@589))) (and (= ($generated@@279 ($generated@@393 $generated@@151 $generated@@590)) $generated@@590) ($generated@@137 ($generated@@393 $generated@@151 $generated@@590) ($generated@@150 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@226 $generated@@590 ($generated@@150 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@81 ($generated@@273 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@81 ($generated@@273 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@81 ($generated@@452 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@81 ($generated@@452 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@595 Int) ($generated@@596 Int) ) (! (= ($generated@@145 $generated@@595 $generated@@596) (mod $generated@@595 $generated@@596))
 :pattern ( ($generated@@145 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@69)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@64) (= (type $generated@@600) $generated@@64)) (and (= ($generated@@72 ($generated@@150 $generated@@599 $generated@@600)) $generated@@62) (= ($generated@@597 ($generated@@150 $generated@@599 $generated@@600)) $generated@@63)))
 :pattern ( ($generated@@150 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 Int) ($generated@@602 Int) ) (! (= ($generated@@280 $generated@@601 $generated@@602) (* $generated@@601 $generated@@602))
 :pattern ( ($generated@@280 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@151) (= ($generated@@567 ($generated@@279 $generated@@603)) ($generated@@568 $generated@@603)))
 :pattern ( ($generated@@567 ($generated@@279 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@135) ($generated@@226 $generated@@604 ($generated@@75 0))) (and (= ($generated@@279 ($generated@@393 $generated@@2 $generated@@604)) $generated@@604) ($generated@@137 ($generated@@393 ($generated@@76 $generated@@135 $generated@@4) $generated@@604) ($generated@@75 0))))
 :pattern ( ($generated@@226 $generated@@604 ($generated@@75 0)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@135) (= (type $generated@@606) $generated@@64)) ($generated@@226 $generated@@605 ($generated@@138 $generated@@606))) (and (= ($generated@@279 ($generated@@393 ($generated@@76 $generated@@135 $generated@@4) $generated@@605)) $generated@@605) ($generated@@137 ($generated@@393 ($generated@@76 $generated@@135 $generated@@4) $generated@@605) ($generated@@138 $generated@@606))))
 :pattern ( ($generated@@226 $generated@@605 ($generated@@138 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@135) (= (type $generated@@608) $generated@@64)) ($generated@@226 $generated@@607 ($generated@@238 $generated@@608))) (and (= ($generated@@279 ($generated@@393 ($generated@@76 $generated@@135 $generated@@4) $generated@@607)) $generated@@607) ($generated@@137 ($generated@@393 ($generated@@76 $generated@@135 $generated@@4) $generated@@607) ($generated@@238 $generated@@608))))
 :pattern ( ($generated@@226 $generated@@607 ($generated@@238 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@135) (= (type $generated@@610) $generated@@64)) ($generated@@226 $generated@@609 ($generated@@164 $generated@@610))) (and (= ($generated@@279 ($generated@@393 ($generated@@76 $generated@@135 $generated@@2) $generated@@609)) $generated@@609) ($generated@@137 ($generated@@393 ($generated@@76 $generated@@135 $generated@@2) $generated@@609) ($generated@@164 $generated@@610))))
 :pattern ( ($generated@@226 $generated@@609 ($generated@@164 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@135) (= (type $generated@@612) $generated@@64)) ($generated@@226 $generated@@611 ($generated@@526 $generated@@612))) (and (= ($generated@@279 ($generated@@393 ($generated@@264 $generated@@135) $generated@@611)) $generated@@611) ($generated@@137 ($generated@@393 ($generated@@264 $generated@@135) $generated@@611) ($generated@@526 $generated@@612))))
 :pattern ( ($generated@@226 $generated@@611 ($generated@@526 $generated@@612)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (and (= (type $generated@@613) ($generated@@76 $generated@@135 $generated@@4)) (or ($generated@@343 $generated@@613 $generated@@614) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@613 ($generated@@138 $generated@@46))))) (and (and (forall (($generated@@615 Int) ) (!  (=> ($generated@@0 ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@615)))) ($generated@@144 $generated@@615))
 :pattern ( ($generated@@142 $generated@@615))
 :pattern ( ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@615))))
)) (=> (forall (($generated@@616 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@616)))) ($generated@@142 $generated@@616)))
 :pattern ( ($generated@@142 $generated@@616))
 :pattern ( ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@616))))
)) (forall (($generated@@617 Int) ) (! ($generated@@144 $generated@@617)
 :pattern ( ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@142 $generated@@617))
)))) (= ($generated@@342 $generated@@613 $generated@@614)  (and (forall (($generated@@618 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@618)))) ($generated@@142 $generated@@618)))
 :pattern ( ($generated@@142 $generated@@618))
 :pattern ( ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@618))))
)) (forall (($generated@@619 Int) ) (!  (=> true (=> (and ($generated@@142 $generated@@619) (<= $generated@@619 $generated@@614)) ($generated@@0 ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@619))))))
 :pattern ( ($generated@@81 $generated@@613 ($generated@@279 ($generated@@8 $generated@@619))))
 :pattern ( ($generated@@142 $generated@@619))
))))))
 :pattern ( ($generated@@342 $generated@@613 $generated@@614))
))))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@621) $generated@@64)) (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@620 ($generated@@164 $generated@@621) $generated@@622) (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@620 $generated@@623)))) ($generated@@250 $generated@@623 $generated@@621 $generated@@622))
 :pattern ( ($generated@@81 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@74 $generated@@620 ($generated@@164 $generated@@621) $generated@@622))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@134) (= (type $generated@@625) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 $generated@@625) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@625 ($generated@@138 $generated@@46))))) (and (=> (not ($generated@@272 $generated@@625 ($generated@@273 $generated@@135))) (and ($generated@@271 $generated@@625) (let (($generated@@626 ($generated@@270 $generated@@625)))
($generated@@136 ($generated@@277 $generated@@625 ($generated@@278 ($generated@@273 $generated@@135) ($generated@@279 ($generated@@8 $generated@@626)))))))) (= ($generated@@133 ($generated@@276 $generated@@624) $generated@@625) (ite ($generated@@272 $generated@@625 ($generated@@273 $generated@@135)) 1 (let (($generated@@627 ($generated@@270 $generated@@625)))
($generated@@280 $generated@@627 ($generated@@133 $generated@@624 ($generated@@277 $generated@@625 ($generated@@278 ($generated@@273 $generated@@135) ($generated@@279 ($generated@@8 $generated@@627)))))))))))
 :pattern ( ($generated@@133 ($generated@@276 $generated@@624) $generated@@625))
))))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@628 Int) ) (!  (=> (or ($generated@@144 $generated@@628) (not (= 0 $generated@@132))) (= ($generated@@142 $generated@@628)  (and (<= ($generated@@143 2) $generated@@628) (forall (($generated@@629 Int) ) (!  (=> true (=> (and (<= ($generated@@143 2) $generated@@629) (< $generated@@629 $generated@@628)) (not (= ($generated@@145 $generated@@628 $generated@@629) 0))))
 :pattern ( ($generated@@145 $generated@@628 $generated@@629))
)))))
 :pattern ( ($generated@@142 $generated@@628))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@151) (= (type $generated@@631) $generated@@64)) (= (type $generated@@632) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@632) (and ($generated@@149 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@64) ($generated@@74 $generated@@630 ($generated@@150 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@74 $generated@@630 ($generated@@150 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@250 ($generated@@158 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@250 ($generated@@158 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@151) (= (type $generated@@635) $generated@@64)) (= (type $generated@@636) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@636) (and ($generated@@149 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@64) ($generated@@74 $generated@@634 ($generated@@150 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@74 $generated@@634 ($generated@@150 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@250 ($generated@@159 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@250 ($generated@@159 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@135) (= (type $generated@@639) $generated@@135)) (= ($generated@@225 ($generated@@244 $generated@@638) ($generated@@244 $generated@@639)) ($generated@@244 ($generated@@225 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@225 ($generated@@244 $generated@@638) ($generated@@244 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@279 ($generated@@8 ($generated@@143 $generated@@640))) ($generated@@244 ($generated@@279 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@279 ($generated@@8 ($generated@@143 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@279 ($generated@@244 $generated@@641)) ($generated@@244 ($generated@@279 $generated@@641)))
 :pattern ( ($generated@@279 ($generated@@244 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@265 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@264 $generated@@643)) (= ($generated@@263 $generated@@642) 0)) (= $generated@@642 ($generated@@262 $generated@@643))))
 :pattern ( ($generated@@263 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@76 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@296 ($generated@@82 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@296 $generated@@644) ($generated ($generated@@81 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@296 ($generated@@82 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@649) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@271 ($generated@@244 $generated@@649)) (and (not (= 1 $generated@@132)) (and (and ($generated@@249 $generated@@648) ($generated@@137 $generated@@649 ($generated@@138 $generated@@46))) (not ($generated@@272 $generated@@649 ($generated@@273 $generated@@135))))))) (and ($generated@@303 ($generated@@244 $generated@@649)) (= ($generated@@270 ($generated@@244 $generated@@649)) (let (($generated@@650 ($generated@@302 ($generated@@244 $generated@@649))))
$generated@@650))))
 :weight 3
 :pattern ( ($generated@@270 ($generated@@244 $generated@@649)) ($generated@@249 $generated@@648))
))))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@652) $generated@@2)) ($generated@@74 $generated@@652 $generated@@46 $generated@@651))
 :pattern ( ($generated@@74 $generated@@652 $generated@@46 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@654) $generated@@3)) ($generated@@74 $generated@@654 $generated@@47 $generated@@653))
 :pattern ( ($generated@@74 $generated@@654 $generated@@47 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@656) $generated@@4)) ($generated@@74 $generated@@656 $generated@@44 $generated@@655))
 :pattern ( ($generated@@74 $generated@@656 $generated@@44 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@658) $generated@@476)) ($generated@@74 $generated@@658 $generated@@45 $generated@@657))
 :pattern ( ($generated@@74 $generated@@658 $generated@@45 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@660) $generated@@135)) ($generated@@74 $generated@@660 $generated@@48 $generated@@659))
 :pattern ( ($generated@@74 $generated@@660 $generated@@48 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@264 $generated@@135)) (= (type $generated@@662) $generated@@64)) (= ($generated@@137 $generated@@661 ($generated@@526 $generated@@662)) (forall (($generated@@663 Int) ) (!  (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@263 $generated@@661))) ($generated@@226 ($generated@@527 $generated@@661 $generated@@663) $generated@@662))
 :pattern ( ($generated@@527 $generated@@661 $generated@@663))
))))
 :pattern ( ($generated@@137 $generated@@661 ($generated@@526 $generated@@662)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 Int) ) (!  (=> (= (type $generated@@665) ($generated@@264 $generated@@135)) (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@263 $generated@@665))) (< ($generated@@568 ($generated@@393 $generated@@151 ($generated@@527 $generated@@665 $generated@@666))) ($generated@@664 $generated@@665))))
 :pattern ( ($generated@@568 ($generated@@393 $generated@@151 ($generated@@527 $generated@@665 $generated@@666))))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@308 $generated@@135 $generated@@135)) (= (type $generated@@668) $generated@@64)) (= (type $generated@@669) $generated@@64)) ($generated@@137 $generated@@667 ($generated@@421 $generated@@668 $generated@@669))) (and (and ($generated@@137 ($generated@@306 $generated@@667) ($generated@@138 $generated@@668)) ($generated@@137 ($generated@@357 $generated@@667) ($generated@@138 $generated@@669))) ($generated@@137 ($generated@@392 $generated@@667) ($generated@@138 ($generated@@150 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@137 $generated@@667 ($generated@@421 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@326 $generated@@135 $generated@@135)) (= (type $generated@@671) $generated@@64)) (= (type $generated@@672) $generated@@64)) ($generated@@137 $generated@@670 ($generated@@429 $generated@@671 $generated@@672))) (and (and ($generated@@137 ($generated@@324 $generated@@670) ($generated@@238 $generated@@671)) ($generated@@137 ($generated@@368 $generated@@670) ($generated@@238 $generated@@672))) ($generated@@137 ($generated@@403 $generated@@670) ($generated@@238 ($generated@@150 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@137 $generated@@670 ($generated@@429 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@2) ($generated@@137 $generated@@673 $generated@@46))
 :pattern ( ($generated@@137 $generated@@673 $generated@@46))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@3) ($generated@@137 $generated@@674 $generated@@47))
 :pattern ( ($generated@@137 $generated@@674 $generated@@47))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@4) ($generated@@137 $generated@@675 $generated@@44))
 :pattern ( ($generated@@137 $generated@@675 $generated@@44))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@476) ($generated@@137 $generated@@676 $generated@@45))
 :pattern ( ($generated@@137 $generated@@676 $generated@@45))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@135) ($generated@@137 $generated@@677 $generated@@48))
 :pattern ( ($generated@@137 $generated@@677 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 (T@U) Bool)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@685) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@686) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@688) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@683) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@690) ($generated@@171 $generated@@77 $generated@@4))) (= (type $generated@@691) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@692 true))
(let (($generated@@693  (and (=> (= (ControlFlow 0 3) (- 0 5)) (< $generated@@678 $generated@@679)) (=> (< $generated@@678 $generated@@679) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@144 $generated@@679) (or ($generated@@142 $generated@@679) (<= ($generated@@143 2) $generated@@679)))) (=> (=> ($generated@@144 $generated@@679) (or ($generated@@142 $generated@@679) (<= ($generated@@143 2) $generated@@679))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@144 $generated@@679) (or ($generated@@142 $generated@@679) (forall (($generated@@694 Int) ) (!  (=> true (=> (and (<= ($generated@@143 2) $generated@@694) (< $generated@@694 $generated@@679)) (not (= ($generated@@145 $generated@@679 $generated@@694) 0))))
 :pattern ( ($generated@@145 $generated@@679 $generated@@694))
)))))))))))
(let (($generated@@695  (=> (=> (< $generated@@678 $generated@@680) (=> (<= $generated@@680 $generated@@681) ($generated@@144 $generated@@680))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (and ($generated@@137 ($generated@@8 (- (+ $generated@@681 1) 1)) $generated@@46) (and (and (< $generated@@678 (- (+ $generated@@681 1) 1)) (<= (- (+ $generated@@681 1) 1) $generated@@681)) ($generated@@142 (- (+ $generated@@681 1) 1)))) (or (and ($generated@@137 ($generated@@8 (+ $generated@@678 1)) $generated@@46) (and (and (< $generated@@678 (+ $generated@@678 1)) (<= (+ $generated@@678 1) $generated@@681)) ($generated@@142 (+ $generated@@678 1)))) (or (and ($generated@@137 ($generated@@8 ($generated@@143 0)) $generated@@46) (and (and (< $generated@@678 0) (<= ($generated@@143 0) $generated@@681)) ($generated@@142 ($generated@@143 0)))) (exists (($generated@@696 Int) )  (and (and (< $generated@@678 $generated@@696) (<= $generated@@696 $generated@@681)) ($generated@@142 $generated@@696))))))) (=> (or (and ($generated@@137 ($generated@@8 (- (+ $generated@@681 1) 1)) $generated@@46) (and (and (< $generated@@678 (- (+ $generated@@681 1) 1)) (<= (- (+ $generated@@681 1) 1) $generated@@681)) ($generated@@142 (- (+ $generated@@681 1) 1)))) (or (and ($generated@@137 ($generated@@8 (+ $generated@@678 1)) $generated@@46) (and (and (< $generated@@678 (+ $generated@@678 1)) (<= (+ $generated@@678 1) $generated@@681)) ($generated@@142 (+ $generated@@678 1)))) (or (and ($generated@@137 ($generated@@8 ($generated@@143 0)) $generated@@46) (and (and (< $generated@@678 0) (<= ($generated@@143 0) $generated@@681)) ($generated@@142 ($generated@@143 0)))) (exists (($generated@@697 Int) )  (and (and (< $generated@@678 $generated@@697) (<= $generated@@697 $generated@@681)) ($generated@@142 $generated@@697)))))) (=> (and (and (and (< $generated@@678 $generated@@682) (<= $generated@@682 $generated@@681)) ($generated@@142 $generated@@682)) (and (= $generated@@679 $generated@@682) (= (ControlFlow 0 16) 3))) $generated@@693))))))
(let (($generated@@698  (=> (and (not (and (< $generated@@678 $generated@@680) (<= $generated@@680 $generated@@681))) (= (ControlFlow 0 19) 16)) $generated@@695)))
(let (($generated@@699  (=> (and (and (and (< $generated@@678 $generated@@680) (<= $generated@@680 $generated@@681)) ($generated@@74 ($generated@@8 $generated@@680) $generated@@46 $generated@@683)) (and ($generated@@144 $generated@@680) (= (ControlFlow 0 18) 16))) $generated@@695)))
(let (($generated@@700  (=> (<= $generated@@680 $generated@@678) (and (=> (= (ControlFlow 0 21) 18) $generated@@699) (=> (= (ControlFlow 0 21) 19) $generated@@698)))))
(let (($generated@@701  (=> (< $generated@@678 $generated@@680) (and (=> (= (ControlFlow 0 20) 18) $generated@@699) (=> (= (ControlFlow 0 20) 19) $generated@@698)))))
(let (($generated@@702  (and (=> (= (ControlFlow 0 22) 20) $generated@@701) (=> (= (ControlFlow 0 22) 21) $generated@@700))))
(let (($generated@@703  (=> (exists (($generated@@704 Int) ) (!  (and (and (< $generated@@678 $generated@@704) (<= $generated@@704 $generated@@681)) ($generated@@142 $generated@@704))
 :pattern ( ($generated@@142 $generated@@704))
)) (and (=> (= (ControlFlow 0 23) 22) $generated@@702) (=> (= (ControlFlow 0 23) 15) $generated@@692)))))
(let (($generated@@705  (=> (< $generated@@678 $generated@@684) (=> (and (= $generated@@679 $generated@@684) (= (ControlFlow 0 10) 3)) $generated@@693))))
(let (($generated@@706  (=> (<= $generated@@684 $generated@@678) (and (=> (= (ControlFlow 0 6) (- 0 9)) ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@684))))) (=> ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@684)))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (forall (($generated@@707 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@707)))) (<= ($generated@@143 1) $generated@@707)))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@707))))
))) (=> (forall (($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@708) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 $generated@@708)))) (<= ($generated@@143 1) ($generated $generated@@708)))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 $generated@@708)))
)) (=> (and ($generated@@249 $generated@@686) ($generated@@687 $generated@@686)) (=> (and (and (and ($generated@@136 $generated@@685) (=> (<= ($generated@@143 1) ($generated@@133 ($generated@@276 $generated@@522) $generated@@685)) (forall (($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@2) ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 $generated@@709)))) ($generated@@136 $generated@@685))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 $generated@@709)))
)))) (<= ($generated@@143 1) ($generated@@133 ($generated@@276 ($generated@@276 $generated@@522)) $generated@@685))) (and (forall (($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@710) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 $generated@@710)))) (<= ($generated $generated@@710) ($generated@@133 ($generated@@276 $generated@@522) $generated@@685)))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 $generated@@710)))
)) (= $generated@@688 $generated@@686))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@244 ($generated@@11 false)))) (=> ($generated@@0 ($generated@@244 ($generated@@11 false))) (=> (and (= $generated@@679 $generated@@684) (= (ControlFlow 0 6) 3)) $generated@@693))))))))))))
(let (($generated@@711  (=> (not (exists (($generated@@712 Int) ) (!  (and (and (< $generated@@678 $generated@@712) (<= $generated@@712 $generated@@681)) ($generated@@142 $generated@@712))
 :pattern ( ($generated@@142 $generated@@712))
))) (and (=> (= (ControlFlow 0 11) (- 0 14)) (=> ($generated@@343 $generated@@685 $generated@@681) (or ($generated@@342 $generated@@685 $generated@@681) (forall (($generated@@713 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@713)))) ($generated@@142 $generated@@713)))
 :pattern ( ($generated@@142 $generated@@713))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@713))))
))))) (=> (=> ($generated@@343 $generated@@685 $generated@@681) (or ($generated@@342 $generated@@685 $generated@@681) (forall (($generated@@714 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@714)))) ($generated@@142 $generated@@714)))
 :pattern ( ($generated@@142 $generated@@714))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@714))))
)))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (=> ($generated@@343 $generated@@685 $generated@@681) (or ($generated@@342 $generated@@685 $generated@@681) (forall (($generated@@715 Int) ) (!  (=> true (=> (and ($generated@@142 $generated@@715) (<= $generated@@715 $generated@@681)) ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@715))))))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@715))))
 :pattern ( ($generated@@142 $generated@@715))
))))) (=> (=> ($generated@@343 $generated@@685 $generated@@681) (or ($generated@@342 $generated@@685 $generated@@681) (forall (($generated@@716 Int) ) (!  (=> true (=> (and ($generated@@142 $generated@@716) (<= $generated@@716 $generated@@681)) ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@716))))))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@716))))
 :pattern ( ($generated@@142 $generated@@716))
)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (= $generated@@681 ($generated@@133 ($generated@@276 ($generated@@276 $generated@@522)) $generated@@685))) (=> (= $generated@@681 ($generated@@133 ($generated@@276 ($generated@@276 $generated@@522)) $generated@@685)) (=> (and (and (and ($generated@@249 $generated@@688) ($generated@@687 $generated@@688)) ($generated@@144 (+ $generated@@681 1))) (and (and ($generated@@144 (+ $generated@@681 1)) ($generated@@142 (+ $generated@@681 1))) (and (= $generated@@683 $generated@@688) (= $generated@@684 (+ $generated@@681 1))))) (and (=> (= (ControlFlow 0 11) 6) $generated@@706) (=> (= (ControlFlow 0 11) 10) $generated@@705))))))))))))
(let (($generated@@717  (=> (forall (($generated@@718 Int) ) (!  (=> (and (< $generated@@678 $generated@@718) (<= $generated@@718 $generated@@681)) ($generated@@144 $generated@@718))
 :pattern ( ($generated@@142 $generated@@718))
)) (and (=> (= (ControlFlow 0 24) 23) $generated@@703) (=> (= (ControlFlow 0 24) 11) $generated@@711)))))
(let (($generated@@719  (=> (and (not (and (< $generated@@678 $generated@@689) (<= $generated@@689 $generated@@681))) (= (ControlFlow 0 26) 24)) $generated@@717)))
(let (($generated@@720  (=> (and (and (and (< $generated@@678 $generated@@689) (<= $generated@@689 $generated@@681)) ($generated@@74 ($generated@@8 $generated@@689) $generated@@46 $generated@@683)) (and ($generated@@144 $generated@@689) (= (ControlFlow 0 25) 24))) $generated@@717)))
(let (($generated@@721  (=> (<= $generated@@689 $generated@@678) (and (=> (= (ControlFlow 0 28) 25) $generated@@720) (=> (= (ControlFlow 0 28) 26) $generated@@719)))))
(let (($generated@@722  (=> (< $generated@@678 $generated@@689) (and (=> (= (ControlFlow 0 27) 25) $generated@@720) (=> (= (ControlFlow 0 27) 26) $generated@@719)))))
(let (($generated@@723  (and (=> (= (ControlFlow 0 29) 27) $generated@@722) (=> (= (ControlFlow 0 29) 28) $generated@@721))))
(let (($generated@@724 true))
(let (($generated@@725  (=> (= $generated@@690 ($generated@@170 $generated@@691 $generated@@683 $generated@@60 false)) (=> (and (and ($generated@@74 $generated@@685 ($generated@@138 $generated@@46) $generated@@683) ($generated@@136 $generated@@685)) (and ($generated@@136 $generated@@685) (= $generated@@681 ($generated@@133 ($generated@@276 $generated@@522) $generated@@685)))) (and (=> (= (ControlFlow 0 30) 29) $generated@@723) (=> (= (ControlFlow 0 30) 1) $generated@@724))))))
(let (($generated@@726  (=> (and ($generated@@249 $generated@@683) ($generated@@687 $generated@@683)) (=> (and (and (and ($generated@@137 $generated@@685 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@685 ($generated@@138 $generated@@46) $generated@@683)) (= 5 $generated@@132)) (and (and ($generated@@343 $generated@@685 $generated@@678) (and ($generated@@342 $generated@@685 $generated@@678) (and (forall (($generated@@727 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@727)))) ($generated@@142 $generated@@727)))
 :pattern ( ($generated@@142 $generated@@727))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@727))))
)) (forall (($generated@@728 Int) ) (!  (=> true (=> (and ($generated@@142 $generated@@728) (<= $generated@@728 $generated@@678)) ($generated@@0 ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@728))))))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@279 ($generated@@8 $generated@@728))))
 :pattern ( ($generated@@142 $generated@@728))
))))) (= (ControlFlow 0 31) 30))) $generated@@725))))
$generated@@726))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@278 (T@U T@U) Bool)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (Int Int) Int)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@U) Bool)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 () T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@529 (T@U Int) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@606 (T@U T@U) Bool)
(declare-fun $generated@@653 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@138 $generated@@139)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 $generated@@141) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@141 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@137 $generated@@142 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@142 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 16) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@137 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@137 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@135)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@135)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@137 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@137 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 17)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@67 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@77) (= (type $generated@@225) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@226) ($generated@@66 $generated@@4))) (= (type $generated@@228) $generated@@77)) (= (type $generated@@229) ($generated@@66 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@145)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@64) (= (type $generated@@236) $generated@@64)) (= (type $generated@@237) $generated@@135)) (= (type $generated@@238) $generated@@135)) (= ($generated@@137 ($generated@@231 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@137 ($generated@@231 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) (= (type $generated@@240) $generated@@145)) (= ($generated@@151 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@151 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@137 $generated@@241 ($generated@@138 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@135) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@232 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@137 $generated@@241 ($generated@@138 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@135) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@232 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@135)) (= (type $generated@@260) $generated@@135)) (= (type $generated@@261) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@255 $generated@@261)) (= ($generated@@74 ($generated@@231 $generated@@259 $generated@@260) ($generated@@144 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@74 ($generated@@231 $generated@@259 $generated@@260) ($generated@@144 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@145) (= ($generated@@143 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@145) ($generated@@143 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@135) (= (type $generated@@267) $generated@@135)) (= $generated@@265 ($generated@@231 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@143 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 18)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@76 $generated@@280 $generated@@4))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@76 $generated@@135 $generated@@4)) (or ($generated@@277 $generated@@281) (and (not (= 1 $generated@@132)) (and ($generated@@137 $generated@@281 ($generated@@138 $generated@@46)) (not ($generated@@278 $generated@@281 ($generated@@279 $generated@@135))))))) true)
 :pattern ( ($generated@@276 $generated@@281))
))))
(assert  (and (and (and (forall (($generated@@287 T@U) ) (! (= (type ($generated@@282 $generated@@287)) $generated@@134)
 :pattern ( ($generated@@282 $generated@@287))
)) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@79 (type $generated@@288))))
(= (type ($generated@@283 $generated@@288 $generated@@289)) ($generated@@76 $generated@@290 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 (type $generated@@292)))
(= (type ($generated@@284 $generated@@291 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@294 T@U) ) (! (= (type ($generated@@285 $generated@@294)) $generated@@135)
 :pattern ( ($generated@@285 $generated@@294))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@134) (= (type $generated@@296) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 ($generated@@251 $generated@@296)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@296 ($generated@@138 $generated@@46))))) (and (=> (not ($generated@@278 $generated@@296 ($generated@@279 $generated@@135))) (and ($generated@@277 ($generated@@251 $generated@@296)) (let (($generated@@297 ($generated@@249 ($generated@@276 ($generated@@251 $generated@@296)))))
($generated@@136 ($generated@@283 $generated@@296 ($generated@@284 ($generated@@279 $generated@@135) ($generated@@285 ($generated@@8 $generated@@297)))))))) (= ($generated@@133 ($generated@@282 $generated@@295) ($generated@@251 $generated@@296)) (ite ($generated@@278 $generated@@296 ($generated@@279 $generated@@135)) 1 (let (($generated@@298 ($generated@@249 ($generated@@276 ($generated@@251 $generated@@296)))))
($generated@@286 $generated@@298 ($generated@@133 ($generated@@282 $generated@@295) ($generated@@283 $generated@@296 ($generated@@284 ($generated@@279 $generated@@135) ($generated@@285 ($generated@@8 $generated@@298)))))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@282 $generated@@295) ($generated@@251 $generated@@296)))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@64) (= (type $generated@@301) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@256 ($generated@@285 $generated@@299) $generated@@300 $generated@@301) ($generated@@74 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@256 ($generated@@285 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@76 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@81 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) ($generated@@76 $generated@@135 $generated@@4)) ($generated@@309 $generated@@310)) (and ($generated@@0 ($generated@@81 $generated@@310 ($generated@@285 ($generated@@8 ($generated@@308 $generated@@310))))) (forall (($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@311) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@310 ($generated@@285 $generated@@311)))) (<= ($generated $generated@@311) ($generated@@308 $generated@@310)))
 :pattern ( ($generated@@81 $generated@@310 ($generated@@285 $generated@@311)))
))))
 :pattern ( ($generated@@308 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 20)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@81 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@81 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@79 (type $generated@@348))))
 (=> (and (= (type $generated@@348) ($generated@@76 $generated@@350 $generated@@4)) (= (type $generated@@349) ($generated@@76 $generated@@350 $generated@@4))) (= ($generated@@278 $generated@@348 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (= ($generated@@0 ($generated@@81 $generated@@348 $generated@@351)) ($generated@@0 ($generated@@81 $generated@@349 $generated@@351))))
 :pattern ( ($generated@@81 $generated@@348 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@278 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@79 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@76 $generated@@353 $generated@@2)) (= ($generated@@159 $generated@@352) (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@353) (and (<= 0 ($generated ($generated@@81 $generated@@352 $generated@@354))) (<= ($generated ($generated@@81 $generated@@352 $generated@@354)) ($generated@@302 $generated@@352))))
 :pattern ( ($generated@@81 $generated@@352 $generated@@354))
)))))
 :pattern ( ($generated@@159 $generated@@352))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(let (($generated@@357 ($generated@@315 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@314 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@313 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@312 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@76 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@316 (type $generated@@362))))
(let (($generated@@364 ($generated@@315 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@314 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@313 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@334 (type $generated@@366))))
(let (($generated@@368 ($generated@@333 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@332 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@331 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@330 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@76 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@334 (type $generated@@373))))
(let (($generated@@375 ($generated@@333 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@332 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@331 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@378) $generated@@64)) (= ($generated@@137 $generated@@377 ($generated@@158 $generated@@378)) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@377 $generated@@379)))) ($generated@@232 $generated@@379 $generated@@378))
 :pattern ( ($generated@@81 $generated@@377 $generated@@379))
))))
 :pattern ( ($generated@@137 $generated@@377 ($generated@@158 $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
 (=> (and (= (type $generated@@380) ($generated@@76 $generated@@383 $generated@@4)) (= (type $generated@@381) ($generated@@76 $generated@@383 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@283 $generated@@380 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 $generated@@380 $generated@@382)) (not ($generated@@0 ($generated@@81 $generated@@381 $generated@@382)))))))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@384 ($generated@@138 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@135) ($generated@@0 ($generated@@81 $generated@@384 $generated@@387))) ($generated@@256 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@81 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@384 ($generated@@138 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@244 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@135) ($generated@@0 ($generated@@81 $generated@@388 $generated@@391))) ($generated@@256 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@81 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@244 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(= ($generated ($generated@@81 ($generated@@303 $generated@@393) $generated@@392)) 0))
 :pattern ( (let (($generated@@393 (type $generated@@392)))
($generated@@81 ($generated@@303 $generated@@393) $generated@@392)))
)))
(assert  (and (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@394 $generated@@397)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@394 $generated@@397))
)) (forall (($generated@@398 T@T) ($generated@@399 T@U) ) (! (= (type ($generated@@395 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@395 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@316 (type $generated@@400))))
(let (($generated@@402 ($generated@@315 (type $generated@@400))))
(= (type ($generated@@396 $generated@@400)) ($generated@@76 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@396 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@314 $generated@@135 $generated@@135)) (= (type $generated@@404) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@394 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@403) ($generated@@152 ($generated@@395 $generated@@145 $generated@@404)))) (= ($generated@@81 ($generated@@396 $generated@@403) ($generated@@152 ($generated@@395 $generated@@145 $generated@@404))) ($generated@@153 ($generated@@395 $generated@@145 $generated@@404))))))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@334 (type $generated@@408))))
(let (($generated@@410 ($generated@@333 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@76 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@332 $generated@@135 $generated@@135)) (= (type $generated@@412) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@81 ($generated@@330 $generated@@411) ($generated@@152 ($generated@@395 $generated@@145 $generated@@412)))) (= ($generated@@81 ($generated@@406 $generated@@411) ($generated@@152 ($generated@@395 $generated@@145 $generated@@412))) ($generated@@153 ($generated@@395 $generated@@145 $generated@@412))))))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@315 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@314 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@81 ($generated@@396 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@333 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@332 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@81 ($generated@@330 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@81 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@314 $generated@@135 $generated@@135)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@426) $generated@@430))) (and ($generated@@256 ($generated@@81 ($generated@@396 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@256 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@426) $generated@@430))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@332 $generated@@135 $generated@@135)) (= (type $generated@@435) $generated@@64)) (= (type $generated@@436) $generated@@64)) (= (type $generated@@437) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@434) $generated@@438))) (and ($generated@@256 ($generated@@81 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@256 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@74 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@79 (type $generated@@439))))
 (=> (and (and (= (type $generated@@439) ($generated@@76 $generated@@441 $generated@@4)) (= (type $generated@@440) ($generated@@76 $generated@@441 $generated@@4))) ($generated@@278 $generated@@439 $generated@@440)) (= $generated@@439 $generated@@440)))
 :pattern ( ($generated@@278 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@443)))
 (=> (and (and (= (type $generated@@442) ($generated@@76 $generated@@445 $generated@@4)) (= (type $generated@@444) $generated@@445)) ($generated@@0 ($generated@@81 $generated@@442 $generated@@444))) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@442 $generated@@443) $generated@@444))))
 :pattern ( ($generated@@284 $generated@@442 $generated@@443) ($generated@@81 $generated@@442 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@447)))
 (=> (and (= (type $generated@@446) ($generated@@76 $generated@@449 $generated@@4)) (= (type $generated@@448) $generated@@449)) (= ($generated@@0 ($generated@@81 ($generated@@284 $generated@@446 $generated@@447) $generated@@448))  (or (= $generated@@448 $generated@@447) ($generated@@0 ($generated@@81 $generated@@446 $generated@@448))))))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
 (=> (and (and (= (type $generated@@450) ($generated@@76 $generated@@453 $generated@@4)) (= (type $generated@@451) ($generated@@76 $generated@@453 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@451 $generated@@452))) (not ($generated@@0 ($generated@@81 ($generated@@283 $generated@@450 $generated@@451) $generated@@452)))))
 :pattern ( ($generated@@283 $generated@@450 $generated@@451) ($generated@@81 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@76 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@334 (type $generated@@456))))
(let (($generated@@458 ($generated@@333 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@332 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@331 $generated@@458 $generated@@457)) (= ($generated@@330 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@330 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@334 (type $generated@@459))))
(let (($generated@@461 ($generated@@333 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@332 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@331 $generated@@461 $generated@@460)) (= ($generated@@370 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@370 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@334 (type $generated@@462))))
(let (($generated@@464 ($generated@@333 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@332 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@331 $generated@@464 $generated@@463)) (= ($generated@@405 $generated@@462) ($generated@@454 $generated@@135))))))
 :pattern ( ($generated@@405 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@316 (type $generated@@465))))
(let (($generated@@467 ($generated@@315 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@314 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@313 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@135) (= (type $generated@@469) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@394 $generated@@465) ($generated@@285 ($generated@@231 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@394 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@334 (type $generated@@470))))
(let (($generated@@472 ($generated@@333 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@332 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@331 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@135) (= (type $generated@@474) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@405 $generated@@470) ($generated@@285 ($generated@@231 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@405 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@135) ($generated@@232 $generated@@475 $generated@@46)) (and (= ($generated@@285 ($generated@@395 $generated@@2 $generated@@475)) $generated@@475) ($generated@@137 ($generated@@395 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@135) ($generated@@232 $generated@@476 $generated@@47)) (and (= ($generated@@285 ($generated@@395 $generated@@3 $generated@@476)) $generated@@476) ($generated@@137 ($generated@@395 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@135) ($generated@@232 $generated@@477 $generated@@44)) (and (= ($generated@@285 ($generated@@395 $generated@@4 $generated@@477)) $generated@@477) ($generated@@137 ($generated@@395 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 21))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@135) ($generated@@232 $generated@@479 $generated@@45)) (and (= ($generated@@285 ($generated@@395 $generated@@478 $generated@@479)) $generated@@479) ($generated@@137 ($generated@@395 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@232 ($generated@@285 $generated@@480) $generated@@481) ($generated@@137 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@232 ($generated@@285 $generated@@480) $generated@@481))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@483) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@277 $generated@@483) (and (not (= 1 $generated@@132)) (and (and ($generated@@255 $generated@@482) ($generated@@137 $generated@@483 ($generated@@138 $generated@@46))) (not ($generated@@278 $generated@@483 ($generated@@279 $generated@@135))))))) (and ($generated@@309 $generated@@483) (= ($generated@@276 $generated@@483) (let (($generated@@484 ($generated@@308 $generated@@483)))
$generated@@484))))
 :pattern ( ($generated@@276 $generated@@483) ($generated@@255 $generated@@482))
))))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@79 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@76 $generated@@486 $generated@@2)) (<= 0 ($generated@@302 $generated@@485))))
 :pattern ( ($generated@@302 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@271 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@270 $generated@@488)) (<= 0 ($generated@@269 $generated@@487))))
 :pattern ( ($generated@@269 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@423 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@423 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@423 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@72 ($generated@@423 $generated@@497 $generated@@498)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@431 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@431 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@503 ($generated@@431 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@431 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@72 ($generated@@431 $generated@@507 $generated@@508)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@135) (= (type $generated@@510) $generated@@135)) (= ($generated@@262 ($generated@@231 $generated@@509 $generated@@510)) $generated@@61))
 :pattern ( ($generated@@231 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (= ($generated@@511 ($generated@@144 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@144 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= ($generated@@515 ($generated@@144 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@144 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@135) (= (type $generated@@520) $generated@@135)) (= ($generated@@152 ($generated@@231 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@231 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@135) (= (type $generated@@522) $generated@@135)) (= ($generated@@153 ($generated@@231 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@231 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@134)
 :pattern ( ($generated@@523 $generated@@525))
)) (= (type $generated@@524) $generated@@134)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@134) (= (type $generated@@527) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@133 $generated@@526 $generated@@527) ($generated@@133 $generated@@524 $generated@@527)))
 :pattern ( ($generated@@133 ($generated@@523 $generated@@526) $generated@@527))
)))
(assert  (and (forall (($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@530)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@530))
)) (forall (($generated@@531 T@U) ($generated@@532 Int) ) (! (let (($generated@@533 ($generated@@271 (type $generated@@531))))
(= (type ($generated@@529 $generated@@531 $generated@@532)) $generated@@533))
 :pattern ( ($generated@@529 $generated@@531 $generated@@532))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@270 $generated@@135)) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@534 ($generated@@528 $generated@@535) $generated@@536) (forall (($generated@@537 Int) ) (!  (=> (and (<= 0 $generated@@537) (< $generated@@537 ($generated@@269 $generated@@534))) ($generated@@256 ($generated@@529 $generated@@534 $generated@@537) $generated@@535 $generated@@536))
 :pattern ( ($generated@@529 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@74 $generated@@534 ($generated@@528 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (=> (= (type $generated@@538) ($generated@@76 $generated@@540 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@538 $generated@@539) $generated@@539))))
 :pattern ( ($generated@@284 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@542 Int) ) (! (= ($generated@@541 ($generated@@75 $generated@@542)) $generated@@542)
 :pattern ( ($generated@@75 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@64) (= ($generated@@543 ($generated@@138 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@138 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@546)) $generated@@54))
 :pattern ( ($generated@@138 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@64)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@64) (= ($generated@@547 ($generated@@244 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@244 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@550)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@64)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@64) (= ($generated@@551 ($generated@@158 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@158 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@554)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@64)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@64) (= ($generated@@555 ($generated@@528 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@528 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@72 ($generated@@528 $generated@@558)) $generated@@57))
 :pattern ( ($generated@@528 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(= ($generated@@395 $generated@@560 ($generated@@285 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@285 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@314 $generated@@135 $generated@@135)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) (= ($generated@@137 $generated@@561 ($generated@@423 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@561) $generated@@564))) (and ($generated@@232 ($generated@@81 ($generated@@396 $generated@@561) $generated@@564) $generated@@563) ($generated@@232 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@561) $generated@@564))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@137 $generated@@561 ($generated@@423 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@332 $generated@@135 $generated@@135)) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) $generated@@64)) (= ($generated@@137 $generated@@565 ($generated@@431 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@565) $generated@@568))) (and ($generated@@232 ($generated@@81 ($generated@@406 $generated@@565) $generated@@568) $generated@@567) ($generated@@232 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@565) $generated@@568))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@137 $generated@@565 ($generated@@431 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@135) (= (type $generated@@572) $generated@@135)) (< ($generated@@569 $generated@@571) ($generated@@570 ($generated@@231 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@231 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@135) (= (type $generated@@574) $generated@@135)) (< ($generated@@569 $generated@@574) ($generated@@570 ($generated@@231 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@231 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@134) (= (type $generated@@576) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@133 ($generated@@282 $generated@@575) $generated@@576) ($generated@@133 $generated@@575 $generated@@576)))
 :pattern ( ($generated@@133 ($generated@@282 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@135) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) $generated@@64)) ($generated@@232 $generated@@577 ($generated@@423 $generated@@578 $generated@@579))) (and (= ($generated@@285 ($generated@@395 ($generated@@314 $generated@@135 $generated@@135) $generated@@577)) $generated@@577) ($generated@@137 ($generated@@395 ($generated@@314 $generated@@135 $generated@@135) $generated@@577) ($generated@@423 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@232 $generated@@577 ($generated@@423 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@135) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) $generated@@64)) ($generated@@232 $generated@@580 ($generated@@431 $generated@@581 $generated@@582))) (and (= ($generated@@285 ($generated@@395 ($generated@@332 $generated@@135 $generated@@135) $generated@@580)) $generated@@580) ($generated@@137 ($generated@@395 ($generated@@332 $generated@@135 $generated@@135) $generated@@580) ($generated@@431 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@232 $generated@@580 ($generated@@431 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@64) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@135)) ($generated@@232 $generated@@585 ($generated@@144 $generated@@583 $generated@@584))) (and (= ($generated@@285 ($generated@@395 $generated@@145 $generated@@585)) $generated@@585) ($generated@@137 ($generated@@395 $generated@@145 $generated@@585) ($generated@@144 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@232 $generated@@585 ($generated@@144 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@81 ($generated@@279 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@81 ($generated@@279 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
 (not ($generated@@0 ($generated@@81 ($generated@@454 $generated@@589) $generated@@588))))
 :pattern ( (let (($generated@@589 (type $generated@@588)))
($generated@@81 ($generated@@454 $generated@@589) $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@69)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@64) (= (type $generated@@593) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@592 $generated@@593)) $generated@@62) (= ($generated@@590 ($generated@@144 $generated@@592 $generated@@593)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 Int) ($generated@@595 Int) ) (! (= ($generated@@286 $generated@@594 $generated@@595) (* $generated@@594 $generated@@595))
 :pattern ( ($generated@@286 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@145) (= ($generated@@569 ($generated@@285 $generated@@596)) ($generated@@570 $generated@@596)))
 :pattern ( ($generated@@569 ($generated@@285 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@135) ($generated@@232 $generated@@597 ($generated@@75 0))) (and (= ($generated@@285 ($generated@@395 $generated@@2 $generated@@597)) $generated@@597) ($generated@@137 ($generated@@395 ($generated@@76 $generated@@135 $generated@@4) $generated@@597) ($generated@@75 0))))
 :pattern ( ($generated@@232 $generated@@597 ($generated@@75 0)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@135) (= (type $generated@@599) $generated@@64)) ($generated@@232 $generated@@598 ($generated@@138 $generated@@599))) (and (= ($generated@@285 ($generated@@395 ($generated@@76 $generated@@135 $generated@@4) $generated@@598)) $generated@@598) ($generated@@137 ($generated@@395 ($generated@@76 $generated@@135 $generated@@4) $generated@@598) ($generated@@138 $generated@@599))))
 :pattern ( ($generated@@232 $generated@@598 ($generated@@138 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@135) (= (type $generated@@601) $generated@@64)) ($generated@@232 $generated@@600 ($generated@@244 $generated@@601))) (and (= ($generated@@285 ($generated@@395 ($generated@@76 $generated@@135 $generated@@4) $generated@@600)) $generated@@600) ($generated@@137 ($generated@@395 ($generated@@76 $generated@@135 $generated@@4) $generated@@600) ($generated@@244 $generated@@601))))
 :pattern ( ($generated@@232 $generated@@600 ($generated@@244 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@135) (= (type $generated@@603) $generated@@64)) ($generated@@232 $generated@@602 ($generated@@158 $generated@@603))) (and (= ($generated@@285 ($generated@@395 ($generated@@76 $generated@@135 $generated@@2) $generated@@602)) $generated@@602) ($generated@@137 ($generated@@395 ($generated@@76 $generated@@135 $generated@@2) $generated@@602) ($generated@@158 $generated@@603))))
 :pattern ( ($generated@@232 $generated@@602 ($generated@@158 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@135) (= (type $generated@@605) $generated@@64)) ($generated@@232 $generated@@604 ($generated@@528 $generated@@605))) (and (= ($generated@@285 ($generated@@395 ($generated@@270 $generated@@135) $generated@@604)) $generated@@604) ($generated@@137 ($generated@@395 ($generated@@270 $generated@@135) $generated@@604) ($generated@@528 $generated@@605))))
 :pattern ( ($generated@@232 $generated@@604 ($generated@@528 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@79 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@76 $generated@@609 $generated@@4)) (= (type $generated@@608) ($generated@@76 $generated@@609 $generated@@4))) (= ($generated@@606 $generated@@607 $generated@@608) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@609) ($generated@@0 ($generated@@81 $generated@@607 $generated@@610))) ($generated@@0 ($generated@@81 $generated@@608 $generated@@610)))
 :pattern ( ($generated@@81 $generated@@607 $generated@@610))
 :pattern ( ($generated@@81 $generated@@608 $generated@@610))
)))))
 :pattern ( ($generated@@606 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@611 ($generated@@158 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@611 $generated@@614)))) ($generated@@256 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@81 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@74 $generated@@611 ($generated@@158 $generated@@612) $generated@@613))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@134) (= (type $generated@@616) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 $generated@@616) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@616 ($generated@@138 $generated@@46))))) (and (=> (not ($generated@@278 $generated@@616 ($generated@@279 $generated@@135))) (and ($generated@@277 $generated@@616) (let (($generated@@617 ($generated@@276 $generated@@616)))
($generated@@136 ($generated@@283 $generated@@616 ($generated@@284 ($generated@@279 $generated@@135) ($generated@@285 ($generated@@8 $generated@@617)))))))) (= ($generated@@133 ($generated@@282 $generated@@615) $generated@@616) (ite ($generated@@278 $generated@@616 ($generated@@279 $generated@@135)) 1 (let (($generated@@618 ($generated@@276 $generated@@616)))
($generated@@286 $generated@@618 ($generated@@133 $generated@@615 ($generated@@283 $generated@@616 ($generated@@284 ($generated@@279 $generated@@135) ($generated@@285 ($generated@@8 $generated@@618)))))))))))
 :pattern ( ($generated@@133 ($generated@@282 $generated@@615) $generated@@616))
))))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@145) (= (type $generated@@620) $generated@@64)) (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@621) (and ($generated@@143 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@64) ($generated@@74 $generated@@619 ($generated@@144 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@74 $generated@@619 ($generated@@144 $generated@@620 $generated@@622) $generated@@621))
))))) ($generated@@256 ($generated@@152 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@256 ($generated@@152 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@145) (= (type $generated@@624) $generated@@64)) (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@625) (and ($generated@@143 $generated@@623) (exists (($generated@@626 T@U) ) (!  (and (= (type $generated@@626) $generated@@64) ($generated@@74 $generated@@623 ($generated@@144 $generated@@626 $generated@@624) $generated@@625))
 :pattern ( ($generated@@74 $generated@@623 ($generated@@144 $generated@@626 $generated@@624) $generated@@625))
))))) ($generated@@256 ($generated@@153 $generated@@623) $generated@@624 $generated@@625))
 :pattern ( ($generated@@256 ($generated@@153 $generated@@623) $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@135) (= (type $generated@@628) $generated@@135)) (= ($generated@@231 ($generated@@251 $generated@@627) ($generated@@251 $generated@@628)) ($generated@@251 ($generated@@231 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@231 ($generated@@251 $generated@@627) ($generated@@251 $generated@@628)))
)))
(assert (forall (($generated@@629 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@249 $generated@@629))) ($generated@@251 ($generated@@285 ($generated@@8 $generated@@629))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@249 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ) (! (= ($generated@@285 ($generated@@251 $generated@@630)) ($generated@@251 ($generated@@285 $generated@@630)))
 :pattern ( ($generated@@285 ($generated@@251 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@271 (type $generated@@631))))
 (=> (and (= (type $generated@@631) ($generated@@270 $generated@@632)) (= ($generated@@269 $generated@@631) 0)) (= $generated@@631 ($generated@@268 $generated@@632))))
 :pattern ( ($generated@@269 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@634)))
 (=> (and (and (= (type $generated@@633) ($generated@@76 $generated@@636 $generated@@2)) (= (type $generated@@635) $generated@@2)) (<= 0 ($generated $generated@@635))) (= ($generated@@302 ($generated@@82 $generated@@633 $generated@@634 $generated@@635)) (+ (- ($generated@@302 $generated@@633) ($generated ($generated@@81 $generated@@633 $generated@@634))) ($generated $generated@@635)))))
 :pattern ( ($generated@@302 ($generated@@82 $generated@@633 $generated@@634 $generated@@635)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@638) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@277 ($generated@@251 $generated@@638)) (and (not (= 1 $generated@@132)) (and (and ($generated@@255 $generated@@637) ($generated@@137 $generated@@638 ($generated@@138 $generated@@46))) (not ($generated@@278 $generated@@638 ($generated@@279 $generated@@135))))))) (and ($generated@@309 ($generated@@251 $generated@@638)) (= ($generated@@276 ($generated@@251 $generated@@638)) (let (($generated@@639 ($generated@@308 ($generated@@251 $generated@@638))))
$generated@@639))))
 :weight 3
 :pattern ( ($generated@@276 ($generated@@251 $generated@@638)) ($generated@@255 $generated@@637))
))))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@641) $generated@@2)) ($generated@@74 $generated@@641 $generated@@46 $generated@@640))
 :pattern ( ($generated@@74 $generated@@641 $generated@@46 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@643) $generated@@3)) ($generated@@74 $generated@@643 $generated@@47 $generated@@642))
 :pattern ( ($generated@@74 $generated@@643 $generated@@47 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@645) $generated@@4)) ($generated@@74 $generated@@645 $generated@@44 $generated@@644))
 :pattern ( ($generated@@74 $generated@@645 $generated@@44 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@647) $generated@@478)) ($generated@@74 $generated@@647 $generated@@45 $generated@@646))
 :pattern ( ($generated@@74 $generated@@647 $generated@@45 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@649) $generated@@135)) ($generated@@74 $generated@@649 $generated@@48 $generated@@648))
 :pattern ( ($generated@@74 $generated@@649 $generated@@48 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@270 $generated@@135)) (= (type $generated@@651) $generated@@64)) (= ($generated@@137 $generated@@650 ($generated@@528 $generated@@651)) (forall (($generated@@652 Int) ) (!  (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@269 $generated@@650))) ($generated@@232 ($generated@@529 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@529 $generated@@650 $generated@@652))
))))
 :pattern ( ($generated@@137 $generated@@650 ($generated@@528 $generated@@651)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 Int) ) (!  (=> (= (type $generated@@654) ($generated@@270 $generated@@135)) (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@269 $generated@@654))) (< ($generated@@570 ($generated@@395 $generated@@145 ($generated@@529 $generated@@654 $generated@@655))) ($generated@@653 $generated@@654))))
 :pattern ( ($generated@@570 ($generated@@395 $generated@@145 ($generated@@529 $generated@@654 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@314 $generated@@135 $generated@@135)) (= (type $generated@@657) $generated@@64)) (= (type $generated@@658) $generated@@64)) ($generated@@137 $generated@@656 ($generated@@423 $generated@@657 $generated@@658))) (and (and ($generated@@137 ($generated@@312 $generated@@656) ($generated@@138 $generated@@657)) ($generated@@137 ($generated@@359 $generated@@656) ($generated@@138 $generated@@658))) ($generated@@137 ($generated@@394 $generated@@656) ($generated@@138 ($generated@@144 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@137 $generated@@656 ($generated@@423 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@332 $generated@@135 $generated@@135)) (= (type $generated@@660) $generated@@64)) (= (type $generated@@661) $generated@@64)) ($generated@@137 $generated@@659 ($generated@@431 $generated@@660 $generated@@661))) (and (and ($generated@@137 ($generated@@330 $generated@@659) ($generated@@244 $generated@@660)) ($generated@@137 ($generated@@370 $generated@@659) ($generated@@244 $generated@@661))) ($generated@@137 ($generated@@405 $generated@@659) ($generated@@244 ($generated@@144 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@137 $generated@@659 ($generated@@431 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@137 $generated@@662 $generated@@46))
 :pattern ( ($generated@@137 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@137 $generated@@663 $generated@@47))
 :pattern ( ($generated@@137 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@137 $generated@@664 $generated@@44))
 :pattern ( ($generated@@137 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@478) ($generated@@137 $generated@@665 $generated@@45))
 :pattern ( ($generated@@137 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@135) ($generated@@137 $generated@@666 $generated@@48))
 :pattern ( ($generated@@137 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@667) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@668) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@671) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@672) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@673) $generated@@77)) (= (type $generated@@674) ($generated@@165 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@676  (=> (and (not ($generated@@278 $generated@@667 ($generated@@279 $generated@@135))) ($generated@@74 $generated@@667 ($generated@@138 $generated@@46) $generated@@668)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@278 $generated@@667 ($generated@@279 $generated@@135)))) (=> (not ($generated@@278 $generated@@667 ($generated@@279 $generated@@135))) (=> (and (and (and ($generated@@277 $generated@@667) (= $generated@@669 ($generated@@276 $generated@@667))) (and ($generated@@277 $generated@@667) ($generated@@137 ($generated@@8 $generated@@669) $generated@@46))) (and (and (= $generated@@670 $generated@@669) (= $generated@@671 ($generated@@283 $generated@@667 ($generated@@284 ($generated@@279 $generated@@135) ($generated@@285 ($generated@@8 $generated@@670)))))) (and ($generated@@74 $generated@@671 ($generated@@138 $generated@@46) $generated@@668) (= (ControlFlow 0 4) (- 0 3))))) (and ($generated@@606 $generated@@671 $generated@@667) (not ($generated@@606 $generated@@667 $generated@@671)))))))))
(let (($generated@@677 true))
(let (($generated@@678  (=> (= $generated@@672 ($generated@@219 $generated@@673 $generated@@668 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@677) (=> (= (ControlFlow 0 6) 4) $generated@@676)))))
(let (($generated@@679 true))
(let (($generated@@680  (=> (= $generated@@674 ($generated@@164 $generated@@673 $generated@@668 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@679) (=> (= (ControlFlow 0 7) 6) $generated@@678)))))
(let (($generated@@681  (=> (and (and (and ($generated@@255 $generated@@668) ($generated@@675 $generated@@668)) ($generated@@137 $generated@@667 ($generated@@138 $generated@@46))) (and (= 2 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@680)))
$generated@@681)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (Int Int) Int)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@U) Bool)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@375 (T@U T@U) Bool)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@T T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@531 () T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@616 (T@U T@U) Bool)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@138 $generated@@139)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 $generated@@141) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@141 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@137 $generated@@142 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@142 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 16) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@137 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@137 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@135)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@135)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@137 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@137 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 17)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@79 (type $generated@@220))))
(= (type ($generated@@219 $generated@@220 $generated@@221)) ($generated@@76 $generated@@222 $generated@@4)))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@79 (type $generated@@223))))
 (=> (and (= (type $generated@@223) ($generated@@76 $generated@@225 $generated@@4)) (= (type $generated@@224) ($generated@@76 $generated@@225 $generated@@4))) (= ($generated@@219 ($generated@@219 $generated@@223 $generated@@224) $generated@@224) ($generated@@219 $generated@@223 $generated@@224))))
 :pattern ( ($generated@@219 ($generated@@219 $generated@@223 $generated@@224) $generated@@224))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@145)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@64) (= (type $generated@@231) $generated@@64)) (= (type $generated@@232) $generated@@135)) (= (type $generated@@233) $generated@@135)) (= ($generated@@137 ($generated@@226 $generated@@232 $generated@@233) ($generated@@144 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@137 ($generated@@226 $generated@@232 $generated@@233) ($generated@@144 $generated@@230 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@145) (= (type $generated@@235) $generated@@145)) (= ($generated@@151 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@151 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@137 $generated@@236 ($generated@@138 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@135) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@227 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@137 $generated@@236 ($generated@@138 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@135) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@227 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@135)) (= (type $generated@@255) $generated@@135)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@226 $generated@@254 $generated@@255) ($generated@@144 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@226 $generated@@254 $generated@@255) ($generated@@144 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@145) (= ($generated@@143 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@145) ($generated@@143 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@135) (= (type $generated@@262) $generated@@135)) (= $generated@@260 ($generated@@226 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@143 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 18)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@76 $generated@@275 $generated@@4))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@76 $generated@@135 $generated@@4)) (or ($generated@@272 $generated@@276) (and (not (= 1 $generated@@132)) (and ($generated@@137 $generated@@276 ($generated@@138 $generated@@46)) (not ($generated@@273 $generated@@276 ($generated@@274 $generated@@135))))))) true)
 :pattern ( ($generated@@271 $generated@@276))
))))
(assert  (and (and (and (forall (($generated@@282 T@U) ) (! (= (type ($generated@@277 $generated@@282)) $generated@@134)
 :pattern ( ($generated@@277 $generated@@282))
)) (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@79 (type $generated@@283))))
(= (type ($generated@@278 $generated@@283 $generated@@284)) ($generated@@76 $generated@@285 $generated@@4)))
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@279 $generated@@286 $generated@@287)) ($generated@@76 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@289 T@U) ) (! (= (type ($generated@@280 $generated@@289)) $generated@@135)
 :pattern ( ($generated@@280 $generated@@289))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@134) (= (type $generated@@291) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 ($generated@@246 $generated@@291)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@291 ($generated@@138 $generated@@46))))) (and (=> (not ($generated@@273 $generated@@291 ($generated@@274 $generated@@135))) (and ($generated@@272 ($generated@@246 $generated@@291)) (let (($generated@@292 ($generated@@244 ($generated@@271 ($generated@@246 $generated@@291)))))
($generated@@136 ($generated@@278 $generated@@291 ($generated@@279 ($generated@@274 $generated@@135) ($generated@@280 ($generated@@8 $generated@@292)))))))) (= ($generated@@133 ($generated@@277 $generated@@290) ($generated@@246 $generated@@291)) (ite ($generated@@273 $generated@@291 ($generated@@274 $generated@@135)) 1 (let (($generated@@293 ($generated@@244 ($generated@@271 ($generated@@246 $generated@@291)))))
($generated@@281 $generated@@293 ($generated@@133 ($generated@@277 $generated@@290) ($generated@@278 $generated@@291 ($generated@@279 ($generated@@274 $generated@@135) ($generated@@280 ($generated@@8 $generated@@293)))))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@277 $generated@@290) ($generated@@246 $generated@@291)))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@64) (= (type $generated@@296) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@280 $generated@@294) $generated@@295 $generated@@296) ($generated@@74 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@251 ($generated@@280 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@76 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@79 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@76 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@81 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@76 $generated@@135 $generated@@4)) ($generated@@304 $generated@@305)) (and ($generated@@0 ($generated@@81 $generated@@305 ($generated@@280 ($generated@@8 ($generated@@303 $generated@@305))))) (forall (($generated@@306 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@305 ($generated@@280 $generated@@306)))) (<= ($generated $generated@@306) ($generated@@303 $generated@@305)))
 :pattern ( ($generated@@81 $generated@@305 ($generated@@280 $generated@@306)))
))))
 :pattern ( ($generated@@303 $generated@@305))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 20)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@79 (type $generated@@343))))
 (=> (and (= (type $generated@@343) ($generated@@76 $generated@@345 $generated@@4)) (= (type $generated@@344) ($generated@@76 $generated@@345 $generated@@4))) (= ($generated@@273 $generated@@343 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (= ($generated@@0 ($generated@@81 $generated@@343 $generated@@346)) ($generated@@0 ($generated@@81 $generated@@344 $generated@@346))))
 :pattern ( ($generated@@81 $generated@@343 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@273 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@79 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@76 $generated@@348 $generated@@2)) (= ($generated@@159 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@81 $generated@@347 $generated@@349))) (<= ($generated ($generated@@81 $generated@@347 $generated@@349)) ($generated@@297 $generated@@347))))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@159 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@307 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@329 (type $generated@@361))))
(let (($generated@@363 ($generated@@328 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@327 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@326 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@325 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@373) $generated@@64)) (= ($generated@@137 $generated@@372 ($generated@@158 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@372 $generated@@374)))) ($generated@@227 $generated@@374 $generated@@373))
 :pattern ( ($generated@@81 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@137 $generated@@372 ($generated@@158 $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@79 (type $generated@@376))))
 (=> (and (and (= (type $generated@@376) ($generated@@76 $generated@@378 $generated@@4)) (= (type $generated@@377) ($generated@@76 $generated@@378 $generated@@4))) ($generated@@375 $generated@@376 $generated@@377)) (and (= ($generated@@278 ($generated@@219 $generated@@376 $generated@@377) $generated@@376) $generated@@377) (= ($generated@@278 ($generated@@219 $generated@@376 $generated@@377) $generated@@377) $generated@@376))))
 :pattern ( ($generated@@219 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
 (=> (and (= (type $generated@@379) ($generated@@76 $generated@@382 $generated@@4)) (= (type $generated@@380) ($generated@@76 $generated@@382 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@278 $generated@@379 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 $generated@@379 $generated@@381)) (not ($generated@@0 ($generated@@81 $generated@@380 $generated@@381)))))))
 :pattern ( ($generated@@81 ($generated@@278 $generated@@379 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@138 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@135) ($generated@@0 ($generated@@81 $generated@@383 $generated@@386))) ($generated@@251 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@81 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@138 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@239 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@135) ($generated@@0 ($generated@@81 $generated@@387 $generated@@390))) ($generated@@251 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@81 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@239 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@81 ($generated@@298 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@81 ($generated@@298 $generated@@392) $generated@@391)))
)))
(assert  (and (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@393 $generated@@396)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@393 $generated@@396))
)) (forall (($generated@@397 T@T) ($generated@@398 T@U) ) (! (= (type ($generated@@394 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@394 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@311 (type $generated@@399))))
(let (($generated@@401 ($generated@@310 (type $generated@@399))))
(= (type ($generated@@395 $generated@@399)) ($generated@@76 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@395 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@309 $generated@@135 $generated@@135)) (= (type $generated@@403) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@402) ($generated@@152 ($generated@@394 $generated@@145 $generated@@403)))) (= ($generated@@81 ($generated@@395 $generated@@402) ($generated@@152 ($generated@@394 $generated@@145 $generated@@403))) ($generated@@153 ($generated@@394 $generated@@145 $generated@@403))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@329 (type $generated@@407))))
(let (($generated@@409 ($generated@@328 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@76 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@327 $generated@@135 $generated@@135)) (= (type $generated@@411) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@410) ($generated@@152 ($generated@@394 $generated@@145 $generated@@411)))) (= ($generated@@81 ($generated@@405 $generated@@410) ($generated@@152 ($generated@@394 $generated@@145 $generated@@411))) ($generated@@153 ($generated@@394 $generated@@145 $generated@@411))))))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@310 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@309 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@81 ($generated@@395 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@412) $generated@@416))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@328 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@327 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@81 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@309 $generated@@135 $generated@@135)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@425) $generated@@429))) (and ($generated@@251 ($generated@@81 ($generated@@395 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@251 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@327 $generated@@135 $generated@@135)) (= (type $generated@@434) $generated@@64)) (= (type $generated@@435) $generated@@64)) (= (type $generated@@436) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@433) $generated@@437))) (and ($generated@@251 ($generated@@81 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@251 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@74 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@438))))
 (=> (and (and (= (type $generated@@438) ($generated@@76 $generated@@440 $generated@@4)) (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@4))) ($generated@@273 $generated@@438 $generated@@439)) (= $generated@@438 $generated@@439)))
 :pattern ( ($generated@@273 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@442)))
 (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@444 $generated@@4)) (= (type $generated@@443) $generated@@444)) ($generated@@0 ($generated@@81 $generated@@441 $generated@@443))) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@441 $generated@@442) $generated@@443))))
 :pattern ( ($generated@@279 $generated@@441 $generated@@442) ($generated@@81 $generated@@441 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
 (=> (and (and (= (type $generated@@445) ($generated@@76 $generated@@448 $generated@@4)) (= (type $generated@@446) ($generated@@76 $generated@@448 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@445 $generated@@447))) ($generated@@0 ($generated@@81 ($generated@@219 $generated@@445 $generated@@446) $generated@@447))))
 :pattern ( ($generated@@219 $generated@@445 $generated@@446) ($generated@@81 $generated@@445 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
 (=> (and (and (= (type $generated@@449) ($generated@@76 $generated@@452 $generated@@4)) (= (type $generated@@450) ($generated@@76 $generated@@452 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@450 $generated@@451))) ($generated@@0 ($generated@@81 ($generated@@219 $generated@@449 $generated@@450) $generated@@451))))
 :pattern ( ($generated@@219 $generated@@449 $generated@@450) ($generated@@81 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@454)))
 (=> (and (= (type $generated@@453) ($generated@@76 $generated@@456 $generated@@4)) (= (type $generated@@455) $generated@@456)) (= ($generated@@0 ($generated@@81 ($generated@@279 $generated@@453 $generated@@454) $generated@@455))  (or (= $generated@@455 $generated@@454) ($generated@@0 ($generated@@81 $generated@@453 $generated@@455))))))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 (type $generated@@459)))
 (=> (and (and (= (type $generated@@457) ($generated@@76 $generated@@460 $generated@@4)) (= (type $generated@@458) ($generated@@76 $generated@@460 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@458 $generated@@459))) (not ($generated@@0 ($generated@@81 ($generated@@278 $generated@@457 $generated@@458) $generated@@459)))))
 :pattern ( ($generated@@278 $generated@@457 $generated@@458) ($generated@@81 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@76 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@329 (type $generated@@463))))
(let (($generated@@465 ($generated@@328 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@327 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@326 $generated@@465 $generated@@464)) (= ($generated@@325 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@325 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@329 (type $generated@@466))))
(let (($generated@@468 ($generated@@328 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@327 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@326 $generated@@468 $generated@@467)) (= ($generated@@365 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@365 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@329 (type $generated@@469))))
(let (($generated@@471 ($generated@@328 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@327 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@326 $generated@@471 $generated@@470)) (= ($generated@@404 $generated@@469) ($generated@@461 $generated@@135))))))
 :pattern ( ($generated@@404 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@311 (type $generated@@472))))
(let (($generated@@474 ($generated@@310 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@309 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@308 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@135) (= (type $generated@@476) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@472) ($generated@@280 ($generated@@226 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@393 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@329 (type $generated@@477))))
(let (($generated@@479 ($generated@@328 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@327 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@326 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@135) (= (type $generated@@481) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@404 $generated@@477) ($generated@@280 ($generated@@226 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@404 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@135) ($generated@@227 $generated@@482 $generated@@46)) (and (= ($generated@@280 ($generated@@394 $generated@@2 $generated@@482)) $generated@@482) ($generated@@137 ($generated@@394 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@135) ($generated@@227 $generated@@483 $generated@@47)) (and (= ($generated@@280 ($generated@@394 $generated@@3 $generated@@483)) $generated@@483) ($generated@@137 ($generated@@394 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@135) ($generated@@227 $generated@@484 $generated@@44)) (and (= ($generated@@280 ($generated@@394 $generated@@4 $generated@@484)) $generated@@484) ($generated@@137 ($generated@@394 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 21))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@135) ($generated@@227 $generated@@486 $generated@@45)) (and (= ($generated@@280 ($generated@@394 $generated@@485 $generated@@486)) $generated@@486) ($generated@@137 ($generated@@394 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@227 ($generated@@280 $generated@@487) $generated@@488) ($generated@@137 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@227 ($generated@@280 $generated@@487) $generated@@488))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@490) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@272 $generated@@490) (and (not (= 1 $generated@@132)) (and (and ($generated@@250 $generated@@489) ($generated@@137 $generated@@490 ($generated@@138 $generated@@46))) (not ($generated@@273 $generated@@490 ($generated@@274 $generated@@135))))))) (and ($generated@@304 $generated@@490) (= ($generated@@271 $generated@@490) (let (($generated@@491 ($generated@@303 $generated@@490)))
$generated@@491))))
 :pattern ( ($generated@@271 $generated@@490) ($generated@@250 $generated@@489))
))))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@79 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@76 $generated@@493 $generated@@2)) (<= 0 ($generated@@297 $generated@@492))))
 :pattern ( ($generated@@297 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@266 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@265 $generated@@495)) (<= 0 ($generated@@264 $generated@@494))))
 :pattern ( ($generated@@264 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@64) (= (type $generated@@499) $generated@@64)) (= ($generated@@496 ($generated@@422 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@422 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@500 ($generated@@422 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@422 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@504 $generated@@505)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= ($generated@@506 ($generated@@430 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@430 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@510 ($generated@@430 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@430 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (= ($generated@@72 ($generated@@430 $generated@@514 $generated@@515)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@135) (= (type $generated@@517) $generated@@135)) (= ($generated@@257 ($generated@@226 $generated@@516 $generated@@517)) $generated@@61))
 :pattern ( ($generated@@226 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@518 ($generated@@144 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@144 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= ($generated@@522 ($generated@@144 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@144 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@135) (= (type $generated@@527) $generated@@135)) (= ($generated@@152 ($generated@@226 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@226 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@135) (= (type $generated@@529) $generated@@135)) (= ($generated@@153 ($generated@@226 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@226 $generated@@528 $generated@@529))
)))
(assert  (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@532)) $generated@@134)
 :pattern ( ($generated@@530 $generated@@532))
)) (= (type $generated@@531) $generated@@134)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@134) (= (type $generated@@534) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@133 $generated@@533 $generated@@534) ($generated@@133 $generated@@531 $generated@@534)))
 :pattern ( ($generated@@133 ($generated@@530 $generated@@533) $generated@@534))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@266 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@265 $generated@@135)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@264 $generated@@541))) ($generated@@251 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@74 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (=> (= (type $generated@@545) ($generated@@76 $generated@@547 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@545 $generated@@546) $generated@@546))))
 :pattern ( ($generated@@279 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@548 ($generated@@75 $generated@@549)) $generated@@549)
 :pattern ( ($generated@@75 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@64)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@64) (= ($generated@@550 ($generated@@138 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@138 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@553)) $generated@@54))
 :pattern ( ($generated@@138 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@64)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@64) (= ($generated@@554 ($generated@@239 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@239 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@557)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@64)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@64) (= ($generated@@558 ($generated@@158 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@158 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@561)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@64)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@64) (= ($generated@@562 ($generated@@535 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@535 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@64) (= ($generated@@72 ($generated@@535 $generated@@565)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(= ($generated@@394 $generated@@567 ($generated@@280 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@280 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@309 $generated@@135 $generated@@135)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) (= ($generated@@137 $generated@@568 ($generated@@422 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@568) $generated@@571))) (and ($generated@@227 ($generated@@81 ($generated@@395 $generated@@568) $generated@@571) $generated@@570) ($generated@@227 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@568) $generated@@571))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@137 $generated@@568 ($generated@@422 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@327 $generated@@135 $generated@@135)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) (= ($generated@@137 $generated@@572 ($generated@@430 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@572) $generated@@575))) (and ($generated@@227 ($generated@@81 ($generated@@405 $generated@@572) $generated@@575) $generated@@574) ($generated@@227 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@572) $generated@@575))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@137 $generated@@572 ($generated@@430 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@135) (= (type $generated@@579) $generated@@135)) (< ($generated@@576 $generated@@578) ($generated@@577 ($generated@@226 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@226 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@135) (= (type $generated@@581) $generated@@135)) (< ($generated@@576 $generated@@581) ($generated@@577 ($generated@@226 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@226 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@134) (= (type $generated@@583) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@133 ($generated@@277 $generated@@582) $generated@@583) ($generated@@133 $generated@@582 $generated@@583)))
 :pattern ( ($generated@@133 ($generated@@277 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@79 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@76 $generated@@586 $generated@@4)) (= (type $generated@@585) ($generated@@76 $generated@@586 $generated@@4))) (= ($generated@@219 $generated@@584 ($generated@@219 $generated@@584 $generated@@585)) ($generated@@219 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@219 $generated@@584 ($generated@@219 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@135) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@227 $generated@@587 ($generated@@422 $generated@@588 $generated@@589))) (and (= ($generated@@280 ($generated@@394 ($generated@@309 $generated@@135 $generated@@135) $generated@@587)) $generated@@587) ($generated@@137 ($generated@@394 ($generated@@309 $generated@@135 $generated@@135) $generated@@587) ($generated@@422 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@227 $generated@@587 ($generated@@422 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@135) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@227 $generated@@590 ($generated@@430 $generated@@591 $generated@@592))) (and (= ($generated@@280 ($generated@@394 ($generated@@327 $generated@@135 $generated@@135) $generated@@590)) $generated@@590) ($generated@@137 ($generated@@394 ($generated@@327 $generated@@135 $generated@@135) $generated@@590) ($generated@@430 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@227 $generated@@590 ($generated@@430 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@64) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@135)) ($generated@@227 $generated@@595 ($generated@@144 $generated@@593 $generated@@594))) (and (= ($generated@@280 ($generated@@394 $generated@@145 $generated@@595)) $generated@@595) ($generated@@137 ($generated@@394 $generated@@145 $generated@@595) ($generated@@144 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@227 $generated@@595 ($generated@@144 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
 (not ($generated@@0 ($generated@@81 ($generated@@274 $generated@@597) $generated@@596))))
 :pattern ( (let (($generated@@597 (type $generated@@596)))
($generated@@81 ($generated@@274 $generated@@597) $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
 (not ($generated@@0 ($generated@@81 ($generated@@461 $generated@@599) $generated@@598))))
 :pattern ( (let (($generated@@599 (type $generated@@598)))
($generated@@81 ($generated@@461 $generated@@599) $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@69)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@64) (= (type $generated@@603) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@602 $generated@@603)) $generated@@62) (= ($generated@@600 ($generated@@144 $generated@@602 $generated@@603)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 Int) ($generated@@605 Int) ) (! (= ($generated@@281 $generated@@604 $generated@@605) (* $generated@@604 $generated@@605))
 :pattern ( ($generated@@281 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@145) (= ($generated@@576 ($generated@@280 $generated@@606)) ($generated@@577 $generated@@606)))
 :pattern ( ($generated@@576 ($generated@@280 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@135) ($generated@@227 $generated@@607 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@394 $generated@@2 $generated@@607)) $generated@@607) ($generated@@137 ($generated@@394 ($generated@@76 $generated@@135 $generated@@4) $generated@@607) ($generated@@75 0))))
 :pattern ( ($generated@@227 $generated@@607 ($generated@@75 0)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@135) (= (type $generated@@609) $generated@@64)) ($generated@@227 $generated@@608 ($generated@@138 $generated@@609))) (and (= ($generated@@280 ($generated@@394 ($generated@@76 $generated@@135 $generated@@4) $generated@@608)) $generated@@608) ($generated@@137 ($generated@@394 ($generated@@76 $generated@@135 $generated@@4) $generated@@608) ($generated@@138 $generated@@609))))
 :pattern ( ($generated@@227 $generated@@608 ($generated@@138 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@135) (= (type $generated@@611) $generated@@64)) ($generated@@227 $generated@@610 ($generated@@239 $generated@@611))) (and (= ($generated@@280 ($generated@@394 ($generated@@76 $generated@@135 $generated@@4) $generated@@610)) $generated@@610) ($generated@@137 ($generated@@394 ($generated@@76 $generated@@135 $generated@@4) $generated@@610) ($generated@@239 $generated@@611))))
 :pattern ( ($generated@@227 $generated@@610 ($generated@@239 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@135) (= (type $generated@@613) $generated@@64)) ($generated@@227 $generated@@612 ($generated@@158 $generated@@613))) (and (= ($generated@@280 ($generated@@394 ($generated@@76 $generated@@135 $generated@@2) $generated@@612)) $generated@@612) ($generated@@137 ($generated@@394 ($generated@@76 $generated@@135 $generated@@2) $generated@@612) ($generated@@158 $generated@@613))))
 :pattern ( ($generated@@227 $generated@@612 ($generated@@158 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@135) (= (type $generated@@615) $generated@@64)) ($generated@@227 $generated@@614 ($generated@@535 $generated@@615))) (and (= ($generated@@280 ($generated@@394 ($generated@@265 $generated@@135) $generated@@614)) $generated@@614) ($generated@@137 ($generated@@394 ($generated@@265 $generated@@135) $generated@@614) ($generated@@535 $generated@@615))))
 :pattern ( ($generated@@227 $generated@@614 ($generated@@535 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@79 (type $generated@@617))))
 (=> (and (= (type $generated@@617) ($generated@@76 $generated@@619 $generated@@4)) (= (type $generated@@618) ($generated@@76 $generated@@619 $generated@@4))) (= ($generated@@616 $generated@@617 $generated@@618) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@619) ($generated@@0 ($generated@@81 $generated@@617 $generated@@620))) ($generated@@0 ($generated@@81 $generated@@618 $generated@@620)))
 :pattern ( ($generated@@81 $generated@@617 $generated@@620))
 :pattern ( ($generated@@81 $generated@@618 $generated@@620))
)))))
 :pattern ( ($generated@@616 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@621 ($generated@@158 $generated@@622) $generated@@623) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@621 $generated@@624)))) ($generated@@251 $generated@@624 $generated@@622 $generated@@623))
 :pattern ( ($generated@@81 $generated@@621 $generated@@624))
))))
 :pattern ( ($generated@@74 $generated@@621 ($generated@@158 $generated@@622) $generated@@623))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@134) (= (type $generated@@626) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 $generated@@626) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@626 ($generated@@138 $generated@@46))))) (and (=> (not ($generated@@273 $generated@@626 ($generated@@274 $generated@@135))) (and ($generated@@272 $generated@@626) (let (($generated@@627 ($generated@@271 $generated@@626)))
($generated@@136 ($generated@@278 $generated@@626 ($generated@@279 ($generated@@274 $generated@@135) ($generated@@280 ($generated@@8 $generated@@627)))))))) (= ($generated@@133 ($generated@@277 $generated@@625) $generated@@626) (ite ($generated@@273 $generated@@626 ($generated@@274 $generated@@135)) 1 (let (($generated@@628 ($generated@@271 $generated@@626)))
($generated@@281 $generated@@628 ($generated@@133 $generated@@625 ($generated@@278 $generated@@626 ($generated@@279 ($generated@@274 $generated@@135) ($generated@@280 ($generated@@8 $generated@@628)))))))))))
 :pattern ( ($generated@@133 ($generated@@277 $generated@@625) $generated@@626))
))))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@79 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@76 $generated@@631 $generated@@4)) (= (type $generated@@630) ($generated@@76 $generated@@631 $generated@@4))) (= ($generated@@375 $generated@@629 $generated@@630) (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@631) (or (not ($generated@@0 ($generated@@81 $generated@@629 $generated@@632))) (not ($generated@@0 ($generated@@81 $generated@@630 $generated@@632)))))
 :pattern ( ($generated@@81 $generated@@629 $generated@@632))
 :pattern ( ($generated@@81 $generated@@630 $generated@@632))
)))))
 :pattern ( ($generated@@375 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@145) (= (type $generated@@634) $generated@@64)) (= (type $generated@@635) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@635) (and ($generated@@143 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@64) ($generated@@74 $generated@@633 ($generated@@144 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@74 $generated@@633 ($generated@@144 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@251 ($generated@@152 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@251 ($generated@@152 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@145) (= (type $generated@@638) $generated@@64)) (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@639) (and ($generated@@143 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@64) ($generated@@74 $generated@@637 ($generated@@144 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@74 $generated@@637 ($generated@@144 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@251 ($generated@@153 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@251 ($generated@@153 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@135) (= (type $generated@@642) $generated@@135)) (= ($generated@@226 ($generated@@246 $generated@@641) ($generated@@246 $generated@@642)) ($generated@@246 ($generated@@226 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@226 ($generated@@246 $generated@@641) ($generated@@246 $generated@@642)))
)))
(assert (forall (($generated@@643 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@244 $generated@@643))) ($generated@@246 ($generated@@280 ($generated@@8 $generated@@643))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@244 $generated@@643))))
)))
(assert (forall (($generated@@644 T@U) ) (! (= ($generated@@280 ($generated@@246 $generated@@644)) ($generated@@246 ($generated@@280 $generated@@644)))
 :pattern ( ($generated@@280 ($generated@@246 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 ($generated@@266 (type $generated@@645))))
 (=> (and (= (type $generated@@645) ($generated@@265 $generated@@646)) (= ($generated@@264 $generated@@645) 0)) (= $generated@@645 ($generated@@263 $generated@@646))))
 :pattern ( ($generated@@264 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 (type $generated@@648)))
 (=> (and (and (= (type $generated@@647) ($generated@@76 $generated@@650 $generated@@2)) (= (type $generated@@649) $generated@@2)) (<= 0 ($generated $generated@@649))) (= ($generated@@297 ($generated@@82 $generated@@647 $generated@@648 $generated@@649)) (+ (- ($generated@@297 $generated@@647) ($generated ($generated@@81 $generated@@647 $generated@@648))) ($generated $generated@@649)))))
 :pattern ( ($generated@@297 ($generated@@82 $generated@@647 $generated@@648 $generated@@649)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@652) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@272 ($generated@@246 $generated@@652)) (and (not (= 1 $generated@@132)) (and (and ($generated@@250 $generated@@651) ($generated@@137 $generated@@652 ($generated@@138 $generated@@46))) (not ($generated@@273 $generated@@652 ($generated@@274 $generated@@135))))))) (and ($generated@@304 ($generated@@246 $generated@@652)) (= ($generated@@271 ($generated@@246 $generated@@652)) (let (($generated@@653 ($generated@@303 ($generated@@246 $generated@@652))))
$generated@@653))))
 :weight 3
 :pattern ( ($generated@@271 ($generated@@246 $generated@@652)) ($generated@@250 $generated@@651))
))))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 (type $generated@@656)))
 (=> (and (= (type $generated@@654) ($generated@@76 $generated@@657 $generated@@4)) (= (type $generated@@655) ($generated@@76 $generated@@657 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@219 $generated@@654 $generated@@655) $generated@@656))  (or ($generated@@0 ($generated@@81 $generated@@654 $generated@@656)) ($generated@@0 ($generated@@81 $generated@@655 $generated@@656))))))
 :pattern ( ($generated@@81 ($generated@@219 $generated@@654 $generated@@655) $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@659) $generated@@2)) ($generated@@74 $generated@@659 $generated@@46 $generated@@658))
 :pattern ( ($generated@@74 $generated@@659 $generated@@46 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@661) $generated@@3)) ($generated@@74 $generated@@661 $generated@@47 $generated@@660))
 :pattern ( ($generated@@74 $generated@@661 $generated@@47 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@663) $generated@@4)) ($generated@@74 $generated@@663 $generated@@44 $generated@@662))
 :pattern ( ($generated@@74 $generated@@663 $generated@@44 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@665) $generated@@485)) ($generated@@74 $generated@@665 $generated@@45 $generated@@664))
 :pattern ( ($generated@@74 $generated@@665 $generated@@45 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@667) $generated@@135)) ($generated@@74 $generated@@667 $generated@@48 $generated@@666))
 :pattern ( ($generated@@74 $generated@@667 $generated@@48 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@265 $generated@@135)) (= (type $generated@@669) $generated@@64)) (= ($generated@@137 $generated@@668 ($generated@@535 $generated@@669)) (forall (($generated@@670 Int) ) (!  (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@264 $generated@@668))) ($generated@@227 ($generated@@536 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@536 $generated@@668 $generated@@670))
))))
 :pattern ( ($generated@@137 $generated@@668 ($generated@@535 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@265 $generated@@135)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@264 $generated@@672))) (< ($generated@@577 ($generated@@394 $generated@@145 ($generated@@536 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@577 ($generated@@394 $generated@@145 ($generated@@536 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@309 $generated@@135 $generated@@135)) (= (type $generated@@675) $generated@@64)) (= (type $generated@@676) $generated@@64)) ($generated@@137 $generated@@674 ($generated@@422 $generated@@675 $generated@@676))) (and (and ($generated@@137 ($generated@@307 $generated@@674) ($generated@@138 $generated@@675)) ($generated@@137 ($generated@@354 $generated@@674) ($generated@@138 $generated@@676))) ($generated@@137 ($generated@@393 $generated@@674) ($generated@@138 ($generated@@144 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@137 $generated@@674 ($generated@@422 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@327 $generated@@135 $generated@@135)) (= (type $generated@@678) $generated@@64)) (= (type $generated@@679) $generated@@64)) ($generated@@137 $generated@@677 ($generated@@430 $generated@@678 $generated@@679))) (and (and ($generated@@137 ($generated@@325 $generated@@677) ($generated@@239 $generated@@678)) ($generated@@137 ($generated@@365 $generated@@677) ($generated@@239 $generated@@679))) ($generated@@137 ($generated@@404 $generated@@677) ($generated@@239 ($generated@@144 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@137 $generated@@677 ($generated@@430 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@137 $generated@@680 $generated@@46))
 :pattern ( ($generated@@137 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@137 $generated@@681 $generated@@47))
 :pattern ( ($generated@@137 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@137 $generated@@682 $generated@@44))
 :pattern ( ($generated@@137 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@485) ($generated@@137 $generated@@683 $generated@@45))
 :pattern ( ($generated@@137 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@135) ($generated@@137 $generated@@684 $generated@@48))
 :pattern ( ($generated@@137 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 (T@U) Bool)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@685) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@686) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@688) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@689) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@692) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@693) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@694) $generated@@77)) (= (type $generated@@695) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@696) ($generated@@76 $generated@@135 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@697  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@244 1) ($generated@@133 ($generated@@277 ($generated@@277 $generated@@531)) $generated@@685))) (=> (<= ($generated@@244 1) ($generated@@133 ($generated@@277 ($generated@@277 $generated@@531)) $generated@@685)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@698 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@685 ($generated@@280 ($generated@@8 $generated@@698)))) (<= $generated@@698 ($generated@@133 ($generated@@277 ($generated@@277 $generated@@531)) $generated@@685))))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@280 ($generated@@8 $generated@@698))))
)))))))
(let (($generated@@699  (=> (and ($generated@@273 $generated@@685 ($generated@@274 $generated@@135)) (= (ControlFlow 0 11) 2)) $generated@@697)))
(let (($generated@@700  (=> (and (not ($generated@@273 $generated@@685 ($generated@@274 $generated@@135))) ($generated@@74 $generated@@685 ($generated@@138 $generated@@46) $generated@@686)) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not ($generated@@273 $generated@@685 ($generated@@274 $generated@@135)))) (=> (not ($generated@@273 $generated@@685 ($generated@@274 $generated@@135))) (=> (and (and ($generated@@272 $generated@@685) ($generated@@272 $generated@@685)) (and (= $generated@@687 ($generated@@271 $generated@@685)) (= $generated@@688 ($generated@@278 $generated@@685 ($generated@@279 ($generated@@274 $generated@@135) ($generated@@280 ($generated@@8 $generated@@687))))))) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@273 $generated@@685 ($generated@@219 $generated@@688 ($generated@@279 ($generated@@274 $generated@@135) ($generated@@280 ($generated@@8 $generated@@687)))))) (=> ($generated@@273 $generated@@685 ($generated@@219 $generated@@688 ($generated@@279 ($generated@@274 $generated@@135) ($generated@@280 ($generated@@8 $generated@@687))))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (and ($generated@@616 $generated@@688 $generated@@685) (not ($generated@@616 $generated@@685 $generated@@688)))) (=> (and ($generated@@616 $generated@@688 $generated@@685) (not ($generated@@616 $generated@@685 $generated@@688))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (forall (($generated@@701 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@688 ($generated@@280 ($generated@@8 $generated@@701)))) (<= ($generated@@244 1) $generated@@701)))
 :pattern ( ($generated@@81 $generated@@688 ($generated@@280 ($generated@@8 $generated@@701))))
))) (=> (forall (($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@702) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@688 ($generated@@280 $generated@@702)))) (<= ($generated@@244 1) ($generated $generated@@702)))
 :pattern ( ($generated@@81 $generated@@688 ($generated@@280 $generated@@702)))
)) (=> (and ($generated@@250 $generated@@689) ($generated@@690 $generated@@689)) (=> (and (and (and (and ($generated@@136 $generated@@688) (=> (<= ($generated@@244 1) ($generated@@133 ($generated@@277 $generated@@531) $generated@@688)) (forall (($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@2) ($generated@@0 ($generated@@81 $generated@@688 ($generated@@280 $generated@@703)))) ($generated@@136 $generated@@688))
 :pattern ( ($generated@@81 $generated@@688 ($generated@@280 $generated@@703)))
)))) (<= ($generated@@244 1) ($generated@@133 ($generated@@277 ($generated@@277 $generated@@531)) $generated@@688))) (and (forall (($generated@@704 T@U) ) (!  (=> (and (and (= (type $generated@@704) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@688 ($generated@@280 $generated@@704)))) (<= ($generated $generated@@704) ($generated@@133 ($generated@@277 $generated@@531) $generated@@688)))
 :pattern ( ($generated@@81 $generated@@688 ($generated@@280 $generated@@704)))
)) (= $generated@@686 $generated@@689))) (and (and ($generated@@74 $generated@@688 ($generated@@138 $generated@@46) $generated@@689) ($generated@@136 $generated@@688)) (and ($generated@@136 $generated@@688) (= $generated@@691 ($generated@@133 ($generated@@277 $generated@@531) $generated@@688))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@244 1) $generated@@687)) (=> (<= ($generated@@244 1) $generated@@687) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@244 1) $generated@@691)) (=> (<= ($generated@@244 1) $generated@@691) (=> (and (and (and ($generated@@250 $generated@@692) ($generated@@690 $generated@@692)) (<= $generated@@687 ($generated@@281 $generated@@687 $generated@@691))) (and (= $generated@@689 $generated@@692) (= (ControlFlow 0 4) 2))) $generated@@697)))))))))))))))))))
(let (($generated@@705  (=> (= $generated@@693 ($generated@@164 $generated@@694 $generated@@695 $generated@@60 false)) (=> (and (and ($generated@@250 $generated@@686) ($generated@@690 $generated@@686)) (and (= $generated@@695 $generated@@686) (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) ($generated@@76 $generated@@135 $generated@@4)) (=> (and (and ($generated@@137 $generated@@706 ($generated@@138 $generated@@46)) (forall (($generated@@707 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@706 ($generated@@280 ($generated@@8 $generated@@707)))) (<= ($generated@@244 1) $generated@@707)))
 :pattern ( ($generated@@81 $generated@@706 ($generated@@280 ($generated@@8 $generated@@707))))
))) (and ($generated@@616 $generated@@706 $generated@@685) (not ($generated@@616 $generated@@685 $generated@@706)))) (and (<= ($generated@@244 1) ($generated@@133 ($generated@@277 $generated@@531) $generated@@706)) (forall (($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@708) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@706 ($generated@@280 $generated@@708)))) (<= ($generated $generated@@708) ($generated@@133 ($generated@@277 $generated@@531) $generated@@706)))
 :pattern ( ($generated@@81 $generated@@706 ($generated@@280 $generated@@708)))
)))))
 :no-pattern (type $generated@@706)
 :no-pattern ($generated $generated@@706)
 :no-pattern ($generated@@0 $generated@@706)
)))) (and (=> (= (ControlFlow 0 12) 4) $generated@@700) (=> (= (ControlFlow 0 12) 11) $generated@@699))))))
(let (($generated@@709  (=> (and (and ($generated@@250 $generated@@695) ($generated@@690 $generated@@695)) (and ($generated@@137 $generated@@685 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@685 ($generated@@138 $generated@@46) $generated@@695))) (=> (and (and (and (and ($generated@@137 $generated@@696 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@696 ($generated@@138 $generated@@46) $generated@@695)) true) (= 3 $generated@@132)) (and (forall (($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@710) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@685 ($generated@@280 $generated@@710)))) (<= ($generated@@244 1) ($generated $generated@@710)))
 :pattern ( ($generated@@81 $generated@@685 ($generated@@280 $generated@@710)))
)) (= (ControlFlow 0 13) 12))) $generated@@705))))
$generated@@709))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (T@U T@U) Int)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@144 (Int) Bool)
(declare-fun $generated@@145 (Int) Int)
(declare-fun $generated@@146 (Int) Bool)
(declare-fun $generated@@147 (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (Int) Bool)
(declare-fun $generated@@241 (Int) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (Int Int) Int)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@U) Bool)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@354 (T@U Int) Bool)
(declare-fun $generated@@355 (T@U Int) Bool)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@468 (T@T) T@U)
(declare-fun $generated@@492 () T@T)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@538 () T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U Int) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@629 (T@U T@U) Bool)
(declare-fun $generated@@685 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (= ($generated@@1 $generated@@137) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@140 $generated@@141)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@141))
))))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@136) (= (type $generated@@143) ($generated@@78 $generated@@137 $generated@@4))) (or ($generated@@138 $generated@@143) (and (not (= 2 $generated@@134)) ($generated@@139 $generated@@143 ($generated@@140 $generated@@46))))) true)
 :pattern ( ($generated@@135 $generated@@142 $generated@@143))
))))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@148 Int) ) (!  (=> (or ($generated@@146 ($generated@@145 $generated@@148)) (not (= 0 $generated@@134))) (= ($generated@@144 ($generated@@145 $generated@@148))  (and (<= ($generated@@145 2) ($generated@@145 $generated@@148)) (forall (($generated@@149 Int) ) (!  (=> true (=> (and (<= ($generated@@145 2) $generated@@149) (< $generated@@149 $generated@@148)) (not (= ($generated@@147 $generated@@148 $generated@@149) 0))))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))))
 :weight 3
 :pattern ( ($generated@@144 ($generated@@145 $generated@@148)))
))))
(assert (= (type $generated@@150) $generated@@66))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@151 $generated@@150 $generated@@152))
 :pattern ( ($generated@@76 $generated@@151 $generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@139 $generated@@153 ($generated@@77 0)))
 :pattern ( ($generated@@139 $generated@@153 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@156) 16) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@157 $generated@@158)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@66) (= (type $generated@@160) $generated@@66)) (= (type $generated@@161) $generated@@156)) ($generated@@139 $generated@@161 ($generated@@155 $generated@@159 $generated@@160))) ($generated@@154 $generated@@161))
 :pattern ( ($generated@@154 $generated@@161) ($generated@@139 $generated@@161 ($generated@@155 $generated@@159 $generated@@160)))
)))
(assert  (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@137)
 :pattern ( ($generated@@163 $generated@@165))
)) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@137)
 :pattern ( ($generated@@164 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@156) (= (type $generated@@168) $generated@@156)) true) (= ($generated@@162 $generated@@167 $generated@@168)  (and (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)) (= ($generated@@164 $generated@@167) ($generated@@164 $generated@@168)))))
 :pattern ( ($generated@@162 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@66)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@173) $generated@@66)) ($generated@@139 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@139 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 17)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@79 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@69 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@79) (= (type $generated@@224) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@225) ($generated@@68 $generated@@4))) (= (type $generated@@227) $generated@@79)) (= (type $generated@@228) ($generated@@68 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@156)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@66) (= (type $generated@@235) $generated@@66)) (= (type $generated@@236) $generated@@137)) (= (type $generated@@237) $generated@@137)) (= ($generated@@139 ($generated@@230 $generated@@236 $generated@@237) ($generated@@155 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@139 ($generated@@230 $generated@@236 $generated@@237) ($generated@@155 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@156) (= (type $generated@@239) $generated@@156)) (= ($generated@@162 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@162 $generated@@238 $generated@@239))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@242 Int) ) (!  (=> (or ($generated@@241 $generated@@242) (not (= 1 $generated@@134))) (and (=> (<= ($generated@@145 2) $generated@@242) (forall (($generated@@243 Int) ) (!  (=> (<= ($generated@@145 2) $generated@@243) (=> (< $generated@@243 $generated@@242) ($generated@@146 $generated@@243)))
 :pattern ( ($generated@@144 $generated@@243))
))) (= ($generated@@240 $generated@@242)  (and (<= ($generated@@145 2) $generated@@242) (forall (($generated@@244 Int) ) (!  (=> true (=> (and (and (<= ($generated@@145 2) $generated@@244) (< $generated@@244 $generated@@242)) ($generated@@144 $generated@@244)) (not (= ($generated@@147 $generated@@242 $generated@@244) 0))))
 :pattern ( ($generated@@144 $generated@@244))
))))))
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@139 $generated@@245 ($generated@@140 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@137) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@231 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@139 $generated@@245 ($generated@@140 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@137) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@231 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@145 $generated@@253) $generated@@253)
 :pattern ( ($generated@@145 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@258 Int) ) (!  (=> (or ($generated@@146 $generated@@258) (not (= 0 $generated@@134))) true)
 :pattern ( ($generated@@144 $generated@@258))
))))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@259 Int) ) (!  (=> (or ($generated@@241 $generated@@259) (not (= 1 $generated@@134))) true)
 :pattern ( ($generated@@240 $generated@@259))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@66) (= (type $generated@@263) $generated@@66)) (= (type $generated@@264) $generated@@137)) (= (type $generated@@265) $generated@@137)) (= (type $generated@@266) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@260 $generated@@266)) (= ($generated@@76 ($generated@@230 $generated@@264 $generated@@265) ($generated@@155 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@76 ($generated@@230 $generated@@264 $generated@@265) ($generated@@155 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@156) (= ($generated@@154 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@62)))
 :pattern ( ($generated@@154 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@156) ($generated@@154 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@137) (= (type $generated@@272) $generated@@137)) (= $generated@@270 ($generated@@230 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@154 $generated@@270))
)))
(assert  (and (and (forall (($generated@@277 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@277)) 18)) (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
))) (forall (($generated@@279 T@T) ) (! (= (type ($generated@@273 $generated@@279)) ($generated@@275 $generated@@279))
 :pattern ( ($generated@@273 $generated@@279))
))))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@280)) 0)
 :pattern ( ($generated@@273 $generated@@280))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@4))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@78 $generated@@137 $generated@@4)) (or ($generated@@282 $generated@@286) (and (not (= 1 $generated@@134)) (and ($generated@@139 $generated@@286 ($generated@@140 $generated@@46)) (not ($generated@@283 $generated@@286 ($generated@@284 $generated@@137))))))) true)
 :pattern ( ($generated@@281 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@2) (= ($generated@@139 $generated@@287 $generated@@150) (<= ($generated@@145 0) ($generated $generated@@287))))
 :pattern ( ($generated@@139 $generated@@287 $generated@@150))
)))
(assert  (and (and (and (forall (($generated@@293 T@U) ) (! (= (type ($generated@@288 $generated@@293)) $generated@@136)
 :pattern ( ($generated@@288 $generated@@293))
)) (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@81 (type $generated@@294))))
(= (type ($generated@@289 $generated@@294 $generated@@295)) ($generated@@78 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@290 $generated@@297 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@300 T@U) ) (! (= (type ($generated@@291 $generated@@300)) $generated@@137)
 :pattern ( ($generated@@291 $generated@@300))
))))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (= (type $generated@@301) $generated@@136) (= (type $generated@@302) ($generated@@78 $generated@@137 $generated@@4))) (or ($generated@@138 ($generated@@254 $generated@@302)) (and (not (= 2 $generated@@134)) ($generated@@139 $generated@@302 ($generated@@140 $generated@@46))))) (and (=> (not ($generated@@283 $generated@@302 ($generated@@284 $generated@@137))) (and ($generated@@282 ($generated@@254 $generated@@302)) (let (($generated@@303 ($generated@@145 ($generated@@281 ($generated@@254 $generated@@302)))))
($generated@@138 ($generated@@289 $generated@@302 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@303)))))))) (= ($generated@@135 ($generated@@288 $generated@@301) ($generated@@254 $generated@@302)) (ite ($generated@@283 $generated@@302 ($generated@@284 $generated@@137)) 1 (let (($generated@@304 ($generated@@145 ($generated@@281 ($generated@@254 $generated@@302)))))
($generated@@292 $generated@@304 ($generated@@135 ($generated@@288 $generated@@301) ($generated@@289 $generated@@302 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@304)))))))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@288 $generated@@301) ($generated@@254 $generated@@302)))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@66) (= (type $generated@@307) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@261 ($generated@@291 $generated@@305) $generated@@306 $generated@@307) ($generated@@76 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@261 ($generated@@291 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@78 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@81 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@78 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@83 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) ($generated@@78 $generated@@137 $generated@@4)) ($generated@@315 $generated@@316)) (and ($generated@@0 ($generated@@83 $generated@@316 ($generated@@291 ($generated@@8 ($generated@@314 $generated@@316))))) (forall (($generated@@317 T@U) ) (!  (=> (and (and (= (type $generated@@317) $generated@@2) true) ($generated@@0 ($generated@@83 $generated@@316 ($generated@@291 $generated@@317)))) (<= ($generated $generated@@317) ($generated@@314 $generated@@316)))
 :pattern ( ($generated@@83 $generated@@316 ($generated@@291 $generated@@317)))
))))
 :pattern ( ($generated@@314 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@78 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@83 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@83 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 20)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@78 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@83 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@83 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@356 T@U) ($generated@@357 Int) ) (!  (=> (and (= (type $generated@@356) ($generated@@78 $generated@@137 $generated@@4)) (or ($generated@@355 $generated@@356 $generated@@357) (and (not (= 1 $generated@@134)) ($generated@@139 $generated@@356 ($generated@@140 $generated@@46))))) true)
 :pattern ( ($generated@@354 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@81 (type $generated@@358))))
 (=> (and (= (type $generated@@358) ($generated@@78 $generated@@360 $generated@@4)) (= (type $generated@@359) ($generated@@78 $generated@@360 $generated@@4))) (= ($generated@@283 $generated@@358 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (= ($generated@@0 ($generated@@83 $generated@@358 $generated@@361)) ($generated@@0 ($generated@@83 $generated@@359 $generated@@361))))
 :pattern ( ($generated@@83 $generated@@358 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@283 $generated@@358 $generated@@359))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@362 Int) ) (!  (=> (or ($generated@@241 ($generated@@145 $generated@@362)) (not (= 1 $generated@@134))) (and (=> (<= ($generated@@145 2) ($generated@@145 $generated@@362)) (forall (($generated@@363 Int) ) (!  (=> (<= ($generated@@145 2) $generated@@363) (=> (< $generated@@363 $generated@@362) ($generated@@146 $generated@@363)))
 :pattern ( ($generated@@144 $generated@@363))
))) (= ($generated@@240 ($generated@@145 $generated@@362))  (and (<= ($generated@@145 2) ($generated@@145 $generated@@362)) (forall (($generated@@364 Int) ) (!  (=> true (=> (and (and (<= ($generated@@145 2) $generated@@364) (< $generated@@364 $generated@@362)) ($generated@@144 $generated@@364)) (not (= ($generated@@147 $generated@@362 $generated@@364) 0))))
 :pattern ( ($generated@@144 $generated@@364))
))))))
 :weight 3
 :pattern ( ($generated@@240 ($generated@@145 $generated@@362)))
))))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@81 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@78 $generated@@366 $generated@@2)) (= ($generated@@170 $generated@@365) (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@366) (and (<= 0 ($generated ($generated@@83 $generated@@365 $generated@@367))) (<= ($generated ($generated@@83 $generated@@365 $generated@@367)) ($generated@@308 $generated@@365))))
 :pattern ( ($generated@@83 $generated@@365 $generated@@367))
)))))
 :pattern ( ($generated@@170 $generated@@365))
)))
(assert (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@137) ($generated@@231 $generated@@371 $generated@@150)) (and (= ($generated@@291 ($generated@@368 $generated@@2 $generated@@371)) $generated@@371) ($generated@@139 ($generated@@368 $generated@@2 $generated@@371) $generated@@150)))
 :pattern ( ($generated@@231 $generated@@371 $generated@@150))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(let (($generated@@374 ($generated@@321 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@320 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@319 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@318 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@322 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@78 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@322 (type $generated@@379))))
(let (($generated@@381 ($generated@@321 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@320 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@319 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@83 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(let (($generated@@385 ($generated@@339 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@338 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@337 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@336 $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@340 (type $generated@@388))))
(= (type ($generated@@387 $generated@@388)) ($generated@@78 $generated@@389 $generated@@4)))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@340 (type $generated@@390))))
(let (($generated@@392 ($generated@@339 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@338 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@337 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@391) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@387 $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@395) $generated@@66)) (= ($generated@@139 $generated@@394 ($generated@@169 $generated@@395)) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@137) (< 0 ($generated ($generated@@83 $generated@@394 $generated@@396)))) ($generated@@231 $generated@@396 $generated@@395))
 :pattern ( ($generated@@83 $generated@@394 $generated@@396))
))))
 :pattern ( ($generated@@139 $generated@@394 ($generated@@169 $generated@@395)))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
 (=> (and (= (type $generated@@397) ($generated@@78 $generated@@400 $generated@@4)) (= (type $generated@@398) ($generated@@78 $generated@@400 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@289 $generated@@397 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@83 $generated@@397 $generated@@399)) (not ($generated@@0 ($generated@@83 $generated@@398 $generated@@399)))))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@140 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@137) ($generated@@0 ($generated@@83 $generated@@401 $generated@@404))) ($generated@@261 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@83 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@140 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@405 ($generated@@248 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@137) ($generated@@0 ($generated@@83 $generated@@405 $generated@@408))) ($generated@@261 $generated@@408 $generated@@406 $generated@@407))
 :pattern ( ($generated@@83 $generated@@405 $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@405 ($generated@@248 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(= ($generated ($generated@@83 ($generated@@309 $generated@@410) $generated@@409)) 0))
 :pattern ( (let (($generated@@410 (type $generated@@409)))
($generated@@83 ($generated@@309 $generated@@410) $generated@@409)))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@78 $generated@@137 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@322 (type $generated@@414))))
(let (($generated@@416 ($generated@@321 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@320 $generated@@137 $generated@@137)) (= (type $generated@@418) $generated@@137)) (= ($generated@@0 ($generated@@83 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@83 ($generated@@318 $generated@@417) ($generated@@163 ($generated@@368 $generated@@156 $generated@@418)))) (= ($generated@@83 ($generated@@412 $generated@@417) ($generated@@163 ($generated@@368 $generated@@156 $generated@@418))) ($generated@@164 ($generated@@368 $generated@@156 $generated@@418))))))
 :pattern ( ($generated@@83 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert  (and (forall (($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@421)) ($generated@@78 $generated@@137 $generated@@4))
 :pattern ( ($generated@@419 $generated@@421))
)) (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@340 (type $generated@@422))))
(let (($generated@@424 ($generated@@339 (type $generated@@422))))
(= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@424 $generated@@423))))
 :pattern ( ($generated@@420 $generated@@422))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@338 $generated@@137 $generated@@137)) (= (type $generated@@426) $generated@@137)) (= ($generated@@0 ($generated@@83 ($generated@@419 $generated@@425) $generated@@426))  (and ($generated@@0 ($generated@@83 ($generated@@336 $generated@@425) ($generated@@163 ($generated@@368 $generated@@156 $generated@@426)))) (= ($generated@@83 ($generated@@420 $generated@@425) ($generated@@163 ($generated@@368 $generated@@156 $generated@@426))) ($generated@@164 ($generated@@368 $generated@@156 $generated@@426))))))
 :pattern ( ($generated@@83 ($generated@@419 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@321 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@320 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@83 ($generated@@376 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@83 ($generated@@318 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@83 ($generated@@412 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@427) $generated@@431))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@339 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@338 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@83 ($generated@@336 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@83 ($generated@@420 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@432) $generated@@436))
 :pattern ( ($generated@@83 ($generated@@420 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@320 $generated@@137 $generated@@137)) (= (type $generated@@441) $generated@@66)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@440) $generated@@444))) (and ($generated@@261 ($generated@@83 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@261 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@76 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@338 $generated@@137 $generated@@137)) (= (type $generated@@449) $generated@@66)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@448) $generated@@452))) (and ($generated@@261 ($generated@@83 ($generated@@420 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@261 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@83 ($generated@@420 $generated@@448) $generated@@452))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@76 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@81 (type $generated@@453))))
 (=> (and (and (= (type $generated@@453) ($generated@@78 $generated@@455 $generated@@4)) (= (type $generated@@454) ($generated@@78 $generated@@455 $generated@@4))) ($generated@@283 $generated@@453 $generated@@454)) (= $generated@@453 $generated@@454)))
 :pattern ( ($generated@@283 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@457)))
 (=> (and (and (= (type $generated@@456) ($generated@@78 $generated@@459 $generated@@4)) (= (type $generated@@458) $generated@@459)) ($generated@@0 ($generated@@83 $generated@@456 $generated@@458))) ($generated@@0 ($generated@@83 ($generated@@290 $generated@@456 $generated@@457) $generated@@458))))
 :pattern ( ($generated@@290 $generated@@456 $generated@@457) ($generated@@83 $generated@@456 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@461)))
 (=> (and (= (type $generated@@460) ($generated@@78 $generated@@463 $generated@@4)) (= (type $generated@@462) $generated@@463)) (= ($generated@@0 ($generated@@83 ($generated@@290 $generated@@460 $generated@@461) $generated@@462))  (or (= $generated@@462 $generated@@461) ($generated@@0 ($generated@@83 $generated@@460 $generated@@462))))))
 :pattern ( ($generated@@83 ($generated@@290 $generated@@460 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (! (let (($generated@@467 (type $generated@@466)))
 (=> (and (and (= (type $generated@@464) ($generated@@78 $generated@@467 $generated@@4)) (= (type $generated@@465) ($generated@@78 $generated@@467 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@465 $generated@@466))) (not ($generated@@0 ($generated@@83 ($generated@@289 $generated@@464 $generated@@465) $generated@@466)))))
 :pattern ( ($generated@@289 $generated@@464 $generated@@465) ($generated@@83 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@469 T@T) ) (! (= (type ($generated@@468 $generated@@469)) ($generated@@78 $generated@@469 $generated@@4))
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@340 (type $generated@@470))))
(let (($generated@@472 ($generated@@339 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@338 $generated@@472 $generated@@471)) (= (= $generated@@470 ($generated@@337 $generated@@472 $generated@@471)) (= ($generated@@336 $generated@@470) ($generated@@468 $generated@@472))))))
 :pattern ( ($generated@@336 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@340 (type $generated@@473))))
(let (($generated@@475 ($generated@@339 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@338 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@337 $generated@@475 $generated@@474)) (= ($generated@@387 $generated@@473) ($generated@@468 $generated@@474))))))
 :pattern ( ($generated@@387 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@340 (type $generated@@476))))
(let (($generated@@478 ($generated@@339 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@338 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@337 $generated@@478 $generated@@477)) (= ($generated@@419 $generated@@476) ($generated@@468 $generated@@137))))))
 :pattern ( ($generated@@419 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@322 (type $generated@@479))))
(let (($generated@@481 ($generated@@321 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@320 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@319 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@137) (= (type $generated@@483) $generated@@137)) ($generated@@0 ($generated@@83 ($generated@@411 $generated@@479) ($generated@@291 ($generated@@230 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@411 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@340 (type $generated@@484))))
(let (($generated@@486 ($generated@@339 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@338 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@337 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@137) (= (type $generated@@488) $generated@@137)) ($generated@@0 ($generated@@83 ($generated@@419 $generated@@484) ($generated@@291 ($generated@@230 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@419 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@137) ($generated@@231 $generated@@489 $generated@@46)) (and (= ($generated@@291 ($generated@@368 $generated@@2 $generated@@489)) $generated@@489) ($generated@@139 ($generated@@368 $generated@@2 $generated@@489) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@489 $generated@@46))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@137) ($generated@@231 $generated@@490 $generated@@47)) (and (= ($generated@@291 ($generated@@368 $generated@@3 $generated@@490)) $generated@@490) ($generated@@139 ($generated@@368 $generated@@3 $generated@@490) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@490 $generated@@47))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@137) ($generated@@231 $generated@@491 $generated@@44)) (and (= ($generated@@291 ($generated@@368 $generated@@4 $generated@@491)) $generated@@491) ($generated@@139 ($generated@@368 $generated@@4 $generated@@491) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@491 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@492) 21))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@137) ($generated@@231 $generated@@493 $generated@@45)) (and (= ($generated@@291 ($generated@@368 $generated@@492 $generated@@493)) $generated@@493) ($generated@@139 ($generated@@368 $generated@@492 $generated@@493) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@493 $generated@@45))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@231 ($generated@@291 $generated@@494) $generated@@495) ($generated@@139 $generated@@494 $generated@@495)))
 :pattern ( ($generated@@231 ($generated@@291 $generated@@494) $generated@@495))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@497) ($generated@@78 $generated@@137 $generated@@4))) (or ($generated@@282 $generated@@497) (and (not (= 1 $generated@@134)) (and (and ($generated@@260 $generated@@496) ($generated@@139 $generated@@497 ($generated@@140 $generated@@46))) (not ($generated@@283 $generated@@497 ($generated@@284 $generated@@137))))))) (and ($generated@@315 $generated@@497) (= ($generated@@281 $generated@@497) (let (($generated@@498 ($generated@@314 $generated@@497)))
$generated@@498))))
 :pattern ( ($generated@@281 $generated@@497) ($generated@@260 $generated@@496))
))))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@81 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@78 $generated@@500 $generated@@2)) (<= 0 ($generated@@308 $generated@@499))))
 :pattern ( ($generated@@308 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@276 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@275 $generated@@502)) (<= 0 ($generated@@274 $generated@@501))))
 :pattern ( ($generated@@274 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@437 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@437 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@66) (= (type $generated@@510) $generated@@66)) (= ($generated@@507 ($generated@@437 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@437 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@74 ($generated@@437 $generated@@511 $generated@@512)) $generated@@58))
 :pattern ( ($generated@@437 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@66) (= (type $generated@@516) $generated@@66)) (= ($generated@@513 ($generated@@445 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@445 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@66) (= (type $generated@@520) $generated@@66)) (= ($generated@@517 ($generated@@445 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@445 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@74 ($generated@@445 $generated@@521 $generated@@522)) $generated@@59))
 :pattern ( ($generated@@445 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@137) (= (type $generated@@524) $generated@@137)) (= ($generated@@267 ($generated@@230 $generated@@523 $generated@@524)) $generated@@62))
 :pattern ( ($generated@@230 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (= ($generated@@525 ($generated@@155 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@155 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@529 ($generated@@155 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@155 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@137) (= (type $generated@@534) $generated@@137)) (= ($generated@@163 ($generated@@230 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@230 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@137) (= (type $generated@@536) $generated@@137)) (= ($generated@@164 ($generated@@230 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@230 $generated@@535 $generated@@536))
)))
(assert  (and (forall (($generated@@539 T@U) ) (! (= (type ($generated@@537 $generated@@539)) $generated@@136)
 :pattern ( ($generated@@537 $generated@@539))
)) (= (type $generated@@538) $generated@@136)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@136) (= (type $generated@@541) ($generated@@78 $generated@@137 $generated@@4))) (= ($generated@@135 $generated@@540 $generated@@541) ($generated@@135 $generated@@538 $generated@@541)))
 :pattern ( ($generated@@135 ($generated@@537 $generated@@540) $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@544)) $generated@@66)
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@545 T@U) ($generated@@546 Int) ) (! (let (($generated@@547 ($generated@@276 (type $generated@@545))))
(= (type ($generated@@543 $generated@@545 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@545 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@275 $generated@@137)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@548 ($generated@@542 $generated@@549) $generated@@550) (forall (($generated@@551 Int) ) (!  (=> (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@274 $generated@@548))) ($generated@@261 ($generated@@543 $generated@@548 $generated@@551) $generated@@549 $generated@@550))
 :pattern ( ($generated@@543 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@542 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (=> (= (type $generated@@552) ($generated@@78 $generated@@554 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@290 $generated@@552 $generated@@553) $generated@@553))))
 :pattern ( ($generated@@290 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@555 ($generated@@77 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@77 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@66)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@557 ($generated@@140 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@140 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@66) (= ($generated@@74 ($generated@@140 $generated@@560)) $generated@@54))
 :pattern ( ($generated@@140 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@561 ($generated@@248 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@248 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@564)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@66)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@66) (= ($generated@@565 ($generated@@169 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@169 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@66) (= ($generated@@74 ($generated@@169 $generated@@568)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@66)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@66) (= ($generated@@569 ($generated@@542 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@542 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@66) (= ($generated@@74 ($generated@@542 $generated@@572)) $generated@@57))
 :pattern ( ($generated@@542 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
(= ($generated@@368 $generated@@574 ($generated@@291 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@291 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@320 $generated@@137 $generated@@137)) (= (type $generated@@576) $generated@@66)) (= (type $generated@@577) $generated@@66)) (= ($generated@@139 $generated@@575 ($generated@@437 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@575) $generated@@578))) (and ($generated@@231 ($generated@@83 ($generated@@412 $generated@@575) $generated@@578) $generated@@577) ($generated@@231 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@575) $generated@@578))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@437 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@338 $generated@@137 $generated@@137)) (= (type $generated@@580) $generated@@66)) (= (type $generated@@581) $generated@@66)) (= ($generated@@139 $generated@@579 ($generated@@445 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@579) $generated@@582))) (and ($generated@@231 ($generated@@83 ($generated@@420 $generated@@579) $generated@@582) $generated@@581) ($generated@@231 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@83 ($generated@@420 $generated@@579) $generated@@582))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@139 $generated@@579 ($generated@@445 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@137) (= (type $generated@@586) $generated@@137)) (< ($generated@@583 $generated@@585) ($generated@@584 ($generated@@230 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@230 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@137) (= (type $generated@@588) $generated@@137)) (< ($generated@@583 $generated@@588) ($generated@@584 ($generated@@230 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@230 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@136) (= (type $generated@@590) ($generated@@78 $generated@@137 $generated@@4))) (= ($generated@@135 ($generated@@288 $generated@@589) $generated@@590) ($generated@@135 $generated@@589 $generated@@590)))
 :pattern ( ($generated@@135 ($generated@@288 $generated@@589) $generated@@590))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@137 $generated@@4)) (or ($generated@@355 ($generated@@254 $generated@@591) ($generated@@145 $generated@@592)) (and (not (= 1 $generated@@134)) ($generated@@139 $generated@@591 ($generated@@140 $generated@@46))))) (and (and (forall (($generated@@593 Int) ) (!  (=> ($generated@@0 ($generated@@83 ($generated@@254 $generated@@591) ($generated@@291 ($generated@@8 $generated@@593)))) ($generated@@146 $generated@@593))
 :pattern ( ($generated@@144 $generated@@593))
 :pattern ( ($generated@@83 $generated@@591 ($generated@@291 ($generated@@8 $generated@@593))))
)) (=> (forall (($generated@@594 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@83 ($generated@@254 $generated@@591) ($generated@@291 ($generated@@8 $generated@@594)))) ($generated@@144 $generated@@594)))
 :pattern ( ($generated@@144 $generated@@594))
 :pattern ( ($generated@@83 $generated@@591 ($generated@@291 ($generated@@8 $generated@@594))))
)) (forall (($generated@@595 Int) ) (! ($generated@@146 $generated@@595)
 :pattern ( ($generated@@83 $generated@@591 ($generated@@291 ($generated@@8 $generated@@595))))
 :pattern ( ($generated@@144 $generated@@595))
)))) (= ($generated@@354 ($generated@@254 $generated@@591) ($generated@@145 $generated@@592))  (and (forall (($generated@@596 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@83 ($generated@@254 $generated@@591) ($generated@@291 ($generated@@8 $generated@@596)))) ($generated@@144 $generated@@596)))
 :pattern ( ($generated@@144 $generated@@596))
 :pattern ( ($generated@@83 $generated@@591 ($generated@@291 ($generated@@8 $generated@@596))))
)) (forall (($generated@@597 Int) ) (!  (=> true (=> (and ($generated@@144 $generated@@597) (<= $generated@@597 ($generated@@145 $generated@@592))) ($generated@@0 ($generated@@83 ($generated@@254 $generated@@591) ($generated@@291 ($generated@@8 $generated@@597))))))
 :pattern ( ($generated@@83 $generated@@591 ($generated@@291 ($generated@@8 $generated@@597))))
 :pattern ( ($generated@@144 $generated@@597))
))))))
 :weight 3
 :pattern ( ($generated@@354 ($generated@@254 $generated@@591) ($generated@@145 $generated@@592)))
))))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@137) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) $generated@@66)) ($generated@@231 $generated@@598 ($generated@@437 $generated@@599 $generated@@600))) (and (= ($generated@@291 ($generated@@368 ($generated@@320 $generated@@137 $generated@@137) $generated@@598)) $generated@@598) ($generated@@139 ($generated@@368 ($generated@@320 $generated@@137 $generated@@137) $generated@@598) ($generated@@437 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@231 $generated@@598 ($generated@@437 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@137) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@66)) ($generated@@231 $generated@@601 ($generated@@445 $generated@@602 $generated@@603))) (and (= ($generated@@291 ($generated@@368 ($generated@@338 $generated@@137 $generated@@137) $generated@@601)) $generated@@601) ($generated@@139 ($generated@@368 ($generated@@338 $generated@@137 $generated@@137) $generated@@601) ($generated@@445 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@231 $generated@@601 ($generated@@445 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@66) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@137)) ($generated@@231 $generated@@606 ($generated@@155 $generated@@604 $generated@@605))) (and (= ($generated@@291 ($generated@@368 $generated@@156 $generated@@606)) $generated@@606) ($generated@@139 ($generated@@368 $generated@@156 $generated@@606) ($generated@@155 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@231 $generated@@606 ($generated@@155 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@83 ($generated@@284 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@83 ($generated@@284 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@83 ($generated@@468 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@83 ($generated@@468 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@611 Int) ($generated@@612 Int) ) (! (= ($generated@@147 $generated@@611 $generated@@612) (mod $generated@@611 $generated@@612))
 :pattern ( ($generated@@147 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@71)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@66) (= (type $generated@@616) $generated@@66)) (and (= ($generated@@74 ($generated@@155 $generated@@615 $generated@@616)) $generated@@63) (= ($generated@@613 ($generated@@155 $generated@@615 $generated@@616)) $generated@@65)))
 :pattern ( ($generated@@155 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 Int) ($generated@@618 Int) ) (! (= ($generated@@292 $generated@@617 $generated@@618) (* $generated@@617 $generated@@618))
 :pattern ( ($generated@@292 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@156) (= ($generated@@583 ($generated@@291 $generated@@619)) ($generated@@584 $generated@@619)))
 :pattern ( ($generated@@583 ($generated@@291 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@137) ($generated@@231 $generated@@620 ($generated@@77 0))) (and (= ($generated@@291 ($generated@@368 $generated@@2 $generated@@620)) $generated@@620) ($generated@@139 ($generated@@368 ($generated@@78 $generated@@137 $generated@@4) $generated@@620) ($generated@@77 0))))
 :pattern ( ($generated@@231 $generated@@620 ($generated@@77 0)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@137) (= (type $generated@@622) $generated@@66)) ($generated@@231 $generated@@621 ($generated@@140 $generated@@622))) (and (= ($generated@@291 ($generated@@368 ($generated@@78 $generated@@137 $generated@@4) $generated@@621)) $generated@@621) ($generated@@139 ($generated@@368 ($generated@@78 $generated@@137 $generated@@4) $generated@@621) ($generated@@140 $generated@@622))))
 :pattern ( ($generated@@231 $generated@@621 ($generated@@140 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@137) (= (type $generated@@624) $generated@@66)) ($generated@@231 $generated@@623 ($generated@@248 $generated@@624))) (and (= ($generated@@291 ($generated@@368 ($generated@@78 $generated@@137 $generated@@4) $generated@@623)) $generated@@623) ($generated@@139 ($generated@@368 ($generated@@78 $generated@@137 $generated@@4) $generated@@623) ($generated@@248 $generated@@624))))
 :pattern ( ($generated@@231 $generated@@623 ($generated@@248 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@137) (= (type $generated@@626) $generated@@66)) ($generated@@231 $generated@@625 ($generated@@169 $generated@@626))) (and (= ($generated@@291 ($generated@@368 ($generated@@78 $generated@@137 $generated@@2) $generated@@625)) $generated@@625) ($generated@@139 ($generated@@368 ($generated@@78 $generated@@137 $generated@@2) $generated@@625) ($generated@@169 $generated@@626))))
 :pattern ( ($generated@@231 $generated@@625 ($generated@@169 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@137) (= (type $generated@@628) $generated@@66)) ($generated@@231 $generated@@627 ($generated@@542 $generated@@628))) (and (= ($generated@@291 ($generated@@368 ($generated@@275 $generated@@137) $generated@@627)) $generated@@627) ($generated@@139 ($generated@@368 ($generated@@275 $generated@@137) $generated@@627) ($generated@@542 $generated@@628))))
 :pattern ( ($generated@@231 $generated@@627 ($generated@@542 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@81 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@78 $generated@@632 $generated@@4)) (= (type $generated@@631) ($generated@@78 $generated@@632 $generated@@4))) (= ($generated@@629 $generated@@630 $generated@@631) (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@632) ($generated@@0 ($generated@@83 $generated@@630 $generated@@633))) ($generated@@0 ($generated@@83 $generated@@631 $generated@@633)))
 :pattern ( ($generated@@83 $generated@@630 $generated@@633))
 :pattern ( ($generated@@83 $generated@@631 $generated@@633))
)))))
 :pattern ( ($generated@@629 $generated@@630 $generated@@631))
)))
(assert (= ($generated@@74 $generated@@150) $generated@@61))
(assert (= ($generated@@613 $generated@@150) $generated@@64))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@634 T@U) ($generated@@635 Int) ) (!  (=> (and (= (type $generated@@634) ($generated@@78 $generated@@137 $generated@@4)) (or ($generated@@355 $generated@@634 $generated@@635) (and (not (= 1 $generated@@134)) ($generated@@139 $generated@@634 ($generated@@140 $generated@@46))))) (and (and (forall (($generated@@636 Int) ) (!  (=> ($generated@@0 ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@636)))) ($generated@@146 $generated@@636))
 :pattern ( ($generated@@144 $generated@@636))
 :pattern ( ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@636))))
)) (=> (forall (($generated@@637 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@637)))) ($generated@@144 $generated@@637)))
 :pattern ( ($generated@@144 $generated@@637))
 :pattern ( ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@637))))
)) (forall (($generated@@638 Int) ) (! ($generated@@146 $generated@@638)
 :pattern ( ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@638))))
 :pattern ( ($generated@@144 $generated@@638))
)))) (= ($generated@@354 $generated@@634 $generated@@635)  (and (forall (($generated@@639 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@639)))) ($generated@@144 $generated@@639)))
 :pattern ( ($generated@@144 $generated@@639))
 :pattern ( ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@639))))
)) (forall (($generated@@640 Int) ) (!  (=> true (=> (and ($generated@@144 $generated@@640) (<= $generated@@640 $generated@@635)) ($generated@@0 ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@640))))))
 :pattern ( ($generated@@83 $generated@@634 ($generated@@291 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@144 $generated@@640))
))))))
 :pattern ( ($generated@@354 $generated@@634 $generated@@635))
))))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@642) $generated@@66)) (= (type $generated@@643) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@641 ($generated@@169 $generated@@642) $generated@@643) (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@137) (< 0 ($generated ($generated@@83 $generated@@641 $generated@@644)))) ($generated@@261 $generated@@644 $generated@@642 $generated@@643))
 :pattern ( ($generated@@83 $generated@@641 $generated@@644))
))))
 :pattern ( ($generated@@76 $generated@@641 ($generated@@169 $generated@@642) $generated@@643))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@645) $generated@@136) (= (type $generated@@646) ($generated@@78 $generated@@137 $generated@@4))) (or ($generated@@138 $generated@@646) (and (not (= 2 $generated@@134)) ($generated@@139 $generated@@646 ($generated@@140 $generated@@46))))) (and (=> (not ($generated@@283 $generated@@646 ($generated@@284 $generated@@137))) (and ($generated@@282 $generated@@646) (let (($generated@@647 ($generated@@281 $generated@@646)))
($generated@@138 ($generated@@289 $generated@@646 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@647)))))))) (= ($generated@@135 ($generated@@288 $generated@@645) $generated@@646) (ite ($generated@@283 $generated@@646 ($generated@@284 $generated@@137)) 1 (let (($generated@@648 ($generated@@281 $generated@@646)))
($generated@@292 $generated@@648 ($generated@@135 $generated@@645 ($generated@@289 $generated@@646 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@648)))))))))))
 :pattern ( ($generated@@135 ($generated@@288 $generated@@645) $generated@@646))
))))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@649 Int) ) (!  (=> (or ($generated@@146 $generated@@649) (not (= 0 $generated@@134))) (= ($generated@@144 $generated@@649)  (and (<= ($generated@@145 2) $generated@@649) (forall (($generated@@650 Int) ) (!  (=> true (=> (and (<= ($generated@@145 2) $generated@@650) (< $generated@@650 $generated@@649)) (not (= ($generated@@147 $generated@@649 $generated@@650) 0))))
 :pattern ( ($generated@@147 $generated@@649 $generated@@650))
)))))
 :pattern ( ($generated@@144 $generated@@649))
))))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@156) (= (type $generated@@652) $generated@@66)) (= (type $generated@@653) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@260 $generated@@653) (and ($generated@@154 $generated@@651) (exists (($generated@@654 T@U) ) (!  (and (= (type $generated@@654) $generated@@66) ($generated@@76 $generated@@651 ($generated@@155 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@76 $generated@@651 ($generated@@155 $generated@@652 $generated@@654) $generated@@653))
))))) ($generated@@261 ($generated@@163 $generated@@651) $generated@@652 $generated@@653))
 :pattern ( ($generated@@261 ($generated@@163 $generated@@651) $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@156) (= (type $generated@@656) $generated@@66)) (= (type $generated@@657) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@260 $generated@@657) (and ($generated@@154 $generated@@655) (exists (($generated@@658 T@U) ) (!  (and (= (type $generated@@658) $generated@@66) ($generated@@76 $generated@@655 ($generated@@155 $generated@@658 $generated@@656) $generated@@657))
 :pattern ( ($generated@@76 $generated@@655 ($generated@@155 $generated@@658 $generated@@656) $generated@@657))
))))) ($generated@@261 ($generated@@164 $generated@@655) $generated@@656 $generated@@657))
 :pattern ( ($generated@@261 ($generated@@164 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@137) (= (type $generated@@660) $generated@@137)) (= ($generated@@230 ($generated@@254 $generated@@659) ($generated@@254 $generated@@660)) ($generated@@254 ($generated@@230 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@230 ($generated@@254 $generated@@659) ($generated@@254 $generated@@660)))
)))
(assert (forall (($generated@@661 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@145 $generated@@661))) ($generated@@254 ($generated@@291 ($generated@@8 $generated@@661))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@145 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ) (! (= ($generated@@291 ($generated@@254 $generated@@662)) ($generated@@254 ($generated@@291 $generated@@662)))
 :pattern ( ($generated@@291 ($generated@@254 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@276 (type $generated@@663))))
 (=> (and (= (type $generated@@663) ($generated@@275 $generated@@664)) (= ($generated@@274 $generated@@663) 0)) (= $generated@@663 ($generated@@273 $generated@@664))))
 :pattern ( ($generated@@274 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (! (let (($generated@@668 (type $generated@@666)))
 (=> (and (and (= (type $generated@@665) ($generated@@78 $generated@@668 $generated@@2)) (= (type $generated@@667) $generated@@2)) (<= 0 ($generated $generated@@667))) (= ($generated@@308 ($generated@@84 $generated@@665 $generated@@666 $generated@@667)) (+ (- ($generated@@308 $generated@@665) ($generated ($generated@@83 $generated@@665 $generated@@666))) ($generated $generated@@667)))))
 :pattern ( ($generated@@308 ($generated@@84 $generated@@665 $generated@@666 $generated@@667)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (= (type $generated@@669) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@670) ($generated@@78 $generated@@137 $generated@@4))) (or ($generated@@282 ($generated@@254 $generated@@670)) (and (not (= 1 $generated@@134)) (and (and ($generated@@260 $generated@@669) ($generated@@139 $generated@@670 ($generated@@140 $generated@@46))) (not ($generated@@283 $generated@@670 ($generated@@284 $generated@@137))))))) (and ($generated@@315 ($generated@@254 $generated@@670)) (= ($generated@@281 ($generated@@254 $generated@@670)) (let (($generated@@671 ($generated@@314 ($generated@@254 $generated@@670))))
$generated@@671))))
 :weight 3
 :pattern ( ($generated@@281 ($generated@@254 $generated@@670)) ($generated@@260 $generated@@669))
))))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@673) $generated@@2)) ($generated@@76 $generated@@673 $generated@@46 $generated@@672))
 :pattern ( ($generated@@76 $generated@@673 $generated@@46 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@675) $generated@@3)) ($generated@@76 $generated@@675 $generated@@47 $generated@@674))
 :pattern ( ($generated@@76 $generated@@675 $generated@@47 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@677) $generated@@4)) ($generated@@76 $generated@@677 $generated@@44 $generated@@676))
 :pattern ( ($generated@@76 $generated@@677 $generated@@44 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@679) $generated@@492)) ($generated@@76 $generated@@679 $generated@@45 $generated@@678))
 :pattern ( ($generated@@76 $generated@@679 $generated@@45 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@681) $generated@@137)) ($generated@@76 $generated@@681 $generated@@48 $generated@@680))
 :pattern ( ($generated@@76 $generated@@681 $generated@@48 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@275 $generated@@137)) (= (type $generated@@683) $generated@@66)) (= ($generated@@139 $generated@@682 ($generated@@542 $generated@@683)) (forall (($generated@@684 Int) ) (!  (=> (and (<= 0 $generated@@684) (< $generated@@684 ($generated@@274 $generated@@682))) ($generated@@231 ($generated@@543 $generated@@682 $generated@@684) $generated@@683))
 :pattern ( ($generated@@543 $generated@@682 $generated@@684))
))))
 :pattern ( ($generated@@139 $generated@@682 ($generated@@542 $generated@@683)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 Int) ) (!  (=> (= (type $generated@@686) ($generated@@275 $generated@@137)) (=> (and (<= 0 $generated@@687) (< $generated@@687 ($generated@@274 $generated@@686))) (< ($generated@@584 ($generated@@368 $generated@@156 ($generated@@543 $generated@@686 $generated@@687))) ($generated@@685 $generated@@686))))
 :pattern ( ($generated@@584 ($generated@@368 $generated@@156 ($generated@@543 $generated@@686 $generated@@687))))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (and (= (type $generated@@688) ($generated@@320 $generated@@137 $generated@@137)) (= (type $generated@@689) $generated@@66)) (= (type $generated@@690) $generated@@66)) ($generated@@139 $generated@@688 ($generated@@437 $generated@@689 $generated@@690))) (and (and ($generated@@139 ($generated@@318 $generated@@688) ($generated@@140 $generated@@689)) ($generated@@139 ($generated@@376 $generated@@688) ($generated@@140 $generated@@690))) ($generated@@139 ($generated@@411 $generated@@688) ($generated@@140 ($generated@@155 $generated@@689 $generated@@690)))))
 :pattern ( ($generated@@139 $generated@@688 ($generated@@437 $generated@@689 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@691) ($generated@@338 $generated@@137 $generated@@137)) (= (type $generated@@692) $generated@@66)) (= (type $generated@@693) $generated@@66)) ($generated@@139 $generated@@691 ($generated@@445 $generated@@692 $generated@@693))) (and (and ($generated@@139 ($generated@@336 $generated@@691) ($generated@@248 $generated@@692)) ($generated@@139 ($generated@@387 $generated@@691) ($generated@@248 $generated@@693))) ($generated@@139 ($generated@@419 $generated@@691) ($generated@@248 ($generated@@155 $generated@@692 $generated@@693)))))
 :pattern ( ($generated@@139 $generated@@691 ($generated@@445 $generated@@692 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@2) ($generated@@139 $generated@@694 $generated@@46))
 :pattern ( ($generated@@139 $generated@@694 $generated@@46))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@3) ($generated@@139 $generated@@695 $generated@@47))
 :pattern ( ($generated@@139 $generated@@695 $generated@@47))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@4) ($generated@@139 $generated@@696 $generated@@44))
 :pattern ( ($generated@@139 $generated@@696 $generated@@44))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@492) ($generated@@139 $generated@@697 $generated@@45))
 :pattern ( ($generated@@139 $generated@@697 $generated@@45))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@137) ($generated@@139 $generated@@698 $generated@@48))
 :pattern ( ($generated@@139 $generated@@698 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 (T@U) Bool)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () Int)
(declare-fun $generated@@710 () Int)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@699) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@713) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@703) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@712) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@701) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@704) ($generated@@78 $generated@@137 $generated@@4))) (= (type $generated@@708) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@714) ($generated@@176 $generated@@79 $generated@@4))) (= (type $generated@@715) $generated@@79)) (= (type $generated@@716) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@717  (and (=> (= (ControlFlow 0 15) (- 0 24)) ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@700))))) (=> ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@700)))) (and (=> (= (ControlFlow 0 15) (- 0 23)) ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@700))))) (=> ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@700)))) (=> (and ($generated@@260 $generated@@701) ($generated@@702 $generated@@701)) (=> (and (and (and (and ($generated@@138 $generated@@699) ($generated@@138 ($generated@@289 $generated@@699 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@700)))))) (= ($generated@@135 ($generated@@288 ($generated@@288 $generated@@538)) $generated@@699) ($generated@@292 $generated@@700 ($generated@@135 ($generated@@288 ($generated@@288 $generated@@538)) ($generated@@289 $generated@@699 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@700)))))))) (and (= $generated@@703 $generated@@701) (= $generated@@704 ($generated@@289 $generated@@699 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@700))))))) (and (and ($generated@@76 $generated@@704 ($generated@@140 $generated@@46) $generated@@701) ($generated@@138 ($generated@@289 $generated@@699 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@700)))))) (and ($generated@@138 ($generated@@289 $generated@@699 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@700))))) (= $generated@@705 ($generated@@135 ($generated@@288 $generated@@538) ($generated@@289 $generated@@699 ($generated@@290 ($generated@@284 $generated@@137) ($generated@@291 ($generated@@8 $generated@@700))))))))) (and (=> (= (ControlFlow 0 15) (- 0 22)) (= ($generated@@292 $generated@@700 $generated@@705) $generated@@706)) (=> (= ($generated@@292 $generated@@700 $generated@@705) $generated@@706) (and (=> (= (ControlFlow 0 15) (- 0 21)) ($generated@@139 ($generated@@8 $generated@@700) $generated@@150)) (=> ($generated@@139 ($generated@@8 $generated@@700) $generated@@150) (and (=> (= (ControlFlow 0 15) (- 0 20)) ($generated@@139 ($generated@@8 $generated@@705) $generated@@150)) (=> ($generated@@139 ($generated@@8 $generated@@705) $generated@@150) (and (=> (= (ControlFlow 0 15) (- 0 19)) ($generated@@139 ($generated@@8 $generated@@706) $generated@@150)) (=> ($generated@@139 ($generated@@8 $generated@@706) $generated@@150) (and (=> (= (ControlFlow 0 15) (- 0 18)) ($generated@@139 ($generated@@8 ($generated@@145 1)) $generated@@150)) (=> ($generated@@139 ($generated@@8 ($generated@@145 1)) $generated@@150) (=> (= $generated@@707 ($generated@@145 1)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (= ($generated@@292 $generated@@700 $generated@@705) $generated@@706)) (=> (= ($generated@@292 $generated@@700 $generated@@705) $generated@@706) (and (=> (= (ControlFlow 0 15) (- 0 16)) (< $generated@@707 $generated@@700)) (=> (< $generated@@707 $generated@@700) (=> (and (and (and ($generated@@260 $generated@@708) ($generated@@702 $generated@@708)) (= ($generated@@147 (+ $generated@@706 $generated@@707) $generated@@700) $generated@@707)) (and (= $generated@@701 $generated@@708) (= (ControlFlow 0 15) (- 0 14)))) (not (= ($generated@@147 $generated@@709 $generated@@700) 0))))))))))))))))))))))))))
(let (($generated@@718  (=> (= (ControlFlow 0 13) (- 0 12)) (not (= $generated@@700 0)))))
(let (($generated@@719  (=> (=> (and (<= ($generated@@145 2) $generated@@700) (<= $generated@@700 $generated@@706)) ($generated@@146 $generated@@700)) (=> (and (and (<= ($generated@@145 2) $generated@@700) (<= $generated@@700 $generated@@706)) ($generated@@144 $generated@@700)) (and (=> (= (ControlFlow 0 25) 13) $generated@@718) (=> (= (ControlFlow 0 25) 15) $generated@@717))))))
(let (($generated@@720  (=> (and (not (and (<= ($generated@@145 2) $generated@@700) (<= $generated@@700 $generated@@706))) (= (ControlFlow 0 27) 25)) $generated@@719)))
(let (($generated@@721  (=> (and (and (and (<= ($generated@@145 2) $generated@@700) (<= $generated@@700 $generated@@706)) ($generated@@76 ($generated@@8 $generated@@700) $generated@@46 $generated@@703)) (and ($generated@@146 $generated@@700) (= (ControlFlow 0 26) 25))) $generated@@719)))
(let (($generated@@722  (=> (< $generated@@700 ($generated@@145 2)) (and (=> (= (ControlFlow 0 29) 26) $generated@@721) (=> (= (ControlFlow 0 29) 27) $generated@@720)))))
(let (($generated@@723  (=> (<= ($generated@@145 2) $generated@@700) (and (=> (= (ControlFlow 0 28) 26) $generated@@721) (=> (= (ControlFlow 0 28) 27) $generated@@720)))))
(let (($generated@@724  (and (=> (= (ControlFlow 0 30) 28) $generated@@723) (=> (= (ControlFlow 0 30) 29) $generated@@722))))
(let (($generated@@725  (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@146 (+ $generated@@706 1)) ($generated@@144 (+ $generated@@706 1))))))
(let (($generated@@726  (=> (forall (($generated@@727 Int) ) (!  (=> (and (and (<= ($generated@@145 2) $generated@@727) (<= $generated@@727 $generated@@706)) ($generated@@144 $generated@@727)) (not (= ($generated@@147 $generated@@709 $generated@@727) 0)))
 :pattern ( ($generated@@144 $generated@@727))
)) (=> (and (and (= $generated@@710 (+ $generated@@706 1)) ($generated@@76 ($generated@@8 $generated@@710) $generated@@46 $generated@@703)) (and ($generated@@241 (+ $generated@@706 1)) ($generated@@241 (+ $generated@@706 1)))) (and (=> (= (ControlFlow 0 7) (- 0 11)) (=> ($generated@@241 (+ $generated@@706 1)) (or ($generated@@240 (+ $generated@@706 1)) (<= ($generated@@145 2) (+ $generated@@706 1))))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (=> ($generated@@241 (+ $generated@@706 1)) (or ($generated@@240 (+ $generated@@706 1)) (forall (($generated@@728 Int) ) (!  (=> true (=> (and (and (<= ($generated@@145 2) $generated@@728) (< $generated@@728 (+ $generated@@706 1))) ($generated@@144 $generated@@728)) (not (= ($generated@@147 (+ $generated@@706 1) $generated@@728) 0))))
 :pattern ( ($generated@@144 $generated@@728))
))))) (=> (and ($generated@@240 (+ $generated@@706 1)) (= $generated@@711 (+ $generated@@706 1))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> ($generated@@241 $generated@@711) (or ($generated@@240 $generated@@711) (<= ($generated@@145 2) $generated@@711)))) (=> (=> ($generated@@241 $generated@@711) (or ($generated@@240 $generated@@711) (<= ($generated@@145 2) $generated@@711))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@241 $generated@@711) (or ($generated@@240 $generated@@711) (forall (($generated@@729 Int) ) (!  (=> true (=> (and (and (<= ($generated@@145 2) $generated@@729) (< $generated@@729 $generated@@711)) ($generated@@144 $generated@@729)) (not (= ($generated@@147 $generated@@711 $generated@@729) 0))))
 :pattern ( ($generated@@144 $generated@@729))
))))) (=> (=> ($generated@@241 $generated@@711) (or ($generated@@240 $generated@@711) (forall (($generated@@730 Int) ) (!  (=> true (=> (and (and (<= ($generated@@145 2) $generated@@730) (< $generated@@730 $generated@@711)) ($generated@@144 $generated@@730)) (not (= ($generated@@147 $generated@@711 $generated@@730) 0))))
 :pattern ( ($generated@@144 $generated@@730))
)))) (=> (and (and (and ($generated@@260 $generated@@712) ($generated@@702 $generated@@712)) ($generated@@146 $generated@@711)) (and (and ($generated@@146 $generated@@711) (and ($generated@@144 $generated@@711) (and (<= ($generated@@145 2) $generated@@711) (forall (($generated@@731 Int) ) (!  (=> true (=> (and (<= ($generated@@145 2) $generated@@731) (< $generated@@731 $generated@@711)) (not (= ($generated@@147 $generated@@711 $generated@@731) 0))))
 :pattern ( ($generated@@147 $generated@@711 $generated@@731))
))))) (and (= $generated@@703 $generated@@712) (= (ControlFlow 0 7) 6)))) $generated@@725))))))))))))
(let (($generated@@732  (=> (=> true (<= ($generated@@145 2) $generated@@709)) (and (=> (= (ControlFlow 0 31) 30) $generated@@724) (=> (= (ControlFlow 0 31) 7) $generated@@726)))))
(let (($generated@@733  (and (=> (= (ControlFlow 0 3) (- 0 4)) (forall (($generated@@734 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@734)))) (<= ($generated@@145 1) $generated@@734)))
 :pattern ( ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@734))))
))) (=> (forall (($generated@@735 T@U) ) (!  (=> (and (and (= (type $generated@@735) $generated@@2) true) ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 $generated@@735)))) (<= ($generated@@145 1) ($generated $generated@@735)))
 :pattern ( ($generated@@83 $generated@@699 ($generated@@291 $generated@@735)))
)) (=> (and ($generated@@260 $generated@@713) ($generated@@702 $generated@@713)) (=> (and (and (and ($generated@@138 $generated@@699) (=> (<= ($generated@@145 1) ($generated@@135 ($generated@@288 $generated@@538) $generated@@699)) (forall (($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@736) $generated@@2) ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 $generated@@736)))) ($generated@@138 $generated@@699))
 :pattern ( ($generated@@83 $generated@@699 ($generated@@291 $generated@@736)))
)))) (and (<= ($generated@@145 1) ($generated@@135 ($generated@@288 ($generated@@288 $generated@@538)) $generated@@699)) (forall (($generated@@737 T@U) ) (!  (=> (and (and (= (type $generated@@737) $generated@@2) true) ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 $generated@@737)))) (<= ($generated $generated@@737) ($generated@@135 ($generated@@288 $generated@@538) $generated@@699)))
 :pattern ( ($generated@@83 $generated@@699 ($generated@@291 $generated@@737)))
)))) (and (and (= $generated@@703 $generated@@713) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@254 ($generated@@11 true))))) (<= ($generated@@145 2) $generated@@709)))))))
(let (($generated@@738 true))
(let (($generated@@739  (=> (= $generated@@714 ($generated@@175 $generated@@715 $generated@@716 $generated@@60 false)) (=> (and (and (and ($generated@@260 $generated@@703) ($generated@@702 $generated@@703)) (= $generated@@716 $generated@@703)) (and (forall (($generated@@740 T@U) ) (!  (=> (= (type $generated@@740) ($generated@@78 $generated@@137 $generated@@4)) (=> (and (and ($generated@@139 $generated@@740 ($generated@@140 $generated@@46)) (and ($generated@@354 $generated@@740 $generated@@706) (= $generated@@706 ($generated@@135 ($generated@@288 $generated@@538) $generated@@740)))) (or (and ($generated@@629 $generated@@740 $generated@@699) (not ($generated@@629 $generated@@699 $generated@@740))) (and ($generated@@283 $generated@@740 $generated@@699) (and (<= 0 $generated@@706) (< $generated@@706 $generated@@706))))) ($generated@@144 (+ $generated@@706 1))))
 :no-pattern (type $generated@@740)
 :no-pattern ($generated $generated@@740)
 :no-pattern ($generated@@0 $generated@@740)
)) (= $generated@@709 (+ $generated@@706 1)))) (and (and (=> (= (ControlFlow 0 32) 1) $generated@@738) (=> (= (ControlFlow 0 32) 3) $generated@@733)) (=> (= (ControlFlow 0 32) 31) $generated@@732))))))
(let (($generated@@741  (=> (and ($generated@@260 $generated@@716) ($generated@@702 $generated@@716)) (=> (and (and (and ($generated@@139 $generated@@699 ($generated@@140 $generated@@46)) ($generated@@76 $generated@@699 ($generated@@140 $generated@@46) $generated@@716)) (= 4 $generated@@134)) (and (and ($generated@@355 $generated@@699 $generated@@706) (and ($generated@@354 $generated@@699 $generated@@706) (and (forall (($generated@@742 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@742)))) ($generated@@144 $generated@@742)))
 :pattern ( ($generated@@144 $generated@@742))
 :pattern ( ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@742))))
)) (forall (($generated@@743 Int) ) (!  (=> true (=> (and ($generated@@144 $generated@@743) (<= $generated@@743 $generated@@706)) ($generated@@0 ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@743))))))
 :pattern ( ($generated@@83 $generated@@699 ($generated@@291 ($generated@@8 $generated@@743))))
 :pattern ( ($generated@@144 $generated@@743))
))))) (and (= $generated@@706 ($generated@@135 ($generated@@288 ($generated@@288 $generated@@538)) $generated@@699)) (= (ControlFlow 0 33) 32)))) $generated@@739))))
$generated@@741))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (Int) Int)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@257 (T@U) Int)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@274 (Int Int) Int)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 () T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@517 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@594 (T@U T@U) Bool)
(declare-fun $generated@@641 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@138 $generated@@139)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 $generated@@141) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@141 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@137 $generated@@142 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@142 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 16) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@137 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@137 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@135)
 :pattern ( ($generated@@152 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@135)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@145) (= (type $generated@@157) $generated@@145)) true) (= ($generated@@151 $generated@@156 $generated@@157)  (and (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)) (= ($generated@@153 $generated@@156) ($generated@@153 $generated@@157)))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@162) $generated@@64)) ($generated@@137 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@137 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 17)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@77 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@67 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@77) (= (type $generated@@213) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@214) ($generated@@66 $generated@@4))) (= (type $generated@@216) $generated@@77)) (= (type $generated@@217) ($generated@@66 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@145)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@64) (= (type $generated@@224) $generated@@64)) (= (type $generated@@225) $generated@@135)) (= (type $generated@@226) $generated@@135)) (= ($generated@@137 ($generated@@219 $generated@@225 $generated@@226) ($generated@@144 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@137 ($generated@@219 $generated@@225 $generated@@226) ($generated@@144 $generated@@223 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@145) (= (type $generated@@228) $generated@@145)) (= ($generated@@151 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@151 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@230) $generated@@64)) (= ($generated@@137 $generated@@229 ($generated@@138 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@135) ($generated@@0 ($generated@@81 $generated@@229 $generated@@231))) ($generated@@220 $generated@@231 $generated@@230))
 :pattern ( ($generated@@81 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@137 $generated@@229 ($generated@@138 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@64)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@235) $generated@@64)) (= ($generated@@137 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@135) ($generated@@0 ($generated@@81 $generated@@234 $generated@@236))) ($generated@@220 $generated@@236 $generated@@235))
 :pattern ( ($generated@@81 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@137 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 Int) ) (! (= ($generated@@237 $generated@@238) $generated@@238)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= ($generated@@239 $generated@@242) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) $generated@@64) (= (type $generated@@246) $generated@@64)) (= (type $generated@@247) $generated@@135)) (= (type $generated@@248) $generated@@135)) (= (type $generated@@249) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@243 $generated@@249)) (= ($generated@@74 ($generated@@219 $generated@@247 $generated@@248) ($generated@@144 $generated@@245 $generated@@246) $generated@@249)  (and ($generated@@244 $generated@@247 $generated@@245 $generated@@249) ($generated@@244 $generated@@248 $generated@@246 $generated@@249))))
 :pattern ( ($generated@@74 ($generated@@219 $generated@@247 $generated@@248) ($generated@@144 $generated@@245 $generated@@246) $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@145) (= ($generated@@143 $generated@@252) (= ($generated@@250 $generated@@252) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@145) ($generated@@143 $generated@@253)) (exists (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (and (and (= (type $generated@@254) $generated@@135) (= (type $generated@@255) $generated@@135)) (= $generated@@253 ($generated@@219 $generated@@254 $generated@@255)))
 :no-pattern (type $generated@@254)
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
)))
 :pattern ( ($generated@@143 $generated@@253))
)))
(assert  (and (and (forall (($generated@@260 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@260)) 18)) (forall (($generated@@261 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
))) (forall (($generated@@262 T@T) ) (! (= (type ($generated@@256 $generated@@262)) ($generated@@258 $generated@@262))
 :pattern ( ($generated@@256 $generated@@262))
))))
(assert (forall (($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@263)) 0)
 :pattern ( ($generated@@256 $generated@@263))
)))
(assert (forall (($generated@@268 T@T) ) (! (= (type ($generated@@267 $generated@@268)) ($generated@@76 $generated@@268 $generated@@4))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@76 $generated@@135 $generated@@4)) (or ($generated@@265 $generated@@269) (and (not (= 1 $generated@@132)) (and ($generated@@137 $generated@@269 ($generated@@138 $generated@@46)) (not ($generated@@266 $generated@@269 ($generated@@267 $generated@@135))))))) true)
 :pattern ( ($generated@@264 $generated@@269))
))))
(assert  (and (and (and (forall (($generated@@275 T@U) ) (! (= (type ($generated@@270 $generated@@275)) $generated@@134)
 :pattern ( ($generated@@270 $generated@@275))
)) (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@79 (type $generated@@276))))
(= (type ($generated@@271 $generated@@276 $generated@@277)) ($generated@@76 $generated@@278 $generated@@4)))
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@272 $generated@@279 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@279 $generated@@280))
))) (forall (($generated@@282 T@U) ) (! (= (type ($generated@@273 $generated@@282)) $generated@@135)
 :pattern ( ($generated@@273 $generated@@282))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@134) (= (type $generated@@284) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 ($generated@@239 $generated@@284)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@284 ($generated@@138 $generated@@46))))) (and (=> (not ($generated@@266 $generated@@284 ($generated@@267 $generated@@135))) (and ($generated@@265 ($generated@@239 $generated@@284)) (let (($generated@@285 ($generated@@237 ($generated@@264 ($generated@@239 $generated@@284)))))
($generated@@136 ($generated@@271 $generated@@284 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@285)))))))) (= ($generated@@133 ($generated@@270 $generated@@283) ($generated@@239 $generated@@284)) (ite ($generated@@266 $generated@@284 ($generated@@267 $generated@@135)) 1 (let (($generated@@286 ($generated@@237 ($generated@@264 ($generated@@239 $generated@@284)))))
($generated@@274 $generated@@286 ($generated@@133 ($generated@@270 $generated@@283) ($generated@@271 $generated@@284 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@286)))))))))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@270 $generated@@283) ($generated@@239 $generated@@284)))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@64) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@244 ($generated@@273 $generated@@287) $generated@@288 $generated@@289) ($generated@@74 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@244 ($generated@@273 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@76 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@79 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@76 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@81 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@76 $generated@@135 $generated@@4)) ($generated@@297 $generated@@298)) (and ($generated@@0 ($generated@@81 $generated@@298 ($generated@@273 ($generated@@8 ($generated@@296 $generated@@298))))) (forall (($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@299) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@298 ($generated@@273 $generated@@299)))) (<= ($generated $generated@@299) ($generated@@296 $generated@@298)))
 :pattern ( ($generated@@81 $generated@@298 ($generated@@273 $generated@@299)))
))))
 :pattern ( ($generated@@296 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 20)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@79 (type $generated@@336))))
 (=> (and (= (type $generated@@336) ($generated@@76 $generated@@338 $generated@@4)) (= (type $generated@@337) ($generated@@76 $generated@@338 $generated@@4))) (= ($generated@@266 $generated@@336 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (= ($generated@@0 ($generated@@81 $generated@@336 $generated@@339)) ($generated@@0 ($generated@@81 $generated@@337 $generated@@339))))
 :pattern ( ($generated@@81 $generated@@336 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@266 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@2)) (= ($generated@@159 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@81 $generated@@340 $generated@@342))) (<= ($generated ($generated@@81 $generated@@340 $generated@@342)) ($generated@@290 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@159 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(let (($generated@@345 ($generated@@303 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@302 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@301 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@300 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@304 (type $generated@@350))))
(let (($generated@@352 ($generated@@303 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@302 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@301 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@322 (type $generated@@354))))
(let (($generated@@356 ($generated@@321 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@320 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@319 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@318 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@76 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(let (($generated@@363 ($generated@@321 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@320 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@319 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@366) $generated@@64)) (= ($generated@@137 $generated@@365 ($generated@@158 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))) ($generated@@220 $generated@@367 $generated@@366))
 :pattern ( ($generated@@81 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@137 $generated@@365 ($generated@@158 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
 (=> (and (= (type $generated@@368) ($generated@@76 $generated@@371 $generated@@4)) (= (type $generated@@369) ($generated@@76 $generated@@371 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@271 $generated@@368 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 $generated@@368 $generated@@370)) (not ($generated@@0 ($generated@@81 $generated@@369 $generated@@370)))))))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@138 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@135) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@244 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@138 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@376 ($generated@@232 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@135) ($generated@@0 ($generated@@81 $generated@@376 $generated@@379))) ($generated@@244 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@376 ($generated@@232 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@81 ($generated@@291 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@81 ($generated@@291 $generated@@381) $generated@@380)))
)))
(assert  (and (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@382 $generated@@385)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@382 $generated@@385))
)) (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@383 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@383 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@304 (type $generated@@388))))
(let (($generated@@390 ($generated@@303 (type $generated@@388))))
(= (type ($generated@@384 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@384 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@302 $generated@@135 $generated@@135)) (= (type $generated@@392) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@391) ($generated@@152 ($generated@@383 $generated@@145 $generated@@392)))) (= ($generated@@81 ($generated@@384 $generated@@391) ($generated@@152 ($generated@@383 $generated@@145 $generated@@392))) ($generated@@153 ($generated@@383 $generated@@145 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@322 (type $generated@@396))))
(let (($generated@@398 ($generated@@321 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@320 $generated@@135 $generated@@135)) (= (type $generated@@400) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@399) ($generated@@152 ($generated@@383 $generated@@145 $generated@@400)))) (= ($generated@@81 ($generated@@394 $generated@@399) ($generated@@152 ($generated@@383 $generated@@145 $generated@@400))) ($generated@@153 ($generated@@383 $generated@@145 $generated@@400))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@303 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@302 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@321 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@320 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@302 $generated@@135 $generated@@135)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@414) $generated@@418))) (and ($generated@@244 ($generated@@81 ($generated@@384 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@244 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@320 $generated@@135 $generated@@135)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@422) $generated@@426))) (and ($generated@@244 ($generated@@81 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@244 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@79 (type $generated@@427))))
 (=> (and (and (= (type $generated@@427) ($generated@@76 $generated@@429 $generated@@4)) (= (type $generated@@428) ($generated@@76 $generated@@429 $generated@@4))) ($generated@@266 $generated@@427 $generated@@428)) (= $generated@@427 $generated@@428)))
 :pattern ( ($generated@@266 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@431)))
 (=> (and (and (= (type $generated@@430) ($generated@@76 $generated@@433 $generated@@4)) (= (type $generated@@432) $generated@@433)) ($generated@@0 ($generated@@81 $generated@@430 $generated@@432))) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@430 $generated@@431) $generated@@432))))
 :pattern ( ($generated@@272 $generated@@430 $generated@@431) ($generated@@81 $generated@@430 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@435)))
 (=> (and (= (type $generated@@434) ($generated@@76 $generated@@437 $generated@@4)) (= (type $generated@@436) $generated@@437)) (= ($generated@@0 ($generated@@81 ($generated@@272 $generated@@434 $generated@@435) $generated@@436))  (or (= $generated@@436 $generated@@435) ($generated@@0 ($generated@@81 $generated@@434 $generated@@436))))))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
 (=> (and (and (= (type $generated@@438) ($generated@@76 $generated@@441 $generated@@4)) (= (type $generated@@439) ($generated@@76 $generated@@441 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@439 $generated@@440))) (not ($generated@@0 ($generated@@81 ($generated@@271 $generated@@438 $generated@@439) $generated@@440)))))
 :pattern ( ($generated@@271 $generated@@438 $generated@@439) ($generated@@81 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@76 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@322 (type $generated@@444))))
(let (($generated@@446 ($generated@@321 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@320 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@319 $generated@@446 $generated@@445)) (= ($generated@@318 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@318 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (= ($generated@@358 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@358 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@322 (type $generated@@450))))
(let (($generated@@452 ($generated@@321 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@320 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@319 $generated@@452 $generated@@451)) (= ($generated@@393 $generated@@450) ($generated@@442 $generated@@135))))))
 :pattern ( ($generated@@393 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@304 (type $generated@@453))))
(let (($generated@@455 ($generated@@303 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@302 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@301 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@135) (= (type $generated@@457) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@453) ($generated@@273 ($generated@@219 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@382 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@322 (type $generated@@458))))
(let (($generated@@460 ($generated@@321 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@320 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@319 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@135) (= (type $generated@@462) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@458) ($generated@@273 ($generated@@219 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@393 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@135) ($generated@@220 $generated@@463 $generated@@46)) (and (= ($generated@@273 ($generated@@383 $generated@@2 $generated@@463)) $generated@@463) ($generated@@137 ($generated@@383 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@135) ($generated@@220 $generated@@464 $generated@@47)) (and (= ($generated@@273 ($generated@@383 $generated@@3 $generated@@464)) $generated@@464) ($generated@@137 ($generated@@383 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@135) ($generated@@220 $generated@@465 $generated@@44)) (and (= ($generated@@273 ($generated@@383 $generated@@4 $generated@@465)) $generated@@465) ($generated@@137 ($generated@@383 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 21))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@135) ($generated@@220 $generated@@467 $generated@@45)) (and (= ($generated@@273 ($generated@@383 $generated@@466 $generated@@467)) $generated@@467) ($generated@@137 ($generated@@383 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@64) (= ($generated@@220 ($generated@@273 $generated@@468) $generated@@469) ($generated@@137 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@220 ($generated@@273 $generated@@468) $generated@@469))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@471) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@265 $generated@@471) (and (not (= 1 $generated@@132)) (and (and ($generated@@243 $generated@@470) ($generated@@137 $generated@@471 ($generated@@138 $generated@@46))) (not ($generated@@266 $generated@@471 ($generated@@267 $generated@@135))))))) (and ($generated@@297 $generated@@471) (= ($generated@@264 $generated@@471) (let (($generated@@472 ($generated@@296 $generated@@471)))
$generated@@472))))
 :pattern ( ($generated@@264 $generated@@471) ($generated@@243 $generated@@470))
))))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@79 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@76 $generated@@474 $generated@@2)) (<= 0 ($generated@@290 $generated@@473))))
 :pattern ( ($generated@@290 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@259 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@258 $generated@@476)) (<= 0 ($generated@@257 $generated@@475))))
 :pattern ( ($generated@@257 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@411 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@411 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@411 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@411 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@419 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@419 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@419 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@419 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@72 ($generated@@419 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@135) (= (type $generated@@498) $generated@@135)) (= ($generated@@250 ($generated@@219 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@219 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@144 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@144 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@503 ($generated@@144 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@144 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@135) (= (type $generated@@508) $generated@@135)) (= ($generated@@152 ($generated@@219 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@219 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@135) (= (type $generated@@510) $generated@@135)) (= ($generated@@153 ($generated@@219 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@219 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@134)
 :pattern ( ($generated@@511 $generated@@513))
)) (= (type $generated@@512) $generated@@134)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@134) (= (type $generated@@515) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@133 $generated@@514 $generated@@515) ($generated@@133 $generated@@512 $generated@@515)))
 :pattern ( ($generated@@133 ($generated@@511 $generated@@514) $generated@@515))
)))
(assert  (and (forall (($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@518))
)) (forall (($generated@@519 T@U) ($generated@@520 Int) ) (! (let (($generated@@521 ($generated@@259 (type $generated@@519))))
(= (type ($generated@@517 $generated@@519 $generated@@520)) $generated@@521))
 :pattern ( ($generated@@517 $generated@@519 $generated@@520))
))))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@258 $generated@@135)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@522 ($generated@@516 $generated@@523) $generated@@524) (forall (($generated@@525 Int) ) (!  (=> (and (<= 0 $generated@@525) (< $generated@@525 ($generated@@257 $generated@@522))) ($generated@@244 ($generated@@517 $generated@@522 $generated@@525) $generated@@523 $generated@@524))
 :pattern ( ($generated@@517 $generated@@522 $generated@@525))
))))
 :pattern ( ($generated@@74 $generated@@522 ($generated@@516 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (=> (= (type $generated@@526) ($generated@@76 $generated@@528 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@272 $generated@@526 $generated@@527) $generated@@527))))
 :pattern ( ($generated@@272 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@75 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@75 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@138 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@138 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@138 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@535 ($generated@@232 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@232 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@72 ($generated@@232 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@232 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@539 ($generated@@158 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@158 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@64) (= ($generated@@72 ($generated@@158 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@64)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@64) (= ($generated@@543 ($generated@@516 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@516 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@72 ($generated@@516 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@516 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@383 $generated@@548 ($generated@@273 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@273 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@302 $generated@@135 $generated@@135)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) (= ($generated@@137 $generated@@549 ($generated@@411 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@549) $generated@@552))) (and ($generated@@220 ($generated@@81 ($generated@@384 $generated@@549) $generated@@552) $generated@@551) ($generated@@220 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@549) $generated@@552))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@137 $generated@@549 ($generated@@411 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@320 $generated@@135 $generated@@135)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) $generated@@64)) (= ($generated@@137 $generated@@553 ($generated@@419 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@553) $generated@@556))) (and ($generated@@220 ($generated@@81 ($generated@@394 $generated@@553) $generated@@556) $generated@@555) ($generated@@220 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@553) $generated@@556))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@137 $generated@@553 ($generated@@419 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@135) (= (type $generated@@560) $generated@@135)) (< ($generated@@557 $generated@@559) ($generated@@558 ($generated@@219 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@219 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@135) (= (type $generated@@562) $generated@@135)) (< ($generated@@557 $generated@@562) ($generated@@558 ($generated@@219 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@219 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@134) (= (type $generated@@564) ($generated@@76 $generated@@135 $generated@@4))) (= ($generated@@133 ($generated@@270 $generated@@563) $generated@@564) ($generated@@133 $generated@@563 $generated@@564)))
 :pattern ( ($generated@@133 ($generated@@270 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@135) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) $generated@@64)) ($generated@@220 $generated@@565 ($generated@@411 $generated@@566 $generated@@567))) (and (= ($generated@@273 ($generated@@383 ($generated@@302 $generated@@135 $generated@@135) $generated@@565)) $generated@@565) ($generated@@137 ($generated@@383 ($generated@@302 $generated@@135 $generated@@135) $generated@@565) ($generated@@411 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@220 $generated@@565 ($generated@@411 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@135) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) ($generated@@220 $generated@@568 ($generated@@419 $generated@@569 $generated@@570))) (and (= ($generated@@273 ($generated@@383 ($generated@@320 $generated@@135 $generated@@135) $generated@@568)) $generated@@568) ($generated@@137 ($generated@@383 ($generated@@320 $generated@@135 $generated@@135) $generated@@568) ($generated@@419 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@220 $generated@@568 ($generated@@419 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@64) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@135)) ($generated@@220 $generated@@573 ($generated@@144 $generated@@571 $generated@@572))) (and (= ($generated@@273 ($generated@@383 $generated@@145 $generated@@573)) $generated@@573) ($generated@@137 ($generated@@383 $generated@@145 $generated@@573) ($generated@@144 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@220 $generated@@573 ($generated@@144 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 $generated@@575) $generated@@574))))
 :pattern ( (let (($generated@@575 (type $generated@@574)))
($generated@@81 ($generated@@267 $generated@@575) $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@81 ($generated@@442 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@81 ($generated@@442 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@69)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@64) (= (type $generated@@581) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@580 $generated@@581)) $generated@@62) (= ($generated@@578 ($generated@@144 $generated@@580 $generated@@581)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 Int) ($generated@@583 Int) ) (! (= ($generated@@274 $generated@@582 $generated@@583) (* $generated@@582 $generated@@583))
 :pattern ( ($generated@@274 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@145) (= ($generated@@557 ($generated@@273 $generated@@584)) ($generated@@558 $generated@@584)))
 :pattern ( ($generated@@557 ($generated@@273 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@135) ($generated@@220 $generated@@585 ($generated@@75 0))) (and (= ($generated@@273 ($generated@@383 $generated@@2 $generated@@585)) $generated@@585) ($generated@@137 ($generated@@383 ($generated@@76 $generated@@135 $generated@@4) $generated@@585) ($generated@@75 0))))
 :pattern ( ($generated@@220 $generated@@585 ($generated@@75 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@135) (= (type $generated@@587) $generated@@64)) ($generated@@220 $generated@@586 ($generated@@138 $generated@@587))) (and (= ($generated@@273 ($generated@@383 ($generated@@76 $generated@@135 $generated@@4) $generated@@586)) $generated@@586) ($generated@@137 ($generated@@383 ($generated@@76 $generated@@135 $generated@@4) $generated@@586) ($generated@@138 $generated@@587))))
 :pattern ( ($generated@@220 $generated@@586 ($generated@@138 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@135) (= (type $generated@@589) $generated@@64)) ($generated@@220 $generated@@588 ($generated@@232 $generated@@589))) (and (= ($generated@@273 ($generated@@383 ($generated@@76 $generated@@135 $generated@@4) $generated@@588)) $generated@@588) ($generated@@137 ($generated@@383 ($generated@@76 $generated@@135 $generated@@4) $generated@@588) ($generated@@232 $generated@@589))))
 :pattern ( ($generated@@220 $generated@@588 ($generated@@232 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@135) (= (type $generated@@591) $generated@@64)) ($generated@@220 $generated@@590 ($generated@@158 $generated@@591))) (and (= ($generated@@273 ($generated@@383 ($generated@@76 $generated@@135 $generated@@2) $generated@@590)) $generated@@590) ($generated@@137 ($generated@@383 ($generated@@76 $generated@@135 $generated@@2) $generated@@590) ($generated@@158 $generated@@591))))
 :pattern ( ($generated@@220 $generated@@590 ($generated@@158 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@135) (= (type $generated@@593) $generated@@64)) ($generated@@220 $generated@@592 ($generated@@516 $generated@@593))) (and (= ($generated@@273 ($generated@@383 ($generated@@258 $generated@@135) $generated@@592)) $generated@@592) ($generated@@137 ($generated@@383 ($generated@@258 $generated@@135) $generated@@592) ($generated@@516 $generated@@593))))
 :pattern ( ($generated@@220 $generated@@592 ($generated@@516 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@79 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@76 $generated@@597 $generated@@4)) (= (type $generated@@596) ($generated@@76 $generated@@597 $generated@@4))) (= ($generated@@594 $generated@@595 $generated@@596) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@597) ($generated@@0 ($generated@@81 $generated@@595 $generated@@598))) ($generated@@0 ($generated@@81 $generated@@596 $generated@@598)))
 :pattern ( ($generated@@81 $generated@@595 $generated@@598))
 :pattern ( ($generated@@81 $generated@@596 $generated@@598))
)))))
 :pattern ( ($generated@@594 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@599 ($generated@@158 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@599 $generated@@602)))) ($generated@@244 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@81 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@74 $generated@@599 ($generated@@158 $generated@@600) $generated@@601))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@134) (= (type $generated@@604) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@136 $generated@@604) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@604 ($generated@@138 $generated@@46))))) (and (=> (not ($generated@@266 $generated@@604 ($generated@@267 $generated@@135))) (and ($generated@@265 $generated@@604) (let (($generated@@605 ($generated@@264 $generated@@604)))
($generated@@136 ($generated@@271 $generated@@604 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@605)))))))) (= ($generated@@133 ($generated@@270 $generated@@603) $generated@@604) (ite ($generated@@266 $generated@@604 ($generated@@267 $generated@@135)) 1 (let (($generated@@606 ($generated@@264 $generated@@604)))
($generated@@274 $generated@@606 ($generated@@133 $generated@@603 ($generated@@271 $generated@@604 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@606)))))))))))
 :pattern ( ($generated@@133 ($generated@@270 $generated@@603) $generated@@604))
))))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@145) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@243 $generated@@609) (and ($generated@@143 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@64) ($generated@@74 $generated@@607 ($generated@@144 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@74 $generated@@607 ($generated@@144 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@244 ($generated@@152 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@244 ($generated@@152 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@145) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@243 $generated@@613) (and ($generated@@143 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@64) ($generated@@74 $generated@@611 ($generated@@144 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@74 $generated@@611 ($generated@@144 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@244 ($generated@@153 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@244 ($generated@@153 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@135) (= (type $generated@@616) $generated@@135)) (= ($generated@@219 ($generated@@239 $generated@@615) ($generated@@239 $generated@@616)) ($generated@@239 ($generated@@219 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@219 ($generated@@239 $generated@@615) ($generated@@239 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@237 $generated@@617))) ($generated@@239 ($generated@@273 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@237 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@273 ($generated@@239 $generated@@618)) ($generated@@239 ($generated@@273 $generated@@618)))
 :pattern ( ($generated@@273 ($generated@@239 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@259 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@258 $generated@@620)) (= ($generated@@257 $generated@@619) 0)) (= $generated@@619 ($generated@@256 $generated@@620))))
 :pattern ( ($generated@@257 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@76 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@290 ($generated@@82 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@290 $generated@@621) ($generated ($generated@@81 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@290 ($generated@@82 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@626) ($generated@@76 $generated@@135 $generated@@4))) (or ($generated@@265 ($generated@@239 $generated@@626)) (and (not (= 1 $generated@@132)) (and (and ($generated@@243 $generated@@625) ($generated@@137 $generated@@626 ($generated@@138 $generated@@46))) (not ($generated@@266 $generated@@626 ($generated@@267 $generated@@135))))))) (and ($generated@@297 ($generated@@239 $generated@@626)) (= ($generated@@264 ($generated@@239 $generated@@626)) (let (($generated@@627 ($generated@@296 ($generated@@239 $generated@@626))))
$generated@@627))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@239 $generated@@626)) ($generated@@243 $generated@@625))
))))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@629) $generated@@2)) ($generated@@74 $generated@@629 $generated@@46 $generated@@628))
 :pattern ( ($generated@@74 $generated@@629 $generated@@46 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@631) $generated@@3)) ($generated@@74 $generated@@631 $generated@@47 $generated@@630))
 :pattern ( ($generated@@74 $generated@@631 $generated@@47 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@633) $generated@@4)) ($generated@@74 $generated@@633 $generated@@44 $generated@@632))
 :pattern ( ($generated@@74 $generated@@633 $generated@@44 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@635) $generated@@466)) ($generated@@74 $generated@@635 $generated@@45 $generated@@634))
 :pattern ( ($generated@@74 $generated@@635 $generated@@45 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@637) $generated@@135)) ($generated@@74 $generated@@637 $generated@@48 $generated@@636))
 :pattern ( ($generated@@74 $generated@@637 $generated@@48 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@258 $generated@@135)) (= (type $generated@@639) $generated@@64)) (= ($generated@@137 $generated@@638 ($generated@@516 $generated@@639)) (forall (($generated@@640 Int) ) (!  (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@257 $generated@@638))) ($generated@@220 ($generated@@517 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@517 $generated@@638 $generated@@640))
))))
 :pattern ( ($generated@@137 $generated@@638 ($generated@@516 $generated@@639)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 Int) ) (!  (=> (= (type $generated@@642) ($generated@@258 $generated@@135)) (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@257 $generated@@642))) (< ($generated@@558 ($generated@@383 $generated@@145 ($generated@@517 $generated@@642 $generated@@643))) ($generated@@641 $generated@@642))))
 :pattern ( ($generated@@558 ($generated@@383 $generated@@145 ($generated@@517 $generated@@642 $generated@@643))))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@302 $generated@@135 $generated@@135)) (= (type $generated@@645) $generated@@64)) (= (type $generated@@646) $generated@@64)) ($generated@@137 $generated@@644 ($generated@@411 $generated@@645 $generated@@646))) (and (and ($generated@@137 ($generated@@300 $generated@@644) ($generated@@138 $generated@@645)) ($generated@@137 ($generated@@347 $generated@@644) ($generated@@138 $generated@@646))) ($generated@@137 ($generated@@382 $generated@@644) ($generated@@138 ($generated@@144 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@137 $generated@@644 ($generated@@411 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@320 $generated@@135 $generated@@135)) (= (type $generated@@648) $generated@@64)) (= (type $generated@@649) $generated@@64)) ($generated@@137 $generated@@647 ($generated@@419 $generated@@648 $generated@@649))) (and (and ($generated@@137 ($generated@@318 $generated@@647) ($generated@@232 $generated@@648)) ($generated@@137 ($generated@@358 $generated@@647) ($generated@@232 $generated@@649))) ($generated@@137 ($generated@@393 $generated@@647) ($generated@@232 ($generated@@144 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@137 $generated@@647 ($generated@@419 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@2) ($generated@@137 $generated@@650 $generated@@46))
 :pattern ( ($generated@@137 $generated@@650 $generated@@46))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@3) ($generated@@137 $generated@@651 $generated@@47))
 :pattern ( ($generated@@137 $generated@@651 $generated@@47))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@4) ($generated@@137 $generated@@652 $generated@@44))
 :pattern ( ($generated@@137 $generated@@652 $generated@@44))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@466) ($generated@@137 $generated@@653 $generated@@45))
 :pattern ( ($generated@@137 $generated@@653 $generated@@45))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@135) ($generated@@137 $generated@@654 $generated@@48))
 :pattern ( ($generated@@137 $generated@@654 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 (T@U) Bool)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@656) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@659) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@671) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@666) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@667) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@668) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@670) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@664) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@665) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@662) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@663) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@655) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@660) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@661) ($generated@@76 $generated@@135 $generated@@4))) (= (type $generated@@672) ($generated@@165 $generated@@77 $generated@@4))) (= (type $generated@@673) $generated@@77)) (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@675  (=> (and (and (= $generated@@655 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))) ($generated@@74 $generated@@655 ($generated@@138 $generated@@46) $generated@@659)) (and ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))) ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))))) (and (=> (= (ControlFlow 0 18) (- 0 21)) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@273 ($generated@@8 $generated@@658))))) (=> ($generated@@0 ($generated@@81 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@273 ($generated@@8 $generated@@658)))) (=> (and (= $generated@@660 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) ($generated@@74 $generated@@660 ($generated@@138 $generated@@46) $generated@@659)) (and (=> (= (ControlFlow 0 18) (- 0 20)) (not ($generated@@266 $generated@@660 ($generated@@267 $generated@@135)))) (=> (and ($generated@@265 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) ($generated@@265 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (= $generated@@658 ($generated@@264 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))))) (=> (= $generated@@658 ($generated@@264 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) (=> (= $generated@@661 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) (=> (and (and ($generated@@74 $generated@@661 ($generated@@138 $generated@@46) $generated@@659) ($generated@@136 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) (and ($generated@@136 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) (= (ControlFlow 0 18) (- 0 17)))) (= ($generated@@274 ($generated@@274 $generated@@657 $generated@@658) ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))))) ($generated@@274 $generated@@657 ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))))))))))))))))
(let (($generated@@676  (=> (and (and (= $generated@@662 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) ($generated@@74 $generated@@662 ($generated@@138 $generated@@46) $generated@@659)) (and ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))))) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@266 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))))) (=> ($generated@@266 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))) (=> (= $generated@@663 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))) (=> (and (and ($generated@@74 $generated@@663 ($generated@@138 $generated@@46) $generated@@659) ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))))) (and ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))) (= (ControlFlow 0 15) (- 0 14)))) (= ($generated@@274 ($generated@@274 $generated@@657 $generated@@658) ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) ($generated@@274 ($generated@@274 $generated@@657 $generated@@658) ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))))))))))))
(let (($generated@@677  (=> (= $generated@@664 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) (=> (and (and (and ($generated@@74 $generated@@664 ($generated@@138 $generated@@46) $generated@@659) ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) (and ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) (= $generated@@665 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))))) (and (and ($generated@@74 $generated@@665 ($generated@@138 $generated@@46) $generated@@659) ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) (and ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) (= (ControlFlow 0 13) (- 0 12))))) (= ($generated@@274 ($generated@@274 $generated@@658 $generated@@657) ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) ($generated@@274 ($generated@@274 $generated@@657 $generated@@658) ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))))))))
(let (($generated@@678  (=> (= $generated@@666 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))) (=> (and (and ($generated@@74 $generated@@666 ($generated@@138 $generated@@46) $generated@@659) ($generated@@136 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))))) (and ($generated@@136 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))) (= $generated@@667 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (or (<= 0 $generated@@657) (= $generated@@657 $generated@@657))) (=> (or (<= 0 $generated@@657) (= $generated@@657 $generated@@657)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (< $generated@@657 $generated@@657) (and (= $generated@@657 $generated@@657) (and ($generated@@594 $generated@@667 $generated@@656) (not ($generated@@594 $generated@@656 $generated@@667)))))) (=> (or (< $generated@@657 $generated@@657) (and (= $generated@@657 $generated@@657) (and ($generated@@594 $generated@@667 $generated@@656) (not ($generated@@594 $generated@@656 $generated@@667))))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@81 $generated@@667 ($generated@@273 ($generated@@8 $generated@@657))))) (=> ($generated@@0 ($generated@@81 $generated@@667 ($generated@@273 ($generated@@8 $generated@@657)))) (=> (and ($generated@@243 $generated@@668) ($generated@@669 $generated@@668)) (=> (and (and (and (and ($generated@@136 $generated@@667) ($generated@@136 ($generated@@271 $generated@@667 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) (= ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) $generated@@667) ($generated@@274 $generated@@657 ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 $generated@@667 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))))) (and (= $generated@@659 $generated@@668) (= $generated@@670 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))))) (and (and ($generated@@74 $generated@@670 ($generated@@138 $generated@@46) $generated@@668) ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))) (and ($generated@@136 ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))) (= (ControlFlow 0 8) (- 0 7))))) (= ($generated@@274 $generated@@658 ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))))) ($generated@@274 ($generated@@274 $generated@@658 $generated@@657) ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))) ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))))))))))))))))
(let (($generated@@679  (=> (and (and (and ($generated@@74 $generated@@656 ($generated@@138 $generated@@46) $generated@@659) ($generated@@136 $generated@@656)) (and ($generated@@136 $generated@@656) (= $generated@@671 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))))) (and (and ($generated@@74 $generated@@671 ($generated@@138 $generated@@46) $generated@@659) ($generated@@136 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658)))))) (and ($generated@@136 ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))) (= (ControlFlow 0 6) (- 0 5))))) (= ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) $generated@@656) ($generated@@274 $generated@@658 ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@658))))))))))
(let (($generated@@680 true))
(let (($generated@@681  (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) $generated@@656) ($generated@@274 $generated@@657 ($generated@@133 ($generated@@270 ($generated@@270 $generated@@512)) ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))))))))
(let (($generated@@682  (=> (and (= ($generated@@133 ($generated@@270 $generated@@512) $generated@@656) ($generated@@274 $generated@@657 ($generated@@133 ($generated@@270 $generated@@512) ($generated@@271 $generated@@656 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657))))))) (= (ControlFlow 0 22) 2)) $generated@@681)))
(let (($generated@@683  (=> (not (= $generated@@657 $generated@@658)) (and (and (and (and (and (and (=> (= (ControlFlow 0 23) 4) $generated@@680) (=> (= (ControlFlow 0 23) 6) $generated@@679)) (=> (= (ControlFlow 0 23) 8) $generated@@678)) (=> (= (ControlFlow 0 23) 13) $generated@@677)) (=> (= (ControlFlow 0 23) 15) $generated@@676)) (=> (= (ControlFlow 0 23) 18) $generated@@675)) (=> (= (ControlFlow 0 23) 22) $generated@@682)))))
(let (($generated@@684  (=> (and (= $generated@@657 $generated@@658) (= (ControlFlow 0 3) 2)) $generated@@681)))
(let (($generated@@685  (=> (= $generated@@672 ($generated@@164 $generated@@673 $generated@@674 $generated@@60 false)) (=> (and (and (and ($generated@@243 $generated@@659) ($generated@@669 $generated@@659)) (= $generated@@674 $generated@@659)) (and (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) ($generated@@76 $generated@@135 $generated@@4)) (=> (and (and ($generated@@137 $generated@@686 ($generated@@138 $generated@@46)) ($generated@@0 ($generated@@81 $generated@@686 ($generated@@273 ($generated@@8 $generated@@657))))) (or (and (<= 0 $generated@@657) (< $generated@@657 $generated@@657)) (and (= $generated@@657 $generated@@657) (and ($generated@@594 $generated@@686 $generated@@656) (not ($generated@@594 $generated@@656 $generated@@686)))))) (= ($generated@@133 ($generated@@270 $generated@@512) $generated@@686) ($generated@@274 $generated@@657 ($generated@@133 ($generated@@270 $generated@@512) ($generated@@271 $generated@@686 ($generated@@272 ($generated@@267 $generated@@135) ($generated@@273 ($generated@@8 $generated@@657)))))))))
 :no-pattern (type $generated@@686)
 :no-pattern ($generated $generated@@686)
 :no-pattern ($generated@@0 $generated@@686)
)) ($generated@@74 $generated@@656 ($generated@@138 $generated@@46) $generated@@659))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (not ($generated@@266 $generated@@656 ($generated@@267 $generated@@135)))) (=> (and (and (not ($generated@@266 $generated@@656 ($generated@@267 $generated@@135))) ($generated@@265 $generated@@656)) (and ($generated@@265 $generated@@656) (= $generated@@658 ($generated@@264 $generated@@656)))) (and (=> (= (ControlFlow 0 24) 23) $generated@@683) (=> (= (ControlFlow 0 24) 3) $generated@@684))))))))
(let (($generated@@687  (=> (and ($generated@@243 $generated@@674) ($generated@@669 $generated@@674)) (=> (and (and (and ($generated@@137 $generated@@656 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@656 ($generated@@138 $generated@@46) $generated@@674)) (= 3 $generated@@132)) (and ($generated@@0 ($generated@@81 $generated@@656 ($generated@@273 ($generated@@8 $generated@@657)))) (= (ControlFlow 0 26) 24))) $generated@@685))))
$generated@@687)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int) Bool)
(declare-fun $generated@@134 (Int) Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int Int) Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@240 (Int) Bool)
(declare-fun $generated@@241 (Int) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@137 Int) ) (!  (=> (or ($generated@@135 ($generated@@134 $generated@@137)) (not (= 0 $generated@@132))) (= ($generated@@133 ($generated@@134 $generated@@137))  (and (<= ($generated@@134 2) ($generated@@134 $generated@@137)) (forall (($generated@@138 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@138) (< $generated@@138 $generated@@137)) (not (= ($generated@@136 $generated@@137 $generated@@138) 0))))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@137)))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@75 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@64)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@64) (= (type $generated@@147) $generated@@64)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@143)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@64) (= (type $generated@@235) $generated@@64)) (= (type $generated@@236) $generated@@152)) (= (type $generated@@237) $generated@@152)) (= ($generated@@139 ($generated@@230 $generated@@236 $generated@@237) ($generated@@142 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@139 ($generated@@230 $generated@@236 $generated@@237) ($generated@@142 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@143) (= (type $generated@@239) $generated@@143)) (= ($generated@@149 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@149 $generated@@238 $generated@@239))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@242 Int) ) (!  (=> (or ($generated@@241 $generated@@242) (not (= 1 $generated@@132))) (and (=> (<= ($generated@@134 2) $generated@@242) (forall (($generated@@243 Int) ) (!  (=> (<= ($generated@@134 2) $generated@@243) (=> (< $generated@@243 $generated@@242) ($generated@@135 $generated@@243)))
 :pattern ( ($generated@@133 $generated@@243))
))) (= ($generated@@240 $generated@@242)  (and (<= ($generated@@134 2) $generated@@242) (forall (($generated@@244 Int) ) (!  (=> true (=> (and (and (<= ($generated@@134 2) $generated@@244) (< $generated@@244 $generated@@242)) ($generated@@133 $generated@@244)) (not (= ($generated@@136 $generated@@242 $generated@@244) 0))))
 :pattern ( ($generated@@133 $generated@@244))
))))))
 :pattern ( ($generated@@240 $generated@@242))
))))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@139 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@152) ($generated@@0 ($generated@@81 $generated@@247 $generated@@249))) ($generated@@231 $generated@@249 $generated@@248))
 :pattern ( ($generated@@81 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@139 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@64)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@253) $generated@@64)) (= ($generated@@139 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@152) ($generated@@0 ($generated@@81 $generated@@252 $generated@@254))) ($generated@@231 $generated@@254 $generated@@253))
 :pattern ( ($generated@@81 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@139 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@134 $generated@@255) $generated@@255)
 :pattern ( ($generated@@134 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@260 Int) ) (!  (=> (or ($generated@@135 $generated@@260) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@133 $generated@@260))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@261 Int) ) (!  (=> (or ($generated@@241 $generated@@261) (not (= 1 $generated@@132))) true)
 :pattern ( ($generated@@240 $generated@@261))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) $generated@@64)) (= (type $generated@@266) $generated@@152)) (= (type $generated@@267) $generated@@152)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@262 $generated@@268)) (= ($generated@@74 ($generated@@230 $generated@@266 $generated@@267) ($generated@@142 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@74 ($generated@@230 $generated@@266 $generated@@267) ($generated@@142 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@143) (= ($generated@@141 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@143) ($generated@@141 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@152) (= (type $generated@@274) $generated@@152)) (= $generated@@272 ($generated@@230 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@141 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 17)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@152)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@74 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@76 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@76 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@81 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@330 Int) ) (!  (=> (or ($generated@@241 ($generated@@134 $generated@@330)) (not (= 1 $generated@@132))) (and (=> (<= ($generated@@134 2) ($generated@@134 $generated@@330)) (forall (($generated@@331 Int) ) (!  (=> (<= ($generated@@134 2) $generated@@331) (=> (< $generated@@331 $generated@@330) ($generated@@135 $generated@@331)))
 :pattern ( ($generated@@133 $generated@@331))
))) (= ($generated@@240 ($generated@@134 $generated@@330))  (and (<= ($generated@@134 2) ($generated@@134 $generated@@330)) (forall (($generated@@332 Int) ) (!  (=> true (=> (and (and (<= ($generated@@134 2) $generated@@332) (< $generated@@332 $generated@@330)) ($generated@@133 $generated@@332)) (not (= ($generated@@136 $generated@@330 $generated@@332) 0))))
 :pattern ( ($generated@@133 $generated@@332))
))))))
 :weight 3
 :pattern ( ($generated@@240 ($generated@@134 $generated@@330)))
))))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@158 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@288 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@158 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@298 (type $generated@@336))))
(let (($generated@@338 ($generated@@297 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@296 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@295 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@294 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@298 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@298 (type $generated@@343))))
(let (($generated@@345 ($generated@@297 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@296 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@295 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@316 (type $generated@@347))))
(let (($generated@@349 ($generated@@315 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@314 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@313 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@312 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@316 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@76 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@316 (type $generated@@354))))
(let (($generated@@356 ($generated@@315 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@314 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@313 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@139 $generated@@358 ($generated@@157 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@358 $generated@@360)))) ($generated@@231 $generated@@360 $generated@@359))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@139 $generated@@358 ($generated@@157 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@245 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@152) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@263 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@245 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@250 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@152) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@263 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@250 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@81 ($generated@@289 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@81 ($generated@@289 $generated@@370) $generated@@369)))
)))
(assert  (and (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@371 $generated@@374)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@371 $generated@@374))
)) (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@372 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@298 (type $generated@@377))))
(let (($generated@@379 ($generated@@297 (type $generated@@377))))
(= (type ($generated@@373 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@373 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@381) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@380) ($generated@@150 ($generated@@372 $generated@@143 $generated@@381)))) (= ($generated@@81 ($generated@@373 $generated@@380) ($generated@@150 ($generated@@372 $generated@@143 $generated@@381))) ($generated@@151 ($generated@@372 $generated@@143 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@316 (type $generated@@385))))
(let (($generated@@387 ($generated@@315 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@314 $generated@@152 $generated@@152)) (= (type $generated@@389) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@388) ($generated@@150 ($generated@@372 $generated@@143 $generated@@389)))) (= ($generated@@81 ($generated@@383 $generated@@388) ($generated@@150 ($generated@@372 $generated@@143 $generated@@389))) ($generated@@151 ($generated@@372 $generated@@143 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@297 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@296 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@315 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@314 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@403) $generated@@407))) (and ($generated@@263 ($generated@@81 ($generated@@373 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@263 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@314 $generated@@152 $generated@@152)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@411) $generated@@415))) (and ($generated@@263 ($generated@@81 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@263 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@316 (type $generated@@418))))
(let (($generated@@420 ($generated@@315 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@314 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@313 $generated@@420 $generated@@419)) (= ($generated@@312 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@312 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@316 (type $generated@@421))))
(let (($generated@@423 ($generated@@315 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@314 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@313 $generated@@423 $generated@@422)) (= ($generated@@351 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@351 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@316 (type $generated@@424))))
(let (($generated@@426 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@313 $generated@@426 $generated@@425)) (= ($generated@@382 $generated@@424) ($generated@@416 $generated@@152))))))
 :pattern ( ($generated@@382 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@298 (type $generated@@427))))
(let (($generated@@429 ($generated@@297 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@296 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@295 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@152) (= (type $generated@@431) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@427) ($generated@@283 ($generated@@230 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@371 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@316 (type $generated@@432))))
(let (($generated@@434 ($generated@@315 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@314 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@313 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@152) (= (type $generated@@436) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@432) ($generated@@283 ($generated@@230 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@382 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@152) ($generated@@231 $generated@@437 $generated@@46)) (and (= ($generated@@283 ($generated@@372 $generated@@2 $generated@@437)) $generated@@437) ($generated@@139 ($generated@@372 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@152) ($generated@@231 $generated@@438 $generated@@47)) (and (= ($generated@@283 ($generated@@372 $generated@@3 $generated@@438)) $generated@@438) ($generated@@139 ($generated@@372 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@152) ($generated@@231 $generated@@439 $generated@@44)) (and (= ($generated@@283 ($generated@@372 $generated@@4 $generated@@439)) $generated@@439) ($generated@@139 ($generated@@372 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@152) ($generated@@231 $generated@@441 $generated@@45)) (and (= ($generated@@283 ($generated@@372 $generated@@440 $generated@@441)) $generated@@441) ($generated@@139 ($generated@@372 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@231 ($generated@@283 $generated@@442) $generated@@443) ($generated@@139 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@231 ($generated@@283 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@2)) (<= 0 ($generated@@288 $generated@@444))))
 :pattern ( ($generated@@288 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@278 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@277 $generated@@447)) (<= 0 ($generated@@276 $generated@@446))))
 :pattern ( ($generated@@276 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@400 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@400 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@408 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@408 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@269 ($generated@@230 $generated@@468 $generated@@469)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@142 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@142 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@142 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@142 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@152) (= (type $generated@@479) $generated@@152)) (= ($generated@@150 ($generated@@230 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@230 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@152) (= (type $generated@@481) $generated@@152)) (= ($generated@@151 ($generated@@230 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@230 $generated@@480 $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@278 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@277 $generated@@152)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@276 $generated@@488))) ($generated@@263 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@245 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@245 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@245 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@250 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@250 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@250 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@157 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@157 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@372 $generated@@511 ($generated@@283 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@283 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@139 $generated@@512 ($generated@@400 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@512) $generated@@515))) (and ($generated@@231 ($generated@@81 ($generated@@373 $generated@@512) $generated@@515) $generated@@514) ($generated@@231 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@139 $generated@@512 ($generated@@400 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@314 $generated@@152 $generated@@152)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@139 $generated@@516 ($generated@@408 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@516) $generated@@519))) (and ($generated@@231 ($generated@@81 ($generated@@383 $generated@@516) $generated@@519) $generated@@518) ($generated@@231 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@139 $generated@@516 ($generated@@408 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@152) (= (type $generated@@523) $generated@@152)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@230 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@230 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@152) (= (type $generated@@525) $generated@@152)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@230 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@230 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@231 $generated@@526 ($generated@@400 $generated@@527 $generated@@528))) (and (= ($generated@@283 ($generated@@372 ($generated@@296 $generated@@152 $generated@@152) $generated@@526)) $generated@@526) ($generated@@139 ($generated@@372 ($generated@@296 $generated@@152 $generated@@152) $generated@@526) ($generated@@400 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@231 $generated@@526 ($generated@@400 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@152) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@231 $generated@@529 ($generated@@408 $generated@@530 $generated@@531))) (and (= ($generated@@283 ($generated@@372 ($generated@@314 $generated@@152 $generated@@152) $generated@@529)) $generated@@529) ($generated@@139 ($generated@@372 ($generated@@314 $generated@@152 $generated@@152) $generated@@529) ($generated@@408 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@231 $generated@@529 ($generated@@408 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@152)) ($generated@@231 $generated@@534 ($generated@@142 $generated@@532 $generated@@533))) (and (= ($generated@@283 ($generated@@372 $generated@@143 $generated@@534)) $generated@@534) ($generated@@139 ($generated@@372 $generated@@143 $generated@@534) ($generated@@142 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@231 $generated@@534 ($generated@@142 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@81 ($generated@@416 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@537 Int) ($generated@@538 Int) ) (! (= ($generated@@136 $generated@@537 $generated@@538) (mod $generated@@537 $generated@@538))
 :pattern ( ($generated@@136 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@142 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@142 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@142 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@143) (= ($generated@@520 ($generated@@283 $generated@@543)) ($generated@@521 $generated@@543)))
 :pattern ( ($generated@@520 ($generated@@283 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@152) ($generated@@231 $generated@@544 ($generated@@75 0))) (and (= ($generated@@283 ($generated@@372 $generated@@2 $generated@@544)) $generated@@544) ($generated@@139 ($generated@@372 ($generated@@76 $generated@@152 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@231 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@152) (= (type $generated@@546) $generated@@64)) ($generated@@231 $generated@@545 ($generated@@245 $generated@@546))) (and (= ($generated@@283 ($generated@@372 ($generated@@76 $generated@@152 $generated@@4) $generated@@545)) $generated@@545) ($generated@@139 ($generated@@372 ($generated@@76 $generated@@152 $generated@@4) $generated@@545) ($generated@@245 $generated@@546))))
 :pattern ( ($generated@@231 $generated@@545 ($generated@@245 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@152) (= (type $generated@@548) $generated@@64)) ($generated@@231 $generated@@547 ($generated@@250 $generated@@548))) (and (= ($generated@@283 ($generated@@372 ($generated@@76 $generated@@152 $generated@@4) $generated@@547)) $generated@@547) ($generated@@139 ($generated@@372 ($generated@@76 $generated@@152 $generated@@4) $generated@@547) ($generated@@250 $generated@@548))))
 :pattern ( ($generated@@231 $generated@@547 ($generated@@250 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@152) (= (type $generated@@550) $generated@@64)) ($generated@@231 $generated@@549 ($generated@@157 $generated@@550))) (and (= ($generated@@283 ($generated@@372 ($generated@@76 $generated@@152 $generated@@2) $generated@@549)) $generated@@549) ($generated@@139 ($generated@@372 ($generated@@76 $generated@@152 $generated@@2) $generated@@549) ($generated@@157 $generated@@550))))
 :pattern ( ($generated@@231 $generated@@549 ($generated@@157 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@152) (= (type $generated@@552) $generated@@64)) ($generated@@231 $generated@@551 ($generated@@482 $generated@@552))) (and (= ($generated@@283 ($generated@@372 ($generated@@277 $generated@@152) $generated@@551)) $generated@@551) ($generated@@139 ($generated@@372 ($generated@@277 $generated@@152) $generated@@551) ($generated@@482 $generated@@552))))
 :pattern ( ($generated@@231 $generated@@551 ($generated@@482 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@157 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@263 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@157 $generated@@554) $generated@@555))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@557 Int) ) (!  (=> (or ($generated@@135 $generated@@557) (not (= 0 $generated@@132))) (= ($generated@@133 $generated@@557)  (and (<= ($generated@@134 2) $generated@@557) (forall (($generated@@558 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@558) (< $generated@@558 $generated@@557)) (not (= ($generated@@136 $generated@@557 $generated@@558) 0))))
 :pattern ( ($generated@@136 $generated@@557 $generated@@558))
)))))
 :pattern ( ($generated@@133 $generated@@557))
))))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@561) (and ($generated@@141 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@142 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@142 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@263 ($generated@@150 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@263 ($generated@@150 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@143) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@565) (and ($generated@@141 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@142 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@142 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@263 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@263 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@152) (= (type $generated@@568) $generated@@152)) (= ($generated@@230 ($generated@@256 $generated@@567) ($generated@@256 $generated@@568)) ($generated@@256 ($generated@@230 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@230 ($generated@@256 $generated@@567) ($generated@@256 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@134 $generated@@569))) ($generated@@256 ($generated@@283 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@134 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@283 ($generated@@256 $generated@@570)) ($generated@@256 ($generated@@283 $generated@@570)))
 :pattern ( ($generated@@283 ($generated@@256 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@278 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@277 $generated@@572)) (= ($generated@@276 $generated@@571) 0)) (= $generated@@571 ($generated@@275 $generated@@572))))
 :pattern ( ($generated@@276 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@76 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@288 ($generated@@82 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@288 $generated@@573) ($generated ($generated@@81 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@288 ($generated@@82 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@2)) ($generated@@74 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@3)) ($generated@@74 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@4)) ($generated@@74 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@440)) ($generated@@74 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@152)) ($generated@@74 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@277 $generated@@152)) (= (type $generated@@588) $generated@@64)) (= ($generated@@139 $generated@@587 ($generated@@482 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@276 $generated@@587))) ($generated@@231 ($generated@@483 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@483 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@139 $generated@@587 ($generated@@482 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@277 $generated@@152)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@276 $generated@@591))) (< ($generated@@521 ($generated@@372 $generated@@143 ($generated@@483 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@521 ($generated@@372 $generated@@143 ($generated@@483 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@139 $generated@@593 ($generated@@400 $generated@@594 $generated@@595))) (and (and ($generated@@139 ($generated@@294 $generated@@593) ($generated@@245 $generated@@594)) ($generated@@139 ($generated@@340 $generated@@593) ($generated@@245 $generated@@595))) ($generated@@139 ($generated@@371 $generated@@593) ($generated@@245 ($generated@@142 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@139 $generated@@593 ($generated@@400 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@314 $generated@@152 $generated@@152)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) ($generated@@139 $generated@@596 ($generated@@408 $generated@@597 $generated@@598))) (and (and ($generated@@139 ($generated@@312 $generated@@596) ($generated@@250 $generated@@597)) ($generated@@139 ($generated@@351 $generated@@596) ($generated@@250 $generated@@598))) ($generated@@139 ($generated@@382 $generated@@596) ($generated@@250 ($generated@@142 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@139 $generated@@596 ($generated@@408 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@139 $generated@@599 $generated@@46))
 :pattern ( ($generated@@139 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@139 $generated@@600 $generated@@47))
 :pattern ( ($generated@@139 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@139 $generated@@601 $generated@@44))
 :pattern ( ($generated@@139 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@440) ($generated@@139 $generated@@602 $generated@@45))
 :pattern ( ($generated@@139 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@152) ($generated@@139 $generated@@603 $generated@@48))
 :pattern ( ($generated@@139 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) ($generated@@164 $generated@@77 $generated@@4))) (= (type $generated@@608) $generated@@77)) (= (type $generated@@609) ($generated@@164 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@611 true))
(let (($generated@@612 true))
(let (($generated@@613  (=> (and (not (and (and (<= ($generated@@134 2) $generated@@604) (< $generated@@604 $generated@@605)) ($generated@@133 $generated@@604))) (= (ControlFlow 0 7) 2)) $generated@@612)))
(let (($generated@@614  (=> (and (and (<= ($generated@@134 2) $generated@@604) (< $generated@@604 $generated@@605)) ($generated@@133 $generated@@604)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@604 0))) (=> (not (= $generated@@604 0)) (=> (= (ControlFlow 0 5) 2) $generated@@612))))))
(let (($generated@@615  (=> (not (and (<= ($generated@@134 2) $generated@@604) (< $generated@@604 $generated@@605))) (and (=> (= (ControlFlow 0 9) 5) $generated@@614) (=> (= (ControlFlow 0 9) 7) $generated@@613)))))
(let (($generated@@616  (=> (and (and (<= ($generated@@134 2) $generated@@604) (< $generated@@604 $generated@@605)) (and ($generated@@74 ($generated@@8 $generated@@604) $generated@@46 $generated@@606) ($generated@@135 $generated@@604))) (and (=> (= (ControlFlow 0 8) 5) $generated@@614) (=> (= (ControlFlow 0 8) 7) $generated@@613)))))
(let (($generated@@617  (=> (< $generated@@604 ($generated@@134 2)) (and (=> (= (ControlFlow 0 11) 8) $generated@@616) (=> (= (ControlFlow 0 11) 9) $generated@@615)))))
(let (($generated@@618  (=> (<= ($generated@@134 2) $generated@@604) (and (=> (= (ControlFlow 0 10) 8) $generated@@616) (=> (= (ControlFlow 0 10) 9) $generated@@615)))))
(let (($generated@@619  (and (=> (= (ControlFlow 0 12) 10) $generated@@618) (=> (= (ControlFlow 0 12) 11) $generated@@617))))
(let (($generated@@620  (=> (<= ($generated@@134 2) $generated@@605) (and (=> (= (ControlFlow 0 13) 12) $generated@@619) (=> (= (ControlFlow 0 13) 4) $generated@@611)))))
(let (($generated@@621  (=> (and (< $generated@@605 ($generated@@134 2)) (= (ControlFlow 0 3) 2)) $generated@@612)))
(let (($generated@@622  (=> (= $generated@@607 ($generated@@218 $generated@@608 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@620) (=> (= (ControlFlow 0 14) 3) $generated@@621)))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@609 ($generated@@163 $generated@@608 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@623) (=> (= (ControlFlow 0 15) 14) $generated@@622)))))
(let (($generated@@625  (=> (and (and ($generated@@262 $generated@@606) ($generated@@610 $generated@@606)) (and (= 1 $generated@@132) (= (ControlFlow 0 16) 15))) $generated@@624)))
$generated@@625))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int) Int)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (Int Int) Int)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (Int) Bool)
(declare-fun $generated@@234 (Int) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (Int Int) Int)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U Int) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (Int Int) Int)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@139 Int) ) (!  (=> (or ($generated@@137 ($generated@@136 $generated@@139)) (not (= 0 $generated@@134))) (= ($generated@@135 ($generated@@136 $generated@@139))  (and (<= ($generated@@136 2) ($generated@@136 $generated@@139)) (forall (($generated@@140 Int) ) (!  (=> true (=> (and (<= ($generated@@136 2) $generated@@140) (< $generated@@140 $generated@@139)) (not (= ($generated@@138 $generated@@139 $generated@@140) 0))))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@136 $generated@@139)))
))))
(assert (= (type $generated@@141) $generated@@66))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@76 $generated@@142 $generated@@141 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@77 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@66)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@66) (= (type $generated@@152) $generated@@66)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@78 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@66)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@79 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@69 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@79) (= (type $generated@@217) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@218) ($generated@@68 $generated@@4))) (= (type $generated@@220) $generated@@79)) (= (type $generated@@221) ($generated@@68 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@148)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@66) (= (type $generated@@228) $generated@@66)) (= (type $generated@@229) $generated@@157)) (= (type $generated@@230) $generated@@157)) (= ($generated@@144 ($generated@@223 $generated@@229 $generated@@230) ($generated@@147 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@144 ($generated@@223 $generated@@229 $generated@@230) ($generated@@147 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@148) (= (type $generated@@232) $generated@@148)) (= ($generated@@154 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@154 $generated@@231 $generated@@232))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@235 Int) ) (!  (=> (or ($generated@@234 $generated@@235) (not (= 1 $generated@@134))) (and (=> (<= ($generated@@136 2) $generated@@235) (forall (($generated@@236 Int) ) (!  (=> (<= ($generated@@136 2) $generated@@236) (=> (< $generated@@236 $generated@@235) ($generated@@137 $generated@@236)))
 :pattern ( ($generated@@135 $generated@@236))
))) (= ($generated@@233 $generated@@235)  (and (<= ($generated@@136 2) $generated@@235) (forall (($generated@@237 Int) ) (!  (=> true (=> (and (and (<= ($generated@@136 2) $generated@@237) (< $generated@@237 $generated@@235)) ($generated@@135 $generated@@237)) (not (= ($generated@@138 $generated@@235 $generated@@237) 0))))
 :pattern ( ($generated@@135 $generated@@237))
))))))
 :pattern ( ($generated@@233 $generated@@235))
))))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@157 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@144 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@157) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@144 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@157 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@144 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@157) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@224 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@144 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@136 $generated@@248) $generated@@248)
 :pattern ( ($generated@@136 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@253 Int) ) (!  (=> (or ($generated@@137 $generated@@253) (not (= 0 $generated@@134))) true)
 :pattern ( ($generated@@135 $generated@@253))
))))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@254 Int) ) (!  (=> (or ($generated@@234 $generated@@254) (not (= 1 $generated@@134))) true)
 :pattern ( ($generated@@233 $generated@@254))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@66) (= (type $generated@@258) $generated@@66)) (= (type $generated@@259) $generated@@157)) (= (type $generated@@260) $generated@@157)) (= (type $generated@@261) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@255 $generated@@261)) (= ($generated@@76 ($generated@@223 $generated@@259 $generated@@260) ($generated@@147 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@76 ($generated@@223 $generated@@259 $generated@@260) ($generated@@147 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@148) (= ($generated@@146 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@62)))
 :pattern ( ($generated@@146 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@148) ($generated@@146 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@157) (= (type $generated@@267) $generated@@157)) (= $generated@@265 ($generated@@223 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@146 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@144 $generated@@276 $generated@@141) (<= ($generated@@136 0) ($generated $generated@@276))))
 :pattern ( ($generated@@144 $generated@@276 $generated@@141))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@157)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@76 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@78 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@81 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@78 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@83 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@78 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@83 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@83 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@78 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@83 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@83 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@324 Int) ) (!  (=> (or ($generated@@234 ($generated@@136 $generated@@324)) (not (= 1 $generated@@134))) (and (=> (<= ($generated@@136 2) ($generated@@136 $generated@@324)) (forall (($generated@@325 Int) ) (!  (=> (<= ($generated@@136 2) $generated@@325) (=> (< $generated@@325 $generated@@324) ($generated@@137 $generated@@325)))
 :pattern ( ($generated@@135 $generated@@325))
))) (= ($generated@@233 ($generated@@136 $generated@@324))  (and (<= ($generated@@136 2) ($generated@@136 $generated@@324)) (forall (($generated@@326 Int) ) (!  (=> true (=> (and (and (<= ($generated@@136 2) $generated@@326) (< $generated@@326 $generated@@324)) ($generated@@135 $generated@@326)) (not (= ($generated@@138 $generated@@324 $generated@@326) 0))))
 :pattern ( ($generated@@135 $generated@@326))
))))))
 :weight 3
 :pattern ( ($generated@@233 ($generated@@136 $generated@@324)))
))))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@81 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@78 $generated@@328 $generated@@2)) (= ($generated@@163 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@83 $generated@@327 $generated@@329))) (<= ($generated ($generated@@83 $generated@@327 $generated@@329)) ($generated@@282 $generated@@327))))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@163 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@157) ($generated@@224 $generated@@333 $generated@@141)) (and (= ($generated@@277 ($generated@@330 $generated@@2 $generated@@333)) $generated@@333) ($generated@@144 ($generated@@330 $generated@@2 $generated@@333) $generated@@141)))
 :pattern ( ($generated@@224 $generated@@333 $generated@@141))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@292 (type $generated@@334))))
(let (($generated@@336 ($generated@@291 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@290 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@289 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@288 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@292 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@292 (type $generated@@341))))
(let (($generated@@343 ($generated@@291 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@290 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@289 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@310 (type $generated@@345))))
(let (($generated@@347 ($generated@@309 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@308 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@307 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@306 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@310 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@78 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(let (($generated@@354 ($generated@@309 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@308 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@307 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@78 $generated@@157 $generated@@2)) (= (type $generated@@357) $generated@@66)) (= ($generated@@144 $generated@@356 ($generated@@162 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@157) (< 0 ($generated ($generated@@83 $generated@@356 $generated@@358)))) ($generated@@224 $generated@@358 $generated@@357))
 :pattern ( ($generated@@83 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@144 $generated@@356 ($generated@@162 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@157 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@238 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@157) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@256 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@238 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@78 $generated@@157 $generated@@4)) (= (type $generated@@364) $generated@@66)) (= (type $generated@@365) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@363 ($generated@@243 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@157) ($generated@@0 ($generated@@83 $generated@@363 $generated@@366))) ($generated@@256 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@83 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@76 $generated@@363 ($generated@@243 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@83 ($generated@@283 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@83 ($generated@@283 $generated@@368) $generated@@367)))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@78 $generated@@157 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@292 (type $generated@@372))))
(let (($generated@@374 ($generated@@291 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@78 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@290 $generated@@157 $generated@@157)) (= (type $generated@@376) $generated@@157)) (= ($generated@@0 ($generated@@83 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@83 ($generated@@288 $generated@@375) ($generated@@155 ($generated@@330 $generated@@148 $generated@@376)))) (= ($generated@@83 ($generated@@370 $generated@@375) ($generated@@155 ($generated@@330 $generated@@148 $generated@@376))) ($generated@@156 ($generated@@330 $generated@@148 $generated@@376))))))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@78 $generated@@157 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@310 (type $generated@@380))))
(let (($generated@@382 ($generated@@309 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@78 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@308 $generated@@157 $generated@@157)) (= (type $generated@@384) $generated@@157)) (= ($generated@@0 ($generated@@83 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@83 ($generated@@306 $generated@@383) ($generated@@155 ($generated@@330 $generated@@148 $generated@@384)))) (= ($generated@@83 ($generated@@378 $generated@@383) ($generated@@155 ($generated@@330 $generated@@148 $generated@@384))) ($generated@@156 ($generated@@330 $generated@@148 $generated@@384))))))
 :pattern ( ($generated@@83 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@291 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@290 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@83 ($generated@@338 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@83 ($generated@@288 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@83 ($generated@@370 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@385) $generated@@389))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@309 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@308 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@83 ($generated@@349 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@83 ($generated@@306 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@83 ($generated@@378 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@390) $generated@@394))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@66)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@290 $generated@@157 $generated@@157)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@157) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@398) $generated@@402))) (and ($generated@@256 ($generated@@83 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@256 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@66)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@308 $generated@@157 $generated@@157)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@157) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@406) $generated@@410))) (and ($generated@@256 ($generated@@83 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@256 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@76 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 Int) ($generated@@413 Int) ) (! (= ($generated@@411 $generated@@412 $generated@@413) (div $generated@@412 $generated@@413))
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@78 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@310 (type $generated@@416))))
(let (($generated@@418 ($generated@@309 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@308 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@307 $generated@@418 $generated@@417)) (= ($generated@@306 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@306 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@310 (type $generated@@419))))
(let (($generated@@421 ($generated@@309 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@308 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@307 $generated@@421 $generated@@420)) (= ($generated@@349 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@349 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@310 (type $generated@@422))))
(let (($generated@@424 ($generated@@309 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@308 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@307 $generated@@424 $generated@@423)) (= ($generated@@377 $generated@@422) ($generated@@414 $generated@@157))))))
 :pattern ( ($generated@@377 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@292 (type $generated@@425))))
(let (($generated@@427 ($generated@@291 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@290 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@289 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@157) (= (type $generated@@429) $generated@@157)) ($generated@@0 ($generated@@83 ($generated@@369 $generated@@425) ($generated@@277 ($generated@@223 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@369 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@310 (type $generated@@430))))
(let (($generated@@432 ($generated@@309 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@308 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@307 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@157) (= (type $generated@@434) $generated@@157)) ($generated@@0 ($generated@@83 ($generated@@377 $generated@@430) ($generated@@277 ($generated@@223 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@377 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@224 $generated@@435 $generated@@46)) (and (= ($generated@@277 ($generated@@330 $generated@@2 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@330 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@157) ($generated@@224 $generated@@436 $generated@@47)) (and (= ($generated@@277 ($generated@@330 $generated@@3 $generated@@436)) $generated@@436) ($generated@@144 ($generated@@330 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@157) ($generated@@224 $generated@@437 $generated@@44)) (and (= ($generated@@277 ($generated@@330 $generated@@4 $generated@@437)) $generated@@437) ($generated@@144 ($generated@@330 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@157) ($generated@@224 $generated@@439 $generated@@45)) (and (= ($generated@@277 ($generated@@330 $generated@@438 $generated@@439)) $generated@@439) ($generated@@144 ($generated@@330 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@66) (= ($generated@@224 ($generated@@277 $generated@@440) $generated@@441) ($generated@@144 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@224 ($generated@@277 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@81 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@78 $generated@@443 $generated@@2)) (<= 0 ($generated@@282 $generated@@442))))
 :pattern ( ($generated@@282 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@271 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@270 $generated@@445)) (<= 0 ($generated@@269 $generated@@444))))
 :pattern ( ($generated@@269 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@395 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@395 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@395 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@395 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@74 ($generated@@395 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@395 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@403 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@403 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@74 ($generated@@403 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@157) (= (type $generated@@467) $generated@@157)) (= ($generated@@262 ($generated@@223 $generated@@466 $generated@@467)) $generated@@62))
 :pattern ( ($generated@@223 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@147 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@147 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@147 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@147 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@157) (= (type $generated@@477) $generated@@157)) (= ($generated@@155 ($generated@@223 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@223 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@157) (= (type $generated@@479) $generated@@157)) (= ($generated@@156 ($generated@@223 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@223 $generated@@478 $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ($generated@@484 Int) ) (! (let (($generated@@485 ($generated@@271 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483 $generated@@484)) $generated@@485))
 :pattern ( ($generated@@481 $generated@@483 $generated@@484))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@270 $generated@@157)) (= (type $generated@@487) $generated@@66)) (= (type $generated@@488) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@486 ($generated@@480 $generated@@487) $generated@@488) (forall (($generated@@489 Int) ) (!  (=> (and (<= 0 $generated@@489) (< $generated@@489 ($generated@@269 $generated@@486))) ($generated@@256 ($generated@@481 $generated@@486 $generated@@489) $generated@@487 $generated@@488))
 :pattern ( ($generated@@481 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@76 $generated@@486 ($generated@@480 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@77 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@77 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@238 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@243 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@162 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@162 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@162 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@480 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@480 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@480 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@480 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@330 $generated@@509 ($generated@@277 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@277 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@290 $generated@@157 $generated@@157)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@144 $generated@@510 ($generated@@395 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@157) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@510) $generated@@513))) (and ($generated@@224 ($generated@@83 ($generated@@370 $generated@@510) $generated@@513) $generated@@512) ($generated@@224 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@370 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@144 $generated@@510 ($generated@@395 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@308 $generated@@157 $generated@@157)) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) $generated@@66)) (= ($generated@@144 $generated@@514 ($generated@@403 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@157) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@514) $generated@@517))) (and ($generated@@224 ($generated@@83 ($generated@@378 $generated@@514) $generated@@517) $generated@@516) ($generated@@224 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@514) $generated@@517))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@144 $generated@@514 ($generated@@403 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) (= (type $generated@@521) $generated@@157)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@223 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@223 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@157) (= (type $generated@@523) $generated@@157)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@223 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@223 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@157) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) ($generated@@224 $generated@@524 ($generated@@395 $generated@@525 $generated@@526))) (and (= ($generated@@277 ($generated@@330 ($generated@@290 $generated@@157 $generated@@157) $generated@@524)) $generated@@524) ($generated@@144 ($generated@@330 ($generated@@290 $generated@@157 $generated@@157) $generated@@524) ($generated@@395 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@524 ($generated@@395 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@157) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@66)) ($generated@@224 $generated@@527 ($generated@@403 $generated@@528 $generated@@529))) (and (= ($generated@@277 ($generated@@330 ($generated@@308 $generated@@157 $generated@@157) $generated@@527)) $generated@@527) ($generated@@144 ($generated@@330 ($generated@@308 $generated@@157 $generated@@157) $generated@@527) ($generated@@403 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@224 $generated@@527 ($generated@@403 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@157)) ($generated@@224 $generated@@532 ($generated@@147 $generated@@530 $generated@@531))) (and (= ($generated@@277 ($generated@@330 $generated@@148 $generated@@532)) $generated@@532) ($generated@@144 ($generated@@330 $generated@@148 $generated@@532) ($generated@@147 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@147 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
 (not ($generated@@0 ($generated@@83 ($generated@@414 $generated@@534) $generated@@533))))
 :pattern ( (let (($generated@@534 (type $generated@@533)))
($generated@@83 ($generated@@414 $generated@@534) $generated@@533)))
)))
(assert (forall (($generated@@535 Int) ($generated@@536 Int) ) (! (= ($generated@@138 $generated@@535 $generated@@536) (mod $generated@@535 $generated@@536))
 :pattern ( ($generated@@138 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@71)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (and (= ($generated@@74 ($generated@@147 $generated@@539 $generated@@540)) $generated@@63) (= ($generated@@537 ($generated@@147 $generated@@539 $generated@@540)) $generated@@65)))
 :pattern ( ($generated@@147 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 Int) ($generated@@543 Int) ) (! (= ($generated@@541 $generated@@542 $generated@@543) (* $generated@@542 $generated@@543))
 :pattern ( ($generated@@541 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@148) (= ($generated@@518 ($generated@@277 $generated@@544)) ($generated@@519 $generated@@544)))
 :pattern ( ($generated@@518 ($generated@@277 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@224 $generated@@545 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@330 $generated@@2 $generated@@545)) $generated@@545) ($generated@@144 ($generated@@330 ($generated@@78 $generated@@157 $generated@@4) $generated@@545) ($generated@@77 0))))
 :pattern ( ($generated@@224 $generated@@545 ($generated@@77 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@66)) ($generated@@224 $generated@@546 ($generated@@238 $generated@@547))) (and (= ($generated@@277 ($generated@@330 ($generated@@78 $generated@@157 $generated@@4) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@330 ($generated@@78 $generated@@157 $generated@@4) $generated@@546) ($generated@@238 $generated@@547))))
 :pattern ( ($generated@@224 $generated@@546 ($generated@@238 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@157) (= (type $generated@@549) $generated@@66)) ($generated@@224 $generated@@548 ($generated@@243 $generated@@549))) (and (= ($generated@@277 ($generated@@330 ($generated@@78 $generated@@157 $generated@@4) $generated@@548)) $generated@@548) ($generated@@144 ($generated@@330 ($generated@@78 $generated@@157 $generated@@4) $generated@@548) ($generated@@243 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@243 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@157) (= (type $generated@@551) $generated@@66)) ($generated@@224 $generated@@550 ($generated@@162 $generated@@551))) (and (= ($generated@@277 ($generated@@330 ($generated@@78 $generated@@157 $generated@@2) $generated@@550)) $generated@@550) ($generated@@144 ($generated@@330 ($generated@@78 $generated@@157 $generated@@2) $generated@@550) ($generated@@162 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@162 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@66)) ($generated@@224 $generated@@552 ($generated@@480 $generated@@553))) (and (= ($generated@@277 ($generated@@330 ($generated@@270 $generated@@157) $generated@@552)) $generated@@552) ($generated@@144 ($generated@@330 ($generated@@270 $generated@@157) $generated@@552) ($generated@@480 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@480 $generated@@553)))
)))
(assert (= ($generated@@74 $generated@@141) $generated@@61))
(assert (= ($generated@@537 $generated@@141) $generated@@64))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@78 $generated@@157 $generated@@2)) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@554 ($generated@@162 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@157) (< 0 ($generated ($generated@@83 $generated@@554 $generated@@557)))) ($generated@@256 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@83 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@162 $generated@@555) $generated@@556))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@558 Int) ) (!  (=> (or ($generated@@137 $generated@@558) (not (= 0 $generated@@134))) (= ($generated@@135 $generated@@558)  (and (<= ($generated@@136 2) $generated@@558) (forall (($generated@@559 Int) ) (!  (=> true (=> (and (<= ($generated@@136 2) $generated@@559) (< $generated@@559 $generated@@558)) (not (= ($generated@@138 $generated@@558 $generated@@559) 0))))
 :pattern ( ($generated@@138 $generated@@558 $generated@@559))
)))))
 :pattern ( ($generated@@135 $generated@@558))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@148) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@562) (and ($generated@@146 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@66) ($generated@@76 $generated@@560 ($generated@@147 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@147 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@256 ($generated@@155 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@256 ($generated@@155 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@148) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@566) (and ($generated@@146 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@66) ($generated@@76 $generated@@564 ($generated@@147 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@76 $generated@@564 ($generated@@147 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@256 ($generated@@156 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@256 ($generated@@156 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@157) (= (type $generated@@569) $generated@@157)) (= ($generated@@223 ($generated@@249 $generated@@568) ($generated@@249 $generated@@569)) ($generated@@249 ($generated@@223 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@223 ($generated@@249 $generated@@568) ($generated@@249 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@136 $generated@@570))) ($generated@@249 ($generated@@277 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@136 $generated@@570))))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@277 ($generated@@249 $generated@@571)) ($generated@@249 ($generated@@277 $generated@@571)))
 :pattern ( ($generated@@277 ($generated@@249 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@271 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@270 $generated@@573)) (= ($generated@@269 $generated@@572) 0)) (= $generated@@572 ($generated@@268 $generated@@573))))
 :pattern ( ($generated@@269 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@78 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@282 ($generated@@84 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@282 $generated@@574) ($generated ($generated@@83 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@282 ($generated@@84 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@2)) ($generated@@76 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@3)) ($generated@@76 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@4)) ($generated@@76 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@438)) ($generated@@76 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@157)) ($generated@@76 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@270 $generated@@157)) (= (type $generated@@589) $generated@@66)) (= ($generated@@144 $generated@@588 ($generated@@480 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@269 $generated@@588))) ($generated@@224 ($generated@@481 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@481 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@144 $generated@@588 ($generated@@480 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@270 $generated@@157)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@269 $generated@@592))) (< ($generated@@519 ($generated@@330 $generated@@148 ($generated@@481 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@519 ($generated@@330 $generated@@148 ($generated@@481 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@290 $generated@@157 $generated@@157)) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) $generated@@66)) ($generated@@144 $generated@@594 ($generated@@395 $generated@@595 $generated@@596))) (and (and ($generated@@144 ($generated@@288 $generated@@594) ($generated@@238 $generated@@595)) ($generated@@144 ($generated@@338 $generated@@594) ($generated@@238 $generated@@596))) ($generated@@144 ($generated@@369 $generated@@594) ($generated@@238 ($generated@@147 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@144 $generated@@594 ($generated@@395 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@308 $generated@@157 $generated@@157)) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@144 $generated@@597 ($generated@@403 $generated@@598 $generated@@599))) (and (and ($generated@@144 ($generated@@306 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@144 ($generated@@349 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@144 ($generated@@377 $generated@@597) ($generated@@243 ($generated@@147 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@144 $generated@@597 ($generated@@403 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@144 $generated@@600 $generated@@46))
 :pattern ( ($generated@@144 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@144 $generated@@601 $generated@@47))
 :pattern ( ($generated@@144 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@144 $generated@@602 $generated@@44))
 :pattern ( ($generated@@144 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@438) ($generated@@144 $generated@@603 $generated@@45))
 :pattern ( ($generated@@144 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@157) ($generated@@144 $generated@@604 $generated@@48))
 :pattern ( ($generated@@144 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(assert  (and (and (and (and (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@607) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@616) ($generated@@169 $generated@@79 $generated@@4))) (= (type $generated@@617) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 64) (let (($generated@@618  (=> (and (and (=> (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606)) ($generated@@137 $generated@@605)) (= (ControlFlow 0 46) (- 0 45))) (= ($generated@@138 $generated@@606 $generated@@605) ($generated@@136 0))) (not (and (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606)) ($generated@@135 $generated@@605))))))
(let (($generated@@619  (=> (and (not (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606))) (= (ControlFlow 0 48) 46)) $generated@@618)))
(let (($generated@@620  (=> (and (and (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606)) ($generated@@76 ($generated@@8 $generated@@605) $generated@@46 $generated@@607)) (and ($generated@@137 $generated@@605) (= (ControlFlow 0 47) 46))) $generated@@618)))
(let (($generated@@621  (=> (< $generated@@605 ($generated@@136 2)) (and (=> (= (ControlFlow 0 50) 47) $generated@@620) (=> (= (ControlFlow 0 50) 48) $generated@@619)))))
(let (($generated@@622  (=> (<= ($generated@@136 2) $generated@@605) (and (=> (= (ControlFlow 0 49) 47) $generated@@620) (=> (= (ControlFlow 0 49) 48) $generated@@619)))))
(let (($generated@@623  (=> (and (not (= $generated@@605 0)) (= ($generated@@138 $generated@@606 $generated@@605) ($generated@@136 0))) (and (=> (= (ControlFlow 0 51) 49) $generated@@622) (=> (= (ControlFlow 0 51) 50) $generated@@621)))))
(let (($generated@@624  (and (=> (= (ControlFlow 0 32) (- 0 35)) (<= ($generated@@136 2) $generated@@605)) (and (=> (= (ControlFlow 0 32) (- 0 34)) (< $generated@@605 $generated@@608)) (and (=> (= (ControlFlow 0 32) (- 0 33)) (< $generated@@608 $generated@@606)) (=> (and (and (and (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@608)) (< $generated@@608 $generated@@606)) (and ($generated@@76 ($generated@@8 $generated@@605) $generated@@46 $generated@@607) ($generated@@137 $generated@@605))) (and (and ($generated@@137 $generated@@605) (= (ControlFlow 0 32) (- 0 31))) (not (and (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606)) ($generated@@135 $generated@@605))))) (not ($generated@@135 $generated@@605))))))))
(let (($generated@@625  (=> (and (not (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@608))) (= (ControlFlow 0 37) 32)) $generated@@624)))
(let (($generated@@626  (=> (and (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@608)) (= (ControlFlow 0 36) 32)) $generated@@624)))
(let (($generated@@627  (=> (< $generated@@605 ($generated@@136 2)) (and (=> (= (ControlFlow 0 39) 36) $generated@@626) (=> (= (ControlFlow 0 39) 37) $generated@@625)))))
(let (($generated@@628  (=> (<= ($generated@@136 2) $generated@@605) (and (=> (= (ControlFlow 0 38) 36) $generated@@626) (=> (= (ControlFlow 0 38) 37) $generated@@625)))))
(let (($generated@@629  (=> (and (=> (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606)) ($generated@@137 $generated@@605)) (not (and (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606)) ($generated@@135 $generated@@605)))) (and (=> (= (ControlFlow 0 40) 38) $generated@@628) (=> (= (ControlFlow 0 40) 39) $generated@@627)))))
(let (($generated@@630  (=> (and (not (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606))) (= (ControlFlow 0 42) 40)) $generated@@629)))
(let (($generated@@631  (=> (and (and (and (<= ($generated@@136 2) $generated@@605) (< $generated@@605 $generated@@606)) ($generated@@76 ($generated@@8 $generated@@605) $generated@@46 $generated@@607)) (and ($generated@@137 $generated@@605) (= (ControlFlow 0 41) 40))) $generated@@629)))
(let (($generated@@632  (=> (< $generated@@605 ($generated@@136 2)) (and (=> (= (ControlFlow 0 44) 41) $generated@@631) (=> (= (ControlFlow 0 44) 42) $generated@@630)))))
(let (($generated@@633  (=> (<= ($generated@@136 2) $generated@@605) (and (=> (= (ControlFlow 0 43) 41) $generated@@631) (=> (= (ControlFlow 0 43) 42) $generated@@630)))))
(let (($generated@@634  (=> ($generated@@76 ($generated@@8 $generated@@605) $generated@@46 $generated@@607) (=> (and ($generated@@137 $generated@@605) ($generated@@137 $generated@@605)) (=> (and (and (not ($generated@@135 $generated@@605)) (= (ControlFlow 0 29) (- 0 28))) (not ($generated@@135 $generated@@605))) ($generated@@0 ($generated@@249 ($generated@@11 false))))))))
(let (($generated@@635  (=> (= ($generated@@541 ($generated@@541 $generated@@605 $generated@@609) $generated@@610) $generated@@606) (and (=> (= (ControlFlow 0 20) (- 0 27)) ($generated@@144 ($generated@@8 $generated@@605) $generated@@141)) (=> ($generated@@144 ($generated@@8 $generated@@605) $generated@@141) (and (=> (= (ControlFlow 0 20) (- 0 26)) ($generated@@144 ($generated@@8 ($generated@@541 $generated@@609 $generated@@610)) $generated@@141)) (=> ($generated@@144 ($generated@@8 ($generated@@541 $generated@@609 $generated@@610)) $generated@@141) (=> (= $generated@@611 ($generated@@541 $generated@@609 $generated@@610)) (and (=> (= (ControlFlow 0 20) (- 0 25)) ($generated@@144 ($generated@@8 $generated@@606) $generated@@141)) (=> ($generated@@144 ($generated@@8 $generated@@606) $generated@@141) (and (=> (= (ControlFlow 0 20) (- 0 24)) ($generated@@144 ($generated@@8 ($generated@@136 0)) $generated@@141)) (=> ($generated@@144 ($generated@@8 ($generated@@136 0)) $generated@@141) (=> (= $generated@@612 ($generated@@136 0)) (and (=> (= (ControlFlow 0 20) (- 0 23)) (= ($generated@@541 $generated@@605 $generated@@611) $generated@@606)) (=> (= ($generated@@541 $generated@@605 $generated@@611) $generated@@606) (and (=> (= (ControlFlow 0 20) (- 0 22)) (< $generated@@612 $generated@@605)) (=> (< $generated@@612 $generated@@605) (=> (and (and ($generated@@255 $generated@@613) ($generated@@614 $generated@@613)) (and (= ($generated@@138 (+ $generated@@606 $generated@@612) $generated@@605) $generated@@612) (= $generated@@607 $generated@@613))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (not (= $generated@@605 0))) (=> (= (ControlFlow 0 20) (- 0 19)) (=> (= ($generated@@541 ($generated@@541 $generated@@605 $generated@@609) $generated@@610) $generated@@606) (= ($generated@@138 $generated@@606 $generated@@605) ($generated@@136 0)))))))))))))))))))))))
(let (($generated@@636  (=> (and (and (= ($generated@@541 $generated@@608 $generated@@610) $generated@@606) (= (ControlFlow 0 18) (- 0 17))) (= ($generated@@541 $generated@@608 $generated@@610) $generated@@606)) (= ($generated@@541 ($generated@@541 $generated@@605 $generated@@609) $generated@@610) $generated@@606))))
(let (($generated@@637  (=> (not (= $generated@@608 0)) (=> (and (and (= $generated@@610 ($generated@@411 $generated@@606 $generated@@608)) (= (ControlFlow 0 16) (- 0 15))) (= $generated@@610 ($generated@@411 $generated@@606 $generated@@608))) (= ($generated@@541 $generated@@608 $generated@@610) $generated@@606)))))
(let (($generated@@638  (and (=> (= (ControlFlow 0 13) (- 0 14)) (not (= $generated@@608 0))) (=> (= (ControlFlow 0 13) (- 0 12)) (=> ($generated@@0 ($generated@@249 ($generated@@11 true))) (= $generated@@610 ($generated@@411 $generated@@606 $generated@@608)))))))
(let (($generated@@639 true))
(let (($generated@@640  (=> (= (ControlFlow 0 8) (- 0 7)) (not (= ($generated@@138 $generated@@606 $generated@@608) 0)))))
(let (($generated@@641  (=> (and ($generated@@0 ($generated@@249 ($generated@@11  (=> true false)))) (= (ControlFlow 0 30) 8)) $generated@@640)))
(let (($generated@@642  (=> (= ($generated@@138 $generated@@606 $generated@@608) ($generated@@136 0)) (and (=> (= (ControlFlow 0 52) (- 0 53)) (not (= $generated@@608 0))) (=> (not (= $generated@@608 0)) (=> (= $generated@@610 ($generated@@411 $generated@@606 $generated@@608)) (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 52) 11) $generated@@639) (=> (= (ControlFlow 0 52) 13) $generated@@638)) (=> (= (ControlFlow 0 52) 16) $generated@@637)) (=> (= (ControlFlow 0 52) 18) $generated@@636)) (=> (= (ControlFlow 0 52) 20) $generated@@635)) (=> (= (ControlFlow 0 52) 51) $generated@@623)) (=> (= (ControlFlow 0 52) 29) $generated@@634)) (=> (= (ControlFlow 0 52) 30) $generated@@641)) (=> (= (ControlFlow 0 52) 43) $generated@@633)) (=> (= (ControlFlow 0 52) 44) $generated@@632))))))))
(let (($generated@@643  (=> (and (not (= ($generated@@138 $generated@@606 $generated@@608) ($generated@@136 0))) (= (ControlFlow 0 10) 8)) $generated@@640)))
(let (($generated@@644  (=> (not ($generated@@135 $generated@@608)) (and (=> (= (ControlFlow 0 54) (- 0 57)) (<= ($generated@@136 2) $generated@@608)) (=> (<= ($generated@@136 2) $generated@@608) (and (=> (= (ControlFlow 0 54) (- 0 56)) (not ($generated@@135 $generated@@608))) (=> (not ($generated@@135 $generated@@608)) (=> (and (and ($generated@@255 $generated@@607) ($generated@@614 $generated@@607)) (<= ($generated@@136 2) $generated@@605)) (=> (and (and (and (< $generated@@605 $generated@@608) (<= ($generated@@136 2) $generated@@609)) (and (= ($generated@@541 $generated@@605 $generated@@609) $generated@@608) ($generated@@137 $generated@@605))) (and (and ($generated@@137 $generated@@605) (and ($generated@@135 $generated@@605) (and (<= ($generated@@136 2) $generated@@605) (forall (($generated@@645 Int) ) (!  (=> true (=> (and (<= ($generated@@136 2) $generated@@645) (< $generated@@645 $generated@@605)) (not (= ($generated@@138 $generated@@605 $generated@@645) 0))))
 :pattern ( ($generated@@138 $generated@@605 $generated@@645))
))))) (= $generated@@615 $generated@@607))) (and (=> (= (ControlFlow 0 54) (- 0 55)) (not (= $generated@@608 0))) (=> (not (= $generated@@608 0)) (and (=> (= (ControlFlow 0 54) 52) $generated@@642) (=> (= (ControlFlow 0 54) 10) $generated@@643)))))))))))))
(let (($generated@@646  (=> (and ($generated@@135 $generated@@608) (= (ControlFlow 0 9) 8)) $generated@@640)))
(let (($generated@@647  (=> ($generated@@76 ($generated@@8 $generated@@608) $generated@@46 $generated@@615) (=> (and ($generated@@137 $generated@@608) ($generated@@137 $generated@@608)) (and (=> (= (ControlFlow 0 58) 54) $generated@@644) (=> (= (ControlFlow 0 58) 9) $generated@@646))))))
(let (($generated@@648  (=> (= (ControlFlow 0 6) (- 0 5)) (not (= $generated@@608 0)))))
(let (($generated@@649  (=> (and (<= ($generated@@136 2) $generated@@608) (< $generated@@608 $generated@@606)) (and (=> (= (ControlFlow 0 59) 6) $generated@@648) (=> (= (ControlFlow 0 59) 58) $generated@@647)))))
(let (($generated@@650  (=> (and (< $generated@@608 ($generated@@136 2)) (= (ControlFlow 0 61) 59)) $generated@@649)))
(let (($generated@@651  (=> (and (<= ($generated@@136 2) $generated@@608) (= (ControlFlow 0 60) 59)) $generated@@649)))
(let (($generated@@652  (and (=> (= (ControlFlow 0 62) 60) $generated@@651) (=> (= (ControlFlow 0 62) 61) $generated@@650))))
(let (($generated@@653  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@137 $generated@@606) (or ($generated@@135 $generated@@606) (<= ($generated@@136 2) $generated@@606)))) (=> (=> ($generated@@137 $generated@@606) (or ($generated@@135 $generated@@606) (<= ($generated@@136 2) $generated@@606))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@137 $generated@@606) (or ($generated@@135 $generated@@606) (forall (($generated@@654 Int) ) (!  (=> true (=> (and (<= ($generated@@136 2) $generated@@654) (< $generated@@654 $generated@@606)) (not (= ($generated@@138 $generated@@606 $generated@@654) 0))))
 :pattern ( ($generated@@138 $generated@@606 $generated@@654))
)))))))))
(let (($generated@@655  (=> (and (forall (($generated@@656 Int) ) (!  (=> (and (<= ($generated@@136 2) $generated@@656) (< $generated@@656 $generated@@606)) (not (= ($generated@@138 $generated@@606 $generated@@656) 0)))
 :pattern ( ($generated@@138 $generated@@606 $generated@@656))
)) (= (ControlFlow 0 4) 2)) $generated@@653)))
(let (($generated@@657  (=> (= $generated@@616 ($generated@@168 $generated@@617 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 63) 62) $generated@@652) (=> (= (ControlFlow 0 63) 4) $generated@@655)))))
(let (($generated@@658  (=> (and (and (and ($generated@@255 $generated@@615) ($generated@@614 $generated@@615)) (= 2 $generated@@134)) (and (and ($generated@@234 $generated@@606) (and ($generated@@233 $generated@@606) (and (<= ($generated@@136 2) $generated@@606) (forall (($generated@@659 Int) ) (!  (=> true (=> (and (and (<= ($generated@@136 2) $generated@@659) (< $generated@@659 $generated@@606)) ($generated@@135 $generated@@659)) (not (= ($generated@@138 $generated@@606 $generated@@659) 0))))
 :pattern ( ($generated@@135 $generated@@659))
))))) (= (ControlFlow 0 64) 63))) $generated@@657)))
$generated@@658)))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (Int) Bool)
(declare-fun $generated@@134 (Int) Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int Int) Int)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@T) T@U)
(declare-fun $generated@@258 (T@U) Int)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@379 (T@U T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (Int Int) Int)
(declare-fun $generated@@398 (T@T) T@U)
(declare-fun $generated@@422 () T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@465 (T@U Int) T@U)
(declare-fun $generated@@474 (T@U) Int)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@575 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@137 Int) ) (!  (=> (or ($generated@@135 ($generated@@134 $generated@@137)) (not (= 0 $generated@@132))) (= ($generated@@133 ($generated@@134 $generated@@137))  (and (<= ($generated@@134 2) ($generated@@134 $generated@@137)) (forall (($generated@@138 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@138) (< $generated@@138 $generated@@137)) (not (= ($generated@@136 $generated@@137 $generated@@138) 0))))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@134 $generated@@137)))
))))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@75 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@64)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@64) (= (type $generated@@147) $generated@@64)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (type ($generated@@218 $generated@@220 $generated@@221)) $generated@@143)
 :pattern ( ($generated@@218 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@152)) (= (type $generated@@225) $generated@@152)) (= ($generated@@139 ($generated@@218 $generated@@224 $generated@@225) ($generated@@142 $generated@@222 $generated@@223))  (and ($generated@@219 $generated@@224 $generated@@222) ($generated@@219 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@139 ($generated@@218 $generated@@224 $generated@@225) ($generated@@142 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@143) (= (type $generated@@227) $generated@@143)) (= ($generated@@149 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@149 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@139 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@152) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@219 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@139 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@139 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@152) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@219 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@139 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@238 Int) ) (! (= ($generated@@134 $generated@@238) $generated@@238)
 :pattern ( ($generated@@134 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= ($generated@@239 $generated@@242) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@243 Int) ) (!  (=> (or ($generated@@135 $generated@@243) (not (= 0 $generated@@132))) true)
 :pattern ( ($generated@@133 $generated@@243))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) $generated@@64) (= (type $generated@@247) $generated@@64)) (= (type $generated@@248) $generated@@152)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@244 $generated@@250)) (= ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@142 $generated@@246 $generated@@247) $generated@@250)  (and ($generated@@245 $generated@@248 $generated@@246 $generated@@250) ($generated@@245 $generated@@249 $generated@@247 $generated@@250))))
 :pattern ( ($generated@@74 ($generated@@218 $generated@@248 $generated@@249) ($generated@@142 $generated@@246 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@143) (= ($generated@@141 $generated@@253) (= ($generated@@251 $generated@@253) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@143) ($generated@@141 $generated@@254)) (exists (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (and (and (= (type $generated@@255) $generated@@152) (= (type $generated@@256) $generated@@152)) (= $generated@@254 ($generated@@218 $generated@@255 $generated@@256)))
 :no-pattern (type $generated@@255)
 :no-pattern (type $generated@@256)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert  (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@T) ) (! (= (type ($generated@@257 $generated@@263)) ($generated@@259 $generated@@263))
 :pattern ( ($generated@@257 $generated@@263))
))))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@264)) 0)
 :pattern ( ($generated@@257 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@152)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@64) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@74 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@76 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@79 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@76 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@81 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 18)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@76 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@81 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@79 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@76 $generated@@313 $generated@@2)) (= ($generated@@158 $generated@@312) (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@313) (and (<= 0 ($generated ($generated@@81 $generated@@312 $generated@@314))) (<= ($generated ($generated@@81 $generated@@312 $generated@@314)) ($generated@@270 $generated@@312))))
 :pattern ( ($generated@@81 $generated@@312 $generated@@314))
)))))
 :pattern ( ($generated@@158 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@280 (type $generated@@315))))
(let (($generated@@317 ($generated@@279 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@278 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@277 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@317) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@276 $generated@@315))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@280 (type $generated@@320))))
(= (type ($generated@@319 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@280 (type $generated@@322))))
(let (($generated@@324 ($generated@@279 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@278 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@277 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@319 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@298 (type $generated@@326))))
(let (($generated@@328 ($generated@@297 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@296 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@295 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@294 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@298 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@298 (type $generated@@333))))
(let (($generated@@335 ($generated@@297 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@296 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@295 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@337) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@338) $generated@@64)) (= ($generated@@139 $generated@@337 ($generated@@157 $generated@@338)) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@337 $generated@@339)))) ($generated@@219 $generated@@339 $generated@@338))
 :pattern ( ($generated@@81 $generated@@337 $generated@@339))
))))
 :pattern ( ($generated@@139 $generated@@337 ($generated@@157 $generated@@338)))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@341) $generated@@64)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@340 ($generated@@228 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@152) ($generated@@0 ($generated@@81 $generated@@340 $generated@@343))) ($generated@@245 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@81 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@74 $generated@@340 ($generated@@228 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@344) ($generated@@76 $generated@@152 $generated@@4)) (= (type $generated@@345) $generated@@64)) (= (type $generated@@346) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@344 ($generated@@233 $generated@@345) $generated@@346) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@152) ($generated@@0 ($generated@@81 $generated@@344 $generated@@347))) ($generated@@245 $generated@@347 $generated@@345 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@347))
))))
 :pattern ( ($generated@@74 $generated@@344 ($generated@@233 $generated@@345) $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= ($generated ($generated@@81 ($generated@@271 $generated@@349) $generated@@348)) 0))
 :pattern ( (let (($generated@@349 (type $generated@@348)))
($generated@@81 ($generated@@271 $generated@@349) $generated@@348)))
)))
(assert  (and (and (forall (($generated@@353 T@U) ) (! (= (type ($generated@@350 $generated@@353)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@350 $generated@@353))
)) (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@351 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@351 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@280 (type $generated@@356))))
(let (($generated@@358 ($generated@@279 (type $generated@@356))))
(= (type ($generated@@352 $generated@@356)) ($generated@@76 $generated@@358 $generated@@357))))
 :pattern ( ($generated@@352 $generated@@356))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@278 $generated@@152 $generated@@152)) (= (type $generated@@360) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@359) $generated@@360))  (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@359) ($generated@@150 ($generated@@351 $generated@@143 $generated@@360)))) (= ($generated@@81 ($generated@@352 $generated@@359) ($generated@@150 ($generated@@351 $generated@@143 $generated@@360))) ($generated@@151 ($generated@@351 $generated@@143 $generated@@360))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@359) $generated@@360))
)))
(assert  (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@363)) ($generated@@76 $generated@@152 $generated@@4))
 :pattern ( ($generated@@361 $generated@@363))
)) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@298 (type $generated@@364))))
(let (($generated@@366 ($generated@@297 (type $generated@@364))))
(= (type ($generated@@362 $generated@@364)) ($generated@@76 $generated@@366 $generated@@365))))
 :pattern ( ($generated@@362 $generated@@364))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@368) $generated@@152)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@367) $generated@@368))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@367) ($generated@@150 ($generated@@351 $generated@@143 $generated@@368)))) (= ($generated@@81 ($generated@@362 $generated@@367) ($generated@@150 ($generated@@351 $generated@@143 $generated@@368))) ($generated@@151 ($generated@@351 $generated@@143 $generated@@368))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@279 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@278 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@319 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@276 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@352 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@319 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@297 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@296 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@362 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@380 $generated@@381)) $generated@@64)
 :pattern ( ($generated@@379 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (= (type $generated@@382) ($generated@@278 $generated@@152 $generated@@152)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@382) $generated@@386))) (and ($generated@@245 ($generated@@81 ($generated@@352 $generated@@382) $generated@@386) $generated@@384 $generated@@385) ($generated@@245 $generated@@386 $generated@@383 $generated@@385)))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@382) $generated@@386))
))))
 :pattern ( ($generated@@74 $generated@@382 ($generated@@379 $generated@@383 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@64)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@390) $generated@@394))) (and ($generated@@245 ($generated@@81 ($generated@@362 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@245 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 Int) ($generated@@397 Int) ) (! (= ($generated@@395 $generated@@396 $generated@@397) (div $generated@@396 $generated@@397))
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@T) ) (! (= (type ($generated@@398 $generated@@399)) ($generated@@76 $generated@@399 $generated@@4))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@298 (type $generated@@400))))
(let (($generated@@402 ($generated@@297 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@296 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@295 $generated@@402 $generated@@401)) (= ($generated@@294 $generated@@400) ($generated@@398 $generated@@402))))))
 :pattern ( ($generated@@294 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@298 (type $generated@@403))))
(let (($generated@@405 ($generated@@297 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@296 $generated@@405 $generated@@404)) (= (= $generated@@403 ($generated@@295 $generated@@405 $generated@@404)) (= ($generated@@330 $generated@@403) ($generated@@398 $generated@@404))))))
 :pattern ( ($generated@@330 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@298 (type $generated@@406))))
(let (($generated@@408 ($generated@@297 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@296 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@295 $generated@@408 $generated@@407)) (= ($generated@@361 $generated@@406) ($generated@@398 $generated@@152))))))
 :pattern ( ($generated@@361 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@280 (type $generated@@409))))
(let (($generated@@411 ($generated@@279 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@278 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@277 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (and (and (= (type $generated@@412) $generated@@152) (= (type $generated@@413) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@409) ($generated@@265 ($generated@@218 $generated@@412 $generated@@413)))))
 :no-pattern (type $generated@@412)
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@350 $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@298 (type $generated@@414))))
(let (($generated@@416 ($generated@@297 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@296 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@295 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@152) (= (type $generated@@418) $generated@@152)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@414) ($generated@@265 ($generated@@218 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@361 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@152) ($generated@@219 $generated@@419 $generated@@46)) (and (= ($generated@@265 ($generated@@351 $generated@@2 $generated@@419)) $generated@@419) ($generated@@139 ($generated@@351 $generated@@2 $generated@@419) $generated@@46)))
 :pattern ( ($generated@@219 $generated@@419 $generated@@46))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@152) ($generated@@219 $generated@@420 $generated@@47)) (and (= ($generated@@265 ($generated@@351 $generated@@3 $generated@@420)) $generated@@420) ($generated@@139 ($generated@@351 $generated@@3 $generated@@420) $generated@@47)))
 :pattern ( ($generated@@219 $generated@@420 $generated@@47))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@152) ($generated@@219 $generated@@421 $generated@@44)) (and (= ($generated@@265 ($generated@@351 $generated@@4 $generated@@421)) $generated@@421) ($generated@@139 ($generated@@351 $generated@@4 $generated@@421) $generated@@44)))
 :pattern ( ($generated@@219 $generated@@421 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@422) 20))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@152) ($generated@@219 $generated@@423 $generated@@45)) (and (= ($generated@@265 ($generated@@351 $generated@@422 $generated@@423)) $generated@@423) ($generated@@139 ($generated@@351 $generated@@422 $generated@@423) $generated@@45)))
 :pattern ( ($generated@@219 $generated@@423 $generated@@45))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (= (type $generated@@425) $generated@@64) (= ($generated@@219 ($generated@@265 $generated@@424) $generated@@425) ($generated@@139 $generated@@424 $generated@@425)))
 :pattern ( ($generated@@219 ($generated@@265 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@79 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@76 $generated@@427 $generated@@2)) (<= 0 ($generated@@270 $generated@@426))))
 :pattern ( ($generated@@270 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@260 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@259 $generated@@429)) (<= 0 ($generated@@258 $generated@@428))))
 :pattern ( ($generated@@258 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@379 $generated@@432 $generated@@433)) $generated@@432))
 :pattern ( ($generated@@379 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@379 $generated@@436 $generated@@437)) $generated@@437))
 :pattern ( ($generated@@379 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@72 ($generated@@379 $generated@@438 $generated@@439)) $generated@@58))
 :pattern ( ($generated@@379 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@387 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@387 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@387 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@387 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@387 $generated@@448 $generated@@449)) $generated@@59))
 :pattern ( ($generated@@387 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@152) (= (type $generated@@451) $generated@@152)) (= ($generated@@251 ($generated@@218 $generated@@450 $generated@@451)) $generated@@61))
 :pattern ( ($generated@@218 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@142 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@142 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@142 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@142 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@152) (= (type $generated@@461) $generated@@152)) (= ($generated@@150 ($generated@@218 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@218 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@152) (= (type $generated@@463) $generated@@152)) (= ($generated@@151 ($generated@@218 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@218 $generated@@462 $generated@@463))
)))
(assert  (and (forall (($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@466))
)) (forall (($generated@@467 T@U) ($generated@@468 Int) ) (! (let (($generated@@469 ($generated@@260 (type $generated@@467))))
(= (type ($generated@@465 $generated@@467 $generated@@468)) $generated@@469))
 :pattern ( ($generated@@465 $generated@@467 $generated@@468))
))))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@470) ($generated@@259 $generated@@152)) (= (type $generated@@471) $generated@@64)) (= (type $generated@@472) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@470 ($generated@@464 $generated@@471) $generated@@472) (forall (($generated@@473 Int) ) (!  (=> (and (<= 0 $generated@@473) (< $generated@@473 ($generated@@258 $generated@@470))) ($generated@@245 ($generated@@465 $generated@@470 $generated@@473) $generated@@471 $generated@@472))
 :pattern ( ($generated@@465 $generated@@470 $generated@@473))
))))
 :pattern ( ($generated@@74 $generated@@470 ($generated@@464 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@475 Int) ) (! (= ($generated@@474 ($generated@@75 $generated@@475)) $generated@@475)
 :pattern ( ($generated@@75 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@228 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@228 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@479)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@233 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@233 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@483)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@157 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@157 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@487)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@464 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@464 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@464 $generated@@491)) $generated@@57))
 :pattern ( ($generated@@464 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
(= ($generated@@351 $generated@@493 ($generated@@265 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@265 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@278 $generated@@152 $generated@@152)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= ($generated@@139 $generated@@494 ($generated@@379 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@276 $generated@@494) $generated@@497))) (and ($generated@@219 ($generated@@81 ($generated@@352 $generated@@494) $generated@@497) $generated@@496) ($generated@@219 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@494) $generated@@497))
 :pattern ( ($generated@@81 ($generated@@276 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@139 $generated@@494 ($generated@@379 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) $generated@@64)) (= ($generated@@139 $generated@@498 ($generated@@387 $generated@@499 $generated@@500)) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@152) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@498) $generated@@501))) (and ($generated@@219 ($generated@@81 ($generated@@362 $generated@@498) $generated@@501) $generated@@500) ($generated@@219 $generated@@501 $generated@@499)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@498) $generated@@501))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@498) $generated@@501))
))))
 :pattern ( ($generated@@139 $generated@@498 ($generated@@387 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@152) (= (type $generated@@505) $generated@@152)) (< ($generated@@502 $generated@@504) ($generated@@503 ($generated@@218 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@218 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@152) (= (type $generated@@507) $generated@@152)) (< ($generated@@502 $generated@@507) ($generated@@503 ($generated@@218 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@218 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@152) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) ($generated@@219 $generated@@508 ($generated@@379 $generated@@509 $generated@@510))) (and (= ($generated@@265 ($generated@@351 ($generated@@278 $generated@@152 $generated@@152) $generated@@508)) $generated@@508) ($generated@@139 ($generated@@351 ($generated@@278 $generated@@152 $generated@@152) $generated@@508) ($generated@@379 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@219 $generated@@508 ($generated@@379 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@152) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) ($generated@@219 $generated@@511 ($generated@@387 $generated@@512 $generated@@513))) (and (= ($generated@@265 ($generated@@351 ($generated@@296 $generated@@152 $generated@@152) $generated@@511)) $generated@@511) ($generated@@139 ($generated@@351 ($generated@@296 $generated@@152 $generated@@152) $generated@@511) ($generated@@387 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@219 $generated@@511 ($generated@@387 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@152)) ($generated@@219 $generated@@516 ($generated@@142 $generated@@514 $generated@@515))) (and (= ($generated@@265 ($generated@@351 $generated@@143 $generated@@516)) $generated@@516) ($generated@@139 ($generated@@351 $generated@@143 $generated@@516) ($generated@@142 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@219 $generated@@516 ($generated@@142 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@81 ($generated@@398 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@81 ($generated@@398 $generated@@518) $generated@@517)))
)))
(assert (forall (($generated@@519 Int) ($generated@@520 Int) ) (! (= ($generated@@136 $generated@@519 $generated@@520) (mod $generated@@519 $generated@@520))
 :pattern ( ($generated@@136 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (and (= ($generated@@72 ($generated@@142 $generated@@523 $generated@@524)) $generated@@62) (= ($generated@@521 ($generated@@142 $generated@@523 $generated@@524)) $generated@@63)))
 :pattern ( ($generated@@142 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 Int) ($generated@@527 Int) ) (! (= ($generated@@525 $generated@@526 $generated@@527) (* $generated@@526 $generated@@527))
 :pattern ( ($generated@@525 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@143) (= ($generated@@502 ($generated@@265 $generated@@528)) ($generated@@503 $generated@@528)))
 :pattern ( ($generated@@502 ($generated@@265 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@152) ($generated@@219 $generated@@529 ($generated@@75 0))) (and (= ($generated@@265 ($generated@@351 $generated@@2 $generated@@529)) $generated@@529) ($generated@@139 ($generated@@351 ($generated@@76 $generated@@152 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@219 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@64)) ($generated@@219 $generated@@530 ($generated@@228 $generated@@531))) (and (= ($generated@@265 ($generated@@351 ($generated@@76 $generated@@152 $generated@@4) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@351 ($generated@@76 $generated@@152 $generated@@4) $generated@@530) ($generated@@228 $generated@@531))))
 :pattern ( ($generated@@219 $generated@@530 ($generated@@228 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@64)) ($generated@@219 $generated@@532 ($generated@@233 $generated@@533))) (and (= ($generated@@265 ($generated@@351 ($generated@@76 $generated@@152 $generated@@4) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@351 ($generated@@76 $generated@@152 $generated@@4) $generated@@532) ($generated@@233 $generated@@533))))
 :pattern ( ($generated@@219 $generated@@532 ($generated@@233 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@152) (= (type $generated@@535) $generated@@64)) ($generated@@219 $generated@@534 ($generated@@157 $generated@@535))) (and (= ($generated@@265 ($generated@@351 ($generated@@76 $generated@@152 $generated@@2) $generated@@534)) $generated@@534) ($generated@@139 ($generated@@351 ($generated@@76 $generated@@152 $generated@@2) $generated@@534) ($generated@@157 $generated@@535))))
 :pattern ( ($generated@@219 $generated@@534 ($generated@@157 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@64)) ($generated@@219 $generated@@536 ($generated@@464 $generated@@537))) (and (= ($generated@@265 ($generated@@351 ($generated@@259 $generated@@152) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@351 ($generated@@259 $generated@@152) $generated@@536) ($generated@@464 $generated@@537))))
 :pattern ( ($generated@@219 $generated@@536 ($generated@@464 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@152 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@157 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@152) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@245 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@157 $generated@@539) $generated@@540))
)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@542 Int) ) (!  (=> (or ($generated@@135 $generated@@542) (not (= 0 $generated@@132))) (= ($generated@@133 $generated@@542)  (and (<= ($generated@@134 2) $generated@@542) (forall (($generated@@543 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@543) (< $generated@@543 $generated@@542)) (not (= ($generated@@136 $generated@@542 $generated@@543) 0))))
 :pattern ( ($generated@@136 $generated@@542 $generated@@543))
)))))
 :pattern ( ($generated@@133 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@143) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@546) (and ($generated@@141 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@142 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@142 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@245 ($generated@@150 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@245 ($generated@@150 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@143) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@550) (and ($generated@@141 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@142 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@142 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@245 ($generated@@151 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@245 ($generated@@151 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@152) (= (type $generated@@553) $generated@@152)) (= ($generated@@218 ($generated@@239 $generated@@552) ($generated@@239 $generated@@553)) ($generated@@239 ($generated@@218 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@218 ($generated@@239 $generated@@552) ($generated@@239 $generated@@553)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@134 $generated@@554))) ($generated@@239 ($generated@@265 ($generated@@8 $generated@@554))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@134 $generated@@554))))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@265 ($generated@@239 $generated@@555)) ($generated@@239 ($generated@@265 $generated@@555)))
 :pattern ( ($generated@@265 ($generated@@239 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@260 (type $generated@@556))))
 (=> (and (= (type $generated@@556) ($generated@@259 $generated@@557)) (= ($generated@@258 $generated@@556) 0)) (= $generated@@556 ($generated@@257 $generated@@557))))
 :pattern ( ($generated@@258 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@559)))
 (=> (and (and (= (type $generated@@558) ($generated@@76 $generated@@561 $generated@@2)) (= (type $generated@@560) $generated@@2)) (<= 0 ($generated $generated@@560))) (= ($generated@@270 ($generated@@82 $generated@@558 $generated@@559 $generated@@560)) (+ (- ($generated@@270 $generated@@558) ($generated ($generated@@81 $generated@@558 $generated@@559))) ($generated $generated@@560)))))
 :pattern ( ($generated@@270 ($generated@@82 $generated@@558 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@2)) ($generated@@74 $generated@@563 $generated@@46 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@46 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@3)) ($generated@@74 $generated@@565 $generated@@47 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@47 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@4)) ($generated@@74 $generated@@567 $generated@@44 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@44 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@422)) ($generated@@74 $generated@@569 $generated@@45 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@45 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@152)) ($generated@@74 $generated@@571 $generated@@48 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@48 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@259 $generated@@152)) (= (type $generated@@573) $generated@@64)) (= ($generated@@139 $generated@@572 ($generated@@464 $generated@@573)) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@258 $generated@@572))) ($generated@@219 ($generated@@465 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@465 $generated@@572 $generated@@574))
))))
 :pattern ( ($generated@@139 $generated@@572 ($generated@@464 $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ) (!  (=> (= (type $generated@@576) ($generated@@259 $generated@@152)) (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@258 $generated@@576))) (< ($generated@@503 ($generated@@351 $generated@@143 ($generated@@465 $generated@@576 $generated@@577))) ($generated@@575 $generated@@576))))
 :pattern ( ($generated@@503 ($generated@@351 $generated@@143 ($generated@@465 $generated@@576 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@278 $generated@@152 $generated@@152)) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@64)) ($generated@@139 $generated@@578 ($generated@@379 $generated@@579 $generated@@580))) (and (and ($generated@@139 ($generated@@276 $generated@@578) ($generated@@228 $generated@@579)) ($generated@@139 ($generated@@319 $generated@@578) ($generated@@228 $generated@@580))) ($generated@@139 ($generated@@350 $generated@@578) ($generated@@228 ($generated@@142 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@139 $generated@@578 ($generated@@379 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@296 $generated@@152 $generated@@152)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) ($generated@@139 $generated@@581 ($generated@@387 $generated@@582 $generated@@583))) (and (and ($generated@@139 ($generated@@294 $generated@@581) ($generated@@233 $generated@@582)) ($generated@@139 ($generated@@330 $generated@@581) ($generated@@233 $generated@@583))) ($generated@@139 ($generated@@361 $generated@@581) ($generated@@233 ($generated@@142 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@139 $generated@@581 ($generated@@387 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@2) ($generated@@139 $generated@@584 $generated@@46))
 :pattern ( ($generated@@139 $generated@@584 $generated@@46))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@3) ($generated@@139 $generated@@585 $generated@@47))
 :pattern ( ($generated@@139 $generated@@585 $generated@@47))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@4) ($generated@@139 $generated@@586 $generated@@44))
 :pattern ( ($generated@@139 $generated@@586 $generated@@44))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@422) ($generated@@139 $generated@@587 $generated@@45))
 :pattern ( ($generated@@139 $generated@@587 $generated@@45))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@152) ($generated@@139 $generated@@588 $generated@@48))
 :pattern ( ($generated@@139 $generated@@588 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(assert  (and (and (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@604) ($generated@@164 $generated@@77 $generated@@4))) (= (type $generated@@605) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 70) (let (($generated@@606 true))
(let (($generated@@607  (=> (= (ControlFlow 0 58) (- 0 57)) (=> (not ($generated@@133 $generated@@589)) (not (and (<= ($generated@@134 2) $generated@@589) (forall (($generated@@608 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@608) (< $generated@@608 $generated@@589)) (not (= ($generated@@136 $generated@@589 $generated@@608) 0))))
 :pattern ( ($generated@@136 $generated@@589 $generated@@608))
))))))))
(let (($generated@@609  (=> (and (not (and (<= ($generated@@134 2) $generated@@590) (< $generated@@590 $generated@@589))) (= (ControlFlow 0 63) 58)) $generated@@607)))
(let (($generated@@610  (=> (and (<= ($generated@@134 2) $generated@@590) (< $generated@@590 $generated@@589)) (and (=> (= (ControlFlow 0 61) (- 0 62)) (not (= $generated@@590 0))) (=> (= (ControlFlow 0 61) 58) $generated@@607)))))
(let (($generated@@611  (=> (< $generated@@590 ($generated@@134 2)) (and (=> (= (ControlFlow 0 65) 61) $generated@@610) (=> (= (ControlFlow 0 65) 63) $generated@@609)))))
(let (($generated@@612  (=> (<= ($generated@@134 2) $generated@@590) (and (=> (= (ControlFlow 0 64) 61) $generated@@610) (=> (= (ControlFlow 0 64) 63) $generated@@609)))))
(let (($generated@@613  (and (=> (= (ControlFlow 0 66) 64) $generated@@612) (=> (= (ControlFlow 0 66) 65) $generated@@611))))
(let (($generated@@614  (=> (<= ($generated@@134 2) $generated@@589) (and (=> (= (ControlFlow 0 67) 66) $generated@@613) (=> (= (ControlFlow 0 67) 60) $generated@@606)))))
(let (($generated@@615  (=> (and (< $generated@@589 ($generated@@134 2)) (= (ControlFlow 0 59) 58)) $generated@@607)))
(let (($generated@@616  (=> (and (and ($generated@@74 ($generated@@8 $generated@@589) $generated@@46 $generated@@591) ($generated@@135 $generated@@589)) (and ($generated@@135 $generated@@589) (not ($generated@@133 $generated@@589)))) (and (=> (= (ControlFlow 0 68) 67) $generated@@614) (=> (= (ControlFlow 0 68) 59) $generated@@615)))))
(let (($generated@@617  (and (=> (= (ControlFlow 0 24) (- 0 29)) (<= ($generated@@134 2) $generated@@592)) (=> (<= ($generated@@134 2) $generated@@592) (and (=> (= (ControlFlow 0 24) (- 0 28)) (< $generated@@592 $generated@@589)) (=> (< $generated@@592 $generated@@589) (and (=> (= (ControlFlow 0 24) (- 0 27)) (<= ($generated@@134 2) $generated@@593)) (=> (<= ($generated@@134 2) $generated@@593) (and (=> (= (ControlFlow 0 24) (- 0 26)) (= ($generated@@525 $generated@@592 $generated@@593) $generated@@589)) (=> (= ($generated@@525 $generated@@592 $generated@@593) $generated@@589) (and (=> (= (ControlFlow 0 24) (- 0 25)) (=> ($generated@@135 $generated@@592) (or ($generated@@133 $generated@@592) (<= ($generated@@134 2) $generated@@592)))) (=> (=> ($generated@@135 $generated@@592) (or ($generated@@133 $generated@@592) (<= ($generated@@134 2) $generated@@592))) (=> (= (ControlFlow 0 24) (- 0 23)) (=> ($generated@@135 $generated@@592) (or ($generated@@133 $generated@@592) (forall (($generated@@618 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@618) (< $generated@@618 $generated@@592)) (not (= ($generated@@136 $generated@@592 $generated@@618) 0))))
 :pattern ( ($generated@@136 $generated@@592 $generated@@618))
)))))))))))))))))
(let (($generated@@619  (=> (and (and ($generated@@133 $generated@@594) (= $generated@@592 $generated@@594)) (and (= $generated@@593 $generated@@595) (= (ControlFlow 0 35) 24))) $generated@@617)))
(let (($generated@@620  (=> (not ($generated@@133 $generated@@594)) (and (=> (= (ControlFlow 0 30) (- 0 34)) (or (<= 0 $generated@@589) (= $generated@@594 $generated@@589))) (=> (or (<= 0 $generated@@589) (= $generated@@594 $generated@@589)) (and (=> (= (ControlFlow 0 30) (- 0 33)) (< $generated@@594 $generated@@589)) (=> (< $generated@@594 $generated@@589) (and (=> (= (ControlFlow 0 30) (- 0 32)) (<= ($generated@@134 2) $generated@@594)) (=> (<= ($generated@@134 2) $generated@@594) (and (=> (= (ControlFlow 0 30) (- 0 31)) (not ($generated@@133 $generated@@594))) (=> (not ($generated@@133 $generated@@594)) (=> (and (and (and (and ($generated@@244 $generated@@596) ($generated@@597 $generated@@596)) (<= ($generated@@134 2) $generated@@598)) (and (and (< $generated@@598 $generated@@594) (<= ($generated@@134 2) $generated@@599)) (and (= ($generated@@525 $generated@@598 $generated@@599) $generated@@594) ($generated@@135 $generated@@598)))) (and (and (and ($generated@@135 $generated@@598) (and ($generated@@133 $generated@@598) (and (<= ($generated@@134 2) $generated@@598) (forall (($generated@@621 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@621) (< $generated@@621 $generated@@598)) (not (= ($generated@@136 $generated@@598 $generated@@621) 0))))
 :pattern ( ($generated@@136 $generated@@598 $generated@@621))
))))) (= $generated@@591 $generated@@596)) (and (and (= $generated@@600 ($generated@@525 $generated@@599 $generated@@595)) (= $generated@@592 $generated@@598)) (and (= $generated@@593 $generated@@600) (= (ControlFlow 0 30) 24))))) $generated@@617))))))))))))
(let (($generated@@622  (and (=> (= (ControlFlow 0 36) (- 0 40)) (<= ($generated@@134 2) $generated@@594)) (and (=> (= (ControlFlow 0 36) (- 0 39)) (< $generated@@594 $generated@@589)) (and (=> (= (ControlFlow 0 36) (- 0 38)) (<= ($generated@@134 2) $generated@@595)) (and (=> (= (ControlFlow 0 36) (- 0 37)) (= ($generated@@525 $generated@@594 $generated@@595) $generated@@589)) (=> (and (and (and (and (and (<= ($generated@@134 2) $generated@@594) (< $generated@@594 $generated@@589)) (<= ($generated@@134 2) $generated@@595)) (= ($generated@@525 $generated@@594 $generated@@595) $generated@@589)) ($generated@@74 ($generated@@8 $generated@@594) $generated@@46 $generated@@591)) (and ($generated@@135 $generated@@594) ($generated@@135 $generated@@594))) (and (=> (= (ControlFlow 0 36) 30) $generated@@620) (=> (= (ControlFlow 0 36) 35) $generated@@619)))))))))
(let (($generated@@623  (=> (and (not (and (and (<= ($generated@@134 2) $generated@@594) (< $generated@@594 $generated@@589)) (<= ($generated@@134 2) $generated@@595))) (= (ControlFlow 0 42) 36)) $generated@@622)))
(let (($generated@@624  (=> (and (and (and (<= ($generated@@134 2) $generated@@594) (< $generated@@594 $generated@@589)) (<= ($generated@@134 2) $generated@@595)) (= (ControlFlow 0 41) 36)) $generated@@622)))
(let (($generated@@625  (=> (not (and (<= ($generated@@134 2) $generated@@594) (< $generated@@594 $generated@@589))) (and (=> (= (ControlFlow 0 44) 41) $generated@@624) (=> (= (ControlFlow 0 44) 42) $generated@@623)))))
(let (($generated@@626  (=> (and (<= ($generated@@134 2) $generated@@594) (< $generated@@594 $generated@@589)) (and (=> (= (ControlFlow 0 43) 41) $generated@@624) (=> (= (ControlFlow 0 43) 42) $generated@@623)))))
(let (($generated@@627  (=> (< $generated@@594 ($generated@@134 2)) (and (=> (= (ControlFlow 0 46) 43) $generated@@626) (=> (= (ControlFlow 0 46) 44) $generated@@625)))))
(let (($generated@@628  (=> (<= ($generated@@134 2) $generated@@594) (and (=> (= (ControlFlow 0 45) 43) $generated@@626) (=> (= (ControlFlow 0 45) 44) $generated@@625)))))
(let (($generated@@629  (and (=> (= (ControlFlow 0 47) (- 0 49)) (or (and ($generated@@139 ($generated@@8 (- $generated@@589 1)) $generated@@46) (and (and (<= ($generated@@134 2) (- $generated@@589 1)) (< (- $generated@@589 1) $generated@@589)) (= ($generated@@136 $generated@@589 (- $generated@@589 1)) ($generated@@134 0)))) (or (and ($generated@@139 ($generated@@8 ($generated@@134 2)) $generated@@46) (and (and (<= ($generated@@134 2) ($generated@@134 2)) (< 2 $generated@@589)) (= ($generated@@136 $generated@@589 ($generated@@134 2)) ($generated@@134 0)))) (or (and ($generated@@139 ($generated@@8 ($generated@@134 0)) $generated@@46) (and (and (<= ($generated@@134 2) ($generated@@134 0)) (< 0 $generated@@589)) (= ($generated@@136 $generated@@589 ($generated@@134 0)) ($generated@@134 0)))) (exists (($generated@@630 Int) )  (and (and (<= ($generated@@134 2) $generated@@630) (< $generated@@630 $generated@@589)) (= ($generated@@136 $generated@@589 $generated@@630) ($generated@@134 0)))))))) (=> (or (and ($generated@@139 ($generated@@8 (- $generated@@589 1)) $generated@@46) (and (and (<= ($generated@@134 2) (- $generated@@589 1)) (< (- $generated@@589 1) $generated@@589)) (= ($generated@@136 $generated@@589 (- $generated@@589 1)) ($generated@@134 0)))) (or (and ($generated@@139 ($generated@@8 ($generated@@134 2)) $generated@@46) (and (and (<= ($generated@@134 2) ($generated@@134 2)) (< 2 $generated@@589)) (= ($generated@@136 $generated@@589 ($generated@@134 2)) ($generated@@134 0)))) (or (and ($generated@@139 ($generated@@8 ($generated@@134 0)) $generated@@46) (and (and (<= ($generated@@134 2) ($generated@@134 0)) (< 0 $generated@@589)) (= ($generated@@136 $generated@@589 ($generated@@134 0)) ($generated@@134 0)))) (exists (($generated@@631 Int) )  (and (and (<= ($generated@@134 2) $generated@@631) (< $generated@@631 $generated@@589)) (= ($generated@@136 $generated@@589 $generated@@631) ($generated@@134 0))))))) (=> (and (and (<= ($generated@@134 2) $generated@@594) (< $generated@@594 $generated@@589)) (= ($generated@@136 $generated@@589 $generated@@594) ($generated@@134 0))) (and (=> (= (ControlFlow 0 47) (- 0 48)) (not (= $generated@@594 0))) (=> (not (= $generated@@594 0)) (=> (= $generated@@595 ($generated@@395 $generated@@589 $generated@@594)) (and (=> (= (ControlFlow 0 47) 45) $generated@@628) (=> (= (ControlFlow 0 47) 46) $generated@@627))))))))))
(let (($generated@@632  (=> (and (not (and (<= ($generated@@134 2) $generated@@601) (< $generated@@601 $generated@@589))) (= (ControlFlow 0 52) 47)) $generated@@629)))
(let (($generated@@633  (=> (and (<= ($generated@@134 2) $generated@@601) (< $generated@@601 $generated@@589)) (and (=> (= (ControlFlow 0 50) (- 0 51)) (not (= $generated@@601 0))) (=> (= (ControlFlow 0 50) 47) $generated@@629)))))
(let (($generated@@634  (=> (< $generated@@601 ($generated@@134 2)) (and (=> (= (ControlFlow 0 54) 50) $generated@@633) (=> (= (ControlFlow 0 54) 52) $generated@@632)))))
(let (($generated@@635  (=> (<= ($generated@@134 2) $generated@@601) (and (=> (= (ControlFlow 0 53) 50) $generated@@633) (=> (= (ControlFlow 0 53) 52) $generated@@632)))))
(let (($generated@@636  (and (=> (= (ControlFlow 0 55) 53) $generated@@635) (=> (= (ControlFlow 0 55) 54) $generated@@634))))
(let (($generated@@637 true))
(let (($generated@@638  (=> (=> true (exists (($generated@@639 Int) ) (!  (and (and (<= ($generated@@134 2) $generated@@639) (< $generated@@639 $generated@@589)) (= ($generated@@136 $generated@@589 $generated@@639) ($generated@@134 0)))
 :pattern ( ($generated@@136 $generated@@589 $generated@@639))
))) (and (=> (= (ControlFlow 0 56) 55) $generated@@636) (=> (= (ControlFlow 0 56) 22) $generated@@637)))))
(let (($generated@@640 true))
(let (($generated@@641  (=> (= (ControlFlow 0 6) (- 0 5)) (=> (not (and (<= ($generated@@134 2) $generated@@589) (forall (($generated@@642 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@642) (< $generated@@642 $generated@@589)) (not (= ($generated@@136 $generated@@589 $generated@@642) 0))))
 :pattern ( ($generated@@136 $generated@@589 $generated@@642))
)))) (exists (($generated@@643 Int) ) (!  (and (and (<= ($generated@@134 2) $generated@@643) (< $generated@@643 $generated@@589)) (= ($generated@@136 $generated@@589 $generated@@643) ($generated@@134 0)))
 :pattern ( ($generated@@136 $generated@@589 $generated@@643))
))))))
(let (($generated@@644  (=> (and (not (and (<= ($generated@@134 2) $generated@@602) (< $generated@@602 $generated@@589))) (= (ControlFlow 0 9) 6)) $generated@@641)))
(let (($generated@@645  (=> (and (<= ($generated@@134 2) $generated@@602) (< $generated@@602 $generated@@589)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (not (= $generated@@602 0))) (=> (= (ControlFlow 0 7) 6) $generated@@641)))))
(let (($generated@@646  (=> (< $generated@@602 ($generated@@134 2)) (and (=> (= (ControlFlow 0 11) 7) $generated@@645) (=> (= (ControlFlow 0 11) 9) $generated@@644)))))
(let (($generated@@647  (=> (<= ($generated@@134 2) $generated@@602) (and (=> (= (ControlFlow 0 10) 7) $generated@@645) (=> (= (ControlFlow 0 10) 9) $generated@@644)))))
(let (($generated@@648  (and (=> (= (ControlFlow 0 12) 10) $generated@@647) (=> (= (ControlFlow 0 12) 11) $generated@@646))))
(let (($generated@@649 true))
(let (($generated@@650  (=> (not (and (<= ($generated@@134 2) $generated@@589) (forall (($generated@@651 Int) ) (!  (=> true (=> (and (<= ($generated@@134 2) $generated@@651) (< $generated@@651 $generated@@589)) (not (= ($generated@@136 $generated@@589 $generated@@651) 0))))
 :pattern ( ($generated@@136 $generated@@589 $generated@@651))
)))) (and (=> (= (ControlFlow 0 13) 12) $generated@@648) (=> (= (ControlFlow 0 13) 4) $generated@@649)))))
(let (($generated@@652  (=> (and (not (and (<= ($generated@@134 2) $generated@@603) (< $generated@@603 $generated@@589))) (= (ControlFlow 0 17) 13)) $generated@@650)))
(let (($generated@@653  (=> (and (and (<= ($generated@@134 2) $generated@@603) (< $generated@@603 $generated@@589)) (and (not (= $generated@@603 0)) (= (ControlFlow 0 16) 13))) $generated@@650)))
(let (($generated@@654  (=> (< $generated@@603 ($generated@@134 2)) (and (=> (= (ControlFlow 0 19) 16) $generated@@653) (=> (= (ControlFlow 0 19) 17) $generated@@652)))))
(let (($generated@@655  (=> (<= ($generated@@134 2) $generated@@603) (and (=> (= (ControlFlow 0 18) 16) $generated@@653) (=> (= (ControlFlow 0 18) 17) $generated@@652)))))
(let (($generated@@656  (and (=> (= (ControlFlow 0 20) 18) $generated@@655) (=> (= (ControlFlow 0 20) 19) $generated@@654))))
(let (($generated@@657  (=> (<= ($generated@@134 2) $generated@@589) (and (=> (= (ControlFlow 0 21) 20) $generated@@656) (=> (= (ControlFlow 0 21) 15) $generated@@640)))))
(let (($generated@@658  (=> (and (< $generated@@589 ($generated@@134 2)) (= (ControlFlow 0 14) 13)) $generated@@650)))
(let (($generated@@659  (=> (and ($generated@@74 ($generated@@8 $generated@@589) $generated@@46 $generated@@591) ($generated@@135 $generated@@589)) (=> (and (and ($generated@@135 $generated@@589) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@239 ($generated@@11 true)))) (not ($generated@@133 $generated@@589))))))
(let (($generated@@660 true))
(let (($generated@@661  (=> (= $generated@@604 ($generated@@163 $generated@@605 $generated@@591 $generated@@60 false)) (and (and (and (and (and (=> (= (ControlFlow 0 69) 1) $generated@@660) (=> (= (ControlFlow 0 69) 3) $generated@@659)) (=> (= (ControlFlow 0 69) 68) $generated@@616)) (=> (= (ControlFlow 0 69) 56) $generated@@638)) (=> (= (ControlFlow 0 69) 21) $generated@@657)) (=> (= (ControlFlow 0 69) 14) $generated@@658)))))
(let (($generated@@662  (=> (and ($generated@@244 $generated@@591) ($generated@@597 $generated@@591)) (=> (and (and (= 1 $generated@@132) (<= ($generated@@134 2) $generated@@589)) (and (not ($generated@@133 $generated@@589)) (= (ControlFlow 0 70) 69))) $generated@@661))))
$generated@@662)))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 () Int)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@U Int) T@U)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@76 $generated@@275 $generated@@4))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert  (=> (<= 1 $generated@@270) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@76 $generated@@145 $generated@@4)) (or ($generated@@272 $generated@@276) (and (not (= 1 $generated@@270)) (and ($generated@@132 $generated@@276 ($generated@@233 $generated@@46)) (not ($generated@@273 $generated@@276 ($generated@@274 $generated@@145))))))) true)
 :pattern ( ($generated@@271 $generated@@276))
))))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@145)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@64) (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@74 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@250 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@76 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@79 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@76 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@81 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@76 $generated@@145 $generated@@4)) ($generated@@289 $generated@@290)) (and ($generated@@0 ($generated@@81 $generated@@290 ($generated@@277 ($generated@@8 ($generated@@288 $generated@@290))))) (forall (($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@290 ($generated@@277 $generated@@291)))) (<= ($generated $generated@@291) ($generated@@288 $generated@@290)))
 :pattern ( ($generated@@81 $generated@@290 ($generated@@277 $generated@@291)))
))))
 :pattern ( ($generated@@288 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@76 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@79 (type $generated@@328))))
 (=> (and (= (type $generated@@328) ($generated@@76 $generated@@330 $generated@@4)) (= (type $generated@@329) ($generated@@76 $generated@@330 $generated@@4))) (= ($generated@@273 $generated@@328 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (= ($generated@@0 ($generated@@81 $generated@@328 $generated@@331)) ($generated@@0 ($generated@@81 $generated@@329 $generated@@331))))
 :pattern ( ($generated@@81 $generated@@328 $generated@@331))
 :pattern ( ($generated@@81 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@273 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@79 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@76 $generated@@333 $generated@@2)) (= ($generated@@151 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@81 $generated@@332 $generated@@334))) (<= ($generated ($generated@@81 $generated@@332 $generated@@334)) ($generated@@282 $generated@@332))))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@151 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@296 (type $generated@@335))))
(let (($generated@@337 ($generated@@295 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@294 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@293 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@292 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@296 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(let (($generated@@344 ($generated@@295 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@294 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@293 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@314 (type $generated@@346))))
(let (($generated@@348 ($generated@@313 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@312 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@311 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@310 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(let (($generated@@355 ($generated@@313 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@312 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@311 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@132 $generated@@357 ($generated@@150 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@224 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@132 $generated@@357 ($generated@@150 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@233 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@250 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@233 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@250 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@81 ($generated@@283 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@81 ($generated@@283 $generated@@369) $generated@@368)))
)))
(assert  (and (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@370 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@373))
)) (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@371 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@296 (type $generated@@376))))
(let (($generated@@378 ($generated@@295 (type $generated@@376))))
(= (type ($generated@@372 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@372 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@379) ($generated@@143 ($generated@@371 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@372 $generated@@379) ($generated@@143 ($generated@@371 $generated@@136 $generated@@380))) ($generated@@144 ($generated@@371 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@314 (type $generated@@384))))
(let (($generated@@386 ($generated@@313 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@387) ($generated@@143 ($generated@@371 $generated@@136 $generated@@388)))) (= ($generated@@81 ($generated@@382 $generated@@387) ($generated@@143 ($generated@@371 $generated@@136 $generated@@388))) ($generated@@144 ($generated@@371 $generated@@136 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@295 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@294 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@313 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@312 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@402) $generated@@406))) (and ($generated@@250 ($generated@@81 ($generated@@372 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@250 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@410) $generated@@414))) (and ($generated@@250 ($generated@@81 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@250 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@79 (type $generated@@415))))
 (=> (and (and (= (type $generated@@415) ($generated@@76 $generated@@417 $generated@@4)) (= (type $generated@@416) ($generated@@76 $generated@@417 $generated@@4))) ($generated@@273 $generated@@415 $generated@@416)) (= $generated@@415 $generated@@416)))
 :pattern ( ($generated@@273 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@76 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@314 (type $generated@@420))))
(let (($generated@@422 ($generated@@313 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@312 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@311 $generated@@422 $generated@@421)) (= ($generated@@310 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@310 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@314 (type $generated@@423))))
(let (($generated@@425 ($generated@@313 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@312 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@311 $generated@@425 $generated@@424)) (= ($generated@@350 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@350 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@314 (type $generated@@426))))
(let (($generated@@428 ($generated@@313 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@312 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@311 $generated@@428 $generated@@427)) (= ($generated@@381 $generated@@426) ($generated@@418 $generated@@145))))))
 :pattern ( ($generated@@381 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@296 (type $generated@@429))))
(let (($generated@@431 ($generated@@295 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@294 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@293 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@145) (= (type $generated@@433) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@429) ($generated@@277 ($generated@@223 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@370 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@314 (type $generated@@434))))
(let (($generated@@436 ($generated@@313 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@312 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@311 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@145) (= (type $generated@@438) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@434) ($generated@@277 ($generated@@223 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@224 $generated@@439 $generated@@46)) (and (= ($generated@@277 ($generated@@371 $generated@@2 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@371 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@224 $generated@@440 $generated@@47)) (and (= ($generated@@277 ($generated@@371 $generated@@3 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@371 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@224 $generated@@441 $generated@@44)) (and (= ($generated@@277 ($generated@@371 $generated@@4 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@371 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@145) ($generated@@224 $generated@@443 $generated@@45)) (and (= ($generated@@277 ($generated@@371 $generated@@442 $generated@@443)) $generated@@443) ($generated@@132 ($generated@@371 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@64) (= ($generated@@224 ($generated@@277 $generated@@444) $generated@@445) ($generated@@132 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@224 ($generated@@277 $generated@@444) $generated@@445))
)))
(assert  (=> (<= 1 $generated@@270) (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@447) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@272 $generated@@447) (and (not (= 1 $generated@@270)) (and (and ($generated@@249 $generated@@446) ($generated@@132 $generated@@447 ($generated@@233 $generated@@46))) (not ($generated@@273 $generated@@447 ($generated@@274 $generated@@145))))))) (and ($generated@@289 $generated@@447) (= ($generated@@271 $generated@@447) (let (($generated@@448 ($generated@@288 $generated@@447)))
$generated@@448))))
 :pattern ( ($generated@@271 $generated@@447) ($generated@@249 $generated@@446))
))))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@79 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@76 $generated@@450 $generated@@2)) (<= 0 ($generated@@282 $generated@@449))))
 :pattern ( ($generated@@282 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@265 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@264 $generated@@452)) (<= 0 ($generated@@263 $generated@@451))))
 :pattern ( ($generated@@263 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@399 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@399 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@399 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@407 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@407 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@407 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@473 $generated@@474)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@135 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@135 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@135 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@135 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@223 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) (= (type $generated@@486) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@223 $generated@@485 $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@489))
)) (forall (($generated@@490 T@U) ($generated@@491 Int) ) (! (let (($generated@@492 ($generated@@265 (type $generated@@490))))
(= (type ($generated@@488 $generated@@490 $generated@@491)) $generated@@492))
 :pattern ( ($generated@@488 $generated@@490 $generated@@491))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@264 $generated@@145)) (= (type $generated@@494) $generated@@64)) (= (type $generated@@495) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@493 ($generated@@487 $generated@@494) $generated@@495) (forall (($generated@@496 Int) ) (!  (=> (and (<= 0 $generated@@496) (< $generated@@496 ($generated@@263 $generated@@493))) ($generated@@250 ($generated@@488 $generated@@493 $generated@@496) $generated@@494 $generated@@495))
 :pattern ( ($generated@@488 $generated@@493 $generated@@496))
))))
 :pattern ( ($generated@@74 $generated@@493 ($generated@@487 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@498 Int) ) (! (= ($generated@@497 ($generated@@75 $generated@@498)) $generated@@498)
 :pattern ( ($generated@@75 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@233 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@233 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@502)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@238 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@238 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@506)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@150 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@150 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@510)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@487 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@487 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@487 $generated@@514)) $generated@@57))
 :pattern ( ($generated@@487 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated@@371 $generated@@516 ($generated@@277 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@277 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@132 $generated@@517 ($generated@@399 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@517) $generated@@520))) (and ($generated@@224 ($generated@@81 ($generated@@372 $generated@@517) $generated@@520) $generated@@519) ($generated@@224 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@132 $generated@@517 ($generated@@399 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) (= ($generated@@132 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@521) $generated@@524))) (and ($generated@@224 ($generated@@81 ($generated@@382 $generated@@521) $generated@@524) $generated@@523) ($generated@@224 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@521) $generated@@524))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@132 $generated@@521 ($generated@@407 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@145)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@223 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@223 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@145)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@223 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@223 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@531 ($generated@@399 $generated@@532 $generated@@533))) (and (= ($generated@@277 ($generated@@371 ($generated@@294 $generated@@145 $generated@@145) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@371 ($generated@@294 $generated@@145 $generated@@145) $generated@@531) ($generated@@399 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@531 ($generated@@399 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@407 $generated@@535 $generated@@536))) (and (= ($generated@@277 ($generated@@371 ($generated@@312 $generated@@145 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@371 ($generated@@312 $generated@@145 $generated@@145) $generated@@534) ($generated@@407 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@407 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@145)) ($generated@@224 $generated@@539 ($generated@@135 $generated@@537 $generated@@538))) (and (= ($generated@@277 ($generated@@371 $generated@@136 $generated@@539)) $generated@@539) ($generated@@132 ($generated@@371 $generated@@136 $generated@@539) ($generated@@135 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@135 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@81 ($generated@@274 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@81 ($generated@@274 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@81 ($generated@@418 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@81 ($generated@@418 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@69)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@135 $generated@@546 $generated@@547)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@136) (= ($generated@@525 ($generated@@277 $generated@@548)) ($generated@@526 $generated@@548)))
 :pattern ( ($generated@@525 ($generated@@277 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) ($generated@@224 $generated@@549 ($generated@@75 0))) (and (= ($generated@@277 ($generated@@371 $generated@@2 $generated@@549)) $generated@@549) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@549) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@549 ($generated@@75 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@233 $generated@@551))) (and (= ($generated@@277 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@550) ($generated@@233 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@233 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@224 $generated@@552 ($generated@@238 $generated@@553))) (and (= ($generated@@277 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@552) ($generated@@238 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@238 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) ($generated@@224 $generated@@554 ($generated@@150 $generated@@555))) (and (= ($generated@@277 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@554)) $generated@@554) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@554) ($generated@@150 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@150 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) ($generated@@224 $generated@@556 ($generated@@487 $generated@@557))) (and (= ($generated@@277 ($generated@@371 ($generated@@264 $generated@@145) $generated@@556)) $generated@@556) ($generated@@132 ($generated@@371 ($generated@@264 $generated@@145) $generated@@556) ($generated@@487 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@487 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@558 ($generated@@150 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@558 $generated@@561)))) ($generated@@250 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@81 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@150 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@564) (and ($generated@@134 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@64) ($generated@@74 $generated@@562 ($generated@@135 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@135 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@250 ($generated@@143 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@568) (and ($generated@@134 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@64) ($generated@@74 $generated@@566 ($generated@@135 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@74 $generated@@566 ($generated@@135 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@250 ($generated@@144 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@145) (= (type $generated@@571) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)) ($generated@@245 ($generated@@223 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@570) ($generated@@245 $generated@@571)))
)))
(assert (forall (($generated@@572 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@243 $generated@@572))) ($generated@@245 ($generated@@277 ($generated@@8 $generated@@572))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@243 $generated@@572))))
)))
(assert (forall (($generated@@573 T@U) ) (! (= ($generated@@277 ($generated@@245 $generated@@573)) ($generated@@245 ($generated@@277 $generated@@573)))
 :pattern ( ($generated@@277 ($generated@@245 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@265 (type $generated@@574))))
 (=> (and (= (type $generated@@574) ($generated@@264 $generated@@575)) (= ($generated@@263 $generated@@574) 0)) (= $generated@@574 ($generated@@262 $generated@@575))))
 :pattern ( ($generated@@263 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@577)))
 (=> (and (and (= (type $generated@@576) ($generated@@76 $generated@@579 $generated@@2)) (= (type $generated@@578) $generated@@2)) (<= 0 ($generated $generated@@578))) (= ($generated@@282 ($generated@@82 $generated@@576 $generated@@577 $generated@@578)) (+ (- ($generated@@282 $generated@@576) ($generated ($generated@@81 $generated@@576 $generated@@577))) ($generated $generated@@578)))))
 :pattern ( ($generated@@282 ($generated@@82 $generated@@576 $generated@@577 $generated@@578)))
)))
(assert  (=> (<= 1 $generated@@270) (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@272 ($generated@@245 $generated@@581)) (and (not (= 1 $generated@@270)) (and (and ($generated@@249 $generated@@580) ($generated@@132 $generated@@581 ($generated@@233 $generated@@46))) (not ($generated@@273 $generated@@581 ($generated@@274 $generated@@145))))))) (and ($generated@@289 ($generated@@245 $generated@@581)) (= ($generated@@271 ($generated@@245 $generated@@581)) (let (($generated@@582 ($generated@@288 ($generated@@245 $generated@@581))))
$generated@@582))))
 :weight 3
 :pattern ( ($generated@@271 ($generated@@245 $generated@@581)) ($generated@@249 $generated@@580))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@2)) ($generated@@74 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@3)) ($generated@@74 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@4)) ($generated@@74 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@442)) ($generated@@74 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@145)) ($generated@@74 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@264 $generated@@145)) (= (type $generated@@594) $generated@@64)) (= ($generated@@132 $generated@@593 ($generated@@487 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@263 $generated@@593))) ($generated@@224 ($generated@@488 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@488 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@132 $generated@@593 ($generated@@487 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@263 $generated@@597))) (< ($generated@@526 ($generated@@371 $generated@@136 ($generated@@488 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@526 ($generated@@371 $generated@@136 ($generated@@488 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) $generated@@64)) ($generated@@132 $generated@@599 ($generated@@399 $generated@@600 $generated@@601))) (and (and ($generated@@132 ($generated@@292 $generated@@599) ($generated@@233 $generated@@600)) ($generated@@132 ($generated@@339 $generated@@599) ($generated@@233 $generated@@601))) ($generated@@132 ($generated@@370 $generated@@599) ($generated@@233 ($generated@@135 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@132 $generated@@599 ($generated@@399 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@132 $generated@@602 ($generated@@407 $generated@@603 $generated@@604))) (and (and ($generated@@132 ($generated@@310 $generated@@602) ($generated@@238 $generated@@603)) ($generated@@132 ($generated@@350 $generated@@602) ($generated@@238 $generated@@604))) ($generated@@132 ($generated@@381 $generated@@602) ($generated@@238 ($generated@@135 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@132 $generated@@602 ($generated@@407 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@132 $generated@@605 $generated@@46))
 :pattern ( ($generated@@132 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@132 $generated@@606 $generated@@47))
 :pattern ( ($generated@@132 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@132 $generated@@607 $generated@@44))
 :pattern ( ($generated@@132 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@442) ($generated@@132 $generated@@608 $generated@@45))
 :pattern ( ($generated@@132 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@145) ($generated@@132 $generated@@609 $generated@@48))
 :pattern ( ($generated@@132 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 (T@U) Bool)
(declare-fun $generated@@618 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@610) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@613) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@614) $generated@@77)) (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@618) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@619 true))
(let (($generated@@620  (=> (= (ControlFlow 0 4) (- 0 3)) (or (and ($generated@@132 ($generated@@8 ($generated@@243 0)) $generated@@46) (and ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 ($generated@@243 0))))) (forall (($generated@@621 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@621)))) (<= $generated@@621 ($generated@@243 0))))
 :pattern ( ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@621))))
)))) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@2) (and ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 $generated@@622))) (forall (($generated@@623 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@623)))) (<= $generated@@623 ($generated $generated@@622))))
 :pattern ( ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@623))))
))))
 :no-pattern (type $generated@@622)
 :no-pattern ($generated $generated@@622)
 :no-pattern ($generated@@0 $generated@@622)
))))))
(let (($generated@@624  (=> (and (not ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@611))))) (= (ControlFlow 0 8) 4)) $generated@@620)))
(let (($generated@@625  (=> (and ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@611)))) (= (ControlFlow 0 7) 4)) $generated@@620)))
(let (($generated@@626  (and (=> (= (ControlFlow 0 9) 7) $generated@@625) (=> (= (ControlFlow 0 9) 8) $generated@@624))))
(let (($generated@@627  (=> ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@612)))) (and (=> (= (ControlFlow 0 10) 9) $generated@@626) (=> (= (ControlFlow 0 10) 6) $generated@@619)))))
(let (($generated@@628  (=> (and (not ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@612))))) (= (ControlFlow 0 5) 4)) $generated@@620)))
(let (($generated@@629  (and (=> (= (ControlFlow 0 11) 10) $generated@@627) (=> (= (ControlFlow 0 11) 5) $generated@@628))))
(let (($generated@@630 true))
(let (($generated@@631  (=> (= $generated@@613 ($generated@@211 $generated@@614 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (not ($generated@@273 $generated@@610 ($generated@@274 $generated@@145)))) (=> (not ($generated@@273 $generated@@610 ($generated@@274 $generated@@145))) (=> (and (and ($generated@@249 $generated@@616) ($generated@@617 $generated@@616)) (and (exists (($generated@@632 Int) ) (!  (and ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@632)))) (forall (($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@610 ($generated@@277 $generated@@633)))) (<= ($generated $generated@@633) $generated@@632))
 :pattern ( ($generated@@81 $generated@@610 ($generated@@277 $generated@@633)))
)))
 :pattern ( ($generated@@81 $generated@@610 ($generated@@277 ($generated@@8 $generated@@632))))
)) (= $generated@@615 $generated@@616))) (and (=> (= (ControlFlow 0 12) 11) $generated@@629) (=> (= (ControlFlow 0 12) 2) $generated@@630))))))))
(let (($generated@@634 true))
(let (($generated@@635  (=> (and (= $generated@@618 ($generated@@156 $generated@@614 $generated@@615 $generated@@60 false)) (not ($generated@@273 $generated@@610 ($generated@@274 $generated@@145)))) (and (=> (= (ControlFlow 0 14) 1) $generated@@634) (=> (= (ControlFlow 0 14) 12) $generated@@631)))))
(let (($generated@@636  (=> (and (and (and ($generated@@249 $generated@@615) ($generated@@617 $generated@@615)) ($generated@@132 $generated@@610 ($generated@@233 $generated@@46))) (and (= 1 $generated@@270) (= (ControlFlow 0 15) 14))) $generated@@635)))
$generated@@636))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U T@U) Bool)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U Int) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@523 (T@T) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U T@U) Bool)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@79 (type $generated@@306))))
 (=> (and (= (type $generated@@306) ($generated@@76 $generated@@308 $generated@@4)) (= (type $generated@@307) ($generated@@76 $generated@@308 $generated@@4))) (= ($generated@@305 $generated@@306 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (= ($generated@@0 ($generated@@81 $generated@@306 $generated@@309)) ($generated@@0 ($generated@@81 $generated@@307 $generated@@309))))
 :pattern ( ($generated@@81 $generated@@306 $generated@@309))
 :pattern ( ($generated@@81 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@79 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@76 $generated@@311 $generated@@2)) (= ($generated@@151 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@81 $generated@@310 $generated@@312))) (<= ($generated ($generated@@81 $generated@@310 $generated@@312)) ($generated@@263 $generated@@310))))
 :pattern ( ($generated@@81 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@151 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(let (($generated@@315 ($generated@@272 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@271 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@270 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@269 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@273 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@273 (type $generated@@320))))
(let (($generated@@322 ($generated@@272 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@271 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@270 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(let (($generated@@326 ($generated@@290 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@289 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@288 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@287 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@291 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(let (($generated@@333 ($generated@@290 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@289 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@288 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@336) $generated@@64)) (= ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@335 $generated@@337)))) ($generated@@212 $generated@@337 $generated@@336))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@339) $generated@@64)) (= (type $generated@@340) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@145) ($generated@@0 ($generated@@81 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@81 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@74 $generated@@338 ($generated@@221 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@226 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@81 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (and (forall (($generated@@351 T@U) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@349 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@349 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@273 (type $generated@@354))))
(let (($generated@@356 ($generated@@272 (type $generated@@354))))
(= (type ($generated@@350 $generated@@354)) ($generated@@76 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@350 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@358) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358)))) (= ($generated@@81 ($generated@@350 $generated@@357) ($generated@@143 ($generated@@349 $generated@@136 $generated@@358))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@358))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@291 (type $generated@@362))))
(let (($generated@@364 ($generated@@290 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@366) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366)))) (= ($generated@@81 ($generated@@360 $generated@@365) ($generated@@143 ($generated@@349 $generated@@136 $generated@@366))) ($generated@@144 ($generated@@349 $generated@@136 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@272 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@271 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@81 ($generated@@317 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@367) $generated@@371))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@290 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@289 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@372) $generated@@376))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@64)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))) (and ($generated@@238 ($generated@@81 ($generated@@350 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@238 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))) (and ($generated@@238 ($generated@@81 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@238 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@79 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@76 $generated@@395 $generated@@4)) (= (type $generated@@394) ($generated@@76 $generated@@395 $generated@@4))) ($generated@@305 $generated@@393 $generated@@394)) (= $generated@@393 $generated@@394)))
 :pattern ( ($generated@@305 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398 $generated@@399)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 Int) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@400) $generated@@64) (= (type $generated@@401) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@403) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@400 $generated@@401 $generated@@402) $generated@@403))  (and ($generated@@212 $generated@@403 $generated@@400) (and ($generated@@0 ($generated@@81 $generated@@401 $generated@@403)) (< $generated@@402 ($generated ($generated@@349 $generated@@2 $generated@@403)))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@400 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@291 (type $generated@@406))))
(let (($generated@@408 ($generated@@290 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@289 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@288 $generated@@408 $generated@@407)) (= ($generated@@287 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@287 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@291 (type $generated@@409))))
(let (($generated@@411 ($generated@@290 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@289 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@288 $generated@@411 $generated@@410)) (= ($generated@@328 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@328 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@291 (type $generated@@412))))
(let (($generated@@414 ($generated@@290 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@289 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@288 $generated@@414 $generated@@413)) (= ($generated@@359 $generated@@412) ($generated@@404 $generated@@145))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@273 (type $generated@@415))))
(let (($generated@@417 ($generated@@272 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@271 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@270 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@415) ($generated@@258 ($generated@@211 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@348 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@291 (type $generated@@420))))
(let (($generated@@422 ($generated@@290 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@289 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@288 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@420) ($generated@@258 ($generated@@211 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@359 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@212 $generated@@425 $generated@@46)) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@349 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@212 $generated@@426 $generated@@47)) (and (= ($generated@@258 ($generated@@349 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@349 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@212 $generated@@427 $generated@@44)) (and (= ($generated@@258 ($generated@@349 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@349 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@212 $generated@@429 $generated@@45)) (and (= ($generated@@258 ($generated@@349 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@349 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@79 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@76 $generated@@433 $generated@@2)) (<= 0 ($generated@@263 $generated@@432))))
 :pattern ( ($generated@@263 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@253 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@252 $generated@@435)) (<= 0 ($generated@@251 $generated@@434))))
 :pattern ( ($generated@@251 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@377 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@377 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@377 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@377 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@377 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@385 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@385 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@385 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@385 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@211 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@211 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@253 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@252 $generated@@145)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@251 $generated@@476))) ($generated@@238 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@75 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@75 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@221 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@221 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@226 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@226 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@150 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@349 $generated@@499 ($generated@@258 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@258 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@377 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@500) $generated@@503))) (and ($generated@@212 ($generated@@81 ($generated@@350 $generated@@500) $generated@@503) $generated@@502) ($generated@@212 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@377 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@385 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@504) $generated@@507))) (and ($generated@@212 ($generated@@81 ($generated@@360 $generated@@504) $generated@@507) $generated@@506) ($generated@@212 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@385 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@211 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@211 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@211 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@211 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@514 ($generated@@377 $generated@@515 $generated@@516))) (and (= ($generated@@258 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@349 ($generated@@271 $generated@@145 $generated@@145) $generated@@514) ($generated@@377 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@377 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@385 $generated@@518 $generated@@519))) (and (= ($generated@@258 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@349 ($generated@@289 $generated@@145 $generated@@145) $generated@@517) ($generated@@385 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@385 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@145)) ($generated@@212 $generated@@522 ($generated@@135 $generated@@520 $generated@@521))) (and (= ($generated@@258 ($generated@@349 $generated@@136 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@349 $generated@@136 $generated@@522) ($generated@@135 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@135 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@524 T@T) ) (! (= (type ($generated@@523 $generated@@524)) ($generated@@76 $generated@@524 $generated@@4))
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (not ($generated@@0 ($generated@@81 ($generated@@523 $generated@@526) $generated@@525))))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@81 ($generated@@523 $generated@@526) $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@81 ($generated@@404 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@136) (= ($generated@@508 ($generated@@258 $generated@@533)) ($generated@@509 $generated@@533)))
 :pattern ( ($generated@@508 ($generated@@258 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@212 $generated@@534 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@349 $generated@@2 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@212 $generated@@535 ($generated@@221 $generated@@536))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@221 $generated@@536))))
 :pattern ( ($generated@@212 $generated@@535 ($generated@@221 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@212 $generated@@537 ($generated@@226 $generated@@538))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@226 $generated@@538))))
 :pattern ( ($generated@@212 $generated@@537 ($generated@@226 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@212 $generated@@539 ($generated@@150 $generated@@540))) (and (= ($generated@@258 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@349 ($generated@@76 $generated@@145 $generated@@2) $generated@@539) ($generated@@150 $generated@@540))))
 :pattern ( ($generated@@212 $generated@@539 ($generated@@150 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@212 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@258 ($generated@@349 ($generated@@252 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@349 ($generated@@252 $generated@@145) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@212 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@79 (type $generated@@544))))
 (=> (and (= (type $generated@@544) ($generated@@76 $generated@@546 $generated@@4)) (= (type $generated@@545) ($generated@@76 $generated@@546 $generated@@4))) (= ($generated@@543 $generated@@544 $generated@@545) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@546) ($generated@@0 ($generated@@81 $generated@@544 $generated@@547))) ($generated@@0 ($generated@@81 $generated@@545 $generated@@547)))
 :pattern ( ($generated@@81 $generated@@544 $generated@@547))
 :pattern ( ($generated@@81 $generated@@545 $generated@@547))
)))))
 :pattern ( ($generated@@543 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@548 ($generated@@150 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@548 $generated@@551)))) ($generated@@238 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@81 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@150 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@136) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@554) (and ($generated@@134 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@135 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@135 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@238 ($generated@@143 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@558) (and ($generated@@134 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@135 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@135 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@238 ($generated@@144 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@560) ($generated@@233 $generated@@561)) ($generated@@233 ($generated@@211 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@560) ($generated@@233 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@562))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@563)) ($generated@@233 ($generated@@258 $generated@@563)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@253 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@252 $generated@@565)) (= ($generated@@251 $generated@@564) 0)) (= $generated@@564 ($generated@@250 $generated@@565))))
 :pattern ( ($generated@@251 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@76 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@263 ($generated@@82 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@263 $generated@@566) ($generated ($generated@@81 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@2)) ($generated@@74 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@3)) ($generated@@74 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@4)) ($generated@@74 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@428)) ($generated@@74 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@145)) ($generated@@74 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@252 $generated@@145)) (= (type $generated@@581) $generated@@64)) (= ($generated@@132 $generated@@580 ($generated@@470 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@251 $generated@@580))) ($generated@@212 ($generated@@471 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@471 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@132 $generated@@580 ($generated@@470 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@251 $generated@@584))) (< ($generated@@509 ($generated@@349 $generated@@136 ($generated@@471 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@509 ($generated@@349 $generated@@136 ($generated@@471 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) ($generated@@132 $generated@@586 ($generated@@377 $generated@@587 $generated@@588))) (and (and ($generated@@132 ($generated@@269 $generated@@586) ($generated@@221 $generated@@587)) ($generated@@132 ($generated@@317 $generated@@586) ($generated@@221 $generated@@588))) ($generated@@132 ($generated@@348 $generated@@586) ($generated@@221 ($generated@@135 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@377 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) $generated@@64)) ($generated@@132 $generated@@589 ($generated@@385 $generated@@590 $generated@@591))) (and (and ($generated@@132 ($generated@@287 $generated@@589) ($generated@@226 $generated@@590)) ($generated@@132 ($generated@@328 $generated@@589) ($generated@@226 $generated@@591))) ($generated@@132 ($generated@@359 $generated@@589) ($generated@@226 ($generated@@135 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@132 $generated@@589 ($generated@@385 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@132 $generated@@592 $generated@@46))
 :pattern ( ($generated@@132 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@132 $generated@@593 $generated@@47))
 :pattern ( ($generated@@132 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@132 $generated@@594 $generated@@44))
 :pattern ( ($generated@@132 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@428) ($generated@@132 $generated@@595 $generated@@45))
 :pattern ( ($generated@@132 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@145) ($generated@@132 $generated@@596 $generated@@48))
 :pattern ( ($generated@@132 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Bool)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@603) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@599) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@597) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@609) $generated@@77)) (= (type $generated@@610) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@612) ($generated@@76 $generated@@145 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 54) (let (($generated@@614 true))
(let (($generated@@615  (=> (and (not (and (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@598)))) ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@600))))) (not ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@600))))))) (= (ControlFlow 0 38) 36)) $generated@@614)))
(let (($generated@@616  (=> (and (and (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@598)))) ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@600))))) (not ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@600)))))) (= (ControlFlow 0 37) 36)) $generated@@614)))
(let (($generated@@617  (=> (not (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@598)))) ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@600)))))) (and (=> (= (ControlFlow 0 40) 37) $generated@@616) (=> (= (ControlFlow 0 40) 38) $generated@@615)))))
(let (($generated@@618  (=> (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@598)))) ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@600))))) (and (=> (= (ControlFlow 0 39) 37) $generated@@616) (=> (= (ControlFlow 0 39) 38) $generated@@615)))))
(let (($generated@@619  (=> (not ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@598))))) (and (=> (= (ControlFlow 0 42) 39) $generated@@618) (=> (= (ControlFlow 0 42) 40) $generated@@617)))))
(let (($generated@@620  (=> ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@598)))) (and (=> (= (ControlFlow 0 41) 39) $generated@@618) (=> (= (ControlFlow 0 41) 40) $generated@@617)))))
(let (($generated@@621  (and (=> (= (ControlFlow 0 43) 41) $generated@@620) (=> (= (ControlFlow 0 43) 42) $generated@@619))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (and (not ($generated@@305 $generated@@597 ($generated@@523 $generated@@145))) ($generated@@543 $generated@@597 $generated@@599)) (and (=> (= (ControlFlow 0 44) 43) $generated@@621) (=> (= (ControlFlow 0 44) 35) $generated@@622)))))
(let (($generated@@624  (=> (and ($generated@@305 $generated@@597 ($generated@@523 $generated@@145)) (= (ControlFlow 0 46) 44)) $generated@@623)))
(let (($generated@@625  (=> (and (not ($generated@@305 $generated@@597 ($generated@@523 $generated@@145))) (= (ControlFlow 0 45) 44)) $generated@@623)))
(let (($generated@@626  (=> (not $generated@@601) (and (=> (= (ControlFlow 0 47) 45) $generated@@625) (=> (= (ControlFlow 0 47) 46) $generated@@624)))))
(let (($generated@@627  (=> (= (ControlFlow 0 24) (- 0 23)) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@2) (and ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 $generated@@628))) (forall (($generated@@629 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@629)))) (<= $generated@@629 ($generated $generated@@628))))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@629))))
))))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@258 $generated@@628)))
)))))
(let (($generated@@630  (=> (and (forall (($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@2) true) ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 $generated@@631)))) (<= ($generated $generated@@631) $generated@@602))
 :pattern ( ($generated@@81 $generated@@597 ($generated@@258 $generated@@631)))
)) (= (ControlFlow 0 26) 24)) $generated@@627)))
(let (($generated@@632  (=> (and (not ($generated@@0 ($generated@@233 ($generated@@11 true)))) (= (ControlFlow 0 25) 24)) $generated@@627)))
(let (($generated@@633  (=> (= $generated@@603 ($generated@@396 $generated@@46 $generated@@599 $generated@@602)) (and (=> (= (ControlFlow 0 7) (- 0 11)) ($generated@@0 ($generated@@81 $generated@@603 ($generated@@258 ($generated@@8 $generated@@604))))) (=> ($generated@@0 ($generated@@81 $generated@@603 ($generated@@258 ($generated@@8 $generated@@604)))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and ($generated@@543 $generated@@603 $generated@@597) (not ($generated@@543 $generated@@597 $generated@@603)))) (=> (and ($generated@@543 $generated@@603 $generated@@597) (not ($generated@@543 $generated@@597 $generated@@603))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> $generated@@601 (not ($generated@@305 $generated@@603 ($generated@@523 $generated@@145))))) (=> (=> $generated@@601 (not ($generated@@305 $generated@@603 ($generated@@523 $generated@@145)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> $generated@@601 ($generated@@543 $generated@@603 $generated@@599))) (=> (=> $generated@@601 ($generated@@543 $generated@@603 $generated@@599)) (=> (= (ControlFlow 0 7) (- 0 6)) (=> $generated@@601 (forall (($generated@@634 Int) ($generated@@635 Int) ) (!  (=> true (=> (and (and ($generated@@0 ($generated@@81 $generated@@603 ($generated@@258 ($generated@@8 $generated@@634)))) ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@635))))) (not ($generated@@0 ($generated@@81 $generated@@603 ($generated@@258 ($generated@@8 $generated@@635)))))) (<= $generated@@635 $generated@@634)))
 :pattern ( ($generated@@81 $generated@@603 ($generated@@258 ($generated@@8 $generated@@635))) ($generated@@81 $generated@@603 ($generated@@258 ($generated@@8 $generated@@634))))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@635))) ($generated@@81 $generated@@603 ($generated@@258 ($generated@@8 $generated@@634))))
)))))))))))))))
(let (($generated@@636  (=> (and (not (and ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@605)))) (< $generated@@602 $generated@@605))) (= (ControlFlow 0 13) 7)) $generated@@633)))
(let (($generated@@637  (=> (and (and ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@605)))) (< $generated@@602 $generated@@605)) (= (ControlFlow 0 12) 7)) $generated@@633)))
(let (($generated@@638  (=> (not ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@605))))) (and (=> (= (ControlFlow 0 15) 12) $generated@@637) (=> (= (ControlFlow 0 15) 13) $generated@@636)))))
(let (($generated@@639  (=> ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@605)))) (and (=> (= (ControlFlow 0 14) 12) $generated@@637) (=> (= (ControlFlow 0 14) 13) $generated@@636)))))
(let (($generated@@640  (and (=> (= (ControlFlow 0 16) 14) $generated@@639) (=> (= (ControlFlow 0 16) 15) $generated@@638))))
(let (($generated@@641 true))
(let (($generated@@642  (and (=> (= (ControlFlow 0 17) (- 0 18)) (or (and ($generated@@132 ($generated@@8 (+ $generated@@602 1)) $generated@@46) (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 (+ $generated@@602 1))))) (< $generated@@602 (+ $generated@@602 1)))) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 ($generated@@231 0))))) (< $generated@@602 0))) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@2) (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 $generated@@643))) (< $generated@@602 ($generated $generated@@643))))
 :no-pattern (type $generated@@643)
 :no-pattern ($generated $generated@@643)
 :no-pattern ($generated@@0 $generated@@643)
))))) (=> (or (and ($generated@@132 ($generated@@8 (+ $generated@@602 1)) $generated@@46) (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 (+ $generated@@602 1))))) (< $generated@@602 (+ $generated@@602 1)))) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 ($generated@@231 0))))) (< $generated@@602 0))) (exists (($generated@@644 Int) )  (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@644)))) (< $generated@@602 $generated@@644))))) (=> (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@604)))) (< $generated@@602 $generated@@604)) (and (=> (= (ControlFlow 0 17) 16) $generated@@640) (=> (= (ControlFlow 0 17) 5) $generated@@641)))))))
(let (($generated@@645  (=> (and (not ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@606))))) (= (ControlFlow 0 20) 17)) $generated@@642)))
(let (($generated@@646  (=> (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@606)))) (= (ControlFlow 0 19) 17)) $generated@@642)))
(let (($generated@@647  (and (=> (= (ControlFlow 0 21) 19) $generated@@646) (=> (= (ControlFlow 0 21) 20) $generated@@645))))
(let (($generated@@648 true))
(let (($generated@@649  (=> (not (forall (($generated@@650 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@650)))) (<= $generated@@650 $generated@@602)))
 :pattern ( ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@650))))
))) (and (=> (= (ControlFlow 0 22) 21) $generated@@647) (=> (= (ControlFlow 0 22) 4) $generated@@648)))))
(let (($generated@@651  (and (=> (= (ControlFlow 0 27) 26) $generated@@630) (=> (= (ControlFlow 0 27) 22) $generated@@649))))
(let (($generated@@652  (=> (and (not ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@607))))) (= (ControlFlow 0 29) 27)) $generated@@651)))
(let (($generated@@653  (=> (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@607)))) (= (ControlFlow 0 28) 27)) $generated@@651)))
(let (($generated@@654  (and (=> (= (ControlFlow 0 30) 28) $generated@@653) (=> (= (ControlFlow 0 30) 29) $generated@@652))))
(let (($generated@@655 true))
(let (($generated@@656  (and (=> (= (ControlFlow 0 31) (- 0 32)) (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 ($generated@@231 0)))))) (exists (($generated@@657 T@U) ) (!  (and (= (type $generated@@657) $generated@@2) ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 $generated@@657))))
 :no-pattern (type $generated@@657)
 :no-pattern ($generated $generated@@657)
 :no-pattern ($generated@@0 $generated@@657)
)))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@231 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 ($generated@@231 0)))))) (exists (($generated@@658 Int) ) ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@658)))))) (=> ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 ($generated@@8 $generated@@602)))) (and (=> (= (ControlFlow 0 31) 30) $generated@@654) (=> (= (ControlFlow 0 31) 3) $generated@@655)))))))
(let (($generated@@659 true))
(let (($generated@@660  (=> ($generated@@0 ($generated@@233 ($generated@@11 true))) (and (=> (= (ControlFlow 0 33) 31) $generated@@656) (=> (= (ControlFlow 0 33) 2) $generated@@659)))))
(let (($generated@@661  (=> $generated@@601 (and (=> (= (ControlFlow 0 34) 25) $generated@@632) (=> (= (ControlFlow 0 34) 33) $generated@@660)))))
(let (($generated@@662  (and (=> (= (ControlFlow 0 48) 47) $generated@@626) (=> (= (ControlFlow 0 48) 34) $generated@@661))))
(let (($generated@@663 true))
(let (($generated@@664  (=> (and (and ($generated@@132 $generated@@597 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@597 ($generated@@221 $generated@@46) $generated@@608)) (and (not false) (=> $generated@@601 true))) (=> (and (and (and (=> $generated@@601 (not ($generated@@305 $generated@@597 ($generated@@523 $generated@@145)))) (=> $generated@@601 ($generated@@543 $generated@@597 $generated@@599))) (and (=> $generated@@601 true) (=> $generated@@601 (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) $generated@@2) (= (type $generated@@666) $generated@@2)) true) (and (and ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 $generated@@665))) ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 $generated@@666)))) (not ($generated@@0 ($generated@@81 $generated@@597 ($generated@@258 $generated@@666)))))) (<= ($generated $generated@@666) ($generated $generated@@665)))
 :pattern ( ($generated@@81 $generated@@597 ($generated@@258 $generated@@666)) ($generated@@81 $generated@@597 ($generated@@258 $generated@@665)))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@258 $generated@@666)) ($generated@@81 $generated@@597 ($generated@@258 $generated@@665)))
))))) (and (and (= $generated@@608 $generated@@608) (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@67 (type $generated@@668))))
 (=> (and (and (= (type $generated@@667) $generated@@77) (= (type $generated@@668) ($generated@@66 $generated@@669))) (and (not (= $generated@@667 $generated@@609)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@608 $generated@@667) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@608 $generated@@667) $generated@@668) ($generated@@83 ($generated@@81 $generated@@608 $generated@@667) $generated@@668)) ($generated@@0 ($generated@@155 $generated@@610 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@608 $generated@@667) $generated@@668))
))) (and ($generated@@543 $generated@@597 $generated@@599) (=> ($generated@@305 $generated@@597 $generated@@599) true)))) (and (=> (= (ControlFlow 0 49) 1) $generated@@663) (=> (= (ControlFlow 0 49) 48) $generated@@662))))))
(let (($generated@@670  (=> (= $generated@@610 ($generated@@156 $generated@@609 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 50) (- 0 53)) (=> $generated@@601 (not ($generated@@305 $generated@@599 ($generated@@523 $generated@@145))))) (=> (=> $generated@@601 (not ($generated@@305 $generated@@599 ($generated@@523 $generated@@145)))) (and (=> (= (ControlFlow 0 50) (- 0 52)) (=> $generated@@601 ($generated@@543 $generated@@599 $generated@@599))) (=> (=> $generated@@601 ($generated@@543 $generated@@599 $generated@@599)) (and (=> (= (ControlFlow 0 50) (- 0 51)) (=> $generated@@601 (forall (($generated@@671 Int) ($generated@@672 Int) ) (!  (=> true (=> (and (and ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@671)))) ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@672))))) (not ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@672)))))) (<= $generated@@672 $generated@@671)))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@672))) ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@671))))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@672))) ($generated@@81 $generated@@599 ($generated@@258 ($generated@@8 $generated@@671))))
)))) (=> (=> $generated@@601 (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@2) (= (type $generated@@674) $generated@@2)) true) (and (and ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 $generated@@673))) ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 $generated@@674)))) (not ($generated@@0 ($generated@@81 $generated@@599 ($generated@@258 $generated@@674)))))) (<= ($generated $generated@@674) ($generated $generated@@673)))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@258 $generated@@674)) ($generated@@81 $generated@@599 ($generated@@258 $generated@@673)))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@258 $generated@@674)) ($generated@@81 $generated@@599 ($generated@@258 $generated@@673)))
))) (=> (= (ControlFlow 0 50) 49) $generated@@664))))))))))
(let (($generated@@675  (=> (and (and ($generated@@237 $generated@@608) ($generated@@611 $generated@@608)) (and ($generated@@132 $generated@@599 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@599 ($generated@@221 $generated@@46) $generated@@608))) (=> (and (and (and (and ($generated@@132 $generated@@612 ($generated@@221 $generated@@46)) ($generated@@74 $generated@@612 ($generated@@221 $generated@@46) $generated@@608)) true) (= 0 $generated@@613)) (and (not ($generated@@305 $generated@@599 ($generated@@523 $generated@@145))) (= (ControlFlow 0 54) 50))) $generated@@670))))
$generated@@675))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (* $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(assert  (and (and (and (and (= (type $generated@@180) ($generated@@48 $generated@@47 $generated@@49)) (= (type $generated@@182) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@183) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@184) $generated@@47)) (= (type $generated@@185) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@187  (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@176 ($generated@@171 $generated@@176 $generated@@177)))))
(let (($generated@@188  (=> (not (= $generated@@177 ($generated@@157 1))) (and (=> (= (ControlFlow 0 5) (- 0 11)) (= ($generated@@171 $generated@@176 $generated@@177) (+ ($generated@@171 $generated@@176 (- $generated@@177 1)) $generated@@176))) (=> (= ($generated@@171 $generated@@176 $generated@@177) (+ ($generated@@171 $generated@@176 (- $generated@@177 1)) $generated@@176)) (=> (= $generated@@178 (- $generated@@177 1)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (or (<= 0 $generated@@176) (= $generated@@176 $generated@@176))) (=> (or (<= 0 $generated@@176) (= $generated@@176 $generated@@176)) (and (=> (= (ControlFlow 0 5) (- 0 9)) (or (or (<= 0 $generated@@177) (< $generated@@176 $generated@@176)) (= $generated@@178 $generated@@177))) (=> (or (or (<= 0 $generated@@177) (< $generated@@176 $generated@@176)) (= $generated@@178 $generated@@177)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (< $generated@@176 $generated@@176) (and (= $generated@@176 $generated@@176) (< $generated@@178 $generated@@177)))) (=> (or (< $generated@@176 $generated@@176) (and (= $generated@@176 $generated@@176) (< $generated@@178 $generated@@177))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@157 1) $generated@@176)) (=> (<= ($generated@@157 1) $generated@@176) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@157 1) $generated@@178)) (=> (<= ($generated@@157 1) $generated@@178) (=> (and (and (and ($generated@@179 $generated@@180) ($generated@@181 $generated@@180)) (<= $generated@@176 ($generated@@171 $generated@@176 $generated@@178))) (and (= $generated@@182 $generated@@180) (= (ControlFlow 0 5) 2))) $generated@@187)))))))))))))))))
(let (($generated@@189  (=> (= $generated@@177 ($generated@@157 1)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (= ($generated@@171 $generated@@176 $generated@@177) $generated@@176)) (=> (= ($generated@@171 $generated@@176 $generated@@177) $generated@@176) (=> (= (ControlFlow 0 3) 2) $generated@@187))))))
(let (($generated@@190  (=> (= $generated@@183 ($generated@@45 $generated@@184 $generated@@182 $generated@@185 false)) (and (=> (= (ControlFlow 0 12) 3) $generated@@189) (=> (= (ControlFlow 0 12) 5) $generated@@188)))))
(let (($generated@@191  (=> (and ($generated@@179 $generated@@182) ($generated@@181 $generated@@182)) (=> (and (and (= 0 $generated@@186) (<= ($generated@@157 1) $generated@@176)) (and (<= ($generated@@157 1) $generated@@177) (= (ControlFlow 0 13) 12))) $generated@@190))))
$generated@@191))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(declare-fun $generated@@174 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 Int) ) (! (= ($generated@@174 $generated@@175 $generated@@176) (* $generated@@175 $generated@@176))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@177))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@177))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@178)) ($generated@@159 ($generated@@163 $generated@@178)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@178)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 () Int)
(assert  (and (and (and (and (= (type $generated@@179) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@180) $generated@@47)) (= (type $generated@@181) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@182) ($generated@@50 $generated@@4))) (= (type $generated@@188) ($generated@@48 $generated@@47 $generated@@49))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@191  (=> (= $generated@@179 ($generated@@45 $generated@@180 $generated@@181 $generated@@182 false)) (=> (and (= ($generated@@174 $generated@@183 $generated@@184) $generated@@185) (< $generated@@186 $generated@@183)) (=> (and (and ($generated@@187 $generated@@188) ($generated@@189 $generated@@188)) (and (= $generated@@181 $generated@@188) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@183 0)))))))
(let (($generated@@192  (=> (and (and (and ($generated@@187 $generated@@181) ($generated@@189 $generated@@181)) (and (<= ($generated@@157 0) $generated@@183) (<= ($generated@@157 0) $generated@@184))) (and (and (<= ($generated@@157 0) $generated@@185) (<= ($generated@@157 0) $generated@@186)) (and (= 1 $generated@@190) (= (ControlFlow 0 3) 2)))) $generated@@191)))
$generated@@192)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
