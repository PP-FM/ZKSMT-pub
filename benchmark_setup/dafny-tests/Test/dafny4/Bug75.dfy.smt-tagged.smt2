(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (T@U Int Int) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 () T@T)
(declare-fun $generated@@253 (Int Int) Bool)
(declare-fun $generated@@254 (Int) Bool)
(declare-fun $generated@@255 (T@U Int) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 () T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (and (= ($generated@@1 $generated@@252) 17) (forall (($generated@@256 T@U) ) (! (= (type ($generated@@251 $generated@@256)) $generated@@252)
 :pattern ( ($generated@@251 $generated@@256))
))))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@257 T@U) ($generated@@258 Int) ($generated@@259 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@252) (or ($generated@@253 ($generated@@243 $generated@@258) ($generated@@243 $generated@@259)) (not (= 0 $generated@@249)))) (and (=> ($generated@@0 ($generated@@245 ($generated@@11 (> $generated@@258 0)))) ($generated@@254 ($generated@@243 (- $generated@@258 1)))) (= ($generated@@250 ($generated@@251 $generated@@257) ($generated@@243 $generated@@258) ($generated@@243 $generated@@259)) ($generated@@0 ($generated@@245 ($generated@@11  (=> (> $generated@@258 0) ($generated@@255 ($generated@@251 $generated@@257) ($generated@@243 (- $generated@@258 1))))))))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@251 $generated@@257) ($generated@@243 $generated@@258) ($generated@@243 $generated@@259)))
))))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@260 T@U) ($generated@@261 Int) ) (!  (=> (and (= (type $generated@@260) $generated@@252) (or ($generated@@254 $generated@@261) (not (= 0 $generated@@249)))) true)
 :pattern ( ($generated@@255 $generated@@260 $generated@@261))
))))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@262 T@U) ($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (= (type $generated@@262) $generated@@252) (or ($generated@@253 $generated@@263 $generated@@264) (not (= 0 $generated@@249)))) (and (=> (> $generated@@263 0) ($generated@@254 (- $generated@@263 1))) (= ($generated@@250 ($generated@@251 $generated@@262) $generated@@263 $generated@@264)  (=> (> $generated@@263 0) ($generated@@255 $generated@@262 (- $generated@@263 1))))))
 :pattern ( ($generated@@250 ($generated@@251 $generated@@262) $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@145)) (= (type $generated@@270) $generated@@145)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@223 $generated@@269 $generated@@270) ($generated@@135 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@269 $generated@@270) ($generated@@135 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@136) (= ($generated@@134 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@134 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@145) (= (type $generated@@277) $generated@@145)) (= $generated@@275 ($generated@@223 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@134 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 18)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (= (type $generated@@286) $generated@@252) (= ($generated@@250 ($generated@@251 $generated@@286) $generated@@287 $generated@@288) ($generated@@250 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@250 ($generated@@251 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@145)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@64) (= (type $generated@@293) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@74 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@266 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@294 T@U) ($generated@@295 Int) ) (!  (=> (and (= (type $generated@@294) $generated@@252) (or ($generated@@254 $generated@@295) (not (= 0 $generated@@249)))) (and (forall (($generated@@296 Int) ) (! ($generated@@253 $generated@@295 $generated@@296)
 :pattern ( ($generated@@250 $generated@@294 $generated@@295 $generated@@296))
)) (= ($generated@@255 ($generated@@251 $generated@@294) $generated@@295) (exists (($generated@@297 Int) ) (! ($generated@@250 $generated@@294 $generated@@295 $generated@@297)
 :pattern ( ($generated@@250 $generated@@294 $generated@@295 $generated@@297))
)))))
 :pattern ( ($generated@@255 ($generated@@251 $generated@@294) $generated@@295))
))))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@76 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@81 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@2)) (= ($generated@@151 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@81 $generated@@340 $generated@@342))) (<= ($generated ($generated@@81 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@151 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(let (($generated@@345 ($generated@@307 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@306 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@305 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@304 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@308 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@308 (type $generated@@350))))
(let (($generated@@352 ($generated@@307 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@306 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@305 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@326 (type $generated@@354))))
(let (($generated@@356 ($generated@@325 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@324 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@323 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@322 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@326 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@76 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@326 (type $generated@@361))))
(let (($generated@@363 ($generated@@325 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@324 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@323 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@366) $generated@@64)) (= ($generated@@132 $generated@@365 ($generated@@150 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))) ($generated@@224 $generated@@367 $generated@@366))
 :pattern ( ($generated@@81 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@132 $generated@@365 ($generated@@150 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@233 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@145) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@266 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@233 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@238 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@145) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@266 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@238 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@81 ($generated@@299 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@81 ($generated@@299 $generated@@377) $generated@@376)))
)))
(assert  (and (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@378 $generated@@381)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@378 $generated@@381))
)) (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@379 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@379 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@308 (type $generated@@384))))
(let (($generated@@386 ($generated@@307 (type $generated@@384))))
(= (type ($generated@@380 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@380 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@387) ($generated@@143 ($generated@@379 $generated@@136 $generated@@388)))) (= ($generated@@81 ($generated@@380 $generated@@387) ($generated@@143 ($generated@@379 $generated@@136 $generated@@388))) ($generated@@144 ($generated@@379 $generated@@136 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@326 (type $generated@@392))))
(let (($generated@@394 ($generated@@325 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@76 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@396) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@395) ($generated@@143 ($generated@@379 $generated@@136 $generated@@396)))) (= ($generated@@81 ($generated@@390 $generated@@395) ($generated@@143 ($generated@@379 $generated@@136 $generated@@396))) ($generated@@144 ($generated@@379 $generated@@136 $generated@@396))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@307 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@306 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@325 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@324 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@410) $generated@@414))) (and ($generated@@266 ($generated@@81 ($generated@@380 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@266 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@418) $generated@@422))) (and ($generated@@266 ($generated@@81 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@266 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) $generated@@252)
 :pattern ( ($generated@@423 $generated@@425))
)) (= (type $generated@@424) $generated@@252)))
(assert (forall (($generated@@426 T@U) ($generated@@427 Int) ) (!  (=> (= (type $generated@@426) $generated@@252) (= ($generated@@255 $generated@@426 $generated@@427) ($generated@@255 $generated@@424 $generated@@427)))
 :pattern ( ($generated@@255 ($generated@@423 $generated@@426) $generated@@427))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@428 T@U) ($generated@@429 Int) ($generated@@430 Int) ) (!  (=> (and (= (type $generated@@428) $generated@@252) (or ($generated@@253 $generated@@429 $generated@@430) (not (= 0 $generated@@249)))) true)
 :pattern ( ($generated@@250 $generated@@428 $generated@@429 $generated@@430))
))))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@76 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@326 (type $generated@@433))))
(let (($generated@@435 ($generated@@325 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@324 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@323 $generated@@435 $generated@@434)) (= ($generated@@322 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@322 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@326 (type $generated@@436))))
(let (($generated@@438 ($generated@@325 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@324 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@323 $generated@@438 $generated@@437)) (= ($generated@@358 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@358 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@326 (type $generated@@439))))
(let (($generated@@441 ($generated@@325 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@324 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@323 $generated@@441 $generated@@440)) (= ($generated@@389 $generated@@439) ($generated@@431 $generated@@145))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@308 (type $generated@@442))))
(let (($generated@@444 ($generated@@307 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@306 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@305 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@145) (= (type $generated@@446) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@442) ($generated@@289 ($generated@@223 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@378 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@326 (type $generated@@447))))
(let (($generated@@449 ($generated@@325 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@324 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@323 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@447) ($generated@@289 ($generated@@223 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@389 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) ($generated@@224 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@379 $generated@@2 $generated@@452)) $generated@@452) ($generated@@132 ($generated@@379 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@224 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@379 $generated@@3 $generated@@453)) $generated@@453) ($generated@@132 ($generated@@379 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@145) ($generated@@224 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@379 $generated@@4 $generated@@454)) $generated@@454) ($generated@@132 ($generated@@379 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 21))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) ($generated@@224 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@379 $generated@@455 $generated@@456)) $generated@@456) ($generated@@132 ($generated@@379 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ) (!  (=> (= (type $generated@@457) $generated@@252) (= ($generated@@255 ($generated@@251 $generated@@457) $generated@@458) ($generated@@255 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@255 ($generated@@251 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@64) (= ($generated@@224 ($generated@@289 $generated@@459) $generated@@460) ($generated@@132 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@224 ($generated@@289 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@79 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@76 $generated@@462 $generated@@2)) (<= 0 ($generated@@298 $generated@@461))))
 :pattern ( ($generated@@298 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (!  (=> (and (= (type $generated@@465) $generated@@252) (or ($generated@@254 ($generated@@243 $generated@@466)) (not (= 0 $generated@@249)))) (and (forall (($generated@@467 Int) ) (! ($generated@@253 ($generated@@243 $generated@@466) $generated@@467)
 :pattern ( ($generated@@250 ($generated@@251 $generated@@465) $generated@@466 $generated@@467))
)) (= ($generated@@255 ($generated@@251 $generated@@465) ($generated@@243 $generated@@466)) (exists (($generated@@468 Int) ) (! ($generated@@250 ($generated@@251 $generated@@465) ($generated@@243 $generated@@466) $generated@@468)
 :pattern ( ($generated@@250 ($generated@@251 $generated@@465) $generated@@466 $generated@@468))
)))))
 :weight 3
 :pattern ( ($generated@@255 ($generated@@251 $generated@@465) ($generated@@243 $generated@@466)))
))))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@407 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@407 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@407 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@407 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@415 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@415 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@415 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@72 ($generated@@415 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) (= (type $generated@@490) $generated@@145)) (= ($generated@@272 ($generated@@223 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@135 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@135 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@135 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@135 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@223 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@223 $generated@@501 $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@281 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506 $generated@@507)) $generated@@508))
 :pattern ( ($generated@@504 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@280 $generated@@145)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@509 ($generated@@503 $generated@@510) $generated@@511) (forall (($generated@@512 Int) ) (!  (=> (and (<= 0 $generated@@512) (< $generated@@512 ($generated@@279 $generated@@509))) ($generated@@266 ($generated@@504 $generated@@509 $generated@@512) $generated@@510 $generated@@511))
 :pattern ( ($generated@@504 $generated@@509 $generated@@512))
))))
 :pattern ( ($generated@@74 $generated@@509 ($generated@@503 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@75 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@75 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@233 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@233 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@238 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@238 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@150 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@150 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@503 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@503 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@503 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@503 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@379 $generated@@532 ($generated@@289 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@289 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@132 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@533) $generated@@536))) (and ($generated@@224 ($generated@@81 ($generated@@380 $generated@@533) $generated@@536) $generated@@535) ($generated@@224 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@132 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) (= ($generated@@132 $generated@@537 ($generated@@415 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@537) $generated@@540))) (and ($generated@@224 ($generated@@81 ($generated@@390 $generated@@537) $generated@@540) $generated@@539) ($generated@@224 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@537) $generated@@540))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@132 $generated@@537 ($generated@@415 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@223 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@223 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@145)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@223 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@223 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@547 ($generated@@407 $generated@@548 $generated@@549))) (and (= ($generated@@289 ($generated@@379 ($generated@@306 $generated@@145 $generated@@145) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@379 ($generated@@306 $generated@@145 $generated@@145) $generated@@547) ($generated@@407 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@547 ($generated@@407 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@415 $generated@@551 $generated@@552))) (and (= ($generated@@289 ($generated@@379 ($generated@@324 $generated@@145 $generated@@145) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@379 ($generated@@324 $generated@@145 $generated@@145) $generated@@550) ($generated@@415 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@415 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@64) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) $generated@@145)) ($generated@@224 $generated@@555 ($generated@@135 $generated@@553 $generated@@554))) (and (= ($generated@@289 ($generated@@379 $generated@@136 $generated@@555)) $generated@@555) ($generated@@132 ($generated@@379 $generated@@136 $generated@@555) ($generated@@135 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@224 $generated@@555 ($generated@@135 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@81 ($generated@@431 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@81 ($generated@@431 $generated@@557) $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@69)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@64) (= (type $generated@@561) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@560 $generated@@561)) $generated@@62) (= ($generated@@558 ($generated@@135 $generated@@560 $generated@@561)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@136) (= ($generated@@541 ($generated@@289 $generated@@562)) ($generated@@542 $generated@@562)))
 :pattern ( ($generated@@541 ($generated@@289 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@145) ($generated@@224 $generated@@563 ($generated@@75 0))) (and (= ($generated@@289 ($generated@@379 $generated@@2 $generated@@563)) $generated@@563) ($generated@@132 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@563) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@563 ($generated@@75 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@64)) ($generated@@224 $generated@@564 ($generated@@233 $generated@@565))) (and (= ($generated@@289 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@564)) $generated@@564) ($generated@@132 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@564) ($generated@@233 $generated@@565))))
 :pattern ( ($generated@@224 $generated@@564 ($generated@@233 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@64)) ($generated@@224 $generated@@566 ($generated@@238 $generated@@567))) (and (= ($generated@@289 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@566)) $generated@@566) ($generated@@132 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@566) ($generated@@238 $generated@@567))))
 :pattern ( ($generated@@224 $generated@@566 ($generated@@238 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@145) (= (type $generated@@569) $generated@@64)) ($generated@@224 $generated@@568 ($generated@@150 $generated@@569))) (and (= ($generated@@289 ($generated@@379 ($generated@@76 $generated@@145 $generated@@2) $generated@@568)) $generated@@568) ($generated@@132 ($generated@@379 ($generated@@76 $generated@@145 $generated@@2) $generated@@568) ($generated@@150 $generated@@569))))
 :pattern ( ($generated@@224 $generated@@568 ($generated@@150 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@145) (= (type $generated@@571) $generated@@64)) ($generated@@224 $generated@@570 ($generated@@503 $generated@@571))) (and (= ($generated@@289 ($generated@@379 ($generated@@280 $generated@@145) $generated@@570)) $generated@@570) ($generated@@132 ($generated@@379 ($generated@@280 $generated@@145) $generated@@570) ($generated@@503 $generated@@571))))
 :pattern ( ($generated@@224 $generated@@570 ($generated@@503 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@572 ($generated@@150 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@572 $generated@@575)))) ($generated@@266 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@81 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@150 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@136) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@578) (and ($generated@@134 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@74 $generated@@576 ($generated@@135 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@74 $generated@@576 ($generated@@135 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@266 ($generated@@143 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@266 ($generated@@143 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@582) (and ($generated@@134 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@64) ($generated@@74 $generated@@580 ($generated@@135 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@74 $generated@@580 ($generated@@135 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@266 ($generated@@144 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@266 ($generated@@144 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@145) (= (type $generated@@585) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@584) ($generated@@245 $generated@@585)) ($generated@@245 ($generated@@223 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@584) ($generated@@245 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@243 $generated@@586))) ($generated@@245 ($generated@@289 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@243 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@289 ($generated@@245 $generated@@587)) ($generated@@245 ($generated@@289 $generated@@587)))
 :pattern ( ($generated@@289 ($generated@@245 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@281 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@280 $generated@@589)) (= ($generated@@279 $generated@@588) 0)) (= $generated@@588 ($generated@@278 $generated@@589))))
 :pattern ( ($generated@@279 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@76 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@298 ($generated@@82 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@298 $generated@@590) ($generated ($generated@@81 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@298 ($generated@@82 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@2)) ($generated@@74 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@3)) ($generated@@74 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@4)) ($generated@@74 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@455)) ($generated@@74 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@145)) ($generated@@74 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@280 $generated@@145)) (= (type $generated@@605) $generated@@64)) (= ($generated@@132 $generated@@604 ($generated@@503 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@279 $generated@@604))) ($generated@@224 ($generated@@504 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@504 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@132 $generated@@604 ($generated@@503 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ($generated@@609 Int) ) (!  (=> (= (type $generated@@607) $generated@@252) (= ($generated@@250 $generated@@607 $generated@@608 $generated@@609) ($generated@@250 $generated@@424 $generated@@608 $generated@@609)))
 :pattern ( ($generated@@250 ($generated@@423 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ) (!  (=> (= (type $generated@@611) ($generated@@280 $generated@@145)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@279 $generated@@611))) (< ($generated@@542 ($generated@@379 $generated@@136 ($generated@@504 $generated@@611 $generated@@612))) ($generated@@610 $generated@@611))))
 :pattern ( ($generated@@542 ($generated@@379 $generated@@136 ($generated@@504 $generated@@611 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@132 $generated@@613 ($generated@@407 $generated@@614 $generated@@615))) (and (and ($generated@@132 ($generated@@304 $generated@@613) ($generated@@233 $generated@@614)) ($generated@@132 ($generated@@347 $generated@@613) ($generated@@233 $generated@@615))) ($generated@@132 ($generated@@378 $generated@@613) ($generated@@233 ($generated@@135 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@132 $generated@@613 ($generated@@407 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@132 $generated@@616 ($generated@@415 $generated@@617 $generated@@618))) (and (and ($generated@@132 ($generated@@322 $generated@@616) ($generated@@238 $generated@@617)) ($generated@@132 ($generated@@358 $generated@@616) ($generated@@238 $generated@@618))) ($generated@@132 ($generated@@389 $generated@@616) ($generated@@238 ($generated@@135 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@132 $generated@@616 ($generated@@415 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@2) ($generated@@132 $generated@@619 $generated@@46))
 :pattern ( ($generated@@132 $generated@@619 $generated@@46))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@3) ($generated@@132 $generated@@620 $generated@@47))
 :pattern ( ($generated@@132 $generated@@620 $generated@@47))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@4) ($generated@@132 $generated@@621 $generated@@44))
 :pattern ( ($generated@@132 $generated@@621 $generated@@44))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@455) ($generated@@132 $generated@@622 $generated@@45))
 :pattern ( ($generated@@132 $generated@@622 $generated@@45))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@145) ($generated@@132 $generated@@623 $generated@@48))
 :pattern ( ($generated@@132 $generated@@623 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@627) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@628) $generated@@77)) (= (type $generated@@629) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@631 true))
(let (($generated@@632  (=> (and (>= 0 $generated@@624) (= (ControlFlow 0 6) 2)) $generated@@631)))
(let (($generated@@633  (=> (> $generated@@624 0) (=> (and (= $generated@@625 (- $generated@@624 1)) ($generated@@74 ($generated@@8 $generated@@625) $generated@@46 $generated@@626)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@624) (= $generated@@625 $generated@@624))) (=> (or (<= 0 $generated@@624) (= $generated@@625 $generated@@624)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< $generated@@625 $generated@@624)) (=> (< $generated@@625 $generated@@624) (=> (and ($generated@@254 (- $generated@@624 1)) (= (ControlFlow 0 3) 2)) $generated@@631)))))))))
(let (($generated@@634  (=> (= $generated@@627 ($generated@@211 $generated@@628 $generated@@626 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@633) (=> (= (ControlFlow 0 7) 6) $generated@@632)))))
(let (($generated@@635 true))
(let (($generated@@636  (=> (= $generated@@629 ($generated@@156 $generated@@628 $generated@@626 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@635) (=> (= (ControlFlow 0 8) 7) $generated@@634)))))
(let (($generated@@637  (=> (and (and ($generated@@265 $generated@@626) ($generated@@630 $generated@@626)) (and (= 0 $generated@@249) (= (ControlFlow 0 9) 8))) $generated@@636)))
$generated@@637))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (T@U Int Int) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 () T@T)
(declare-fun $generated@@253 (Int Int) Bool)
(declare-fun $generated@@254 (Int) Bool)
(declare-fun $generated@@255 (T@U Int) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 () T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (and (= ($generated@@1 $generated@@252) 17) (forall (($generated@@256 T@U) ) (! (= (type ($generated@@251 $generated@@256)) $generated@@252)
 :pattern ( ($generated@@251 $generated@@256))
))))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@257 T@U) ($generated@@258 Int) ($generated@@259 Int) ) (!  (=> (and (= (type $generated@@257) $generated@@252) (or ($generated@@253 ($generated@@243 $generated@@258) ($generated@@243 $generated@@259)) (not (= 0 $generated@@249)))) (and (=> ($generated@@0 ($generated@@245 ($generated@@11 (> $generated@@258 0)))) ($generated@@254 ($generated@@243 (- $generated@@258 1)))) (= ($generated@@250 ($generated@@251 $generated@@257) ($generated@@243 $generated@@258) ($generated@@243 $generated@@259)) ($generated@@0 ($generated@@245 ($generated@@11  (=> (> $generated@@258 0) ($generated@@255 ($generated@@251 $generated@@257) ($generated@@243 (- $generated@@258 1))))))))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@251 $generated@@257) ($generated@@243 $generated@@258) ($generated@@243 $generated@@259)))
))))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@260 T@U) ($generated@@261 Int) ) (!  (=> (and (= (type $generated@@260) $generated@@252) (or ($generated@@254 $generated@@261) (not (= 0 $generated@@249)))) true)
 :pattern ( ($generated@@255 $generated@@260 $generated@@261))
))))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@262 T@U) ($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (= (type $generated@@262) $generated@@252) (or ($generated@@253 $generated@@263 $generated@@264) (not (= 0 $generated@@249)))) (and (=> (> $generated@@263 0) ($generated@@254 (- $generated@@263 1))) (= ($generated@@250 ($generated@@251 $generated@@262) $generated@@263 $generated@@264)  (=> (> $generated@@263 0) ($generated@@255 $generated@@262 (- $generated@@263 1))))))
 :pattern ( ($generated@@250 ($generated@@251 $generated@@262) $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@145)) (= (type $generated@@270) $generated@@145)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@223 $generated@@269 $generated@@270) ($generated@@135 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@269 $generated@@270) ($generated@@135 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@136) (= ($generated@@134 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@134 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@145) (= (type $generated@@277) $generated@@145)) (= $generated@@275 ($generated@@223 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@134 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 18)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (= (type $generated@@286) $generated@@252) (= ($generated@@250 ($generated@@251 $generated@@286) $generated@@287 $generated@@288) ($generated@@250 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@250 ($generated@@251 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@145)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@64) (= (type $generated@@293) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@74 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@266 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@294 T@U) ($generated@@295 Int) ) (!  (=> (and (= (type $generated@@294) $generated@@252) (or ($generated@@254 $generated@@295) (not (= 0 $generated@@249)))) (and (forall (($generated@@296 Int) ) (! ($generated@@253 $generated@@295 $generated@@296)
 :pattern ( ($generated@@250 $generated@@294 $generated@@295 $generated@@296))
)) (= ($generated@@255 ($generated@@251 $generated@@294) $generated@@295) (exists (($generated@@297 Int) ) (! ($generated@@250 $generated@@294 $generated@@295 $generated@@297)
 :pattern ( ($generated@@250 $generated@@294 $generated@@295 $generated@@297))
)))))
 :pattern ( ($generated@@255 ($generated@@251 $generated@@294) $generated@@295))
))))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@76 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@79 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@76 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@81 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@81 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@81 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@2)) (= ($generated@@151 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@81 $generated@@340 $generated@@342))) (<= ($generated ($generated@@81 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@151 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@308 (type $generated@@343))))
(let (($generated@@345 ($generated@@307 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@306 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@305 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@304 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@308 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@308 (type $generated@@350))))
(let (($generated@@352 ($generated@@307 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@306 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@305 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@326 (type $generated@@354))))
(let (($generated@@356 ($generated@@325 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@324 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@323 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@322 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@326 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@76 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@326 (type $generated@@361))))
(let (($generated@@363 ($generated@@325 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@324 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@323 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@366) $generated@@64)) (= ($generated@@132 $generated@@365 ($generated@@150 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))) ($generated@@224 $generated@@367 $generated@@366))
 :pattern ( ($generated@@81 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@132 $generated@@365 ($generated@@150 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@233 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@145) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@266 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@233 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@238 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@145) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@266 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@238 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@81 ($generated@@299 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@81 ($generated@@299 $generated@@377) $generated@@376)))
)))
(assert  (and (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@378 $generated@@381)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@378 $generated@@381))
)) (forall (($generated@@382 T@T) ($generated@@383 T@U) ) (! (= (type ($generated@@379 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@379 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@308 (type $generated@@384))))
(let (($generated@@386 ($generated@@307 (type $generated@@384))))
(= (type ($generated@@380 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@380 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@387) ($generated@@143 ($generated@@379 $generated@@136 $generated@@388)))) (= ($generated@@81 ($generated@@380 $generated@@387) ($generated@@143 ($generated@@379 $generated@@136 $generated@@388))) ($generated@@144 ($generated@@379 $generated@@136 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@326 (type $generated@@392))))
(let (($generated@@394 ($generated@@325 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@76 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@396) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@395) ($generated@@143 ($generated@@379 $generated@@136 $generated@@396)))) (= ($generated@@81 ($generated@@390 $generated@@395) ($generated@@143 ($generated@@379 $generated@@136 $generated@@396))) ($generated@@144 ($generated@@379 $generated@@136 $generated@@396))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@307 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@306 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@81 ($generated@@304 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@325 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@324 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@81 ($generated@@322 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@410) $generated@@414))) (and ($generated@@266 ($generated@@81 ($generated@@380 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@266 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@418) $generated@@422))) (and ($generated@@266 ($generated@@81 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@266 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@74 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) $generated@@252)
 :pattern ( ($generated@@423 $generated@@425))
)) (= (type $generated@@424) $generated@@252)))
(assert (forall (($generated@@426 T@U) ($generated@@427 Int) ) (!  (=> (= (type $generated@@426) $generated@@252) (= ($generated@@255 $generated@@426 $generated@@427) ($generated@@255 $generated@@424 $generated@@427)))
 :pattern ( ($generated@@255 ($generated@@423 $generated@@426) $generated@@427))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@428 T@U) ($generated@@429 Int) ($generated@@430 Int) ) (!  (=> (and (= (type $generated@@428) $generated@@252) (or ($generated@@253 $generated@@429 $generated@@430) (not (= 0 $generated@@249)))) true)
 :pattern ( ($generated@@250 $generated@@428 $generated@@429 $generated@@430))
))))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@76 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@326 (type $generated@@433))))
(let (($generated@@435 ($generated@@325 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@324 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@323 $generated@@435 $generated@@434)) (= ($generated@@322 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@322 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@326 (type $generated@@436))))
(let (($generated@@438 ($generated@@325 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@324 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@323 $generated@@438 $generated@@437)) (= ($generated@@358 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@358 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@326 (type $generated@@439))))
(let (($generated@@441 ($generated@@325 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@324 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@323 $generated@@441 $generated@@440)) (= ($generated@@389 $generated@@439) ($generated@@431 $generated@@145))))))
 :pattern ( ($generated@@389 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@308 (type $generated@@442))))
(let (($generated@@444 ($generated@@307 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@306 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@305 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@145) (= (type $generated@@446) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@442) ($generated@@289 ($generated@@223 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@378 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@326 (type $generated@@447))))
(let (($generated@@449 ($generated@@325 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@324 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@323 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@447) ($generated@@289 ($generated@@223 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@389 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) ($generated@@224 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@379 $generated@@2 $generated@@452)) $generated@@452) ($generated@@132 ($generated@@379 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@224 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@379 $generated@@3 $generated@@453)) $generated@@453) ($generated@@132 ($generated@@379 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@145) ($generated@@224 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@379 $generated@@4 $generated@@454)) $generated@@454) ($generated@@132 ($generated@@379 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 21))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) ($generated@@224 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@379 $generated@@455 $generated@@456)) $generated@@456) ($generated@@132 ($generated@@379 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ) (!  (=> (= (type $generated@@457) $generated@@252) (= ($generated@@255 ($generated@@251 $generated@@457) $generated@@458) ($generated@@255 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@255 ($generated@@251 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@64) (= ($generated@@224 ($generated@@289 $generated@@459) $generated@@460) ($generated@@132 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@224 ($generated@@289 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@79 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@76 $generated@@462 $generated@@2)) (<= 0 ($generated@@298 $generated@@461))))
 :pattern ( ($generated@@298 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@281 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@280 $generated@@464)) (<= 0 ($generated@@279 $generated@@463))))
 :pattern ( ($generated@@279 $generated@@463))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (!  (=> (and (= (type $generated@@465) $generated@@252) (or ($generated@@254 ($generated@@243 $generated@@466)) (not (= 0 $generated@@249)))) (and (forall (($generated@@467 Int) ) (! ($generated@@253 ($generated@@243 $generated@@466) $generated@@467)
 :pattern ( ($generated@@250 ($generated@@251 $generated@@465) $generated@@466 $generated@@467))
)) (= ($generated@@255 ($generated@@251 $generated@@465) ($generated@@243 $generated@@466)) (exists (($generated@@468 Int) ) (! ($generated@@250 ($generated@@251 $generated@@465) ($generated@@243 $generated@@466) $generated@@468)
 :pattern ( ($generated@@250 ($generated@@251 $generated@@465) $generated@@466 $generated@@468))
)))))
 :weight 3
 :pattern ( ($generated@@255 ($generated@@251 $generated@@465) ($generated@@243 $generated@@466)))
))))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@407 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@407 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@407 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@407 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@415 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@415 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@415 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@72 ($generated@@415 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) (= (type $generated@@490) $generated@@145)) (= ($generated@@272 ($generated@@223 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@135 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@135 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@135 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@135 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@223 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@223 $generated@@501 $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@281 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506 $generated@@507)) $generated@@508))
 :pattern ( ($generated@@504 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@280 $generated@@145)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@509 ($generated@@503 $generated@@510) $generated@@511) (forall (($generated@@512 Int) ) (!  (=> (and (<= 0 $generated@@512) (< $generated@@512 ($generated@@279 $generated@@509))) ($generated@@266 ($generated@@504 $generated@@509 $generated@@512) $generated@@510 $generated@@511))
 :pattern ( ($generated@@504 $generated@@509 $generated@@512))
))))
 :pattern ( ($generated@@74 $generated@@509 ($generated@@503 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@75 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@75 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@233 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@233 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@238 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@238 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@150 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@150 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@503 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@503 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@503 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@503 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@379 $generated@@532 ($generated@@289 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@289 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@132 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@304 $generated@@533) $generated@@536))) (and ($generated@@224 ($generated@@81 ($generated@@380 $generated@@533) $generated@@536) $generated@@535) ($generated@@224 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@304 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@132 $generated@@533 ($generated@@407 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) (= ($generated@@132 $generated@@537 ($generated@@415 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@322 $generated@@537) $generated@@540))) (and ($generated@@224 ($generated@@81 ($generated@@390 $generated@@537) $generated@@540) $generated@@539) ($generated@@224 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@81 ($generated@@390 $generated@@537) $generated@@540))
 :pattern ( ($generated@@81 ($generated@@322 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@132 $generated@@537 ($generated@@415 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@223 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@223 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@145)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@223 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@223 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@547 ($generated@@407 $generated@@548 $generated@@549))) (and (= ($generated@@289 ($generated@@379 ($generated@@306 $generated@@145 $generated@@145) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@379 ($generated@@306 $generated@@145 $generated@@145) $generated@@547) ($generated@@407 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@547 ($generated@@407 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@415 $generated@@551 $generated@@552))) (and (= ($generated@@289 ($generated@@379 ($generated@@324 $generated@@145 $generated@@145) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@379 ($generated@@324 $generated@@145 $generated@@145) $generated@@550) ($generated@@415 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@415 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@64) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) $generated@@145)) ($generated@@224 $generated@@555 ($generated@@135 $generated@@553 $generated@@554))) (and (= ($generated@@289 ($generated@@379 $generated@@136 $generated@@555)) $generated@@555) ($generated@@132 ($generated@@379 $generated@@136 $generated@@555) ($generated@@135 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@224 $generated@@555 ($generated@@135 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@81 ($generated@@431 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@81 ($generated@@431 $generated@@557) $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@69)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@64) (= (type $generated@@561) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@560 $generated@@561)) $generated@@62) (= ($generated@@558 ($generated@@135 $generated@@560 $generated@@561)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@136) (= ($generated@@541 ($generated@@289 $generated@@562)) ($generated@@542 $generated@@562)))
 :pattern ( ($generated@@541 ($generated@@289 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@145) ($generated@@224 $generated@@563 ($generated@@75 0))) (and (= ($generated@@289 ($generated@@379 $generated@@2 $generated@@563)) $generated@@563) ($generated@@132 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@563) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@563 ($generated@@75 0)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@64)) ($generated@@224 $generated@@564 ($generated@@233 $generated@@565))) (and (= ($generated@@289 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@564)) $generated@@564) ($generated@@132 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@564) ($generated@@233 $generated@@565))))
 :pattern ( ($generated@@224 $generated@@564 ($generated@@233 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@64)) ($generated@@224 $generated@@566 ($generated@@238 $generated@@567))) (and (= ($generated@@289 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@566)) $generated@@566) ($generated@@132 ($generated@@379 ($generated@@76 $generated@@145 $generated@@4) $generated@@566) ($generated@@238 $generated@@567))))
 :pattern ( ($generated@@224 $generated@@566 ($generated@@238 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@145) (= (type $generated@@569) $generated@@64)) ($generated@@224 $generated@@568 ($generated@@150 $generated@@569))) (and (= ($generated@@289 ($generated@@379 ($generated@@76 $generated@@145 $generated@@2) $generated@@568)) $generated@@568) ($generated@@132 ($generated@@379 ($generated@@76 $generated@@145 $generated@@2) $generated@@568) ($generated@@150 $generated@@569))))
 :pattern ( ($generated@@224 $generated@@568 ($generated@@150 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@145) (= (type $generated@@571) $generated@@64)) ($generated@@224 $generated@@570 ($generated@@503 $generated@@571))) (and (= ($generated@@289 ($generated@@379 ($generated@@280 $generated@@145) $generated@@570)) $generated@@570) ($generated@@132 ($generated@@379 ($generated@@280 $generated@@145) $generated@@570) ($generated@@503 $generated@@571))))
 :pattern ( ($generated@@224 $generated@@570 ($generated@@503 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@572 ($generated@@150 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@572 $generated@@575)))) ($generated@@266 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@81 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@150 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@136) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@578) (and ($generated@@134 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@74 $generated@@576 ($generated@@135 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@74 $generated@@576 ($generated@@135 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@266 ($generated@@143 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@266 ($generated@@143 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@582) (and ($generated@@134 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@64) ($generated@@74 $generated@@580 ($generated@@135 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@74 $generated@@580 ($generated@@135 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@266 ($generated@@144 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@266 ($generated@@144 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@145) (= (type $generated@@585) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@584) ($generated@@245 $generated@@585)) ($generated@@245 ($generated@@223 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@584) ($generated@@245 $generated@@585)))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@243 $generated@@586))) ($generated@@245 ($generated@@289 ($generated@@8 $generated@@586))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@243 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ) (! (= ($generated@@289 ($generated@@245 $generated@@587)) ($generated@@245 ($generated@@289 $generated@@587)))
 :pattern ( ($generated@@289 ($generated@@245 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@281 (type $generated@@588))))
 (=> (and (= (type $generated@@588) ($generated@@280 $generated@@589)) (= ($generated@@279 $generated@@588) 0)) (= $generated@@588 ($generated@@278 $generated@@589))))
 :pattern ( ($generated@@279 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@591)))
 (=> (and (and (= (type $generated@@590) ($generated@@76 $generated@@593 $generated@@2)) (= (type $generated@@592) $generated@@2)) (<= 0 ($generated $generated@@592))) (= ($generated@@298 ($generated@@82 $generated@@590 $generated@@591 $generated@@592)) (+ (- ($generated@@298 $generated@@590) ($generated ($generated@@81 $generated@@590 $generated@@591))) ($generated $generated@@592)))))
 :pattern ( ($generated@@298 ($generated@@82 $generated@@590 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@2)) ($generated@@74 $generated@@595 $generated@@46 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@46 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@3)) ($generated@@74 $generated@@597 $generated@@47 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@47 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@4)) ($generated@@74 $generated@@599 $generated@@44 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@44 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@455)) ($generated@@74 $generated@@601 $generated@@45 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@45 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@145)) ($generated@@74 $generated@@603 $generated@@48 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@48 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@280 $generated@@145)) (= (type $generated@@605) $generated@@64)) (= ($generated@@132 $generated@@604 ($generated@@503 $generated@@605)) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@279 $generated@@604))) ($generated@@224 ($generated@@504 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@504 $generated@@604 $generated@@606))
))))
 :pattern ( ($generated@@132 $generated@@604 ($generated@@503 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 Int) ($generated@@609 Int) ) (!  (=> (= (type $generated@@607) $generated@@252) (= ($generated@@250 $generated@@607 $generated@@608 $generated@@609) ($generated@@250 $generated@@424 $generated@@608 $generated@@609)))
 :pattern ( ($generated@@250 ($generated@@423 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ) (!  (=> (= (type $generated@@611) ($generated@@280 $generated@@145)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@279 $generated@@611))) (< ($generated@@542 ($generated@@379 $generated@@136 ($generated@@504 $generated@@611 $generated@@612))) ($generated@@610 $generated@@611))))
 :pattern ( ($generated@@542 ($generated@@379 $generated@@136 ($generated@@504 $generated@@611 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@306 $generated@@145 $generated@@145)) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@132 $generated@@613 ($generated@@407 $generated@@614 $generated@@615))) (and (and ($generated@@132 ($generated@@304 $generated@@613) ($generated@@233 $generated@@614)) ($generated@@132 ($generated@@347 $generated@@613) ($generated@@233 $generated@@615))) ($generated@@132 ($generated@@378 $generated@@613) ($generated@@233 ($generated@@135 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@132 $generated@@613 ($generated@@407 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@324 $generated@@145 $generated@@145)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@132 $generated@@616 ($generated@@415 $generated@@617 $generated@@618))) (and (and ($generated@@132 ($generated@@322 $generated@@616) ($generated@@238 $generated@@617)) ($generated@@132 ($generated@@358 $generated@@616) ($generated@@238 $generated@@618))) ($generated@@132 ($generated@@389 $generated@@616) ($generated@@238 ($generated@@135 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@132 $generated@@616 ($generated@@415 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@2) ($generated@@132 $generated@@619 $generated@@46))
 :pattern ( ($generated@@132 $generated@@619 $generated@@46))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@3) ($generated@@132 $generated@@620 $generated@@47))
 :pattern ( ($generated@@132 $generated@@620 $generated@@47))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@4) ($generated@@132 $generated@@621 $generated@@44))
 :pattern ( ($generated@@132 $generated@@621 $generated@@44))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@455) ($generated@@132 $generated@@622 $generated@@45))
 :pattern ( ($generated@@132 $generated@@622 $generated@@45))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@145) ($generated@@132 $generated@@623 $generated@@48))
 :pattern ( ($generated@@132 $generated@@623 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@627) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@628) $generated@@77)) (= (type $generated@@629) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@631 true))
(let (($generated@@632  (=> (and ($generated@@74 ($generated@@8 $generated@@624) $generated@@46 $generated@@625) ($generated@@74 ($generated@@8 $generated@@626) $generated@@46 $generated@@625)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 $generated@@624) (= $generated@@624 $generated@@624))) (=> (or (<= 0 $generated@@624) (= $generated@@624 $generated@@624)) (=> (= (ControlFlow 0 3) (- 0 2)) (and (<= $generated@@624 $generated@@624) (=> (= $generated@@624 $generated@@624) true))))))))
(let (($generated@@633  (=> (= $generated@@627 ($generated@@211 $generated@@628 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@632) (=> (= (ControlFlow 0 6) 5) $generated@@631)))))
(let (($generated@@634 true))
(let (($generated@@635  (=> (= $generated@@629 ($generated@@156 $generated@@628 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@634) (=> (= (ControlFlow 0 7) 6) $generated@@633)))))
(let (($generated@@636  (=> (and (and ($generated@@265 $generated@@625) ($generated@@630 $generated@@625)) (and (= 0 $generated@@249) (= (ControlFlow 0 8) 7))) $generated@@635)))
$generated@@636)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U Int Int) Bool)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@193 (Int Int) Bool)
(declare-fun $generated@@194 (Int) Bool)
(declare-fun $generated@@195 (T@U Int) Bool)
(declare-fun $generated@@205 (T@T) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@216 (T@U T@U T@U) Bool)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@218 () T@T)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@T T@T) T@U)
(declare-fun $generated@@229 (T@T T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@T T@T) T@U)
(declare-fun $generated@@247 (T@T T@T) T@T)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@U T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U Int) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@399 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (= ($generated@@1 $generated@@192) 13) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@191 $generated@@196)) $generated@@192)
 :pattern ( ($generated@@191 $generated@@196))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@192) (or ($generated@@193 ($generated@@183 $generated@@198) ($generated@@183 $generated@@199)) (not (= 0 $generated@@189)))) (and (=> ($generated@@0 ($generated@@185 ($generated@@11 (> $generated@@198 0)))) ($generated@@194 ($generated@@183 (- $generated@@198 1)))) (= ($generated@@190 ($generated@@191 $generated@@197) ($generated@@183 $generated@@198) ($generated@@183 $generated@@199)) ($generated@@0 ($generated@@185 ($generated@@11  (=> (> $generated@@198 0) ($generated@@195 ($generated@@191 $generated@@197) ($generated@@183 (- $generated@@198 1))))))))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@191 $generated@@197) ($generated@@183 $generated@@198) ($generated@@183 $generated@@199)))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@200 T@U) ($generated@@201 Int) ) (!  (=> (and (= (type $generated@@200) $generated@@192) (or ($generated@@194 $generated@@201) (not (= 0 $generated@@189)))) true)
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@202 T@U) ($generated@@203 Int) ($generated@@204 Int) ) (!  (=> (and (= (type $generated@@202) $generated@@192) (or ($generated@@193 $generated@@203 $generated@@204) (not (= 0 $generated@@189)))) (and (=> (> $generated@@203 0) ($generated@@194 (- $generated@@203 1))) (= ($generated@@190 ($generated@@191 $generated@@202) $generated@@203 $generated@@204)  (=> (> $generated@@203 0) ($generated@@195 $generated@@202 (- $generated@@203 1))))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@202) $generated@@203 $generated@@204))
))))
(assert  (and (and (forall (($generated@@209 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@209)) 14)) (forall (($generated@@210 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@T) ) (! (= (type ($generated@@205 $generated@@211)) ($generated@@207 $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
))))
(assert (forall (($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@212)) 0)
 :pattern ( ($generated@@205 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 Int) ($generated@@215 Int) ) (!  (=> (= (type $generated@@213) $generated@@192) (= ($generated@@190 ($generated@@191 $generated@@213) $generated@@214 $generated@@215) ($generated@@190 $generated@@213 $generated@@214 $generated@@215)))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@213) $generated@@214 $generated@@215))
)))
(assert  (and (= ($generated@@1 $generated@@218) 15) (forall (($generated@@219 T@U) ) (! (= (type ($generated@@217 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@217 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@61) (= (type $generated@@222) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@216 ($generated@@217 $generated@@220) $generated@@221 $generated@@222) ($generated@@69 $generated@@220 $generated@@221 $generated@@222)))
 :pattern ( ($generated@@216 ($generated@@217 $generated@@220) $generated@@221 $generated@@222))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@223 T@U) ($generated@@224 Int) ) (!  (=> (and (= (type $generated@@223) $generated@@192) (or ($generated@@194 $generated@@224) (not (= 0 $generated@@189)))) (and (forall (($generated@@225 Int) ) (! ($generated@@193 $generated@@224 $generated@@225)
 :pattern ( ($generated@@190 $generated@@223 $generated@@224 $generated@@225))
)) (= ($generated@@195 ($generated@@191 $generated@@223) $generated@@224) (exists (($generated@@226 Int) ) (! ($generated@@190 $generated@@223 $generated@@224 $generated@@226)
 :pattern ( ($generated@@190 $generated@@223 $generated@@224 $generated@@226))
)))))
 :pattern ( ($generated@@195 ($generated@@191 $generated@@223) $generated@@224))
))))
(assert  (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@232 $generated@@233)) 16)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@229 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@231 ($generated@@229 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@229 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@227 $generated@@238)) ($generated@@71 $generated@@239 $generated@@4)))
 :pattern ( ($generated@@227 $generated@@238))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= (type ($generated@@228 $generated@@240 $generated@@241)) ($generated@@229 $generated@@240 $generated@@241))
 :pattern ( ($generated@@228 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (let (($generated@@244 (type $generated@@242)))
 (not ($generated@@0 ($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242))))
 :pattern ( (let (($generated@@244 (type $generated@@242)))
($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242)))
)))
(assert  (and (and (and (and (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@250 $generated@@251)) 17)) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@248 ($generated@@247 $generated@@252 $generated@@253)) $generated@@252)
 :pattern ( ($generated@@247 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@247 $generated@@254 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@247 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@248 (type $generated@@256))))
(= (type ($generated@@245 $generated@@256)) ($generated@@71 $generated@@257 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@256))
))) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= (type ($generated@@246 $generated@@258 $generated@@259)) ($generated@@247 $generated@@258 $generated@@259))
 :pattern ( ($generated@@246 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@T) ) (! (let (($generated@@262 (type $generated@@260)))
 (not ($generated@@0 ($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260))))
 :pattern ( (let (($generated@@262 (type $generated@@260)))
($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@231 (type $generated@@263))))
(let (($generated@@265 ($generated@@230 (type $generated@@263))))
 (=> (= (type $generated@@263) ($generated@@229 $generated@@265 $generated@@264)) (or (= $generated@@263 ($generated@@228 $generated@@265 $generated@@264)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@263) $generated@@266)))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@227 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@249 (type $generated@@267))))
(let (($generated@@269 ($generated@@248 (type $generated@@267))))
 (=> (= (type $generated@@267) ($generated@@247 $generated@@269 $generated@@268)) (or (= $generated@@267 ($generated@@246 $generated@@269 $generated@@268)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@267) $generated@@270)))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@245 $generated@@267))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@273) ($generated@@71 $generated@@218 $generated@@4)) (= (type $generated@@274) $generated@@61)) (= (type $generated@@275) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@273 ($generated@@271 $generated@@274) $generated@@275) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@218) ($generated@@0 ($generated@@76 $generated@@273 $generated@@276))) ($generated@@216 $generated@@276 $generated@@274 $generated@@275))
 :pattern ( ($generated@@76 $generated@@273 $generated@@276))
))))
 :pattern ( ($generated@@69 $generated@@273 ($generated@@271 $generated@@274) $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@61)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@279) ($generated@@71 $generated@@218 $generated@@4)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@277 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@218) ($generated@@0 ($generated@@76 $generated@@279 $generated@@282))) ($generated@@216 $generated@@282 $generated@@280 $generated@@281))
 :pattern ( ($generated@@76 $generated@@279 $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@277 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@231 (type $generated@@287))))
(let (($generated@@289 ($generated@@230 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@229 $generated@@218 $generated@@218)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@218) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@290) $generated@@294))) (and ($generated@@216 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@216 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@227 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert  (and (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (= (type ($generated@@295 $generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@297 $generated@@298))
)) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@249 (type $generated@@299))))
(let (($generated@@301 ($generated@@248 (type $generated@@299))))
(= (type ($generated@@296 $generated@@299)) ($generated@@71 $generated@@301 $generated@@300))))
 :pattern ( ($generated@@296 $generated@@299))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (= (type $generated@@302) ($generated@@247 $generated@@218 $generated@@218)) (= (type $generated@@303) $generated@@61)) (= (type $generated@@304) $generated@@61)) (= (type $generated@@305) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@302 ($generated@@295 $generated@@303 $generated@@304) $generated@@305) (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@218) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@302) $generated@@306))) (and ($generated@@216 ($generated@@76 ($generated@@296 $generated@@302) $generated@@306) $generated@@304 $generated@@305) ($generated@@216 $generated@@306 $generated@@303 $generated@@305)))
 :pattern ( ($generated@@76 ($generated@@296 $generated@@302) $generated@@306))
 :pattern ( ($generated@@76 ($generated@@245 $generated@@302) $generated@@306))
))))
 :pattern ( ($generated@@69 $generated@@302 ($generated@@295 $generated@@303 $generated@@304) $generated@@305))
)))
(assert  (and (forall (($generated@@309 T@U) ) (! (= (type ($generated@@307 $generated@@309)) $generated@@192)
 :pattern ( ($generated@@307 $generated@@309))
)) (= (type $generated@@308) $generated@@192)))
(assert (forall (($generated@@310 T@U) ($generated@@311 Int) ) (!  (=> (= (type $generated@@310) $generated@@192) (= ($generated@@195 $generated@@310 $generated@@311) ($generated@@195 $generated@@308 $generated@@311)))
 :pattern ( ($generated@@195 ($generated@@307 $generated@@310) $generated@@311))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@312 T@U) ($generated@@313 Int) ($generated@@314 Int) ) (!  (=> (and (= (type $generated@@312) $generated@@192) (or ($generated@@193 $generated@@313 $generated@@314) (not (= 0 $generated@@189)))) true)
 :pattern ( ($generated@@190 $generated@@312 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@249 (type $generated@@317))))
(let (($generated@@319 ($generated@@248 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@247 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@246 $generated@@319 $generated@@318)) (= ($generated@@245 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@245 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 Int) ) (!  (=> (= (type $generated@@320) $generated@@192) (= ($generated@@195 ($generated@@191 $generated@@320) $generated@@321) ($generated@@195 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@195 ($generated@@191 $generated@@320) $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@208 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@207 $generated@@323)) (<= 0 ($generated@@206 $generated@@322))))
 :pattern ( ($generated@@206 $generated@@322))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@324 T@U) ($generated@@325 Int) ) (!  (=> (and (= (type $generated@@324) $generated@@192) (or ($generated@@194 ($generated@@183 $generated@@325)) (not (= 0 $generated@@189)))) (and (forall (($generated@@326 Int) ) (! ($generated@@193 ($generated@@183 $generated@@325) $generated@@326)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@324) $generated@@325 $generated@@326))
)) (= ($generated@@195 ($generated@@191 $generated@@324) ($generated@@183 $generated@@325)) (exists (($generated@@327 Int) ) (! ($generated@@190 ($generated@@191 $generated@@324) ($generated@@183 $generated@@325) $generated@@327)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@324) $generated@@325 $generated@@327))
)))))
 :weight 3
 :pattern ( ($generated@@195 ($generated@@191 $generated@@324) ($generated@@183 $generated@@325)))
))))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@328 ($generated@@283 $generated@@330 $generated@@331)) $generated@@330))
 :pattern ( ($generated@@283 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@283 $generated@@334 $generated@@335)) $generated@@335))
 :pattern ( ($generated@@283 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@61) (= (type $generated@@337) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@336 $generated@@337)) $generated@@58))
 :pattern ( ($generated@@283 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@338 ($generated@@295 $generated@@340 $generated@@341)) $generated@@340))
 :pattern ( ($generated@@295 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@61) (= (type $generated@@345) $generated@@61)) (= ($generated@@342 ($generated@@295 $generated@@344 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@295 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@61) (= (type $generated@@347) $generated@@61)) (= ($generated@@67 ($generated@@295 $generated@@346 $generated@@347)) $generated@@59))
 :pattern ( ($generated@@295 $generated@@346 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@208 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@207 $generated@@218)) (= (type $generated@@355) $generated@@61)) (= (type $generated@@356) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356) (forall (($generated@@357 Int) ) (!  (=> (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@206 $generated@@354))) ($generated@@216 ($generated@@349 $generated@@354 $generated@@357) $generated@@355 $generated@@356))
 :pattern ( ($generated@@349 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@358 ($generated@@70 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@70 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@360 ($generated@@271 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@271 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@271 $generated@@363)) $generated@@54))
 :pattern ( ($generated@@271 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@277 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@277 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@277 $generated@@367)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@369 ($generated@@368 $generated@@372)) $generated@@372))
 :pattern ( ($generated@@368 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@67 ($generated@@368 $generated@@373)) $generated@@56))
 :pattern ( ($generated@@368 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@374 ($generated@@348 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@348 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@377)) $generated@@57))
 :pattern ( ($generated@@348 $generated@@377))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated@@378 $generated@@382 ($generated@@217 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@217 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@384) $generated@@383))))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@76 ($generated@@315 $generated@@384) $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@71 $generated@@218 $generated@@2)) (= (type $generated@@386) $generated@@61)) (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@385 ($generated@@368 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@218) (< 0 ($generated ($generated@@76 $generated@@385 $generated@@388)))) ($generated@@216 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@76 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@69 $generated@@385 ($generated@@368 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 Int) ) (! (= ($generated@@217 ($generated@@8 ($generated@@183 $generated@@389))) ($generated@@185 ($generated@@217 ($generated@@8 $generated@@389))))
 :pattern ( ($generated@@217 ($generated@@8 ($generated@@183 $generated@@389))))
)))
(assert (forall (($generated@@390 T@U) ) (! (= ($generated@@217 ($generated@@185 $generated@@390)) ($generated@@185 ($generated@@217 $generated@@390)))
 :pattern ( ($generated@@217 ($generated@@185 $generated@@390)))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@208 (type $generated@@391))))
 (=> (and (= (type $generated@@391) ($generated@@207 $generated@@392)) (= ($generated@@206 $generated@@391) 0)) (= $generated@@391 ($generated@@205 $generated@@392))))
 :pattern ( ($generated@@206 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@2)) ($generated@@69 $generated@@394 $generated@@46 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@46 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@3)) ($generated@@69 $generated@@396 $generated@@47 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@47 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@4)) ($generated@@69 $generated@@398 $generated@@44 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@44 $generated@@397))
)))
(assert (= ($generated@@1 $generated@@399) 18))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@401) $generated@@399)) ($generated@@69 $generated@@401 $generated@@45 $generated@@400))
 :pattern ( ($generated@@69 $generated@@401 $generated@@45 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@218)) ($generated@@69 $generated@@403 $generated@@48 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@48 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 Int) ($generated@@406 Int) ) (!  (=> (= (type $generated@@404) $generated@@192) (= ($generated@@190 $generated@@404 $generated@@405 $generated@@406) ($generated@@190 $generated@@308 $generated@@405 $generated@@406)))
 :pattern ( ($generated@@190 ($generated@@307 $generated@@404) $generated@@405 $generated@@406))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@407 () Int)
(declare-fun $generated@@408 () T@U)
(declare-fun $generated@@409 () Int)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 (T@U) Bool)
(declare-fun $generated@@413 (T@U) Bool)
(assert  (and (and (= (type $generated@@408) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@410) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@411) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@414 true))
(let (($generated@@415  (=> ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@408) (=> (and (and ($generated@@69 ($generated@@8 $generated@@409) $generated@@46 $generated@@408) ($generated@@193 $generated@@407 $generated@@409)) (and (forall (($generated@@416 Int) ) (! ($generated@@193 $generated@@407 $generated@@416)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@308) $generated@@407 $generated@@416))
)) (= (ControlFlow 0 2) (- 0 1)))) (exists (($generated@@417 Int) ) (! ($generated@@190 ($generated@@191 $generated@@308) $generated@@407 $generated@@417)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@308) $generated@@407 $generated@@417))
))))))
(let (($generated@@418  (=> (= $generated@@410 ($generated@@128 $generated@@411 $generated@@408 $generated@@60 false)) (=> (and (and ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@408) ($generated@@194 $generated@@407)) (and ($generated@@194 $generated@@407) ($generated@@195 ($generated@@191 ($generated@@191 $generated@@308)) $generated@@407))) (and (=> (= (ControlFlow 0 4) 2) $generated@@415) (=> (= (ControlFlow 0 4) 3) $generated@@414))))))
(let (($generated@@419  (=> (and (and ($generated@@412 $generated@@408) ($generated@@413 $generated@@408)) (and (= 1 $generated@@189) (= (ControlFlow 0 5) 4))) $generated@@418)))
$generated@@419)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U Int Int) Bool)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@193 (Int Int) Bool)
(declare-fun $generated@@194 (Int) Bool)
(declare-fun $generated@@195 (T@U Int) Bool)
(declare-fun $generated@@205 (T@T) T@U)
(declare-fun $generated@@206 (T@U) Int)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@216 (T@U T@U T@U) Bool)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@218 () T@T)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@T T@T) T@U)
(declare-fun $generated@@229 (T@T T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@T T@T) T@U)
(declare-fun $generated@@247 (T@T T@T) T@T)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@295 (T@U T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U Int) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@399 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (= ($generated@@1 $generated@@192) 13) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@191 $generated@@196)) $generated@@192)
 :pattern ( ($generated@@191 $generated@@196))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@192) (or ($generated@@193 ($generated@@183 $generated@@198) ($generated@@183 $generated@@199)) (not (= 0 $generated@@189)))) (and (=> ($generated@@0 ($generated@@185 ($generated@@11 (> $generated@@198 0)))) ($generated@@194 ($generated@@183 (- $generated@@198 1)))) (= ($generated@@190 ($generated@@191 $generated@@197) ($generated@@183 $generated@@198) ($generated@@183 $generated@@199)) ($generated@@0 ($generated@@185 ($generated@@11  (=> (> $generated@@198 0) ($generated@@195 ($generated@@191 $generated@@197) ($generated@@183 (- $generated@@198 1))))))))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@191 $generated@@197) ($generated@@183 $generated@@198) ($generated@@183 $generated@@199)))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@200 T@U) ($generated@@201 Int) ) (!  (=> (and (= (type $generated@@200) $generated@@192) (or ($generated@@194 $generated@@201) (not (= 0 $generated@@189)))) true)
 :pattern ( ($generated@@195 $generated@@200 $generated@@201))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@202 T@U) ($generated@@203 Int) ($generated@@204 Int) ) (!  (=> (and (= (type $generated@@202) $generated@@192) (or ($generated@@193 $generated@@203 $generated@@204) (not (= 0 $generated@@189)))) (and (=> (> $generated@@203 0) ($generated@@194 (- $generated@@203 1))) (= ($generated@@190 ($generated@@191 $generated@@202) $generated@@203 $generated@@204)  (=> (> $generated@@203 0) ($generated@@195 $generated@@202 (- $generated@@203 1))))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@202) $generated@@203 $generated@@204))
))))
(assert  (and (and (forall (($generated@@209 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@209)) 14)) (forall (($generated@@210 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@207 $generated@@210))
))) (forall (($generated@@211 T@T) ) (! (= (type ($generated@@205 $generated@@211)) ($generated@@207 $generated@@211))
 :pattern ( ($generated@@205 $generated@@211))
))))
(assert (forall (($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@212)) 0)
 :pattern ( ($generated@@205 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 Int) ($generated@@215 Int) ) (!  (=> (= (type $generated@@213) $generated@@192) (= ($generated@@190 ($generated@@191 $generated@@213) $generated@@214 $generated@@215) ($generated@@190 $generated@@213 $generated@@214 $generated@@215)))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@213) $generated@@214 $generated@@215))
)))
(assert  (and (= ($generated@@1 $generated@@218) 15) (forall (($generated@@219 T@U) ) (! (= (type ($generated@@217 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@217 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@61) (= (type $generated@@222) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@216 ($generated@@217 $generated@@220) $generated@@221 $generated@@222) ($generated@@69 $generated@@220 $generated@@221 $generated@@222)))
 :pattern ( ($generated@@216 ($generated@@217 $generated@@220) $generated@@221 $generated@@222))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@223 T@U) ($generated@@224 Int) ) (!  (=> (and (= (type $generated@@223) $generated@@192) (or ($generated@@194 $generated@@224) (not (= 0 $generated@@189)))) (and (forall (($generated@@225 Int) ) (! ($generated@@193 $generated@@224 $generated@@225)
 :pattern ( ($generated@@190 $generated@@223 $generated@@224 $generated@@225))
)) (= ($generated@@195 ($generated@@191 $generated@@223) $generated@@224) (exists (($generated@@226 Int) ) (! ($generated@@190 $generated@@223 $generated@@224 $generated@@226)
 :pattern ( ($generated@@190 $generated@@223 $generated@@224 $generated@@226))
)))))
 :pattern ( ($generated@@195 ($generated@@191 $generated@@223) $generated@@224))
))))
(assert  (and (and (and (and (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@232 $generated@@233)) 16)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@234 $generated@@235)) $generated@@234)
 :pattern ( ($generated@@229 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (! (= ($generated@@231 ($generated@@229 $generated@@236 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@229 $generated@@236 $generated@@237))
))) (forall (($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@230 (type $generated@@238))))
(= (type ($generated@@227 $generated@@238)) ($generated@@71 $generated@@239 $generated@@4)))
 :pattern ( ($generated@@227 $generated@@238))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= (type ($generated@@228 $generated@@240 $generated@@241)) ($generated@@229 $generated@@240 $generated@@241))
 :pattern ( ($generated@@228 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (let (($generated@@244 (type $generated@@242)))
 (not ($generated@@0 ($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242))))
 :pattern ( (let (($generated@@244 (type $generated@@242)))
($generated@@76 ($generated@@227 ($generated@@228 $generated@@244 $generated@@243)) $generated@@242)))
)))
(assert  (and (and (and (and (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (= ($generated@@1 ($generated@@247 $generated@@250 $generated@@251)) 17)) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@248 ($generated@@247 $generated@@252 $generated@@253)) $generated@@252)
 :pattern ( ($generated@@247 $generated@@252 $generated@@253))
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@247 $generated@@254 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@247 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@248 (type $generated@@256))))
(= (type ($generated@@245 $generated@@256)) ($generated@@71 $generated@@257 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@256))
))) (forall (($generated@@258 T@T) ($generated@@259 T@T) ) (! (= (type ($generated@@246 $generated@@258 $generated@@259)) ($generated@@247 $generated@@258 $generated@@259))
 :pattern ( ($generated@@246 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@T) ) (! (let (($generated@@262 (type $generated@@260)))
 (not ($generated@@0 ($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260))))
 :pattern ( (let (($generated@@262 (type $generated@@260)))
($generated@@76 ($generated@@245 ($generated@@246 $generated@@262 $generated@@261)) $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@231 (type $generated@@263))))
(let (($generated@@265 ($generated@@230 (type $generated@@263))))
 (=> (= (type $generated@@263) ($generated@@229 $generated@@265 $generated@@264)) (or (= $generated@@263 ($generated@@228 $generated@@265 $generated@@264)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@263) $generated@@266)))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@227 $generated@@263))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@249 (type $generated@@267))))
(let (($generated@@269 ($generated@@248 (type $generated@@267))))
 (=> (= (type $generated@@267) ($generated@@247 $generated@@269 $generated@@268)) (or (= $generated@@267 ($generated@@246 $generated@@269 $generated@@268)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@267) $generated@@270)))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@245 $generated@@267))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@273) ($generated@@71 $generated@@218 $generated@@4)) (= (type $generated@@274) $generated@@61)) (= (type $generated@@275) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@273 ($generated@@271 $generated@@274) $generated@@275) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@218) ($generated@@0 ($generated@@76 $generated@@273 $generated@@276))) ($generated@@216 $generated@@276 $generated@@274 $generated@@275))
 :pattern ( ($generated@@76 $generated@@273 $generated@@276))
))))
 :pattern ( ($generated@@69 $generated@@273 ($generated@@271 $generated@@274) $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@61)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@279) ($generated@@71 $generated@@218 $generated@@4)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@277 $generated@@280) $generated@@281) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@218) ($generated@@0 ($generated@@76 $generated@@279 $generated@@282))) ($generated@@216 $generated@@282 $generated@@280 $generated@@281))
 :pattern ( ($generated@@76 $generated@@279 $generated@@282))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@277 $generated@@280) $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@283 $generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@283 $generated@@285 $generated@@286))
)) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@231 (type $generated@@287))))
(let (($generated@@289 ($generated@@230 (type $generated@@287))))
(= (type ($generated@@284 $generated@@287)) ($generated@@71 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@284 $generated@@287))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (= (type $generated@@290) ($generated@@229 $generated@@218 $generated@@218)) (= (type $generated@@291) $generated@@61)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@218) ($generated@@0 ($generated@@76 ($generated@@227 $generated@@290) $generated@@294))) (and ($generated@@216 ($generated@@76 ($generated@@284 $generated@@290) $generated@@294) $generated@@292 $generated@@293) ($generated@@216 $generated@@294 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@76 ($generated@@284 $generated@@290) $generated@@294))
 :pattern ( ($generated@@76 ($generated@@227 $generated@@290) $generated@@294))
))))
 :pattern ( ($generated@@69 $generated@@290 ($generated@@283 $generated@@291 $generated@@292) $generated@@293))
)))
(assert  (and (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (= (type ($generated@@295 $generated@@297 $generated@@298)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@297 $generated@@298))
)) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@249 (type $generated@@299))))
(let (($generated@@301 ($generated@@248 (type $generated@@299))))
(= (type ($generated@@296 $generated@@299)) ($generated@@71 $generated@@301 $generated@@300))))
 :pattern ( ($generated@@296 $generated@@299))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (= (type $generated@@302) ($generated@@247 $generated@@218 $generated@@218)) (= (type $generated@@303) $generated@@61)) (= (type $generated@@304) $generated@@61)) (= (type $generated@@305) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@302 ($generated@@295 $generated@@303 $generated@@304) $generated@@305) (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@218) ($generated@@0 ($generated@@76 ($generated@@245 $generated@@302) $generated@@306))) (and ($generated@@216 ($generated@@76 ($generated@@296 $generated@@302) $generated@@306) $generated@@304 $generated@@305) ($generated@@216 $generated@@306 $generated@@303 $generated@@305)))
 :pattern ( ($generated@@76 ($generated@@296 $generated@@302) $generated@@306))
 :pattern ( ($generated@@76 ($generated@@245 $generated@@302) $generated@@306))
))))
 :pattern ( ($generated@@69 $generated@@302 ($generated@@295 $generated@@303 $generated@@304) $generated@@305))
)))
(assert  (and (forall (($generated@@309 T@U) ) (! (= (type ($generated@@307 $generated@@309)) $generated@@192)
 :pattern ( ($generated@@307 $generated@@309))
)) (= (type $generated@@308) $generated@@192)))
(assert (forall (($generated@@310 T@U) ($generated@@311 Int) ) (!  (=> (= (type $generated@@310) $generated@@192) (= ($generated@@195 $generated@@310 $generated@@311) ($generated@@195 $generated@@308 $generated@@311)))
 :pattern ( ($generated@@195 ($generated@@307 $generated@@310) $generated@@311))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@312 T@U) ($generated@@313 Int) ($generated@@314 Int) ) (!  (=> (and (= (type $generated@@312) $generated@@192) (or ($generated@@193 $generated@@313 $generated@@314) (not (= 0 $generated@@189)))) true)
 :pattern ( ($generated@@190 $generated@@312 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@71 $generated@@316 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@249 (type $generated@@317))))
(let (($generated@@319 ($generated@@248 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@247 $generated@@319 $generated@@318)) (= (= $generated@@317 ($generated@@246 $generated@@319 $generated@@318)) (= ($generated@@245 $generated@@317) ($generated@@315 $generated@@319))))))
 :pattern ( ($generated@@245 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 Int) ) (!  (=> (= (type $generated@@320) $generated@@192) (= ($generated@@195 ($generated@@191 $generated@@320) $generated@@321) ($generated@@195 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@195 ($generated@@191 $generated@@320) $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@208 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@207 $generated@@323)) (<= 0 ($generated@@206 $generated@@322))))
 :pattern ( ($generated@@206 $generated@@322))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@324 T@U) ($generated@@325 Int) ) (!  (=> (and (= (type $generated@@324) $generated@@192) (or ($generated@@194 ($generated@@183 $generated@@325)) (not (= 0 $generated@@189)))) (and (forall (($generated@@326 Int) ) (! ($generated@@193 ($generated@@183 $generated@@325) $generated@@326)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@324) $generated@@325 $generated@@326))
)) (= ($generated@@195 ($generated@@191 $generated@@324) ($generated@@183 $generated@@325)) (exists (($generated@@327 Int) ) (! ($generated@@190 ($generated@@191 $generated@@324) ($generated@@183 $generated@@325) $generated@@327)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@324) $generated@@325 $generated@@327))
)))))
 :weight 3
 :pattern ( ($generated@@195 ($generated@@191 $generated@@324) ($generated@@183 $generated@@325)))
))))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@328 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@328 ($generated@@283 $generated@@330 $generated@@331)) $generated@@330))
 :pattern ( ($generated@@283 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@283 $generated@@334 $generated@@335)) $generated@@335))
 :pattern ( ($generated@@283 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@61) (= (type $generated@@337) $generated@@61)) (= ($generated@@67 ($generated@@283 $generated@@336 $generated@@337)) $generated@@58))
 :pattern ( ($generated@@283 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@338 ($generated@@295 $generated@@340 $generated@@341)) $generated@@340))
 :pattern ( ($generated@@295 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@61) (= (type $generated@@345) $generated@@61)) (= ($generated@@342 ($generated@@295 $generated@@344 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@295 $generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@61) (= (type $generated@@347) $generated@@61)) (= ($generated@@67 ($generated@@295 $generated@@346 $generated@@347)) $generated@@59))
 :pattern ( ($generated@@295 $generated@@346 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@208 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@207 $generated@@218)) (= (type $generated@@355) $generated@@61)) (= (type $generated@@356) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356) (forall (($generated@@357 Int) ) (!  (=> (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@206 $generated@@354))) ($generated@@216 ($generated@@349 $generated@@354 $generated@@357) $generated@@355 $generated@@356))
 :pattern ( ($generated@@349 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@358 ($generated@@70 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@70 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@360 ($generated@@271 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@271 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@271 $generated@@363)) $generated@@54))
 :pattern ( ($generated@@271 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@277 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@277 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@277 $generated@@367)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@369 ($generated@@368 $generated@@372)) $generated@@372))
 :pattern ( ($generated@@368 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@67 ($generated@@368 $generated@@373)) $generated@@56))
 :pattern ( ($generated@@368 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@374 ($generated@@348 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@348 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@377)) $generated@@57))
 :pattern ( ($generated@@348 $generated@@377))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated@@378 $generated@@382 ($generated@@217 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@217 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
 (not ($generated@@0 ($generated@@76 ($generated@@315 $generated@@384) $generated@@383))))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@76 ($generated@@315 $generated@@384) $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@71 $generated@@218 $generated@@2)) (= (type $generated@@386) $generated@@61)) (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@385 ($generated@@368 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@218) (< 0 ($generated ($generated@@76 $generated@@385 $generated@@388)))) ($generated@@216 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@76 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@69 $generated@@385 ($generated@@368 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 Int) ) (! (= ($generated@@217 ($generated@@8 ($generated@@183 $generated@@389))) ($generated@@185 ($generated@@217 ($generated@@8 $generated@@389))))
 :pattern ( ($generated@@217 ($generated@@8 ($generated@@183 $generated@@389))))
)))
(assert (forall (($generated@@390 T@U) ) (! (= ($generated@@217 ($generated@@185 $generated@@390)) ($generated@@185 ($generated@@217 $generated@@390)))
 :pattern ( ($generated@@217 ($generated@@185 $generated@@390)))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@208 (type $generated@@391))))
 (=> (and (= (type $generated@@391) ($generated@@207 $generated@@392)) (= ($generated@@206 $generated@@391) 0)) (= $generated@@391 ($generated@@205 $generated@@392))))
 :pattern ( ($generated@@206 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@394) $generated@@2)) ($generated@@69 $generated@@394 $generated@@46 $generated@@393))
 :pattern ( ($generated@@69 $generated@@394 $generated@@46 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@396) $generated@@3)) ($generated@@69 $generated@@396 $generated@@47 $generated@@395))
 :pattern ( ($generated@@69 $generated@@396 $generated@@47 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@398) $generated@@4)) ($generated@@69 $generated@@398 $generated@@44 $generated@@397))
 :pattern ( ($generated@@69 $generated@@398 $generated@@44 $generated@@397))
)))
(assert (= ($generated@@1 $generated@@399) 18))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@401) $generated@@399)) ($generated@@69 $generated@@401 $generated@@45 $generated@@400))
 :pattern ( ($generated@@69 $generated@@401 $generated@@45 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@403) $generated@@218)) ($generated@@69 $generated@@403 $generated@@48 $generated@@402))
 :pattern ( ($generated@@69 $generated@@403 $generated@@48 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 Int) ($generated@@406 Int) ) (!  (=> (= (type $generated@@404) $generated@@192) (= ($generated@@190 $generated@@404 $generated@@405 $generated@@406) ($generated@@190 $generated@@308 $generated@@405 $generated@@406)))
 :pattern ( ($generated@@190 ($generated@@307 $generated@@404) $generated@@405 $generated@@406))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@407 () Int)
(declare-fun $generated@@408 () T@U)
(declare-fun $generated@@409 () Int)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 (T@U) Bool)
(declare-fun $generated@@414 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@408) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@410) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@411) $generated@@72)) (= (type $generated@@412) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@415 true))
(let (($generated@@416  (=> ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@408) (=> (and (and ($generated@@69 ($generated@@8 $generated@@409) $generated@@46 $generated@@408) ($generated@@193 $generated@@407 $generated@@409)) (and (forall (($generated@@417 Int) ) (! ($generated@@193 $generated@@407 $generated@@417)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@308) $generated@@407 $generated@@417))
)) (= (ControlFlow 0 2) (- 0 1)))) (exists (($generated@@418 Int) ) (! ($generated@@190 ($generated@@191 $generated@@308) $generated@@407 $generated@@418)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@308) $generated@@407 $generated@@418))
))))))
(let (($generated@@419  (=> (= $generated@@410 ($generated@@128 $generated@@411 $generated@@412 $generated@@60 false)) (=> (and (and (and ($generated@@413 $generated@@408) ($generated@@414 $generated@@408)) (and (= $generated@@412 $generated@@408) (forall (($generated@@420 Int) )  (=> (and ($generated@@195 ($generated@@191 $generated@@308) $generated@@420) (and (<= 0 $generated@@420) (< $generated@@420 $generated@@407))) true)))) (and (and ($generated@@69 ($generated@@8 $generated@@407) $generated@@46 $generated@@408) ($generated@@194 $generated@@407)) (and ($generated@@194 $generated@@407) ($generated@@195 ($generated@@191 ($generated@@191 $generated@@308)) $generated@@407)))) (and (=> (= (ControlFlow 0 4) 2) $generated@@416) (=> (= (ControlFlow 0 4) 3) $generated@@415))))))
(let (($generated@@421  (=> (and (and (and ($generated@@413 $generated@@412) ($generated@@414 $generated@@412)) (= 1 $generated@@189)) (and (and ($generated@@194 $generated@@407) (and ($generated@@195 ($generated@@191 $generated@@308) $generated@@407) (exists (($generated@@422 Int) ) (! ($generated@@190 ($generated@@191 $generated@@308) $generated@@407 $generated@@422)
 :pattern ( ($generated@@190 ($generated@@191 $generated@@308) $generated@@407 $generated@@422))
)))) (= (ControlFlow 0 5) 4))) $generated@@419)))
$generated@@421)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 (T@U T@U Int) Bool)
(declare-fun $generated@@256 () T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@U Int) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@T) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@256) 17) (forall (($generated@@262 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@262)) 18))) (forall (($generated@@263 T@T) ) (! (= ($generated@@261 ($generated@@257 $generated@@263)) $generated@@263)
 :pattern ( ($generated@@257 $generated@@263))
))) (forall (($generated@@264 T@U) ) (! (= (type ($generated@@259 $generated@@264)) $generated@@66)
 :pattern ( ($generated@@259 $generated@@264))
))))
(assert  (=> (<= 1 $generated@@254) (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Int) ) (!  (=> (and (and (= (type $generated@@265) $generated@@256) (= (type $generated@@266) ($generated@@257 $generated@@150))) (or ($generated@@258 $generated@@266 $generated@@267) (and (not (= 1 $generated@@254)) (and (and ($generated@@137 $generated@@266 ($generated@@259 $generated@@46)) (<= ($generated@@248 0) $generated@@267)) (<= $generated@@267 ($generated@@260 $generated@@266)))))) true)
 :pattern ( ($generated@@255 $generated@@265 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) $generated@@66)) (= (type $generated@@272) $generated@@150)) (= (type $generated@@273) $generated@@150)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@268 $generated@@274)) (= ($generated@@76 ($generated@@228 $generated@@272 $generated@@273) ($generated@@140 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@272 $generated@@273) ($generated@@140 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@70)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@141) (= ($generated@@139 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@141) ($generated@@139 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@150) (= (type $generated@@280) $generated@@150)) (= $generated@@278 ($generated@@228 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@139 $generated@@278))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@257 $generated@@282))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@260 ($generated@@281 $generated@@283)) 0)
 :pattern ( ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@2) (= ($generated@@137 $generated@@284 $generated@@134) (<= ($generated@@248 0) ($generated $generated@@284))))
 :pattern ( ($generated@@137 $generated@@284 $generated@@134))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@256)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@256) (= (type $generated@@288) ($generated@@257 $generated@@150))) (= ($generated@@255 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@255 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@255 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@66) (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@269 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@76 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@269 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@78 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@81 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@78 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@83 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 20)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@78 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@81 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@78 $generated@@338 $generated@@2)) (= ($generated@@156 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@83 $generated@@337 $generated@@339))) (<= ($generated ($generated@@83 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@83 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@156 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@150) ($generated@@229 $generated@@343 $generated@@134)) (and (= ($generated@@290 ($generated@@340 $generated@@2 $generated@@343)) $generated@@343) ($generated@@137 ($generated@@340 $generated@@2 $generated@@343) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@343 $generated@@134))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@301 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@305 (type $generated@@351))))
(let (($generated@@353 ($generated@@304 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@303 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@302 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@323 (type $generated@@355))))
(let (($generated@@357 ($generated@@322 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@321 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@320 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@319 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@323 (type $generated@@362))))
(let (($generated@@364 ($generated@@322 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@321 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@320 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@367) $generated@@66)) (= ($generated@@137 $generated@@366 ($generated@@155 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@366 $generated@@368)))) ($generated@@229 $generated@@368 $generated@@367))
 :pattern ( ($generated@@83 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@137 $generated@@366 ($generated@@155 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@238 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@150) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@269 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@238 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@373 ($generated@@243 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@150) ($generated@@0 ($generated@@83 $generated@@373 $generated@@376))) ($generated@@269 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@83 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@76 $generated@@373 ($generated@@243 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@83 ($generated@@296 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@83 ($generated@@296 $generated@@378) $generated@@377)))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@305 (type $generated@@382))))
(let (($generated@@384 ($generated@@304 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@386) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@385) ($generated@@148 ($generated@@340 $generated@@141 $generated@@386)))) (= ($generated@@83 ($generated@@380 $generated@@385) ($generated@@148 ($generated@@340 $generated@@141 $generated@@386))) ($generated@@149 ($generated@@340 $generated@@141 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@323 (type $generated@@390))))
(let (($generated@@392 ($generated@@322 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@394) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@393) ($generated@@148 ($generated@@340 $generated@@141 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@148 ($generated@@340 $generated@@141 $generated@@394))) ($generated@@149 ($generated@@340 $generated@@141 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@304 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@303 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@395) $generated@@399))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@322 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@321 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@408) $generated@@412))) (and ($generated@@269 ($generated@@83 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@269 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@416) $generated@@420))) (and ($generated@@269 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@269 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@T) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@78 $generated@@422 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@323 (type $generated@@423))))
(let (($generated@@425 ($generated@@322 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@321 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@320 $generated@@425 $generated@@424)) (= ($generated@@319 $generated@@423) ($generated@@421 $generated@@425))))))
 :pattern ( ($generated@@319 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@323 (type $generated@@426))))
(let (($generated@@428 ($generated@@322 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@321 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@320 $generated@@428 $generated@@427)) (= ($generated@@359 $generated@@426) ($generated@@421 $generated@@427))))))
 :pattern ( ($generated@@359 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@323 (type $generated@@429))))
(let (($generated@@431 ($generated@@322 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@321 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@320 $generated@@431 $generated@@430)) (= ($generated@@387 $generated@@429) ($generated@@421 $generated@@150))))))
 :pattern ( ($generated@@387 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@305 (type $generated@@432))))
(let (($generated@@434 ($generated@@304 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@303 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@302 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@150) (= (type $generated@@436) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@432) ($generated@@290 ($generated@@228 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@379 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@323 (type $generated@@437))))
(let (($generated@@439 ($generated@@322 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@321 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@320 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@150) (= (type $generated@@441) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@437) ($generated@@290 ($generated@@228 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@387 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@150) ($generated@@229 $generated@@442 $generated@@46)) (and (= ($generated@@290 ($generated@@340 $generated@@2 $generated@@442)) $generated@@442) ($generated@@137 ($generated@@340 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@229 $generated@@443 $generated@@47)) (and (= ($generated@@290 ($generated@@340 $generated@@3 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@340 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@150) ($generated@@229 $generated@@444 $generated@@44)) (and (= ($generated@@290 ($generated@@340 $generated@@4 $generated@@444)) $generated@@444) ($generated@@137 ($generated@@340 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@445) 21))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) ($generated@@229 $generated@@446 $generated@@45)) (and (= ($generated@@290 ($generated@@340 $generated@@445 $generated@@446)) $generated@@446) ($generated@@137 ($generated@@340 $generated@@445 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@446 $generated@@45))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@66) (= ($generated@@229 ($generated@@290 $generated@@447) $generated@@448) ($generated@@137 $generated@@447 $generated@@448)))
 :pattern ( ($generated@@229 ($generated@@290 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@81 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@78 $generated@@450 $generated@@2)) (<= 0 ($generated@@295 $generated@@449))))
 :pattern ( ($generated@@295 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@261 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@257 $generated@@452)) (<= 0 ($generated@@260 $generated@@451))))
 :pattern ( ($generated@@260 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@405 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@405 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@405 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@405 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@413 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@413 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@275 ($generated@@228 $generated@@473 $generated@@474)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@140 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@140 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@140 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@140 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@150) (= (type $generated@@484) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@150) (= (type $generated@@486) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@228 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@261 (type $generated@@488))))
(= (type ($generated@@487 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@487 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@257 $generated@@150)) (= (type $generated@@492) $generated@@66)) (= (type $generated@@493) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@491 ($generated@@259 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@260 $generated@@491))) ($generated@@269 ($generated@@487 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@487 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@76 $generated@@491 ($generated@@259 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@77 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@77 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@238 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@243 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@155 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@155 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@259 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@259 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@259 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@259 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@340 $generated@@514 ($generated@@290 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@290 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) (= ($generated@@137 $generated@@515 ($generated@@405 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@515) $generated@@518))) (and ($generated@@229 ($generated@@83 ($generated@@380 $generated@@515) $generated@@518) $generated@@517) ($generated@@229 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@515) $generated@@518))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@137 $generated@@515 ($generated@@405 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@137 $generated@@519 ($generated@@413 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@519) $generated@@522))) (and ($generated@@229 ($generated@@83 ($generated@@388 $generated@@519) $generated@@522) $generated@@521) ($generated@@229 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@137 $generated@@519 ($generated@@413 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@150)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@228 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@228 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) $generated@@66)) ($generated@@229 $generated@@529 ($generated@@405 $generated@@530 $generated@@531))) (and (= ($generated@@290 ($generated@@340 ($generated@@303 $generated@@150 $generated@@150) $generated@@529)) $generated@@529) ($generated@@137 ($generated@@340 ($generated@@303 $generated@@150 $generated@@150) $generated@@529) ($generated@@405 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@229 $generated@@529 ($generated@@405 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@66)) (= (type $generated@@534) $generated@@66)) ($generated@@229 $generated@@532 ($generated@@413 $generated@@533 $generated@@534))) (and (= ($generated@@290 ($generated@@340 ($generated@@321 $generated@@150 $generated@@150) $generated@@532)) $generated@@532) ($generated@@137 ($generated@@340 ($generated@@321 $generated@@150 $generated@@150) $generated@@532) ($generated@@413 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@532 ($generated@@413 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@150)) ($generated@@229 $generated@@537 ($generated@@140 $generated@@535 $generated@@536))) (and (= ($generated@@290 ($generated@@340 $generated@@141 $generated@@537)) $generated@@537) ($generated@@137 ($generated@@340 $generated@@141 $generated@@537) ($generated@@140 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@140 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@83 ($generated@@421 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@83 ($generated@@421 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@71)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@66) (= (type $generated@@543) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@542 $generated@@543)) $generated@@63) (= ($generated@@540 ($generated@@140 $generated@@542 $generated@@543)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@141) (= ($generated@@523 ($generated@@290 $generated@@544)) ($generated@@524 $generated@@544)))
 :pattern ( ($generated@@523 ($generated@@290 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@150) ($generated@@229 $generated@@545 ($generated@@77 0))) (and (= ($generated@@290 ($generated@@340 $generated@@2 $generated@@545)) $generated@@545) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@545) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@545 ($generated@@77 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@229 $generated@@546 ($generated@@238 $generated@@547))) (and (= ($generated@@290 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@546) ($generated@@238 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@238 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@229 $generated@@548 ($generated@@243 $generated@@549))) (and (= ($generated@@290 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@548) ($generated@@243 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@243 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@150) (= (type $generated@@551) $generated@@66)) ($generated@@229 $generated@@550 ($generated@@155 $generated@@551))) (and (= ($generated@@290 ($generated@@340 ($generated@@78 $generated@@150 $generated@@2) $generated@@550)) $generated@@550) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@2) $generated@@550) ($generated@@155 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@155 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@150) (= (type $generated@@553) $generated@@66)) ($generated@@229 $generated@@552 ($generated@@259 $generated@@553))) (and (= ($generated@@290 ($generated@@340 ($generated@@257 $generated@@150) $generated@@552)) $generated@@552) ($generated@@137 ($generated@@340 ($generated@@257 $generated@@150) $generated@@552) ($generated@@259 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@259 $generated@@553)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@540 $generated@@134) $generated@@64))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@554 ($generated@@155 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@554 $generated@@557)))) ($generated@@269 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@83 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@155 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@141) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@268 $generated@@560) (and ($generated@@139 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@66) ($generated@@76 $generated@@558 ($generated@@140 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@76 $generated@@558 ($generated@@140 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@269 ($generated@@148 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@269 ($generated@@148 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@141) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@268 $generated@@564) (and ($generated@@139 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@66) ($generated@@76 $generated@@562 ($generated@@140 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@76 $generated@@562 ($generated@@140 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@269 ($generated@@149 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@269 ($generated@@149 $generated@@562) $generated@@563 $generated@@564))
)))
(assert  (=> (<= 1 $generated@@254) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (and (and (= (type $generated@@566) $generated@@256) (= (type $generated@@567) ($generated@@257 $generated@@150))) (or ($generated@@258 ($generated@@250 $generated@@567) ($generated@@248 $generated@@568)) (and (not (= 1 $generated@@254)) (and (and ($generated@@137 $generated@@567 ($generated@@259 $generated@@46)) (<= ($generated@@248 0) $generated@@568)) (<= ($generated@@248 $generated@@568) ($generated@@260 ($generated@@250 $generated@@567))))))) (and (=> (not ($generated@@0 ($generated@@250 ($generated@@11 (< $generated@@568 2))))) (=> (< ($generated ($generated@@340 $generated@@2 ($generated@@487 ($generated@@250 $generated@@567) ($generated@@248 (- $generated@@568 2))))) ($generated ($generated@@340 $generated@@2 ($generated@@487 ($generated@@250 $generated@@567) ($generated@@248 (- $generated@@568 1)))))) ($generated@@258 ($generated@@250 $generated@@567) ($generated@@248 (- $generated@@568 1))))) (= ($generated@@255 ($generated@@285 $generated@@566) ($generated@@250 $generated@@567) ($generated@@248 $generated@@568))  (or (< $generated@@568 2) (and (< ($generated ($generated@@340 $generated@@2 ($generated@@487 ($generated@@250 $generated@@567) ($generated@@248 (- $generated@@568 2))))) ($generated ($generated@@340 $generated@@2 ($generated@@487 ($generated@@250 $generated@@567) ($generated@@248 (- $generated@@568 1)))))) ($generated@@255 ($generated@@285 $generated@@566) ($generated@@250 $generated@@567) ($generated@@248 (- $generated@@568 1))))))))
 :weight 3
 :pattern ( ($generated@@255 ($generated@@285 $generated@@566) ($generated@@250 $generated@@567) ($generated@@248 $generated@@568)))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@150)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@290 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@290 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@290 $generated@@572)))
 :pattern ( ($generated@@290 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@261 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@257 $generated@@574)) (= ($generated@@260 $generated@@573) 0)) (= $generated@@573 ($generated@@281 $generated@@574))))
 :pattern ( ($generated@@260 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@78 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@295 ($generated@@84 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@295 $generated@@575) ($generated ($generated@@83 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@295 ($generated@@84 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@2)) ($generated@@76 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@582) $generated@@3)) ($generated@@76 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@76 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@4)) ($generated@@76 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@445)) ($generated@@76 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@150)) ($generated@@76 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@257 $generated@@150)) (= (type $generated@@590) $generated@@66)) (= ($generated@@137 $generated@@589 ($generated@@259 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@260 $generated@@589))) ($generated@@229 ($generated@@487 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@487 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@137 $generated@@589 ($generated@@259 $generated@@590)))
)))
(assert  (=> (<= 1 $generated@@254) (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (and (and (= (type $generated@@592) $generated@@256) (= (type $generated@@593) ($generated@@257 $generated@@150))) (or ($generated@@258 $generated@@593 $generated@@594) (and (not (= 1 $generated@@254)) (and (and ($generated@@137 $generated@@593 ($generated@@259 $generated@@46)) (<= ($generated@@248 0) $generated@@594)) (<= $generated@@594 ($generated@@260 $generated@@593)))))) (and (=> (<= 2 $generated@@594) (=> (< ($generated ($generated@@340 $generated@@2 ($generated@@487 $generated@@593 (- $generated@@594 2)))) ($generated ($generated@@340 $generated@@2 ($generated@@487 $generated@@593 (- $generated@@594 1))))) ($generated@@258 $generated@@593 (- $generated@@594 1)))) (= ($generated@@255 ($generated@@285 $generated@@592) $generated@@593 $generated@@594)  (or (< $generated@@594 2) (and (< ($generated ($generated@@340 $generated@@2 ($generated@@487 $generated@@593 (- $generated@@594 2)))) ($generated ($generated@@340 $generated@@2 ($generated@@487 $generated@@593 (- $generated@@594 1))))) ($generated@@255 $generated@@592 $generated@@593 (- $generated@@594 1)))))))
 :pattern ( ($generated@@255 ($generated@@285 $generated@@592) $generated@@593 $generated@@594))
))))
(assert  (and (forall (($generated@@597 T@U) ) (! (= (type ($generated@@595 $generated@@597)) $generated@@256)
 :pattern ( ($generated@@595 $generated@@597))
)) (= (type $generated@@596) $generated@@256)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (and (= (type $generated@@598) $generated@@256) (= (type $generated@@599) ($generated@@257 $generated@@150))) (= ($generated@@255 $generated@@598 $generated@@599 $generated@@600) ($generated@@255 $generated@@596 $generated@@599 $generated@@600)))
 :pattern ( ($generated@@255 ($generated@@595 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@260 $generated@@602))) (< ($generated@@524 ($generated@@340 $generated@@141 ($generated@@487 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@524 ($generated@@340 $generated@@141 ($generated@@487 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@137 $generated@@604 ($generated@@405 $generated@@605 $generated@@606))) (and (and ($generated@@137 ($generated@@301 $generated@@604) ($generated@@238 $generated@@605)) ($generated@@137 ($generated@@348 $generated@@604) ($generated@@238 $generated@@606))) ($generated@@137 ($generated@@379 $generated@@604) ($generated@@238 ($generated@@140 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@137 $generated@@604 ($generated@@405 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@137 $generated@@607 ($generated@@413 $generated@@608 $generated@@609))) (and (and ($generated@@137 ($generated@@319 $generated@@607) ($generated@@243 $generated@@608)) ($generated@@137 ($generated@@359 $generated@@607) ($generated@@243 $generated@@609))) ($generated@@137 ($generated@@387 $generated@@607) ($generated@@243 ($generated@@140 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@137 $generated@@607 ($generated@@413 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@137 $generated@@610 $generated@@46))
 :pattern ( ($generated@@137 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@137 $generated@@611 $generated@@47))
 :pattern ( ($generated@@137 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@137 $generated@@612 $generated@@44))
 :pattern ( ($generated@@137 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@445) ($generated@@137 $generated@@613 $generated@@45))
 :pattern ( ($generated@@137 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@150) ($generated@@137 $generated@@614 $generated@@48))
 :pattern ( ($generated@@137 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@615) ($generated@@257 $generated@@150)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@619) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@620) $generated@@79)) (= (type $generated@@621) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@623 true))
(let (($generated@@624  (=> (and (<= ($generated ($generated@@340 $generated@@2 ($generated@@487 $generated@@615 (- $generated@@616 1)))) ($generated ($generated@@340 $generated@@2 ($generated@@487 $generated@@615 (- $generated@@616 2))))) (= (ControlFlow 0 9) 2)) $generated@@623)))
(let (($generated@@625  (=> (and (< ($generated ($generated@@340 $generated@@2 ($generated@@487 $generated@@615 (- $generated@@616 2)))) ($generated ($generated@@340 $generated@@2 ($generated@@487 $generated@@615 (- $generated@@616 1))))) ($generated@@76 $generated@@615 ($generated@@259 $generated@@46) $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@137 ($generated@@8 (- $generated@@616 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@616 1)) $generated@@134) (=> (and (= $generated@@618 (- $generated@@616 1)) ($generated@@76 ($generated@@8 $generated@@618) $generated@@134 $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (<= $generated@@618 ($generated@@260 $generated@@615))) (=> (<= $generated@@618 ($generated@@260 $generated@@615)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@616) (< ($generated@@601 $generated@@615) ($generated@@601 $generated@@615))) (= $generated@@618 $generated@@616))) (=> (or (or (<= 0 $generated@@616) (< ($generated@@601 $generated@@615) ($generated@@601 $generated@@615))) (= $generated@@618 $generated@@616)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< ($generated@@601 $generated@@615) ($generated@@601 $generated@@615)) (and (= ($generated@@601 $generated@@615) ($generated@@601 $generated@@615)) (< $generated@@618 $generated@@616)))) (=> (or (< ($generated@@601 $generated@@615) ($generated@@601 $generated@@615)) (and (= ($generated@@601 $generated@@615) ($generated@@601 $generated@@615)) (< $generated@@618 $generated@@616))) (=> (and ($generated@@258 $generated@@615 (- $generated@@616 1)) (= (ControlFlow 0 4) 2)) $generated@@623)))))))))))))
(let (($generated@@626  (=> (<= 2 $generated@@616) (and (=> (= (ControlFlow 0 10) (- 0 12)) (and (<= 0 (- $generated@@616 2)) (< (- $generated@@616 2) ($generated@@260 $generated@@615)))) (=> (and (<= 0 (- $generated@@616 2)) (< (- $generated@@616 2) ($generated@@260 $generated@@615))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 (- $generated@@616 1)) (< (- $generated@@616 1) ($generated@@260 $generated@@615)))) (=> (and (<= 0 (- $generated@@616 1)) (< (- $generated@@616 1) ($generated@@260 $generated@@615))) (and (=> (= (ControlFlow 0 10) 4) $generated@@625) (=> (= (ControlFlow 0 10) 9) $generated@@624)))))))))
(let (($generated@@627  (=> (and (< $generated@@616 2) (= (ControlFlow 0 3) 2)) $generated@@623)))
(let (($generated@@628  (=> (= $generated@@619 ($generated@@216 $generated@@620 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 10) $generated@@626) (=> (= (ControlFlow 0 13) 3) $generated@@627)))))
(let (($generated@@629 true))
(let (($generated@@630  (=> (and (= $generated@@621 ($generated@@161 $generated@@620 $generated@@617 $generated@@60 false)) (<= $generated@@616 ($generated@@260 $generated@@615))) (and (=> (= (ControlFlow 0 14) 1) $generated@@629) (=> (= (ControlFlow 0 14) 13) $generated@@628)))))
(let (($generated@@631  (=> (and ($generated@@268 $generated@@617) ($generated@@622 $generated@@617)) (=> (and (and ($generated@@137 $generated@@615 ($generated@@259 $generated@@46)) (<= ($generated@@248 0) $generated@@616)) (and (= 1 $generated@@254) (= (ControlFlow 0 15) 14))) $generated@@630))))
$generated@@631))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 (T@U T@U Int) Bool)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@250 (T@U Int) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@604 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@248) 17) (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@249 $generated@@254)) 18))) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@249 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@249 $generated@@255))
))) (forall (($generated@@256 T@U) ) (! (= (type ($generated@@251 $generated@@256)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@256))
))))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Int) ) (!  (=> (and (and (= (type $generated@@257) $generated@@248) (= (type $generated@@258) ($generated@@249 $generated@@154))) (or ($generated@@250 $generated@@258 $generated@@259) (and (not (= 1 $generated@@246)) (and (and ($generated@@141 $generated@@258 ($generated@@251 $generated@@46)) (<= ($generated@@240 0) $generated@@259)) (<= $generated@@259 ($generated@@252 $generated@@258)))))) true)
 :pattern ( ($generated@@247 $generated@@257 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@66) (= (type $generated@@263) $generated@@66)) (= (type $generated@@264) $generated@@154)) (= (type $generated@@265) $generated@@154)) (= (type $generated@@266) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@260 $generated@@266)) (= ($generated@@76 ($generated@@220 $generated@@264 $generated@@265) ($generated@@144 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@264 $generated@@265) ($generated@@144 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@145) (= ($generated@@143 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@145) ($generated@@143 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@154) (= (type $generated@@272) $generated@@154)) (= $generated@@270 ($generated@@220 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@143 $generated@@270))
)))
(assert (forall (($generated@@274 T@T) ) (! (= (type ($generated@@273 $generated@@274)) ($generated@@249 $generated@@274))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@252 ($generated@@273 $generated@@275)) 0)
 :pattern ( ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@141 $generated@@276 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@276))))
 :pattern ( ($generated@@141 $generated@@276 $generated@@138))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@248)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Int) ) (!  (=> (and (= (type $generated@@279) $generated@@248) (= (type $generated@@280) ($generated@@249 $generated@@154))) (= ($generated@@247 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@247 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@247 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@154)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@66) (= (type $generated@@286) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@261 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@76 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@261 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@289) $generated@@154)) (= (type $generated@@290) $generated@@66)) ($generated@@134 $generated@@287 $generated@@288)) ($generated@@261 $generated@@289 $generated@@290 $generated@@287)) ($generated@@261 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@134 $generated@@287 $generated@@288) ($generated@@261 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@292) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@294) $generated@@66)) ($generated@@134 $generated@@291 $generated@@292)) ($generated@@76 $generated@@293 $generated@@294 $generated@@291)) ($generated@@76 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@134 $generated@@291 $generated@@292) ($generated@@76 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@78 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@81 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@78 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@83 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 20)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@78 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@81 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@78 $generated@@338 $generated@@2)) (= ($generated@@160 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@83 $generated@@337 $generated@@339))) (<= ($generated ($generated@@83 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@83 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@160 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@154) ($generated@@221 $generated@@343 $generated@@138)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@343)) $generated@@343) ($generated@@141 ($generated@@340 $generated@@2 $generated@@343) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@343 $generated@@138))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@301 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@305 (type $generated@@351))))
(let (($generated@@353 ($generated@@304 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@303 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@302 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@323 (type $generated@@355))))
(let (($generated@@357 ($generated@@322 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@321 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@320 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@319 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@323 (type $generated@@362))))
(let (($generated@@364 ($generated@@322 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@321 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@320 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@367) $generated@@66)) (= ($generated@@141 $generated@@366 ($generated@@159 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@366 $generated@@368)))) ($generated@@221 $generated@@368 $generated@@367))
 :pattern ( ($generated@@83 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@141 $generated@@366 ($generated@@159 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@230 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@154) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@261 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@230 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@373 ($generated@@235 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@154) ($generated@@0 ($generated@@83 $generated@@373 $generated@@376))) ($generated@@261 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@83 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@76 $generated@@373 ($generated@@235 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@83 ($generated@@296 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@83 ($generated@@296 $generated@@378) $generated@@377)))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@305 (type $generated@@382))))
(let (($generated@@384 ($generated@@304 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@303 $generated@@154 $generated@@154)) (= (type $generated@@386) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@385) ($generated@@152 ($generated@@340 $generated@@145 $generated@@386)))) (= ($generated@@83 ($generated@@380 $generated@@385) ($generated@@152 ($generated@@340 $generated@@145 $generated@@386))) ($generated@@153 ($generated@@340 $generated@@145 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@323 (type $generated@@390))))
(let (($generated@@392 ($generated@@322 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@321 $generated@@154 $generated@@154)) (= (type $generated@@394) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@393) ($generated@@152 ($generated@@340 $generated@@145 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@152 ($generated@@340 $generated@@145 $generated@@394))) ($generated@@153 ($generated@@340 $generated@@145 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@304 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@303 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@395) $generated@@399))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@322 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@321 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@303 $generated@@154 $generated@@154)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@408) $generated@@412))) (and ($generated@@261 ($generated@@83 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@261 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@321 $generated@@154 $generated@@154)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@416) $generated@@420))) (and ($generated@@261 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@261 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@422) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@421 $generated@@423))) (and ($generated@@134 $generated@@421 $generated@@422) ($generated@@134 $generated@@422 $generated@@423))) ($generated@@134 $generated@@421 $generated@@423))
 :pattern ( ($generated@@134 $generated@@421 $generated@@422) ($generated@@134 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@78 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@323 (type $generated@@426))))
(let (($generated@@428 ($generated@@322 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@321 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@320 $generated@@428 $generated@@427)) (= ($generated@@319 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@319 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@323 (type $generated@@429))))
(let (($generated@@431 ($generated@@322 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@321 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@320 $generated@@431 $generated@@430)) (= ($generated@@359 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@359 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@323 (type $generated@@432))))
(let (($generated@@434 ($generated@@322 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@321 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@320 $generated@@434 $generated@@433)) (= ($generated@@387 $generated@@432) ($generated@@424 $generated@@154))))))
 :pattern ( ($generated@@387 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@305 (type $generated@@435))))
(let (($generated@@437 ($generated@@304 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@303 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@302 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@154) (= (type $generated@@439) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@435) ($generated@@282 ($generated@@220 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@379 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@323 (type $generated@@440))))
(let (($generated@@442 ($generated@@322 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@321 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@320 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@154) (= (type $generated@@444) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@440) ($generated@@282 ($generated@@220 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@387 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@154) ($generated@@221 $generated@@445 $generated@@46)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@445)) $generated@@445) ($generated@@141 ($generated@@340 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@154) ($generated@@221 $generated@@446 $generated@@47)) (and (= ($generated@@282 ($generated@@340 $generated@@3 $generated@@446)) $generated@@446) ($generated@@141 ($generated@@340 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@154) ($generated@@221 $generated@@447 $generated@@44)) (and (= ($generated@@282 ($generated@@340 $generated@@4 $generated@@447)) $generated@@447) ($generated@@141 ($generated@@340 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 21))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@154) ($generated@@221 $generated@@449 $generated@@45)) (and (= ($generated@@282 ($generated@@340 $generated@@448 $generated@@449)) $generated@@449) ($generated@@141 ($generated@@340 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@66) (= ($generated@@221 ($generated@@282 $generated@@450) $generated@@451) ($generated@@141 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@221 ($generated@@282 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@81 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@78 $generated@@453 $generated@@2)) (<= 0 ($generated@@295 $generated@@452))))
 :pattern ( ($generated@@295 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@253 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@249 $generated@@455)) (<= 0 ($generated@@252 $generated@@454))))
 :pattern ( ($generated@@252 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@405 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@405 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@405 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@405 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@413 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@413 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@413 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@413 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@154) (= (type $generated@@477) $generated@@154)) (= ($generated@@267 ($generated@@220 $generated@@476 $generated@@477)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@144 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@144 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@144 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@144 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) (= (type $generated@@487) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@220 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@154) (= (type $generated@@489) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@220 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@253 (type $generated@@491))))
(= (type ($generated@@490 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@490 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@249 $generated@@154)) (= (type $generated@@495) $generated@@66)) (= (type $generated@@496) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@494 ($generated@@251 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@252 $generated@@494))) ($generated@@261 ($generated@@490 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@490 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@76 $generated@@494 ($generated@@251 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@77 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@77 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@230 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@230 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@235 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@235 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@159 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@159 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@251 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@251 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@340 $generated@@517 ($generated@@282 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@282 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@303 $generated@@154 $generated@@154)) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) $generated@@66)) (= ($generated@@141 $generated@@518 ($generated@@405 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@518) $generated@@521))) (and ($generated@@221 ($generated@@83 ($generated@@380 $generated@@518) $generated@@521) $generated@@520) ($generated@@221 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@518) $generated@@521))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@141 $generated@@518 ($generated@@405 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@321 $generated@@154 $generated@@154)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) (= ($generated@@141 $generated@@522 ($generated@@413 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@522) $generated@@525))) (and ($generated@@221 ($generated@@83 ($generated@@388 $generated@@522) $generated@@525) $generated@@524) ($generated@@221 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@522) $generated@@525))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@141 $generated@@522 ($generated@@413 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@154) (= (type $generated@@529) $generated@@154)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@220 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@220 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@154) (= (type $generated@@531) $generated@@154)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@220 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@220 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@154) (= (type $generated@@533) $generated@@66)) (= (type $generated@@534) $generated@@66)) ($generated@@221 $generated@@532 ($generated@@405 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@340 ($generated@@303 $generated@@154 $generated@@154) $generated@@532)) $generated@@532) ($generated@@141 ($generated@@340 ($generated@@303 $generated@@154 $generated@@154) $generated@@532) ($generated@@405 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@221 $generated@@532 ($generated@@405 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@154) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) ($generated@@221 $generated@@535 ($generated@@413 $generated@@536 $generated@@537))) (and (= ($generated@@282 ($generated@@340 ($generated@@321 $generated@@154 $generated@@154) $generated@@535)) $generated@@535) ($generated@@141 ($generated@@340 ($generated@@321 $generated@@154 $generated@@154) $generated@@535) ($generated@@413 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@221 $generated@@535 ($generated@@413 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@154)) ($generated@@221 $generated@@540 ($generated@@144 $generated@@538 $generated@@539))) (and (= ($generated@@282 ($generated@@340 $generated@@145 $generated@@540)) $generated@@540) ($generated@@141 ($generated@@340 $generated@@145 $generated@@540) ($generated@@144 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@144 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@83 ($generated@@424 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@83 ($generated@@424 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@71)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@545 $generated@@546)) $generated@@63) (= ($generated@@543 ($generated@@144 $generated@@545 $generated@@546)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@145) (= ($generated@@526 ($generated@@282 $generated@@547)) ($generated@@527 $generated@@547)))
 :pattern ( ($generated@@526 ($generated@@282 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) ($generated@@221 $generated@@548 ($generated@@77 0))) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@548)) $generated@@548) ($generated@@141 ($generated@@340 ($generated@@78 $generated@@154 $generated@@4) $generated@@548) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@548 ($generated@@77 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@66)) ($generated@@221 $generated@@549 ($generated@@230 $generated@@550))) (and (= ($generated@@282 ($generated@@340 ($generated@@78 $generated@@154 $generated@@4) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@340 ($generated@@78 $generated@@154 $generated@@4) $generated@@549) ($generated@@230 $generated@@550))))
 :pattern ( ($generated@@221 $generated@@549 ($generated@@230 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@154) (= (type $generated@@552) $generated@@66)) ($generated@@221 $generated@@551 ($generated@@235 $generated@@552))) (and (= ($generated@@282 ($generated@@340 ($generated@@78 $generated@@154 $generated@@4) $generated@@551)) $generated@@551) ($generated@@141 ($generated@@340 ($generated@@78 $generated@@154 $generated@@4) $generated@@551) ($generated@@235 $generated@@552))))
 :pattern ( ($generated@@221 $generated@@551 ($generated@@235 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@154) (= (type $generated@@554) $generated@@66)) ($generated@@221 $generated@@553 ($generated@@159 $generated@@554))) (and (= ($generated@@282 ($generated@@340 ($generated@@78 $generated@@154 $generated@@2) $generated@@553)) $generated@@553) ($generated@@141 ($generated@@340 ($generated@@78 $generated@@154 $generated@@2) $generated@@553) ($generated@@159 $generated@@554))))
 :pattern ( ($generated@@221 $generated@@553 ($generated@@159 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@154) (= (type $generated@@556) $generated@@66)) ($generated@@221 $generated@@555 ($generated@@251 $generated@@556))) (and (= ($generated@@282 ($generated@@340 ($generated@@249 $generated@@154) $generated@@555)) $generated@@555) ($generated@@141 ($generated@@340 ($generated@@249 $generated@@154) $generated@@555) ($generated@@251 $generated@@556))))
 :pattern ( ($generated@@221 $generated@@555 ($generated@@251 $generated@@556)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@543 $generated@@138) $generated@@64))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@558) $generated@@66)) (= (type $generated@@559) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@557 ($generated@@159 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@557 $generated@@560)))) ($generated@@261 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@83 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@76 $generated@@557 ($generated@@159 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@145) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@260 $generated@@563) (and ($generated@@143 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@66) ($generated@@76 $generated@@561 ($generated@@144 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@76 $generated@@561 ($generated@@144 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@261 ($generated@@152 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@261 ($generated@@152 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@145) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@260 $generated@@567) (and ($generated@@143 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@66) ($generated@@76 $generated@@565 ($generated@@144 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@144 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@261 ($generated@@153 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@261 ($generated@@153 $generated@@565) $generated@@566 $generated@@567))
)))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 Int) ) (!  (=> (and (and (= (type $generated@@569) $generated@@248) (= (type $generated@@570) ($generated@@249 $generated@@154))) (or ($generated@@250 ($generated@@242 $generated@@570) ($generated@@240 $generated@@571)) (and (not (= 1 $generated@@246)) (and (and ($generated@@141 $generated@@570 ($generated@@251 $generated@@46)) (<= ($generated@@240 0) $generated@@571)) (<= ($generated@@240 $generated@@571) ($generated@@252 ($generated@@242 $generated@@570))))))) (and (=> (not ($generated@@0 ($generated@@242 ($generated@@11 (< $generated@@571 2))))) (=> (< ($generated ($generated@@340 $generated@@2 ($generated@@490 ($generated@@242 $generated@@570) ($generated@@240 (- $generated@@571 2))))) ($generated ($generated@@340 $generated@@2 ($generated@@490 ($generated@@242 $generated@@570) ($generated@@240 (- $generated@@571 1)))))) ($generated@@250 ($generated@@242 $generated@@570) ($generated@@240 (- $generated@@571 1))))) (= ($generated@@247 ($generated@@277 $generated@@569) ($generated@@242 $generated@@570) ($generated@@240 $generated@@571))  (or (< $generated@@571 2) (and (< ($generated ($generated@@340 $generated@@2 ($generated@@490 ($generated@@242 $generated@@570) ($generated@@240 (- $generated@@571 2))))) ($generated ($generated@@340 $generated@@2 ($generated@@490 ($generated@@242 $generated@@570) ($generated@@240 (- $generated@@571 1)))))) ($generated@@247 ($generated@@277 $generated@@569) ($generated@@242 $generated@@570) ($generated@@240 (- $generated@@571 1))))))))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@277 $generated@@569) ($generated@@242 $generated@@570) ($generated@@240 $generated@@571)))
))))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@154) (= (type $generated@@573) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@572) ($generated@@242 $generated@@573)) ($generated@@242 ($generated@@220 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@572) ($generated@@242 $generated@@573)))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@240 $generated@@574))) ($generated@@242 ($generated@@282 ($generated@@8 $generated@@574))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@240 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@282 ($generated@@242 $generated@@575)) ($generated@@242 ($generated@@282 $generated@@575)))
 :pattern ( ($generated@@282 ($generated@@242 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@253 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@249 $generated@@577)) (= ($generated@@252 $generated@@576) 0)) (= $generated@@576 ($generated@@273 $generated@@577))))
 :pattern ( ($generated@@252 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@78 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@295 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@295 $generated@@578) ($generated ($generated@@83 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@295 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@2)) ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@3)) ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@4)) ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@448)) ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@154)) ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@249 $generated@@154)) (= (type $generated@@593) $generated@@66)) (= ($generated@@141 $generated@@592 ($generated@@251 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@252 $generated@@592))) ($generated@@221 ($generated@@490 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@490 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@141 $generated@@592 ($generated@@251 $generated@@593)))
)))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (and (and (= (type $generated@@595) $generated@@248) (= (type $generated@@596) ($generated@@249 $generated@@154))) (or ($generated@@250 $generated@@596 $generated@@597) (and (not (= 1 $generated@@246)) (and (and ($generated@@141 $generated@@596 ($generated@@251 $generated@@46)) (<= ($generated@@240 0) $generated@@597)) (<= $generated@@597 ($generated@@252 $generated@@596)))))) (and (=> (<= 2 $generated@@597) (=> (< ($generated ($generated@@340 $generated@@2 ($generated@@490 $generated@@596 (- $generated@@597 2)))) ($generated ($generated@@340 $generated@@2 ($generated@@490 $generated@@596 (- $generated@@597 1))))) ($generated@@250 $generated@@596 (- $generated@@597 1)))) (= ($generated@@247 ($generated@@277 $generated@@595) $generated@@596 $generated@@597)  (or (< $generated@@597 2) (and (< ($generated ($generated@@340 $generated@@2 ($generated@@490 $generated@@596 (- $generated@@597 2)))) ($generated ($generated@@340 $generated@@2 ($generated@@490 $generated@@596 (- $generated@@597 1))))) ($generated@@247 $generated@@595 $generated@@596 (- $generated@@597 1)))))))
 :pattern ( ($generated@@247 ($generated@@277 $generated@@595) $generated@@596 $generated@@597))
))))
(assert  (and (forall (($generated@@600 T@U) ) (! (= (type ($generated@@598 $generated@@600)) $generated@@248)
 :pattern ( ($generated@@598 $generated@@600))
)) (= (type $generated@@599) $generated@@248)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (and (= (type $generated@@601) $generated@@248) (= (type $generated@@602) ($generated@@249 $generated@@154))) (= ($generated@@247 $generated@@601 $generated@@602 $generated@@603) ($generated@@247 $generated@@599 $generated@@602 $generated@@603)))
 :pattern ( ($generated@@247 ($generated@@598 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@249 $generated@@154)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@252 $generated@@605))) (< ($generated@@527 ($generated@@340 $generated@@145 ($generated@@490 $generated@@605 $generated@@606))) ($generated@@604 $generated@@605))))
 :pattern ( ($generated@@527 ($generated@@340 $generated@@145 ($generated@@490 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@303 $generated@@154 $generated@@154)) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@141 $generated@@607 ($generated@@405 $generated@@608 $generated@@609))) (and (and ($generated@@141 ($generated@@301 $generated@@607) ($generated@@230 $generated@@608)) ($generated@@141 ($generated@@348 $generated@@607) ($generated@@230 $generated@@609))) ($generated@@141 ($generated@@379 $generated@@607) ($generated@@230 ($generated@@144 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@141 $generated@@607 ($generated@@405 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@321 $generated@@154 $generated@@154)) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@66)) ($generated@@141 $generated@@610 ($generated@@413 $generated@@611 $generated@@612))) (and (and ($generated@@141 ($generated@@319 $generated@@610) ($generated@@235 $generated@@611)) ($generated@@141 ($generated@@359 $generated@@610) ($generated@@235 $generated@@612))) ($generated@@141 ($generated@@387 $generated@@610) ($generated@@235 ($generated@@144 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@141 $generated@@610 ($generated@@413 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@141 $generated@@613 $generated@@46))
 :pattern ( ($generated@@141 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@141 $generated@@614 $generated@@47))
 :pattern ( ($generated@@141 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@141 $generated@@615 $generated@@44))
 :pattern ( ($generated@@141 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@448) ($generated@@141 $generated@@616 $generated@@45))
 :pattern ( ($generated@@141 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@154) ($generated@@141 $generated@@617 $generated@@48))
 :pattern ( ($generated@@141 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(assert  (and (and (and (and (= (type $generated@@620) ($generated@@249 $generated@@154)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@624) $generated@@79)) (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@627) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@629 true))
(let (($generated@@630  (=> (and (=> (and (<= ($generated@@240 0) $generated@@618) (< $generated@@618 $generated@@619)) ($generated@@247 ($generated@@277 $generated@@599) $generated@@620 $generated@@618)) (= (ControlFlow 0 5) 1)) $generated@@629)))
(let (($generated@@631  (=> (<= ($generated@@240 0) $generated@@618) (=> (and (< $generated@@618 $generated@@619) ($generated@@76 $generated@@620 ($generated@@251 $generated@@46) $generated@@621)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@141 ($generated@@8 $generated@@618) $generated@@138)) (=> ($generated@@141 ($generated@@8 $generated@@618) $generated@@138) (=> ($generated@@76 ($generated@@8 $generated@@618) $generated@@138 $generated@@621) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@618 ($generated@@252 $generated@@620))) (=> (and (and (<= $generated@@618 ($generated@@252 $generated@@620)) ($generated@@250 $generated@@620 $generated@@618)) (and ($generated@@247 ($generated@@277 $generated@@599) $generated@@620 $generated@@618) (= (ControlFlow 0 2) 1))) $generated@@629)))))))))
(let (($generated@@632  (=> (and (<= $generated@@622 $generated@@619) (<= $generated@@619 ($generated@@252 $generated@@620))) (and (=> (= (ControlFlow 0 6) 2) $generated@@631) (=> (= (ControlFlow 0 6) 5) $generated@@630)))))
(let (($generated@@633  (=> (and (< $generated@@619 $generated@@622) (= (ControlFlow 0 8) 6)) $generated@@632)))
(let (($generated@@634  (=> (and (<= $generated@@622 $generated@@619) (= (ControlFlow 0 7) 6)) $generated@@632)))
(let (($generated@@635  (=> (forall (($generated@@636 Int) ) (!  (=> true (=> (and (<= ($generated@@240 0) $generated@@636) (< $generated@@636 $generated@@622)) ($generated@@247 ($generated@@277 $generated@@599) $generated@@620 $generated@@636)))
 :pattern ( ($generated@@247 ($generated@@277 $generated@@599) $generated@@620 $generated@@636))
)) (=> (and (and (and ($generated@@260 $generated@@621) ($generated@@623 $generated@@621)) (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@79) (=> (and (not (= $generated@@637 $generated@@624)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@625 $generated@@637) $generated@@60))) (= ($generated@@83 $generated@@621 $generated@@637) ($generated@@83 $generated@@625 $generated@@637))))
 :pattern ( ($generated@@83 $generated@@621 $generated@@637))
))) (and ($generated@@134 $generated@@625 $generated@@621) (<= ($generated@@240 0) $generated@@619))) (and (=> (= (ControlFlow 0 9) 7) $generated@@634) (=> (= (ControlFlow 0 9) 8) $generated@@633))))))
(let (($generated@@638  (=> (and (=> (and (<= ($generated@@240 0) $generated@@626) (< $generated@@626 $generated@@622)) ($generated@@247 ($generated@@277 $generated@@599) $generated@@620 $generated@@626)) (= (ControlFlow 0 13) 9)) $generated@@635)))
(let (($generated@@639  (=> (<= ($generated@@240 0) $generated@@626) (=> (and (< $generated@@626 $generated@@622) ($generated@@76 $generated@@620 ($generated@@251 $generated@@46) $generated@@625)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@141 ($generated@@8 $generated@@626) $generated@@138)) (=> ($generated@@141 ($generated@@8 $generated@@626) $generated@@138) (=> ($generated@@76 ($generated@@8 $generated@@626) $generated@@138 $generated@@625) (and (=> (= (ControlFlow 0 10) (- 0 11)) (<= $generated@@626 ($generated@@252 $generated@@620))) (=> (and (and (<= $generated@@626 ($generated@@252 $generated@@620)) ($generated@@250 $generated@@620 $generated@@626)) (and ($generated@@247 ($generated@@277 $generated@@599) $generated@@620 $generated@@626) (= (ControlFlow 0 10) 9))) $generated@@635)))))))))
(let (($generated@@640  (=> (and (= $generated@@627 ($generated@@165 $generated@@624 $generated@@625 $generated@@60 false)) (< $generated@@622 ($generated@@252 $generated@@620))) (and (=> (= (ControlFlow 0 14) 10) $generated@@639) (=> (= (ControlFlow 0 14) 13) $generated@@638)))))
(let (($generated@@641  (=> (and (and (and ($generated@@260 $generated@@625) ($generated@@623 $generated@@625)) (and ($generated@@141 $generated@@620 ($generated@@251 $generated@@46)) ($generated@@76 $generated@@620 ($generated@@251 $generated@@46) $generated@@625))) (and (and (<= ($generated@@240 0) $generated@@622) (<= ($generated@@240 0) $generated@@628)) (and (= 2 $generated@@246) (= (ControlFlow 0 15) 14)))) $generated@@640)))
$generated@@641))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 (T@U T@U Int) Bool)
(declare-fun $generated@@244 () T@T)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@U Int) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@244) 17) (forall (($generated@@250 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@250)) 18))) (forall (($generated@@251 T@T) ) (! (= ($generated@@249 ($generated@@245 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@245 $generated@@251))
))) (forall (($generated@@252 T@U) ) (! (= (type ($generated@@247 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@252))
))))
(assert  (=> (<= 1 $generated@@242) (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Int) ) (!  (=> (and (and (= (type $generated@@253) $generated@@244) (= (type $generated@@254) ($generated@@245 $generated@@150))) (or ($generated@@246 $generated@@254 $generated@@255) (and (not (= 1 $generated@@242)) (and (and ($generated@@137 $generated@@254 ($generated@@247 $generated@@46)) (<= ($generated@@236 0) $generated@@255)) (<= $generated@@255 ($generated@@248 $generated@@254)))))) true)
 :pattern ( ($generated@@243 $generated@@253 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@66) (= (type $generated@@259) $generated@@66)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= (type $generated@@262) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@256 $generated@@262)) (= ($generated@@76 ($generated@@216 $generated@@260 $generated@@261) ($generated@@140 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@260 $generated@@261) ($generated@@140 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@70)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@141) (= ($generated@@139 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@141) ($generated@@139 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@150) (= (type $generated@@268) $generated@@150)) (= $generated@@266 ($generated@@216 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@139 $generated@@266))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@245 $generated@@270))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@248 ($generated@@269 $generated@@271)) 0)
 :pattern ( ($generated@@269 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@2) (= ($generated@@137 $generated@@272 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@272))))
 :pattern ( ($generated@@137 $generated@@272 $generated@@134))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@244)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 Int) ) (!  (=> (and (= (type $generated@@275) $generated@@244) (= (type $generated@@276) ($generated@@245 $generated@@150))) (= ($generated@@243 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@243 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@243 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@150)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@66) (= (type $generated@@282) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@257 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@76 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@257 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 20)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@156 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@156 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@150) ($generated@@217 $generated@@331 $generated@@134)) (and (= ($generated@@278 ($generated@@328 $generated@@2 $generated@@331)) $generated@@331) ($generated@@137 ($generated@@328 $generated@@2 $generated@@331) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@331 $generated@@134))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@78 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@355) $generated@@66)) (= ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@354 $generated@@356)))) ($generated@@217 $generated@@356 $generated@@355))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@257 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@257 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@83 ($generated@@284 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@293 (type $generated@@370))))
(let (($generated@@372 ($generated@@292 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@311 (type $generated@@378))))
(let (($generated@@380 ($generated@@310 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@292 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@291 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@83 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@383) $generated@@387))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@310 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@309 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))) (and ($generated@@257 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@257 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))) (and ($generated@@257 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@257 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@311 (type $generated@@411))))
(let (($generated@@413 ($generated@@310 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@309 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@307 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@307 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@150))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@293 (type $generated@@420))))
(let (($generated@@422 ($generated@@292 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@291 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@290 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@150) (= (type $generated@@424) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@420) ($generated@@278 ($generated@@216 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@150) (= (type $generated@@429) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@425) ($generated@@278 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@46)) (and (= ($generated@@278 ($generated@@328 $generated@@2 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@328 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@47)) (and (= ($generated@@278 ($generated@@328 $generated@@3 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@328 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@217 $generated@@432 $generated@@44)) (and (= ($generated@@278 ($generated@@328 $generated@@4 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@328 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 21))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@217 $generated@@434 $generated@@45)) (and (= ($generated@@278 ($generated@@328 $generated@@433 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@328 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@217 ($generated@@278 $generated@@435) $generated@@436) ($generated@@137 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@217 ($generated@@278 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@283 $generated@@437))))
 :pattern ( ($generated@@283 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@249 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@245 $generated@@440)) (<= 0 ($generated@@248 $generated@@439))))
 :pattern ( ($generated@@248 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@150) (= (type $generated@@462) $generated@@150)) (= ($generated@@263 ($generated@@216 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@140 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@140 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@216 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@216 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@249 (type $generated@@476))))
(= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@245 $generated@@150)) (= (type $generated@@480) $generated@@66)) (= (type $generated@@481) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@479 ($generated@@247 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@248 $generated@@479))) ($generated@@257 ($generated@@475 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@475 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@76 $generated@@479 ($generated@@247 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@77 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@77 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@66) (= ($generated@@485 ($generated@@226 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@226 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@489 ($generated@@231 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@231 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@493 ($generated@@155 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@155 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@247 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@247 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@247 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@328 $generated@@502 ($generated@@278 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@278 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) $generated@@66)) (= ($generated@@137 $generated@@503 ($generated@@393 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@503) $generated@@506))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@503) $generated@@506) $generated@@505) ($generated@@217 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@503) $generated@@506))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@137 $generated@@503 ($generated@@393 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) (= ($generated@@137 $generated@@507 ($generated@@401 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@507) $generated@@510))) (and ($generated@@217 ($generated@@83 ($generated@@376 $generated@@507) $generated@@510) $generated@@509) ($generated@@217 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@507) $generated@@510))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@137 $generated@@507 ($generated@@401 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@150) (= (type $generated@@514) $generated@@150)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@216 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@216 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) (= (type $generated@@516) $generated@@150)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@216 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@216 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@66)) ($generated@@217 $generated@@517 ($generated@@393 $generated@@518 $generated@@519))) (and (= ($generated@@278 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@517)) $generated@@517) ($generated@@137 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@517) ($generated@@393 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@217 $generated@@517 ($generated@@393 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@150) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@217 $generated@@520 ($generated@@401 $generated@@521 $generated@@522))) (and (= ($generated@@278 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@520)) $generated@@520) ($generated@@137 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@520) ($generated@@401 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@217 $generated@@520 ($generated@@401 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@150)) ($generated@@217 $generated@@525 ($generated@@140 $generated@@523 $generated@@524))) (and (= ($generated@@278 ($generated@@328 $generated@@141 $generated@@525)) $generated@@525) ($generated@@137 ($generated@@328 $generated@@141 $generated@@525) ($generated@@140 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@140 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@83 ($generated@@409 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@71)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@530 $generated@@531)) $generated@@63) (= ($generated@@528 ($generated@@140 $generated@@530 $generated@@531)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@141) (= ($generated@@511 ($generated@@278 $generated@@532)) ($generated@@512 $generated@@532)))
 :pattern ( ($generated@@511 ($generated@@278 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@150) ($generated@@217 $generated@@533 ($generated@@77 0))) (and (= ($generated@@278 ($generated@@328 $generated@@2 $generated@@533)) $generated@@533) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@533) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@533 ($generated@@77 0)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@66)) ($generated@@217 $generated@@534 ($generated@@226 $generated@@535))) (and (= ($generated@@278 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@534) ($generated@@226 $generated@@535))))
 :pattern ( ($generated@@217 $generated@@534 ($generated@@226 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@217 $generated@@536 ($generated@@231 $generated@@537))) (and (= ($generated@@278 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536) ($generated@@231 $generated@@537))))
 :pattern ( ($generated@@217 $generated@@536 ($generated@@231 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) ($generated@@217 $generated@@538 ($generated@@155 $generated@@539))) (and (= ($generated@@278 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@538) ($generated@@155 $generated@@539))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@155 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) ($generated@@217 $generated@@540 ($generated@@247 $generated@@541))) (and (= ($generated@@278 ($generated@@328 ($generated@@245 $generated@@150) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@328 ($generated@@245 $generated@@150) $generated@@540) ($generated@@247 $generated@@541))))
 :pattern ( ($generated@@217 $generated@@540 ($generated@@247 $generated@@541)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@528 $generated@@134) $generated@@64))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@542 ($generated@@155 $generated@@543) $generated@@544) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@542 $generated@@545)))) ($generated@@257 $generated@@545 $generated@@543 $generated@@544))
 :pattern ( ($generated@@83 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@76 $generated@@542 ($generated@@155 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@141) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@256 $generated@@548) (and ($generated@@139 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@66) ($generated@@76 $generated@@546 ($generated@@140 $generated@@547 $generated@@549) $generated@@548))
 :pattern ( ($generated@@76 $generated@@546 ($generated@@140 $generated@@547 $generated@@549) $generated@@548))
))))) ($generated@@257 ($generated@@148 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@257 ($generated@@148 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@141) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@256 $generated@@552) (and ($generated@@139 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@66) ($generated@@76 $generated@@550 ($generated@@140 $generated@@553 $generated@@551) $generated@@552))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@140 $generated@@553 $generated@@551) $generated@@552))
))))) ($generated@@257 ($generated@@149 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@257 ($generated@@149 $generated@@550) $generated@@551 $generated@@552))
)))
(assert  (=> (<= 1 $generated@@242) (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 Int) ) (!  (=> (and (and (= (type $generated@@554) $generated@@244) (= (type $generated@@555) ($generated@@245 $generated@@150))) (or ($generated@@246 ($generated@@238 $generated@@555) ($generated@@236 $generated@@556)) (and (not (= 1 $generated@@242)) (and (and ($generated@@137 $generated@@555 ($generated@@247 $generated@@46)) (<= ($generated@@236 0) $generated@@556)) (<= ($generated@@236 $generated@@556) ($generated@@248 ($generated@@238 $generated@@555))))))) (and (=> (not ($generated@@0 ($generated@@238 ($generated@@11 (< $generated@@556 2))))) (=> (< ($generated ($generated@@328 $generated@@2 ($generated@@475 ($generated@@238 $generated@@555) ($generated@@236 (- $generated@@556 2))))) ($generated ($generated@@328 $generated@@2 ($generated@@475 ($generated@@238 $generated@@555) ($generated@@236 (- $generated@@556 1)))))) ($generated@@246 ($generated@@238 $generated@@555) ($generated@@236 (- $generated@@556 1))))) (= ($generated@@243 ($generated@@273 $generated@@554) ($generated@@238 $generated@@555) ($generated@@236 $generated@@556))  (or (< $generated@@556 2) (and (< ($generated ($generated@@328 $generated@@2 ($generated@@475 ($generated@@238 $generated@@555) ($generated@@236 (- $generated@@556 2))))) ($generated ($generated@@328 $generated@@2 ($generated@@475 ($generated@@238 $generated@@555) ($generated@@236 (- $generated@@556 1)))))) ($generated@@243 ($generated@@273 $generated@@554) ($generated@@238 $generated@@555) ($generated@@236 (- $generated@@556 1))))))))
 :weight 3
 :pattern ( ($generated@@243 ($generated@@273 $generated@@554) ($generated@@238 $generated@@555) ($generated@@236 $generated@@556)))
))))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@150) (= (type $generated@@558) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@557) ($generated@@238 $generated@@558)) ($generated@@238 ($generated@@216 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@557) ($generated@@238 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@236 $generated@@559))) ($generated@@238 ($generated@@278 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@236 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@278 ($generated@@238 $generated@@560)) ($generated@@238 ($generated@@278 $generated@@560)))
 :pattern ( ($generated@@278 ($generated@@238 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@249 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@245 $generated@@562)) (= ($generated@@248 $generated@@561) 0)) (= $generated@@561 ($generated@@269 $generated@@562))))
 :pattern ( ($generated@@248 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@283 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@283 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@433)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@150)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@245 $generated@@150)) (= (type $generated@@578) $generated@@66)) (= ($generated@@137 $generated@@577 ($generated@@247 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@248 $generated@@577))) ($generated@@217 ($generated@@475 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@475 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@137 $generated@@577 ($generated@@247 $generated@@578)))
)))
(assert  (=> (<= 1 $generated@@242) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (and (and (= (type $generated@@580) $generated@@244) (= (type $generated@@581) ($generated@@245 $generated@@150))) (or ($generated@@246 $generated@@581 $generated@@582) (and (not (= 1 $generated@@242)) (and (and ($generated@@137 $generated@@581 ($generated@@247 $generated@@46)) (<= ($generated@@236 0) $generated@@582)) (<= $generated@@582 ($generated@@248 $generated@@581)))))) (and (=> (<= 2 $generated@@582) (=> (< ($generated ($generated@@328 $generated@@2 ($generated@@475 $generated@@581 (- $generated@@582 2)))) ($generated ($generated@@328 $generated@@2 ($generated@@475 $generated@@581 (- $generated@@582 1))))) ($generated@@246 $generated@@581 (- $generated@@582 1)))) (= ($generated@@243 ($generated@@273 $generated@@580) $generated@@581 $generated@@582)  (or (< $generated@@582 2) (and (< ($generated ($generated@@328 $generated@@2 ($generated@@475 $generated@@581 (- $generated@@582 2)))) ($generated ($generated@@328 $generated@@2 ($generated@@475 $generated@@581 (- $generated@@582 1))))) ($generated@@243 $generated@@580 $generated@@581 (- $generated@@582 1)))))))
 :pattern ( ($generated@@243 ($generated@@273 $generated@@580) $generated@@581 $generated@@582))
))))
(assert  (and (forall (($generated@@585 T@U) ) (! (= (type ($generated@@583 $generated@@585)) $generated@@244)
 :pattern ( ($generated@@583 $generated@@585))
)) (= (type $generated@@584) $generated@@244)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (and (= (type $generated@@586) $generated@@244) (= (type $generated@@587) ($generated@@245 $generated@@150))) (= ($generated@@243 $generated@@586 $generated@@587 $generated@@588) ($generated@@243 $generated@@584 $generated@@587 $generated@@588)))
 :pattern ( ($generated@@243 ($generated@@583 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@245 $generated@@150)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@248 $generated@@590))) (< ($generated@@512 ($generated@@328 $generated@@141 ($generated@@475 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@512 ($generated@@328 $generated@@141 ($generated@@475 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) $generated@@66)) ($generated@@137 $generated@@592 ($generated@@393 $generated@@593 $generated@@594))) (and (and ($generated@@137 ($generated@@289 $generated@@592) ($generated@@226 $generated@@593)) ($generated@@137 ($generated@@336 $generated@@592) ($generated@@226 $generated@@594))) ($generated@@137 ($generated@@367 $generated@@592) ($generated@@226 ($generated@@140 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@137 $generated@@592 ($generated@@393 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) $generated@@66)) ($generated@@137 $generated@@595 ($generated@@401 $generated@@596 $generated@@597))) (and (and ($generated@@137 ($generated@@307 $generated@@595) ($generated@@231 $generated@@596)) ($generated@@137 ($generated@@347 $generated@@595) ($generated@@231 $generated@@597))) ($generated@@137 ($generated@@375 $generated@@595) ($generated@@231 ($generated@@140 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@137 $generated@@595 ($generated@@401 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@137 $generated@@598 $generated@@46))
 :pattern ( ($generated@@137 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@137 $generated@@599 $generated@@47))
 :pattern ( ($generated@@137 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@137 $generated@@600 $generated@@44))
 :pattern ( ($generated@@137 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@433) ($generated@@137 $generated@@601 $generated@@45))
 :pattern ( ($generated@@137 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@150) ($generated@@137 $generated@@602 $generated@@48))
 :pattern ( ($generated@@137 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () Int)
(assert  (and (and (and (= (type $generated@@605) ($generated@@245 $generated@@150)) (= (type $generated@@607) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@608) $generated@@79)) (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@612  (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@603 $generated@@604)) (=> (<= $generated@@603 $generated@@604) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@604 ($generated@@248 $generated@@605))) (=> (<= $generated@@604 ($generated@@248 $generated@@605)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@613 Int) ) (!  (=> true (=> (and (<= ($generated@@236 0) $generated@@613) (< $generated@@613 $generated@@604)) ($generated@@243 ($generated@@273 ($generated@@273 $generated@@584)) $generated@@605 $generated@@613)))
 :pattern ( ($generated@@243 ($generated@@273 ($generated@@273 $generated@@584)) $generated@@605 $generated@@613))
)))))))))
(let (($generated@@614  (=> (not (and (<= ($generated@@236 2) $generated@@603) (< ($generated ($generated@@328 $generated@@2 ($generated@@475 $generated@@605 (- $generated@@603 2)))) ($generated ($generated@@328 $generated@@2 ($generated@@475 $generated@@605 (- $generated@@603 1))))))) (=> (and (= $generated@@604 $generated@@603) (= (ControlFlow 0 7) 2)) $generated@@612))))
(let (($generated@@615  (=> (and (<= ($generated@@236 2) $generated@@603) (< ($generated ($generated@@328 $generated@@2 ($generated@@475 $generated@@605 (- $generated@@603 2)))) ($generated ($generated@@328 $generated@@2 ($generated@@475 $generated@@605 (- $generated@@603 1)))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@137 ($generated@@8 (+ $generated@@603 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ $generated@@603 1)) $generated@@134) (=> (= $generated@@606 (+ $generated@@603 1)) (=> (and (= $generated@@604 $generated@@606) (= (ControlFlow 0 5) 2)) $generated@@612)))))))
(let (($generated@@616  (and (=> (= (ControlFlow 0 8) 5) $generated@@615) (=> (= (ControlFlow 0 8) 7) $generated@@614))))
(let (($generated@@617  (=> (and (< $generated@@603 ($generated@@236 2)) (= (ControlFlow 0 12) 8)) $generated@@616)))
(let (($generated@@618  (=> (<= ($generated@@236 2) $generated@@603) (and (=> (= (ControlFlow 0 9) (- 0 11)) (and (<= 0 (- $generated@@603 2)) (< (- $generated@@603 2) ($generated@@248 $generated@@605)))) (=> (and (<= 0 (- $generated@@603 2)) (< (- $generated@@603 2) ($generated@@248 $generated@@605))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 (- $generated@@603 1)) (< (- $generated@@603 1) ($generated@@248 $generated@@605)))) (=> (and (<= 0 (- $generated@@603 1)) (< (- $generated@@603 1) ($generated@@248 $generated@@605))) (=> (= (ControlFlow 0 9) 8) $generated@@616))))))))
(let (($generated@@619  (=> (= $generated@@607 ($generated@@161 $generated@@608 $generated@@609 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 9) $generated@@618) (=> (= (ControlFlow 0 13) 12) $generated@@617)))))
(let (($generated@@620  (=> (and ($generated@@256 $generated@@609) ($generated@@610 $generated@@609)) (=> (and (and (and ($generated@@137 $generated@@605 ($generated@@247 $generated@@46)) ($generated@@76 $generated@@605 ($generated@@247 $generated@@46) $generated@@609)) (and (<= ($generated@@236 0) $generated@@603) (<= ($generated@@236 0) $generated@@611))) (and (and (= 2 $generated@@242) (< $generated@@603 ($generated@@248 $generated@@605))) (and (forall (($generated@@621 Int) ) (!  (=> true (=> (and (<= ($generated@@236 0) $generated@@621) (< $generated@@621 $generated@@603)) ($generated@@243 ($generated@@273 $generated@@584) $generated@@605 $generated@@621)))
 :pattern ( ($generated@@243 ($generated@@273 $generated@@584) $generated@@605 $generated@@621))
)) (= (ControlFlow 0 14) 13)))) $generated@@619))))
$generated@@620)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (Int) Int)
(declare-fun $generated@@251 (Int) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U Int Int) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 () T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (Int Int) Bool)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@252 Int) ) (!  (=> (or ($generated@@251 $generated@@252) (not (= 0 $generated@@249))) true)
 :pattern ( ($generated@@250 $generated@@252))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@145)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@136) (= ($generated@@134 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@134 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (= $generated@@263 ($generated@@223 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert  (and (= ($generated@@1 $generated@@276) 18) (forall (($generated@@277 T@U) ) (! (= (type ($generated@@275 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@275 $generated@@277))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 Int) ($generated@@280 Int) ) (!  (=> (= (type $generated@@278) $generated@@276) (= ($generated@@274 ($generated@@275 $generated@@278) $generated@@279 $generated@@280) ($generated@@274 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@274 ($generated@@275 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@145)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@64) (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@74 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@254 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@76 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@79 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@76 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@81 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 20)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@76 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@81 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (= ($generated@@151 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@81 $generated@@328 $generated@@330))) (<= ($generated ($generated@@81 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@151 $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@296 (type $generated@@331))))
(let (($generated@@333 ($generated@@295 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@294 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@293 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@292 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@296 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@296 (type $generated@@338))))
(let (($generated@@340 ($generated@@295 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@294 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@293 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@314 (type $generated@@342))))
(let (($generated@@344 ($generated@@313 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@312 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@311 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@310 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@314 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@314 (type $generated@@349))))
(let (($generated@@351 ($generated@@313 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@312 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@311 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@354) $generated@@64)) (= ($generated@@132 $generated@@353 ($generated@@150 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@353 $generated@@355)))) ($generated@@224 $generated@@355 $generated@@354))
 :pattern ( ($generated@@81 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@132 $generated@@353 ($generated@@150 $generated@@354)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@356 Int) ) (!  (=> (or ($generated@@251 $generated@@356) (not (= 0 $generated@@249))) (= ($generated@@250 $generated@@356) (- $generated@@356 1)))
 :pattern ( ($generated@@250 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@233 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@254 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@233 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@238 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@254 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@238 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@81 ($generated@@287 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@81 ($generated@@287 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@296 (type $generated@@373))))
(let (($generated@@375 ($generated@@295 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@369 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@314 (type $generated@@381))))
(let (($generated@@383 ($generated@@313 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385)))) (= ($generated@@81 ($generated@@379 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@295 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@294 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@313 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@312 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@81 ($generated@@310 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@399) $generated@@403))) (and ($generated@@254 ($generated@@81 ($generated@@369 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@254 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@64)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@407) $generated@@411))) (and ($generated@@254 ($generated@@81 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@254 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert  (=> (<= 1 $generated@@249) (forall (($generated@@413 T@U) ($generated@@414 Int) ($generated@@415 Int) ) (!  (=> (and (= (type $generated@@413) $generated@@276) (or ($generated@@412 $generated@@414 $generated@@415) (not (= 1 $generated@@249)))) true)
 :pattern ( ($generated@@274 $generated@@413 $generated@@414 $generated@@415))
))))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@314 (type $generated@@418))))
(let (($generated@@420 ($generated@@313 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@312 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@311 $generated@@420 $generated@@419)) (= ($generated@@310 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@310 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@314 (type $generated@@421))))
(let (($generated@@423 ($generated@@313 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@312 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@311 $generated@@423 $generated@@422)) (= ($generated@@346 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@346 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@314 (type $generated@@424))))
(let (($generated@@426 ($generated@@313 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@312 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@311 $generated@@426 $generated@@425)) (= ($generated@@378 $generated@@424) ($generated@@416 $generated@@145))))))
 :pattern ( ($generated@@378 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@296 (type $generated@@427))))
(let (($generated@@429 ($generated@@295 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@294 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@293 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@145) (= (type $generated@@431) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@427) ($generated@@281 ($generated@@223 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@367 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@314 (type $generated@@432))))
(let (($generated@@434 ($generated@@313 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@312 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@311 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@145) (= (type $generated@@436) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@432) ($generated@@281 ($generated@@223 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@378 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@46)) (and (= ($generated@@281 ($generated@@368 $generated@@2 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@368 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@224 $generated@@438 $generated@@47)) (and (= ($generated@@281 ($generated@@368 $generated@@3 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@368 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@224 $generated@@439 $generated@@44)) (and (= ($generated@@281 ($generated@@368 $generated@@4 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@368 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 21))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@224 $generated@@441 $generated@@45)) (and (= ($generated@@281 ($generated@@368 $generated@@440 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@368 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@224 ($generated@@281 $generated@@442) $generated@@443) ($generated@@132 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@224 ($generated@@281 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@2)) (<= 0 ($generated@@286 $generated@@444))))
 :pattern ( ($generated@@286 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@269 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@268 $generated@@447)) (<= 0 ($generated@@267 $generated@@446))))
 :pattern ( ($generated@@267 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@396 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@396 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@404 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@404 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@72 ($generated@@404 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@260 ($generated@@223 $generated@@468 $generated@@469)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@135 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@135 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@135 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@145) (= (type $generated@@479) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@223 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@145) (= (type $generated@@481) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@223 $generated@@480 $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@269 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@268 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@267 $generated@@488))) ($generated@@254 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@233 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@233 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@238 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@150 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@150 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@368 $generated@@511 ($generated@@281 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@281 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@132 $generated@@512 ($generated@@396 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@512) $generated@@515))) (and ($generated@@224 ($generated@@81 ($generated@@369 $generated@@512) $generated@@515) $generated@@514) ($generated@@224 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@132 $generated@@512 ($generated@@396 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@132 $generated@@516 ($generated@@404 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@516) $generated@@519))) (and ($generated@@224 ($generated@@81 ($generated@@379 $generated@@516) $generated@@519) $generated@@518) ($generated@@224 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@132 $generated@@516 ($generated@@404 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@145)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@223 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@223 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@145)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@223 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@223 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@224 $generated@@526 ($generated@@396 $generated@@527 $generated@@528))) (and (= ($generated@@281 ($generated@@368 ($generated@@294 $generated@@145 $generated@@145) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@368 ($generated@@294 $generated@@145 $generated@@145) $generated@@526) ($generated@@396 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@224 $generated@@526 ($generated@@396 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@224 $generated@@529 ($generated@@404 $generated@@530 $generated@@531))) (and (= ($generated@@281 ($generated@@368 ($generated@@312 $generated@@145 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@368 ($generated@@312 $generated@@145 $generated@@145) $generated@@529) ($generated@@404 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@404 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@145)) ($generated@@224 $generated@@534 ($generated@@135 $generated@@532 $generated@@533))) (and (= ($generated@@281 ($generated@@368 $generated@@136 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@368 $generated@@136 $generated@@534) ($generated@@135 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@135 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@81 ($generated@@416 $generated@@536) $generated@@535)))
)))
(assert  (=> (<= 1 $generated@@249) (forall (($generated@@537 T@U) ($generated@@538 Int) ($generated@@539 Int) ) (!  (=> (and (= (type $generated@@537) $generated@@276) (or ($generated@@412 ($generated@@243 $generated@@538) ($generated@@243 $generated@@539)) (not (= 1 $generated@@249)))) (and (=> (< ($generated@@243 0) ($generated@@243 $generated@@538)) (forall (($generated@@540 Int) ) (!  (and ($generated@@251 ($generated@@243 $generated@@538)) ($generated@@412 ($generated@@243 ($generated@@250 ($generated@@243 $generated@@538))) $generated@@540))
 :pattern ( ($generated@@274 ($generated@@275 $generated@@537) ($generated@@250 $generated@@538) $generated@@540))
))) (= ($generated@@274 ($generated@@275 $generated@@537) ($generated@@243 $generated@@538) ($generated@@243 $generated@@539))  (or (<= ($generated@@243 $generated@@538) ($generated@@243 0)) (exists (($generated@@541 Int) ) (! ($generated@@274 ($generated@@275 $generated@@537) ($generated@@243 ($generated@@250 ($generated@@243 $generated@@538))) $generated@@541)
 :pattern ( ($generated@@274 ($generated@@275 $generated@@537) ($generated@@250 $generated@@538) $generated@@541))
))))))
 :weight 3
 :pattern ( ($generated@@274 ($generated@@275 $generated@@537) ($generated@@243 $generated@@538) ($generated@@243 $generated@@539)))
))))
(assert  (=> (<= 1 $generated@@249) (forall (($generated@@542 T@U) ($generated@@543 Int) ($generated@@544 Int) ) (!  (=> (and (= (type $generated@@542) $generated@@276) (or ($generated@@412 $generated@@543 $generated@@544) (not (= 1 $generated@@249)))) (and (=> (< ($generated@@243 0) $generated@@543) (forall (($generated@@545 Int) ) (!  (and ($generated@@251 $generated@@543) ($generated@@412 ($generated@@250 $generated@@543) $generated@@545))
 :pattern ( ($generated@@274 $generated@@542 ($generated@@250 $generated@@543) $generated@@545))
))) (= ($generated@@274 ($generated@@275 $generated@@542) $generated@@543 $generated@@544)  (or (<= $generated@@543 ($generated@@243 0)) (exists (($generated@@546 Int) ) (! ($generated@@274 $generated@@542 ($generated@@250 $generated@@543) $generated@@546)
 :pattern ( ($generated@@274 $generated@@542 ($generated@@250 $generated@@543) $generated@@546))
))))))
 :pattern ( ($generated@@274 ($generated@@275 $generated@@542) $generated@@543 $generated@@544))
))))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@547 Int) ) (!  (=> (or ($generated@@251 ($generated@@243 $generated@@547)) (not (= 0 $generated@@249))) (= ($generated@@250 ($generated@@243 $generated@@547)) ($generated@@243 (- $generated@@547 1))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@243 $generated@@547)))
))))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@69)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@135 $generated@@550 $generated@@551)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@136) (= ($generated@@520 ($generated@@281 $generated@@552)) ($generated@@521 $generated@@552)))
 :pattern ( ($generated@@520 ($generated@@281 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@145) ($generated@@224 $generated@@553 ($generated@@75 0))) (and (= ($generated@@281 ($generated@@368 $generated@@2 $generated@@553)) $generated@@553) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@553) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@553 ($generated@@75 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) ($generated@@224 $generated@@554 ($generated@@233 $generated@@555))) (and (= ($generated@@281 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@554)) $generated@@554) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@554) ($generated@@233 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@233 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) ($generated@@224 $generated@@556 ($generated@@238 $generated@@557))) (and (= ($generated@@281 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@556)) $generated@@556) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@556) ($generated@@238 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@238 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@64)) ($generated@@224 $generated@@558 ($generated@@150 $generated@@559))) (and (= ($generated@@281 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@558)) $generated@@558) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@558) ($generated@@150 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@150 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@64)) ($generated@@224 $generated@@560 ($generated@@482 $generated@@561))) (and (= ($generated@@281 ($generated@@368 ($generated@@268 $generated@@145) $generated@@560)) $generated@@560) ($generated@@132 ($generated@@368 ($generated@@268 $generated@@145) $generated@@560) ($generated@@482 $generated@@561))))
 :pattern ( ($generated@@224 $generated@@560 ($generated@@482 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@562 ($generated@@150 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@562 $generated@@565)))) ($generated@@254 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@81 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@74 $generated@@562 ($generated@@150 $generated@@563) $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@568) (and ($generated@@134 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@64) ($generated@@74 $generated@@566 ($generated@@135 $generated@@567 $generated@@569) $generated@@568))
 :pattern ( ($generated@@74 $generated@@566 ($generated@@135 $generated@@567 $generated@@569) $generated@@568))
))))) ($generated@@254 ($generated@@143 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@254 ($generated@@143 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@136) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@572) (and ($generated@@134 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@64) ($generated@@74 $generated@@570 ($generated@@135 $generated@@573 $generated@@571) $generated@@572))
 :pattern ( ($generated@@74 $generated@@570 ($generated@@135 $generated@@573 $generated@@571) $generated@@572))
))))) ($generated@@254 ($generated@@144 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@254 ($generated@@144 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@574) ($generated@@245 $generated@@575)) ($generated@@245 ($generated@@223 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@574) ($generated@@245 $generated@@575)))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@281 ($generated@@8 ($generated@@243 $generated@@576))) ($generated@@245 ($generated@@281 ($generated@@8 $generated@@576))))
 :pattern ( ($generated@@281 ($generated@@8 ($generated@@243 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ) (! (= ($generated@@281 ($generated@@245 $generated@@577)) ($generated@@245 ($generated@@281 $generated@@577)))
 :pattern ( ($generated@@281 ($generated@@245 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@269 (type $generated@@578))))
 (=> (and (= (type $generated@@578) ($generated@@268 $generated@@579)) (= ($generated@@267 $generated@@578) 0)) (= $generated@@578 ($generated@@266 $generated@@579))))
 :pattern ( ($generated@@267 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@581)))
 (=> (and (and (= (type $generated@@580) ($generated@@76 $generated@@583 $generated@@2)) (= (type $generated@@582) $generated@@2)) (<= 0 ($generated $generated@@582))) (= ($generated@@286 ($generated@@82 $generated@@580 $generated@@581 $generated@@582)) (+ (- ($generated@@286 $generated@@580) ($generated ($generated@@81 $generated@@580 $generated@@581))) ($generated $generated@@582)))))
 :pattern ( ($generated@@286 ($generated@@82 $generated@@580 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@2)) ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@46 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@3)) ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@47 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@4)) ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@44 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@440)) ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@45 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@145)) ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@48 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@268 $generated@@145)) (= (type $generated@@595) $generated@@64)) (= ($generated@@132 $generated@@594 ($generated@@482 $generated@@595)) (forall (($generated@@596 Int) ) (!  (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@267 $generated@@594))) ($generated@@224 ($generated@@483 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@483 $generated@@594 $generated@@596))
))))
 :pattern ( ($generated@@132 $generated@@594 ($generated@@482 $generated@@595)))
)))
(assert  (and (forall (($generated@@599 T@U) ) (! (= (type ($generated@@597 $generated@@599)) $generated@@276)
 :pattern ( ($generated@@597 $generated@@599))
)) (= (type $generated@@598) $generated@@276)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ($generated@@602 Int) ) (!  (=> (= (type $generated@@600) $generated@@276) (= ($generated@@274 $generated@@600 $generated@@601 $generated@@602) ($generated@@274 $generated@@598 $generated@@601 $generated@@602)))
 :pattern ( ($generated@@274 ($generated@@597 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@268 $generated@@145)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@267 $generated@@604))) (< ($generated@@521 ($generated@@368 $generated@@136 ($generated@@483 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@521 ($generated@@368 $generated@@136 ($generated@@483 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@132 $generated@@606 ($generated@@396 $generated@@607 $generated@@608))) (and (and ($generated@@132 ($generated@@292 $generated@@606) ($generated@@233 $generated@@607)) ($generated@@132 ($generated@@335 $generated@@606) ($generated@@233 $generated@@608))) ($generated@@132 ($generated@@367 $generated@@606) ($generated@@233 ($generated@@135 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@132 $generated@@606 ($generated@@396 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@312 $generated@@145 $generated@@145)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@132 $generated@@609 ($generated@@404 $generated@@610 $generated@@611))) (and (and ($generated@@132 ($generated@@310 $generated@@609) ($generated@@238 $generated@@610)) ($generated@@132 ($generated@@346 $generated@@609) ($generated@@238 $generated@@611))) ($generated@@132 ($generated@@378 $generated@@609) ($generated@@238 ($generated@@135 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@132 $generated@@609 ($generated@@404 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@132 $generated@@612 $generated@@46))
 :pattern ( ($generated@@132 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@132 $generated@@613 $generated@@47))
 :pattern ( ($generated@@132 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@132 $generated@@614 $generated@@44))
 :pattern ( ($generated@@132 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@440) ($generated@@132 $generated@@615 $generated@@45))
 :pattern ( ($generated@@132 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@145) ($generated@@132 $generated@@616 $generated@@48))
 :pattern ( ($generated@@132 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@622) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@623) $generated@@77)) (= (type $generated@@624) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@626 true))
(let (($generated@@627 true))
(let (($generated@@628  (=> ($generated@@74 ($generated@@8 $generated@@617) $generated@@46 $generated@@618) (=> (and (and ($generated@@251 $generated@@617) (= $generated@@619 ($generated@@250 $generated@@617))) (and ($generated@@74 ($generated@@8 $generated@@619) $generated@@46 $generated@@618) ($generated@@74 ($generated@@8 $generated@@620) $generated@@46 $generated@@618))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@617) (= $generated@@619 $generated@@617))) (=> (or (<= 0 $generated@@617) (= $generated@@619 $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@621) (< $generated@@619 $generated@@617)) (= $generated@@620 $generated@@621))) (=> (or (or (<= 0 $generated@@621) (< $generated@@619 $generated@@617)) (= $generated@@620 $generated@@621)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< $generated@@619 $generated@@617) (and (= $generated@@619 $generated@@617) (< $generated@@620 $generated@@621)))) (=> (or (< $generated@@619 $generated@@617) (and (= $generated@@619 $generated@@617) (< $generated@@620 $generated@@621))) (=> (and ($generated@@412 ($generated@@250 $generated@@617) $generated@@620) (= (ControlFlow 0 4) 2)) $generated@@627)))))))))))
(let (($generated@@629  (=> (< ($generated@@243 0) $generated@@617) (and (=> (= (ControlFlow 0 9) 4) $generated@@628) (=> (= (ControlFlow 0 9) 8) $generated@@626)))))
(let (($generated@@630  (=> (and (<= $generated@@617 ($generated@@243 0)) (= (ControlFlow 0 3) 2)) $generated@@627)))
(let (($generated@@631  (=> (= $generated@@622 ($generated@@211 $generated@@623 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@629) (=> (= (ControlFlow 0 10) 3) $generated@@630)))))
(let (($generated@@632 true))
(let (($generated@@633  (=> (= $generated@@624 ($generated@@156 $generated@@623 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@632) (=> (= (ControlFlow 0 11) 10) $generated@@631)))))
(let (($generated@@634  (=> (and (and ($generated@@253 $generated@@618) ($generated@@625 $generated@@618)) (and (= 1 $generated@@249) (= (ControlFlow 0 12) 11))) $generated@@633)))
$generated@@634))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (Int) Int)
(declare-fun $generated@@191 (Int) Bool)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 (T@U Int Int) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@208 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 () T@T)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T) T@U)
(declare-fun $generated@@217 (T@T T@T) T@T)
(declare-fun $generated@@218 (T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@T) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@296 (Int Int) Bool)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@U Int) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@389 () T@T)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@192 Int) ) (!  (=> (or ($generated@@191 $generated@@192) (not (= 0 $generated@@189))) true)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (and (= ($generated@@1 $generated@@203) 14) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 Int) ($generated@@207 Int) ) (!  (=> (= (type $generated@@205) $generated@@203) (= ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207) ($generated@@201 $generated@@205 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@205) $generated@@206 $generated@@207))
)))
(assert  (and (= ($generated@@1 $generated@@210) 15) (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@209 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@61) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214) ($generated@@69 $generated@@212 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@208 ($generated@@209 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (and (and (and (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (= ($generated@@1 ($generated@@217 $generated@@220 $generated@@221)) 16)) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= ($generated@@218 ($generated@@217 $generated@@222 $generated@@223)) $generated@@222)
 :pattern ( ($generated@@217 $generated@@222 $generated@@223))
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (! (= ($generated@@219 ($generated@@217 $generated@@224 $generated@@225)) $generated@@225)
 :pattern ( ($generated@@217 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@218 (type $generated@@226))))
(= (type ($generated@@215 $generated@@226)) ($generated@@71 $generated@@227 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@226))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= (type ($generated@@216 $generated@@228 $generated@@229)) ($generated@@217 $generated@@228 $generated@@229))
 :pattern ( ($generated@@216 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (let (($generated@@232 (type $generated@@230)))
 (not ($generated@@0 ($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230))))
 :pattern ( (let (($generated@@232 (type $generated@@230)))
($generated@@76 ($generated@@215 ($generated@@216 $generated@@232 $generated@@231)) $generated@@230)))
)))
(assert  (and (and (and (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@238 $generated@@239)) 17)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@240 $generated@@241)) $generated@@240)
 :pattern ( ($generated@@235 $generated@@240 $generated@@241))
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@242 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@235 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@236 (type $generated@@244))))
(= (type ($generated@@233 $generated@@244)) ($generated@@71 $generated@@245 $generated@@4)))
 :pattern ( ($generated@@233 $generated@@244))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= (type ($generated@@234 $generated@@246 $generated@@247)) ($generated@@235 $generated@@246 $generated@@247))
 :pattern ( ($generated@@234 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@T) ) (! (let (($generated@@250 (type $generated@@248)))
 (not ($generated@@0 ($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248))))
 :pattern ( (let (($generated@@250 (type $generated@@248)))
($generated@@76 ($generated@@233 ($generated@@234 $generated@@250 $generated@@249)) $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@219 (type $generated@@251))))
(let (($generated@@253 ($generated@@218 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@217 $generated@@253 $generated@@252)) (or (= $generated@@251 ($generated@@216 $generated@@253 $generated@@252)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@251) $generated@@254)))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@215 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@237 (type $generated@@255))))
(let (($generated@@257 ($generated@@236 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@235 $generated@@257 $generated@@256)) (or (= $generated@@255 ($generated@@234 $generated@@257 $generated@@256)) (exists (($generated@@258 T@U) ) (!  (and (= (type $generated@@258) $generated@@257) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@255) $generated@@258)))
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
))))))
 :pattern ( ($generated@@233 $generated@@255))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@259 Int) ) (!  (=> (or ($generated@@191 $generated@@259) (not (= 0 $generated@@189))) (= ($generated@@190 $generated@@259) (- $generated@@259 1)))
 :pattern ( ($generated@@190 $generated@@259))
))))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@263) $generated@@61)) (= (type $generated@@264) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@262 ($generated@@260 $generated@@263) $generated@@264) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@210) ($generated@@0 ($generated@@76 $generated@@262 $generated@@265))) ($generated@@208 $generated@@265 $generated@@263 $generated@@264))
 :pattern ( ($generated@@76 $generated@@262 $generated@@265))
))))
 :pattern ( ($generated@@69 $generated@@262 ($generated@@260 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@268) ($generated@@71 $generated@@210 $generated@@4)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@268 ($generated@@266 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@210) ($generated@@0 ($generated@@76 $generated@@268 $generated@@271))) ($generated@@208 $generated@@271 $generated@@269 $generated@@270))
 :pattern ( ($generated@@76 $generated@@268 $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@268 ($generated@@266 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@219 (type $generated@@276))))
(let (($generated@@278 ($generated@@218 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@71 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@217 $generated@@210 $generated@@210)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@215 $generated@@279) $generated@@283))) (and ($generated@@208 ($generated@@76 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@208 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@76 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@76 ($generated@@215 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (and (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@284 $generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@284 $generated@@286 $generated@@287))
)) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@237 (type $generated@@288))))
(let (($generated@@290 ($generated@@236 (type $generated@@288))))
(= (type ($generated@@285 $generated@@288)) ($generated@@71 $generated@@290 $generated@@289))))
 :pattern ( ($generated@@285 $generated@@288))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@291) ($generated@@235 $generated@@210 $generated@@210)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) $generated@@61)) (= (type $generated@@294) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@291 ($generated@@284 $generated@@292 $generated@@293) $generated@@294) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@210) ($generated@@0 ($generated@@76 ($generated@@233 $generated@@291) $generated@@295))) (and ($generated@@208 ($generated@@76 ($generated@@285 $generated@@291) $generated@@295) $generated@@293 $generated@@294) ($generated@@208 $generated@@295 $generated@@292 $generated@@294)))
 :pattern ( ($generated@@76 ($generated@@285 $generated@@291) $generated@@295))
 :pattern ( ($generated@@76 ($generated@@233 $generated@@291) $generated@@295))
))))
 :pattern ( ($generated@@69 $generated@@291 ($generated@@284 $generated@@292 $generated@@293) $generated@@294))
)))
(assert  (=> (<= 1 $generated@@189) (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (!  (=> (and (= (type $generated@@297) $generated@@203) (or ($generated@@296 $generated@@298 $generated@@299) (not (= 1 $generated@@189)))) true)
 :pattern ( ($generated@@201 $generated@@297 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@71 $generated@@301 $generated@@4))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@237 (type $generated@@302))))
(let (($generated@@304 ($generated@@236 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@235 $generated@@304 $generated@@303)) (= (= $generated@@302 ($generated@@234 $generated@@304 $generated@@303)) (= ($generated@@233 $generated@@302) ($generated@@300 $generated@@304))))))
 :pattern ( ($generated@@233 $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@196 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@195 $generated@@306)) (<= 0 ($generated@@194 $generated@@305))))
 :pattern ( ($generated@@194 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@272 $generated@@309 $generated@@310)) $generated@@309))
 :pattern ( ($generated@@272 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@61)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@61) (= (type $generated@@314) $generated@@61)) (= ($generated@@311 ($generated@@272 $generated@@313 $generated@@314)) $generated@@314))
 :pattern ( ($generated@@272 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@315 $generated@@316)) $generated@@58))
 :pattern ( ($generated@@272 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@284 $generated@@319 $generated@@320)) $generated@@319))
 :pattern ( ($generated@@284 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@61) (= (type $generated@@324) $generated@@61)) (= ($generated@@321 ($generated@@284 $generated@@323 $generated@@324)) $generated@@324))
 :pattern ( ($generated@@284 $generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@67 ($generated@@284 $generated@@325 $generated@@326)) $generated@@59))
 :pattern ( ($generated@@284 $generated@@325 $generated@@326))
)))
(assert  (and (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@329))
)) (forall (($generated@@330 T@U) ($generated@@331 Int) ) (! (let (($generated@@332 ($generated@@196 (type $generated@@330))))
(= (type ($generated@@328 $generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@328 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@195 $generated@@210)) (= (type $generated@@334) $generated@@61)) (= (type $generated@@335) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335) (forall (($generated@@336 Int) ) (!  (=> (and (<= 0 $generated@@336) (< $generated@@336 ($generated@@194 $generated@@333))) ($generated@@208 ($generated@@328 $generated@@333 $generated@@336) $generated@@334 $generated@@335))
 :pattern ( ($generated@@328 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@69 $generated@@333 ($generated@@327 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@338 Int) ) (! (= ($generated@@337 ($generated@@70 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@70 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (= (type ($generated@@339 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@61) (= ($generated@@339 ($generated@@260 $generated@@341)) $generated@@341))
 :pattern ( ($generated@@260 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@67 ($generated@@260 $generated@@342)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@61)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@343 ($generated@@266 $generated@@345)) $generated@@345))
 :pattern ( ($generated@@266 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@67 ($generated@@266 $generated@@346)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@346))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) $generated@@61)
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@348 ($generated@@347 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@347 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@347 $generated@@352)) $generated@@56))
 :pattern ( ($generated@@347 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@353 ($generated@@327 $generated@@355)) $generated@@355))
 :pattern ( ($generated@@327 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@67 ($generated@@327 $generated@@356)) $generated@@57))
 :pattern ( ($generated@@327 $generated@@356))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated@@357 $generated@@361 ($generated@@209 $generated@@360)) $generated@@360))
 :pattern ( ($generated@@209 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
 (not ($generated@@0 ($generated@@76 ($generated@@300 $generated@@363) $generated@@362))))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@76 ($generated@@300 $generated@@363) $generated@@362)))
)))
(assert  (=> (<= 1 $generated@@189) (forall (($generated@@364 T@U) ($generated@@365 Int) ($generated@@366 Int) ) (!  (=> (and (= (type $generated@@364) $generated@@203) (or ($generated@@296 ($generated@@183 $generated@@365) ($generated@@183 $generated@@366)) (not (= 1 $generated@@189)))) (and (=> (< ($generated@@183 0) ($generated@@183 $generated@@365)) (forall (($generated@@367 Int) ) (!  (and ($generated@@191 ($generated@@183 $generated@@365)) ($generated@@296 ($generated@@183 ($generated@@190 ($generated@@183 $generated@@365))) $generated@@367))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@364) ($generated@@190 $generated@@365) $generated@@367))
))) (= ($generated@@201 ($generated@@202 $generated@@364) ($generated@@183 $generated@@365) ($generated@@183 $generated@@366))  (or (<= ($generated@@183 $generated@@365) ($generated@@183 0)) (exists (($generated@@368 Int) ) (! ($generated@@201 ($generated@@202 $generated@@364) ($generated@@183 ($generated@@190 ($generated@@183 $generated@@365))) $generated@@368)
 :pattern ( ($generated@@201 ($generated@@202 $generated@@364) ($generated@@190 $generated@@365) $generated@@368))
))))))
 :weight 3
 :pattern ( ($generated@@201 ($generated@@202 $generated@@364) ($generated@@183 $generated@@365) ($generated@@183 $generated@@366)))
))))
(assert  (=> (<= 1 $generated@@189) (forall (($generated@@369 T@U) ($generated@@370 Int) ($generated@@371 Int) ) (!  (=> (and (= (type $generated@@369) $generated@@203) (or ($generated@@296 $generated@@370 $generated@@371) (not (= 1 $generated@@189)))) (and (=> (< ($generated@@183 0) $generated@@370) (forall (($generated@@372 Int) ) (!  (and ($generated@@191 $generated@@370) ($generated@@296 ($generated@@190 $generated@@370) $generated@@372))
 :pattern ( ($generated@@201 $generated@@369 ($generated@@190 $generated@@370) $generated@@372))
))) (= ($generated@@201 ($generated@@202 $generated@@369) $generated@@370 $generated@@371)  (or (<= $generated@@370 ($generated@@183 0)) (exists (($generated@@373 Int) ) (! ($generated@@201 $generated@@369 ($generated@@190 $generated@@370) $generated@@373)
 :pattern ( ($generated@@201 $generated@@369 ($generated@@190 $generated@@370) $generated@@373))
))))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@369) $generated@@370 $generated@@371))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@374 Int) ) (!  (=> (or ($generated@@191 ($generated@@183 $generated@@374)) (not (= 0 $generated@@189))) (= ($generated@@190 ($generated@@183 $generated@@374)) ($generated@@183 (- $generated@@374 1))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@183 $generated@@374)))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@71 $generated@@210 $generated@@2)) (= (type $generated@@376) $generated@@61)) (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@375 ($generated@@347 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@210) (< 0 ($generated ($generated@@76 $generated@@375 $generated@@378)))) ($generated@@208 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@76 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@69 $generated@@375 ($generated@@347 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 Int) ) (! (= ($generated@@209 ($generated@@8 ($generated@@183 $generated@@379))) ($generated@@185 ($generated@@209 ($generated@@8 $generated@@379))))
 :pattern ( ($generated@@209 ($generated@@8 ($generated@@183 $generated@@379))))
)))
(assert (forall (($generated@@380 T@U) ) (! (= ($generated@@209 ($generated@@185 $generated@@380)) ($generated@@185 ($generated@@209 $generated@@380)))
 :pattern ( ($generated@@209 ($generated@@185 $generated@@380)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@196 (type $generated@@381))))
 (=> (and (= (type $generated@@381) ($generated@@195 $generated@@382)) (= ($generated@@194 $generated@@381) 0)) (= $generated@@381 ($generated@@193 $generated@@382))))
 :pattern ( ($generated@@194 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@384) $generated@@2)) ($generated@@69 $generated@@384 $generated@@46 $generated@@383))
 :pattern ( ($generated@@69 $generated@@384 $generated@@46 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@386) $generated@@3)) ($generated@@69 $generated@@386 $generated@@47 $generated@@385))
 :pattern ( ($generated@@69 $generated@@386 $generated@@47 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@4)) ($generated@@69 $generated@@388 $generated@@44 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@44 $generated@@387))
)))
(assert (= ($generated@@1 $generated@@389) 18))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@391) $generated@@389)) ($generated@@69 $generated@@391 $generated@@45 $generated@@390))
 :pattern ( ($generated@@69 $generated@@391 $generated@@45 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@393) $generated@@210)) ($generated@@69 $generated@@393 $generated@@48 $generated@@392))
 :pattern ( ($generated@@69 $generated@@393 $generated@@48 $generated@@392))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) $generated@@203)
 :pattern ( ($generated@@394 $generated@@396))
)) (= (type $generated@@395) $generated@@203)))
(assert (forall (($generated@@397 T@U) ($generated@@398 Int) ($generated@@399 Int) ) (!  (=> (= (type $generated@@397) $generated@@203) (= ($generated@@201 $generated@@397 $generated@@398 $generated@@399) ($generated@@201 $generated@@395 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@201 ($generated@@394 $generated@@397) $generated@@398 $generated@@399))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@400 () Int)
(declare-fun $generated@@401 () Int)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@403 () Int)
(declare-fun $generated@@404 () Int)
(declare-fun $generated@@405 () T@U)
(declare-fun $generated@@406 () T@U)
(declare-fun $generated@@407 (T@U) Bool)
(declare-fun $generated@@408 (T@U) Bool)
(assert  (and (and (= (type $generated@@402) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@405) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@406) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@409 true))
(let (($generated@@410  (=> (and (and ($generated@@296 $generated@@400 $generated@@401) (=> (< ($generated@@183 0) $generated@@400) (forall (($generated@@411 Int) ) (!  (and ($generated@@191 $generated@@400) ($generated@@296 ($generated@@190 $generated@@400) $generated@@411))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@395) ($generated@@190 $generated@@400) $generated@@411))
)))) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@201 ($generated@@202 ($generated@@202 $generated@@395)) $generated@@400 $generated@@401)  (or (<= $generated@@400 ($generated@@183 0)) (exists (($generated@@412 Int) ) (! ($generated@@201 ($generated@@202 $generated@@395) ($generated@@190 $generated@@400) $generated@@412)
 :pattern ( ($generated@@201 ($generated@@202 $generated@@395) ($generated@@190 $generated@@400) $generated@@412))
)))))))
(let (($generated@@413  (=> ($generated@@69 ($generated@@8 $generated@@400) $generated@@46 $generated@@402) (=> (and ($generated@@191 $generated@@400) (= $generated@@403 ($generated@@190 $generated@@400))) (=> (and (and ($generated@@69 ($generated@@8 $generated@@403) $generated@@46 $generated@@402) ($generated@@69 ($generated@@8 $generated@@404) $generated@@46 $generated@@402)) (and ($generated@@296 ($generated@@190 $generated@@400) $generated@@404) (= (ControlFlow 0 4) 2))) $generated@@410)))))
(let (($generated@@414  (=> (< ($generated@@183 0) $generated@@400) (and (=> (= (ControlFlow 0 6) 4) $generated@@413) (=> (= (ControlFlow 0 6) 5) $generated@@409)))))
(let (($generated@@415  (=> (and (<= $generated@@400 ($generated@@183 0)) (= (ControlFlow 0 3) 2)) $generated@@410)))
(let (($generated@@416  (=> (and (and (= $generated@@405 ($generated@@128 $generated@@406 $generated@@402 $generated@@60 false)) ($generated@@69 ($generated@@8 $generated@@400) $generated@@46 $generated@@402)) (and ($generated@@69 ($generated@@8 $generated@@401) $generated@@46 $generated@@402) ($generated@@296 $generated@@400 $generated@@401))) (and (=> (= (ControlFlow 0 7) 6) $generated@@414) (=> (= (ControlFlow 0 7) 3) $generated@@415)))))
(let (($generated@@417  (=> (and (and ($generated@@407 $generated@@402) ($generated@@408 $generated@@402)) (and (= 2 $generated@@189) (= (ControlFlow 0 8) 7))) $generated@@416)))
$generated@@417))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
