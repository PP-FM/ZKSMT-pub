(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (Int) Int)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@356 () Int)
(declare-fun $generated@@357 (T@U Int) Int)
(declare-fun $generated@@358 (T@U Int) Bool)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Bool)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (= (type $generated@@137) $generated@@69))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
 :pattern ( ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
)))
(assert  (and (= (type $generated@@140) $generated@@69) (= (type $generated@@141) $generated@@82)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@82) (= (type $generated@@143) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@142 $generated@@140 $generated@@143)  (or (= $generated@@142 $generated@@141) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@143 $generated@@142) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@142 $generated@@140 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@80 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@69)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@69) (= (type $generated@@152) $generated@@69)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@69)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@81 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@69)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@82 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@72 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@82) (= (type $generated@@217) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@218) ($generated@@71 $generated@@4))) (= (type $generated@@220) $generated@@82)) (= (type $generated@@221) ($generated@@71 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (= (type $generated@@223) $generated@@69))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@224 $generated@@223 $generated@@225) ($generated@@79 $generated@@224 $generated@@140 $generated@@225)))
 :pattern ( ($generated@@79 $generated@@224 $generated@@223 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@148)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@69) (= (type $generated@@231) $generated@@69)) (= (type $generated@@232) $generated@@157)) (= (type $generated@@233) $generated@@157)) (= ($generated@@144 ($generated@@226 $generated@@232 $generated@@233) ($generated@@147 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@144 ($generated@@226 $generated@@232 $generated@@233) ($generated@@147 $generated@@230 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@148) (= (type $generated@@235) $generated@@148)) (= ($generated@@154 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@154 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@69)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@81 $generated@@157 $generated@@4)) (= (type $generated@@239) $generated@@69)) (= ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@157) ($generated@@0 ($generated@@86 $generated@@238 $generated@@240))) ($generated@@227 $generated@@240 $generated@@239))
 :pattern ( ($generated@@86 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@69)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@81 $generated@@157 $generated@@4)) (= (type $generated@@244) $generated@@69)) (= ($generated@@144 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@157) ($generated@@0 ($generated@@86 $generated@@243 $generated@@245))) ($generated@@227 $generated@@245 $generated@@244))
 :pattern ( ($generated@@86 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@144 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 Int) ) (! (= ($generated@@246 $generated@@247) $generated@@247)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@69) (= (type $generated@@255) $generated@@69)) (= (type $generated@@256) $generated@@157)) (= (type $generated@@257) $generated@@157)) (= (type $generated@@258) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@252 $generated@@258)) (= ($generated@@79 ($generated@@226 $generated@@256 $generated@@257) ($generated@@147 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@79 ($generated@@226 $generated@@256 $generated@@257) ($generated@@147 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@73)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@148) (= ($generated@@146 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@62)))
 :pattern ( ($generated@@146 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@148) ($generated@@146 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@157) (= (type $generated@@264) $generated@@157)) (= $generated@@262 ($generated@@226 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@146 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@2) (= ($generated@@144 $generated@@273 $generated@@137) (<= ($generated@@246 0) ($generated $generated@@273))))
 :pattern ( ($generated@@144 $generated@@273 $generated@@137))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@157)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@69) (= (type $generated@@278) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@253 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@79 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@253 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@81 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@84 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@81 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@86 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@81 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@86 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@86 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@81 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@86 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@86 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@84 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@81 $generated@@322 $generated@@2)) (= ($generated@@163 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@86 $generated@@321 $generated@@323))) (<= ($generated ($generated@@86 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@86 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@163 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@157) ($generated@@227 $generated@@327 $generated@@137)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@327)) $generated@@327) ($generated@@144 ($generated@@324 $generated@@2 $generated@@327) $generated@@137)))
 :pattern ( ($generated@@227 $generated@@327 $generated@@137))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@157) ($generated@@227 $generated@@328 $generated@@140)) (and (= ($generated@@274 ($generated@@324 $generated@@82 $generated@@328)) $generated@@328) ($generated@@144 ($generated@@324 $generated@@82 $generated@@328) $generated@@140)))
 :pattern ( ($generated@@227 $generated@@328 $generated@@140))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@157) ($generated@@227 $generated@@329 $generated@@223)) (and (= ($generated@@274 ($generated@@324 $generated@@82 $generated@@329)) $generated@@329) ($generated@@144 ($generated@@324 $generated@@82 $generated@@329) $generated@@223)))
 :pattern ( ($generated@@227 $generated@@329 $generated@@223))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@82) (= ($generated@@144 $generated@@330 $generated@@223)  (and ($generated@@144 $generated@@330 $generated@@140) (not (= $generated@@330 $generated@@141)))))
 :pattern ( ($generated@@144 $generated@@330 $generated@@223))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@86 ($generated@@285 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@285 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@289 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@81 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@289 (type $generated@@338))))
(let (($generated@@340 ($generated@@288 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@287 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@286 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@86 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@86 ($generated@@303 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@303 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@307 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@81 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@307 (type $generated@@349))))
(let (($generated@@351 ($generated@@306 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@305 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@304 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@86 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@81 $generated@@157 $generated@@2)) (= (type $generated@@354) $generated@@69)) (= ($generated@@144 $generated@@353 ($generated@@162 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@157) (< 0 ($generated ($generated@@86 $generated@@353 $generated@@355)))) ($generated@@227 $generated@@355 $generated@@354))
 :pattern ( ($generated@@86 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@144 $generated@@353 ($generated@@162 $generated@@354)))
)))
(assert  (=> (<= 2 $generated@@356) (forall (($generated@@359 T@U) ($generated@@360 Int) ) (!  (=> (and (= (type $generated@@359) $generated@@82) (or ($generated@@358 $generated@@359 $generated@@360) (and (not (= 2 $generated@@356)) (and (and (not (= $generated@@359 $generated@@141)) ($generated@@144 $generated@@359 $generated@@223)) (<= ($generated@@246 0) $generated@@360))))) (and (< ($generated@@357 $generated@@359 $generated@@360) (+ 10 $generated@@360)) (<= ($generated@@246 0) ($generated@@357 $generated@@359 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@81 $generated@@157 $generated@@4)) (= (type $generated@@362) $generated@@69)) (= (type $generated@@363) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@361 ($generated@@236 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@157) ($generated@@0 ($generated@@86 $generated@@361 $generated@@364))) ($generated@@253 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@86 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@79 $generated@@361 ($generated@@236 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@81 $generated@@157 $generated@@4)) (= (type $generated@@366) $generated@@69)) (= (type $generated@@367) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@365 ($generated@@241 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@157) ($generated@@0 ($generated@@86 $generated@@365 $generated@@368))) ($generated@@253 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@86 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@79 $generated@@365 ($generated@@241 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@86 ($generated@@280 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@86 ($generated@@280 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@81 $generated@@157 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@289 (type $generated@@374))))
(let (($generated@@376 ($generated@@288 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@81 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@287 $generated@@157 $generated@@157)) (= (type $generated@@378) $generated@@157)) (= ($generated@@0 ($generated@@86 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@86 ($generated@@285 $generated@@377) ($generated@@155 ($generated@@324 $generated@@148 $generated@@378)))) (= ($generated@@86 ($generated@@372 $generated@@377) ($generated@@155 ($generated@@324 $generated@@148 $generated@@378))) ($generated@@156 ($generated@@324 $generated@@148 $generated@@378))))))
 :pattern ( ($generated@@86 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@81 $generated@@157 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@307 (type $generated@@382))))
(let (($generated@@384 ($generated@@306 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@81 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@305 $generated@@157 $generated@@157)) (= (type $generated@@386) $generated@@157)) (= ($generated@@0 ($generated@@86 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@86 ($generated@@303 $generated@@385) ($generated@@155 ($generated@@324 $generated@@148 $generated@@386)))) (= ($generated@@86 ($generated@@380 $generated@@385) ($generated@@155 ($generated@@324 $generated@@148 $generated@@386))) ($generated@@156 ($generated@@324 $generated@@148 $generated@@386))))))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@288 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@287 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@86 ($generated@@335 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@86 ($generated@@285 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@86 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@86 ($generated@@285 $generated@@387) $generated@@391))
 :pattern ( ($generated@@86 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@86 ($generated@@335 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@306 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@305 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@86 ($generated@@346 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@86 ($generated@@303 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@86 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@86 ($generated@@303 $generated@@392) $generated@@396))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@86 ($generated@@346 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@69)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@287 $generated@@157 $generated@@157)) (= (type $generated@@401) $generated@@69)) (= (type $generated@@402) $generated@@69)) (= (type $generated@@403) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@157) ($generated@@0 ($generated@@86 ($generated@@285 $generated@@400) $generated@@404))) (and ($generated@@253 ($generated@@86 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@253 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@86 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@86 ($generated@@285 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@79 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@69)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@305 $generated@@157 $generated@@157)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) $generated@@69)) (= (type $generated@@411) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@157) ($generated@@0 ($generated@@86 ($generated@@303 $generated@@408) $generated@@412))) (and ($generated@@253 ($generated@@86 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@253 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@86 ($generated@@303 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@79 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@81 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@307 (type $generated@@415))))
(let (($generated@@417 ($generated@@306 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@305 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@304 $generated@@417 $generated@@416)) (= ($generated@@303 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@303 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@307 (type $generated@@418))))
(let (($generated@@420 ($generated@@306 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@305 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@304 $generated@@420 $generated@@419)) (= ($generated@@346 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@346 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@307 (type $generated@@421))))
(let (($generated@@423 ($generated@@306 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@305 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@304 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@157))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@289 (type $generated@@424))))
(let (($generated@@426 ($generated@@288 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@287 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@286 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@157) (= (type $generated@@428) $generated@@157)) ($generated@@0 ($generated@@86 ($generated@@371 $generated@@424) ($generated@@274 ($generated@@226 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@307 (type $generated@@429))))
(let (($generated@@431 ($generated@@306 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@305 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@304 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@157) (= (type $generated@@433) $generated@@157)) ($generated@@0 ($generated@@86 ($generated@@379 $generated@@429) ($generated@@274 ($generated@@226 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@157) ($generated@@227 $generated@@434 $generated@@46)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@434)) $generated@@434) ($generated@@144 ($generated@@324 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@227 $generated@@435 $generated@@47)) (and (= ($generated@@274 ($generated@@324 $generated@@3 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@324 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@157) ($generated@@227 $generated@@436 $generated@@44)) (and (= ($generated@@274 ($generated@@324 $generated@@4 $generated@@436)) $generated@@436) ($generated@@144 ($generated@@324 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@157) ($generated@@227 $generated@@438 $generated@@45)) (and (= ($generated@@274 ($generated@@324 $generated@@437 $generated@@438)) $generated@@438) ($generated@@144 ($generated@@324 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@69) (= ($generated@@227 ($generated@@274 $generated@@439) $generated@@440) ($generated@@144 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@227 ($generated@@274 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@84 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@81 $generated@@442 $generated@@2)) (<= 0 ($generated@@279 $generated@@441))))
 :pattern ( ($generated@@279 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@268 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@267 $generated@@444)) (<= 0 ($generated@@266 $generated@@443))))
 :pattern ( ($generated@@266 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@69)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@69) (= (type $generated@@448) $generated@@69)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@69)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@69) (= (type $generated@@452) $generated@@69)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@69) (= (type $generated@@454) $generated@@69)) (= ($generated@@77 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@69)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@69)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@69) (= (type $generated@@462) $generated@@69)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@77 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@157) (= (type $generated@@466) $generated@@157)) (= ($generated@@259 ($generated@@226 $generated@@465 $generated@@466)) $generated@@62))
 :pattern ( ($generated@@226 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@69)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@467 ($generated@@147 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@147 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@147 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@147 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@157) (= (type $generated@@476) $generated@@157)) (= ($generated@@155 ($generated@@226 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@226 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@157) (= (type $generated@@478) $generated@@157)) (= ($generated@@156 ($generated@@226 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@226 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@268 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@480 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@267 $generated@@157)) (= (type $generated@@486) $generated@@69)) (= (type $generated@@487) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@485 ($generated@@479 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@266 $generated@@485))) ($generated@@253 ($generated@@480 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@480 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@79 $generated@@485 ($generated@@479 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@80 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@80 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@69) (= ($generated@@491 ($generated@@236 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@236 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@69) (= ($generated@@77 ($generated@@236 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@69) (= ($generated@@495 ($generated@@241 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@241 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@69) (= ($generated@@77 ($generated@@241 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@69) (= ($generated@@499 ($generated@@162 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@162 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@69) (= ($generated@@77 ($generated@@162 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@479 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@479 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@77 ($generated@@479 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@324 $generated@@508 ($generated@@274 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@274 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@287 $generated@@157 $generated@@157)) (= (type $generated@@510) $generated@@69)) (= (type $generated@@511) $generated@@69)) (= ($generated@@144 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@157) ($generated@@0 ($generated@@86 ($generated@@285 $generated@@509) $generated@@512))) (and ($generated@@227 ($generated@@86 ($generated@@372 $generated@@509) $generated@@512) $generated@@511) ($generated@@227 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@86 ($generated@@372 $generated@@509) $generated@@512))
 :pattern ( ($generated@@86 ($generated@@285 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@144 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@305 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) $generated@@69)) (= ($generated@@144 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@86 ($generated@@303 $generated@@513) $generated@@516))) (and ($generated@@227 ($generated@@86 ($generated@@380 $generated@@513) $generated@@516) $generated@@515) ($generated@@227 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@513) $generated@@516))
 :pattern ( ($generated@@86 ($generated@@303 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@157) (= (type $generated@@520) $generated@@157)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@226 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@226 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@157) (= (type $generated@@522) $generated@@157)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@226 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@226 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@69)) (= (type $generated@@525) $generated@@69)) ($generated@@227 $generated@@523 ($generated@@397 $generated@@524 $generated@@525))) (and (= ($generated@@274 ($generated@@324 ($generated@@287 $generated@@157 $generated@@157) $generated@@523)) $generated@@523) ($generated@@144 ($generated@@324 ($generated@@287 $generated@@157 $generated@@157) $generated@@523) ($generated@@397 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@227 $generated@@523 ($generated@@397 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@157) (= (type $generated@@527) $generated@@69)) (= (type $generated@@528) $generated@@69)) ($generated@@227 $generated@@526 ($generated@@405 $generated@@527 $generated@@528))) (and (= ($generated@@274 ($generated@@324 ($generated@@305 $generated@@157 $generated@@157) $generated@@526)) $generated@@526) ($generated@@144 ($generated@@324 ($generated@@305 $generated@@157 $generated@@157) $generated@@526) ($generated@@405 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@227 $generated@@526 ($generated@@405 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@69) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@157)) ($generated@@227 $generated@@531 ($generated@@147 $generated@@529 $generated@@530))) (and (= ($generated@@274 ($generated@@324 $generated@@148 $generated@@531)) $generated@@531) ($generated@@144 ($generated@@324 $generated@@148 $generated@@531) ($generated@@147 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@227 $generated@@531 ($generated@@147 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@86 ($generated@@413 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@86 ($generated@@413 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@74)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@69) (= (type $generated@@537) $generated@@69)) (and (= ($generated@@77 ($generated@@147 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@147 $generated@@536 $generated@@537)) $generated@@67)))
 :pattern ( ($generated@@147 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@148) (= ($generated@@517 ($generated@@274 $generated@@538)) ($generated@@518 $generated@@538)))
 :pattern ( ($generated@@517 ($generated@@274 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@157) ($generated@@227 $generated@@539 ($generated@@80 0))) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@539)) $generated@@539) ($generated@@144 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@539) ($generated@@80 0))))
 :pattern ( ($generated@@227 $generated@@539 ($generated@@80 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@157) (= (type $generated@@541) $generated@@69)) ($generated@@227 $generated@@540 ($generated@@236 $generated@@541))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@540)) $generated@@540) ($generated@@144 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@540) ($generated@@236 $generated@@541))))
 :pattern ( ($generated@@227 $generated@@540 ($generated@@236 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@157) (= (type $generated@@543) $generated@@69)) ($generated@@227 $generated@@542 ($generated@@241 $generated@@543))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@542)) $generated@@542) ($generated@@144 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@542) ($generated@@241 $generated@@543))))
 :pattern ( ($generated@@227 $generated@@542 ($generated@@241 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@157) (= (type $generated@@545) $generated@@69)) ($generated@@227 $generated@@544 ($generated@@162 $generated@@545))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@157 $generated@@2) $generated@@544)) $generated@@544) ($generated@@144 ($generated@@324 ($generated@@81 $generated@@157 $generated@@2) $generated@@544) ($generated@@162 $generated@@545))))
 :pattern ( ($generated@@227 $generated@@544 ($generated@@162 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@69)) ($generated@@227 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@274 ($generated@@324 ($generated@@267 $generated@@157) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@324 ($generated@@267 $generated@@157) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@227 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@61))
(assert (= ($generated@@534 $generated@@137) $generated@@66))
(assert (= ($generated@@77 $generated@@140) $generated@@64))
(assert (= ($generated@@534 $generated@@140) $generated@@68))
(assert (= ($generated@@77 $generated@@223) $generated@@65))
(assert (= ($generated@@534 $generated@@223) $generated@@68))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@81 $generated@@157 $generated@@2)) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@548 ($generated@@162 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@157) (< 0 ($generated ($generated@@86 $generated@@548 $generated@@551)))) ($generated@@253 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@86 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@79 $generated@@548 ($generated@@162 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@82) (= ($generated@@144 $generated@@555 $generated@@140)  (or (= $generated@@555 $generated@@141) ($generated@@552 ($generated@@553 $generated@@555)))))
 :pattern ( ($generated@@144 $generated@@555 $generated@@140))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@148) (= (type $generated@@557) $generated@@69)) (= (type $generated@@558) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@252 $generated@@558) (and ($generated@@146 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@69) ($generated@@79 $generated@@556 ($generated@@147 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@79 $generated@@556 ($generated@@147 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@253 ($generated@@155 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@148) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@252 $generated@@562) (and ($generated@@146 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@69) ($generated@@79 $generated@@560 ($generated@@147 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@79 $generated@@560 ($generated@@147 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@253 ($generated@@156 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@253 ($generated@@156 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@157) (= (type $generated@@565) $generated@@157)) (= ($generated@@226 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)) ($generated@@248 ($generated@@226 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@226 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@246 $generated@@566))) ($generated@@248 ($generated@@274 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@246 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@274 ($generated@@248 $generated@@567)) ($generated@@248 ($generated@@274 $generated@@567)))
 :pattern ( ($generated@@274 ($generated@@248 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@268 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@267 $generated@@569)) (= ($generated@@266 $generated@@568) 0)) (= $generated@@568 ($generated@@265 $generated@@569))))
 :pattern ( ($generated@@266 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@81 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@279 ($generated@@87 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@279 $generated@@570) ($generated ($generated@@86 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@279 ($generated@@87 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@575) $generated@@2)) ($generated@@79 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@79 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@577) $generated@@3)) ($generated@@79 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@79 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@579) $generated@@4)) ($generated@@79 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@79 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@581) $generated@@437)) ($generated@@79 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@79 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@583) $generated@@157)) ($generated@@79 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@79 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@267 $generated@@157)) (= (type $generated@@585) $generated@@69)) (= ($generated@@144 $generated@@584 ($generated@@479 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@266 $generated@@584))) ($generated@@227 ($generated@@480 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@480 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@144 $generated@@584 ($generated@@479 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@267 $generated@@157)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@266 $generated@@588))) (< ($generated@@518 ($generated@@324 $generated@@148 ($generated@@480 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@518 ($generated@@324 $generated@@148 ($generated@@480 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@287 $generated@@157 $generated@@157)) (= (type $generated@@591) $generated@@69)) (= (type $generated@@592) $generated@@69)) ($generated@@144 $generated@@590 ($generated@@397 $generated@@591 $generated@@592))) (and (and ($generated@@144 ($generated@@285 $generated@@590) ($generated@@236 $generated@@591)) ($generated@@144 ($generated@@335 $generated@@590) ($generated@@236 $generated@@592))) ($generated@@144 ($generated@@371 $generated@@590) ($generated@@236 ($generated@@147 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@144 $generated@@590 ($generated@@397 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@305 $generated@@157 $generated@@157)) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) $generated@@69)) ($generated@@144 $generated@@593 ($generated@@405 $generated@@594 $generated@@595))) (and (and ($generated@@144 ($generated@@303 $generated@@593) ($generated@@241 $generated@@594)) ($generated@@144 ($generated@@346 $generated@@593) ($generated@@241 $generated@@595))) ($generated@@144 ($generated@@379 $generated@@593) ($generated@@241 ($generated@@147 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@144 $generated@@593 ($generated@@405 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@144 $generated@@596 $generated@@46))
 :pattern ( ($generated@@144 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@144 $generated@@597 $generated@@47))
 :pattern ( ($generated@@144 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@144 $generated@@598 $generated@@44))
 :pattern ( ($generated@@144 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@437) ($generated@@144 $generated@@599 $generated@@45))
 :pattern ( ($generated@@144 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@157) ($generated@@144 $generated@@600 $generated@@48))
 :pattern ( ($generated@@144 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(assert  (and (and (= (type $generated@@601) $generated@@82) (= (type $generated@@603) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@604) ($generated@@169 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@606 true))
(let (($generated@@607  (=> (<= ($generated@@246 0) ($generated@@357 $generated@@601 $generated@@602)) (=> (and ($generated@@79 $generated@@601 $generated@@140 $generated@@603) ($generated@@79 ($generated@@8 $generated@@602) $generated@@137 $generated@@603)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@602) (= $generated@@602 $generated@@602))) (=> (or (<= 0 $generated@@602) (= $generated@@602 $generated@@602)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@601 $generated@@601) (= $generated@@602 $generated@@602)) (< $generated@@602 $generated@@602)))))))))
(let (($generated@@608  (=> (= $generated@@604 ($generated@@168 $generated@@141 $generated@@603 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@607) (=> (= (ControlFlow 0 5) 4) $generated@@606)))))
(let (($generated@@609  (=> (and ($generated@@252 $generated@@603) ($generated@@605 $generated@@603)) (=> (and (and (and (not (= $generated@@601 $generated@@141)) (and ($generated@@144 $generated@@601 $generated@@223) ($generated@@79 $generated@@601 $generated@@223 $generated@@603))) (<= ($generated@@246 0) $generated@@602)) (and (= 2 $generated@@356) (= (ControlFlow 0 6) 5))) $generated@@608))))
$generated@@609)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@318 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@349 () Int)
(declare-fun $generated@@350 (T@U Int) Int)
(declare-fun $generated@@351 (T@U Int) Bool)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U Int) T@U)
(declare-fun $generated@@482 (T@U) Int)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Bool)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@152)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@247 $generated@@253)) (= ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@71)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@143) (= ($generated@@141 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@143) ($generated@@141 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@152) (= (type $generated@@259) $generated@@152)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@152)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@77 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@79 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@82 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@79 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@84 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@79 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (= ($generated@@158 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@84 $generated@@315 $generated@@317))) (<= ($generated ($generated@@84 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@158 $generated@@315))
)))
(assert (forall (($generated@@319 T@T) ($generated@@320 T@U) ) (! (= (type ($generated@@318 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@152) ($generated@@222 $generated@@321 $generated@@135)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@321)) $generated@@321) ($generated@@139 ($generated@@318 $generated@@80 $generated@@321) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@321 $generated@@135))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@222 $generated@@322 $generated@@218)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@318 $generated@@80 $generated@@322) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@218))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@80) (= ($generated@@139 $generated@@323 $generated@@218)  (and ($generated@@139 $generated@@323 $generated@@135) (not (= $generated@@323 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@323 $generated@@218))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@283 (type $generated@@324))))
(let (($generated@@326 ($generated@@282 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@281 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@280 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@279 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@283 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@79 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@283 (type $generated@@331))))
(let (($generated@@333 ($generated@@282 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@281 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@280 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@301 (type $generated@@335))))
(let (($generated@@337 ($generated@@300 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@299 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@298 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@297 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@79 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@301 (type $generated@@342))))
(let (($generated@@344 ($generated@@300 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@299 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@298 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@347) $generated@@67)) (= ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@346 $generated@@348)))) ($generated@@222 $generated@@348 $generated@@347))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)))
)))
(assert  (=> (<= 2 $generated@@349) (forall (($generated@@352 T@U) ($generated@@353 Int) ) (!  (=> (and (= (type $generated@@352) $generated@@80) (or ($generated@@351 $generated@@352 $generated@@353) (and (not (= 2 $generated@@349)) (and (and (not (= $generated@@352 $generated@@136)) ($generated@@139 $generated@@352 $generated@@218)) (<= ($generated@@241 0) $generated@@353))))) (and (< ($generated@@350 $generated@@352 $generated@@353) (+ 10 $generated@@353)) (<= ($generated@@241 0) ($generated@@350 $generated@@352 $generated@@353))))
 :pattern ( ($generated@@350 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@355) $generated@@67)) (= (type $generated@@356) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@354 ($generated@@231 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@152) ($generated@@0 ($generated@@84 $generated@@354 $generated@@357))) ($generated@@248 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@84 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@77 $generated@@354 ($generated@@231 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@359) $generated@@67)) (= (type $generated@@360) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@358 ($generated@@236 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@152) ($generated@@0 ($generated@@84 $generated@@358 $generated@@361))) ($generated@@248 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@84 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@77 $generated@@358 ($generated@@236 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@84 ($generated@@274 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@84 ($generated@@274 $generated@@363) $generated@@362)))
)))
(assert  (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@364 $generated@@366))
)) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@283 (type $generated@@367))))
(let (($generated@@369 ($generated@@282 (type $generated@@367))))
(= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@365 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@371) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@364 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@370) ($generated@@150 ($generated@@318 $generated@@143 $generated@@371)))) (= ($generated@@84 ($generated@@365 $generated@@370) ($generated@@150 ($generated@@318 $generated@@143 $generated@@371))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@371))))))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@301 (type $generated@@375))))
(let (($generated@@377 ($generated@@300 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@379) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@378) ($generated@@150 ($generated@@318 $generated@@143 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@150 ($generated@@318 $generated@@143 $generated@@379))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@282 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@281 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@84 ($generated@@328 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@84 ($generated@@365 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@380) $generated@@384))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@300 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@299 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@84 ($generated@@339 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@84 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@385) $generated@@389))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@67)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@394) $generated@@67)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@393) $generated@@397))) (and ($generated@@248 ($generated@@84 ($generated@@365 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@248 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@77 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@401) $generated@@405))) (and ($generated@@248 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@248 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@79 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@301 (type $generated@@408))))
(let (($generated@@410 ($generated@@300 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@299 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@298 $generated@@410 $generated@@409)) (= ($generated@@297 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@297 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@301 (type $generated@@411))))
(let (($generated@@413 ($generated@@300 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@299 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@298 $generated@@413 $generated@@412)) (= ($generated@@339 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@339 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@301 (type $generated@@414))))
(let (($generated@@416 ($generated@@300 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@299 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@298 $generated@@416 $generated@@415)) (= ($generated@@372 $generated@@414) ($generated@@406 $generated@@152))))))
 :pattern ( ($generated@@372 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@283 (type $generated@@417))))
(let (($generated@@419 ($generated@@282 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@281 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@280 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@152) (= (type $generated@@421) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@364 $generated@@417) ($generated@@268 ($generated@@221 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@364 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@301 (type $generated@@422))))
(let (($generated@@424 ($generated@@300 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@299 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@298 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@152) (= (type $generated@@426) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@422) ($generated@@268 ($generated@@221 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@372 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@46)) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@318 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@152) ($generated@@222 $generated@@428 $generated@@47)) (and (= ($generated@@268 ($generated@@318 $generated@@3 $generated@@428)) $generated@@428) ($generated@@139 ($generated@@318 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@44)) (and (= ($generated@@268 ($generated@@318 $generated@@4 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@318 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 20))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@152) ($generated@@222 $generated@@431 $generated@@45)) (and (= ($generated@@268 ($generated@@318 $generated@@430 $generated@@431)) $generated@@431) ($generated@@139 ($generated@@318 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (= (type $generated@@433) $generated@@67) (= ($generated@@222 ($generated@@268 $generated@@432) $generated@@433) ($generated@@139 $generated@@432 $generated@@433)))
 :pattern ( ($generated@@222 ($generated@@268 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@82 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@79 $generated@@435 $generated@@2)) (<= 0 ($generated@@273 $generated@@434))))
 :pattern ( ($generated@@273 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@263 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@262 $generated@@437)) (<= 0 ($generated@@261 $generated@@436))))
 :pattern ( ($generated@@261 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@67) (= (type $generated@@441) $generated@@67)) (= ($generated@@438 ($generated@@390 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@390 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@390 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@390 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@75 ($generated@@390 $generated@@446 $generated@@447)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@398 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@398 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@398 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@456 $generated@@457)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@152) (= (type $generated@@459) $generated@@152)) (= ($generated@@254 ($generated@@221 $generated@@458 $generated@@459)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@460 ($generated@@142 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@142 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@142 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@142 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@152) (= (type $generated@@471) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@221 $generated@@470 $generated@@471))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ($generated@@476 Int) ) (! (let (($generated@@477 ($generated@@263 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475 $generated@@476)) $generated@@477))
 :pattern ( ($generated@@473 $generated@@475 $generated@@476))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@262 $generated@@152)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@478 ($generated@@472 $generated@@479) $generated@@480) (forall (($generated@@481 Int) ) (!  (=> (and (<= 0 $generated@@481) (< $generated@@481 ($generated@@261 $generated@@478))) ($generated@@248 ($generated@@473 $generated@@478 $generated@@481) $generated@@479 $generated@@480))
 :pattern ( ($generated@@473 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@77 $generated@@478 ($generated@@472 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@483 Int) ) (! (= ($generated@@482 ($generated@@78 $generated@@483)) $generated@@483)
 :pattern ( ($generated@@78 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@484 ($generated@@231 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@231 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@487)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@236 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@236 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@491)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@157 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@157 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@495)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@472 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@472 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@472 $generated@@499)) $generated@@57))
 :pattern ( ($generated@@472 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated@@318 $generated@@501 ($generated@@268 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@268 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@503) $generated@@67)) (= (type $generated@@504) $generated@@67)) (= ($generated@@139 $generated@@502 ($generated@@390 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@502) $generated@@505))) (and ($generated@@222 ($generated@@84 ($generated@@365 $generated@@502) $generated@@505) $generated@@504) ($generated@@222 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@502) $generated@@505))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@139 $generated@@502 ($generated@@390 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@139 $generated@@506 ($generated@@398 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@506) $generated@@509))) (and ($generated@@222 ($generated@@84 ($generated@@373 $generated@@506) $generated@@509) $generated@@508) ($generated@@222 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@506) $generated@@509))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@139 $generated@@506 ($generated@@398 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@510 $generated@@512) ($generated@@511 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@152)) (< ($generated@@510 $generated@@515) ($generated@@511 ($generated@@221 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@221 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@152) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) ($generated@@222 $generated@@516 ($generated@@390 $generated@@517 $generated@@518))) (and (= ($generated@@268 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@516)) $generated@@516) ($generated@@139 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@516) ($generated@@390 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@222 $generated@@516 ($generated@@390 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@152) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) ($generated@@222 $generated@@519 ($generated@@398 $generated@@520 $generated@@521))) (and (= ($generated@@268 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@519)) $generated@@519) ($generated@@139 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@519) ($generated@@398 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= (type $generated@@524) $generated@@152)) ($generated@@222 $generated@@524 ($generated@@142 $generated@@522 $generated@@523))) (and (= ($generated@@268 ($generated@@318 $generated@@143 $generated@@524)) $generated@@524) ($generated@@139 ($generated@@318 $generated@@143 $generated@@524) ($generated@@142 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@222 $generated@@524 ($generated@@142 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (not ($generated@@0 ($generated@@84 ($generated@@406 $generated@@526) $generated@@525))))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@84 ($generated@@406 $generated@@526) $generated@@525)))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@72)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@67) (= (type $generated@@530) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@142 $generated@@529 $generated@@530)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@143) (= ($generated@@510 ($generated@@268 $generated@@531)) ($generated@@511 $generated@@531)))
 :pattern ( ($generated@@510 ($generated@@268 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@152) ($generated@@222 $generated@@532 ($generated@@78 0))) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@532)) $generated@@532) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@532) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@78 0)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@222 $generated@@533 ($generated@@231 $generated@@534))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@231 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@236 $generated@@536))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@535) ($generated@@236 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@236 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@157 $generated@@538))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@537) ($generated@@157 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@157 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@152) (= (type $generated@@540) $generated@@67)) ($generated@@222 $generated@@539 ($generated@@472 $generated@@540))) (and (= ($generated@@268 ($generated@@318 ($generated@@262 $generated@@152) $generated@@539)) $generated@@539) ($generated@@139 ($generated@@318 ($generated@@262 $generated@@152) $generated@@539) ($generated@@472 $generated@@540))))
 :pattern ( ($generated@@222 $generated@@539 ($generated@@472 $generated@@540)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@527 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@527 $generated@@218) $generated@@66))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@541 ($generated@@157 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@541 $generated@@544)))) ($generated@@248 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@84 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@77 $generated@@541 ($generated@@157 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@80) (= ($generated@@139 $generated@@548 $generated@@135)  (or (= $generated@@548 $generated@@136) ($generated@@545 ($generated@@546 $generated@@548)))))
 :pattern ( ($generated@@139 $generated@@548 $generated@@135))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@143) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@551) (and ($generated@@141 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@67) ($generated@@77 $generated@@549 ($generated@@142 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@77 $generated@@549 ($generated@@142 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@248 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@248 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@143) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@555) (and ($generated@@141 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@67) ($generated@@77 $generated@@553 ($generated@@142 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@77 $generated@@553 ($generated@@142 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@248 ($generated@@151 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@248 ($generated@@151 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@152) (= (type $generated@@558) $generated@@152)) (= ($generated@@221 ($generated@@243 $generated@@557) ($generated@@243 $generated@@558)) ($generated@@243 ($generated@@221 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@557) ($generated@@243 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@559))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@560)) ($generated@@243 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@263 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@262 $generated@@562)) (= ($generated@@261 $generated@@561) 0)) (= $generated@@561 ($generated@@260 $generated@@562))))
 :pattern ( ($generated@@261 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@79 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@273 ($generated@@85 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@273 $generated@@563) ($generated ($generated@@84 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@273 ($generated@@85 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@2)) ($generated@@77 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@3)) ($generated@@77 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@4)) ($generated@@77 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@430)) ($generated@@77 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@152)) ($generated@@77 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@262 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= ($generated@@139 $generated@@577 ($generated@@472 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@261 $generated@@577))) ($generated@@222 ($generated@@473 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@473 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@472 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@262 $generated@@152)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@261 $generated@@581))) (< ($generated@@511 ($generated@@318 $generated@@143 ($generated@@473 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@511 ($generated@@318 $generated@@143 ($generated@@473 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@390 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@279 $generated@@583) ($generated@@231 $generated@@584)) ($generated@@139 ($generated@@328 $generated@@583) ($generated@@231 $generated@@585))) ($generated@@139 ($generated@@364 $generated@@583) ($generated@@231 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@390 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) $generated@@67)) ($generated@@139 $generated@@586 ($generated@@398 $generated@@587 $generated@@588))) (and (and ($generated@@139 ($generated@@297 $generated@@586) ($generated@@236 $generated@@587)) ($generated@@139 ($generated@@339 $generated@@586) ($generated@@236 $generated@@588))) ($generated@@139 ($generated@@372 $generated@@586) ($generated@@236 ($generated@@142 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@139 $generated@@586 ($generated@@398 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@139 $generated@@589 $generated@@46))
 :pattern ( ($generated@@139 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@139 $generated@@590 $generated@@47))
 :pattern ( ($generated@@139 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@139 $generated@@591 $generated@@44))
 :pattern ( ($generated@@139 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@430) ($generated@@139 $generated@@592 $generated@@45))
 :pattern ( ($generated@@139 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@152) ($generated@@139 $generated@@593 $generated@@48))
 :pattern ( ($generated@@139 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (Int) Int)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@356 () Int)
(declare-fun $generated@@357 (T@U Int) Int)
(declare-fun $generated@@358 (T@U Int) Bool)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Bool)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (= (type $generated@@137) $generated@@69))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
 :pattern ( ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
)))
(assert  (and (= (type $generated@@140) $generated@@69) (= (type $generated@@141) $generated@@82)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@82) (= (type $generated@@143) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@142 $generated@@140 $generated@@143)  (or (= $generated@@142 $generated@@141) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@143 $generated@@142) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@142 $generated@@140 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@80 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@69)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@69) (= (type $generated@@152) $generated@@69)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@69)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@81 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@69)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@82 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@72 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@82) (= (type $generated@@217) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@218) ($generated@@71 $generated@@4))) (= (type $generated@@220) $generated@@82)) (= (type $generated@@221) ($generated@@71 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (= (type $generated@@223) $generated@@69))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@224 $generated@@223 $generated@@225) ($generated@@79 $generated@@224 $generated@@140 $generated@@225)))
 :pattern ( ($generated@@79 $generated@@224 $generated@@223 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@148)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@69) (= (type $generated@@231) $generated@@69)) (= (type $generated@@232) $generated@@157)) (= (type $generated@@233) $generated@@157)) (= ($generated@@144 ($generated@@226 $generated@@232 $generated@@233) ($generated@@147 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@144 ($generated@@226 $generated@@232 $generated@@233) ($generated@@147 $generated@@230 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@148) (= (type $generated@@235) $generated@@148)) (= ($generated@@154 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@154 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@69)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@81 $generated@@157 $generated@@4)) (= (type $generated@@239) $generated@@69)) (= ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@157) ($generated@@0 ($generated@@86 $generated@@238 $generated@@240))) ($generated@@227 $generated@@240 $generated@@239))
 :pattern ( ($generated@@86 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@144 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@69)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@81 $generated@@157 $generated@@4)) (= (type $generated@@244) $generated@@69)) (= ($generated@@144 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@157) ($generated@@0 ($generated@@86 $generated@@243 $generated@@245))) ($generated@@227 $generated@@245 $generated@@244))
 :pattern ( ($generated@@86 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@144 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 Int) ) (! (= ($generated@@246 $generated@@247) $generated@@247)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@69) (= (type $generated@@255) $generated@@69)) (= (type $generated@@256) $generated@@157)) (= (type $generated@@257) $generated@@157)) (= (type $generated@@258) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@252 $generated@@258)) (= ($generated@@79 ($generated@@226 $generated@@256 $generated@@257) ($generated@@147 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@79 ($generated@@226 $generated@@256 $generated@@257) ($generated@@147 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@73)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@148) (= ($generated@@146 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@62)))
 :pattern ( ($generated@@146 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@148) ($generated@@146 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@157) (= (type $generated@@264) $generated@@157)) (= $generated@@262 ($generated@@226 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@146 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@2) (= ($generated@@144 $generated@@273 $generated@@137) (<= ($generated@@246 0) ($generated $generated@@273))))
 :pattern ( ($generated@@144 $generated@@273 $generated@@137))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@157)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@69) (= (type $generated@@278) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@253 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@79 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@253 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@81 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@84 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@81 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@86 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@81 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@86 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@86 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@81 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@86 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@86 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@84 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@81 $generated@@322 $generated@@2)) (= ($generated@@163 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@86 $generated@@321 $generated@@323))) (<= ($generated ($generated@@86 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@86 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@163 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@157) ($generated@@227 $generated@@327 $generated@@137)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@327)) $generated@@327) ($generated@@144 ($generated@@324 $generated@@2 $generated@@327) $generated@@137)))
 :pattern ( ($generated@@227 $generated@@327 $generated@@137))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@157) ($generated@@227 $generated@@328 $generated@@140)) (and (= ($generated@@274 ($generated@@324 $generated@@82 $generated@@328)) $generated@@328) ($generated@@144 ($generated@@324 $generated@@82 $generated@@328) $generated@@140)))
 :pattern ( ($generated@@227 $generated@@328 $generated@@140))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@157) ($generated@@227 $generated@@329 $generated@@223)) (and (= ($generated@@274 ($generated@@324 $generated@@82 $generated@@329)) $generated@@329) ($generated@@144 ($generated@@324 $generated@@82 $generated@@329) $generated@@223)))
 :pattern ( ($generated@@227 $generated@@329 $generated@@223))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@82) (= ($generated@@144 $generated@@330 $generated@@223)  (and ($generated@@144 $generated@@330 $generated@@140) (not (= $generated@@330 $generated@@141)))))
 :pattern ( ($generated@@144 $generated@@330 $generated@@223))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@86 ($generated@@285 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@285 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@289 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@81 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@289 (type $generated@@338))))
(let (($generated@@340 ($generated@@288 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@287 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@286 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@86 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@86 ($generated@@303 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@303 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@307 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@81 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@307 (type $generated@@349))))
(let (($generated@@351 ($generated@@306 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@305 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@304 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@86 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@81 $generated@@157 $generated@@2)) (= (type $generated@@354) $generated@@69)) (= ($generated@@144 $generated@@353 ($generated@@162 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@157) (< 0 ($generated ($generated@@86 $generated@@353 $generated@@355)))) ($generated@@227 $generated@@355 $generated@@354))
 :pattern ( ($generated@@86 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@144 $generated@@353 ($generated@@162 $generated@@354)))
)))
(assert  (=> (<= 2 $generated@@356) (forall (($generated@@359 T@U) ($generated@@360 Int) ) (!  (=> (and (= (type $generated@@359) $generated@@82) (or ($generated@@358 $generated@@359 $generated@@360) (and (not (= 2 $generated@@356)) (and (and (not (= $generated@@359 $generated@@141)) ($generated@@144 $generated@@359 $generated@@223)) (<= ($generated@@246 0) $generated@@360))))) (and (< ($generated@@357 $generated@@359 $generated@@360) (+ 10 $generated@@360)) (<= ($generated@@246 0) ($generated@@357 $generated@@359 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@81 $generated@@157 $generated@@4)) (= (type $generated@@362) $generated@@69)) (= (type $generated@@363) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@361 ($generated@@236 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@157) ($generated@@0 ($generated@@86 $generated@@361 $generated@@364))) ($generated@@253 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@86 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@79 $generated@@361 ($generated@@236 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@81 $generated@@157 $generated@@4)) (= (type $generated@@366) $generated@@69)) (= (type $generated@@367) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@365 ($generated@@241 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@157) ($generated@@0 ($generated@@86 $generated@@365 $generated@@368))) ($generated@@253 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@86 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@79 $generated@@365 ($generated@@241 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@86 ($generated@@280 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@86 ($generated@@280 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@81 $generated@@157 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@289 (type $generated@@374))))
(let (($generated@@376 ($generated@@288 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@81 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@287 $generated@@157 $generated@@157)) (= (type $generated@@378) $generated@@157)) (= ($generated@@0 ($generated@@86 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@86 ($generated@@285 $generated@@377) ($generated@@155 ($generated@@324 $generated@@148 $generated@@378)))) (= ($generated@@86 ($generated@@372 $generated@@377) ($generated@@155 ($generated@@324 $generated@@148 $generated@@378))) ($generated@@156 ($generated@@324 $generated@@148 $generated@@378))))))
 :pattern ( ($generated@@86 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@81 $generated@@157 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@307 (type $generated@@382))))
(let (($generated@@384 ($generated@@306 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@81 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@305 $generated@@157 $generated@@157)) (= (type $generated@@386) $generated@@157)) (= ($generated@@0 ($generated@@86 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@86 ($generated@@303 $generated@@385) ($generated@@155 ($generated@@324 $generated@@148 $generated@@386)))) (= ($generated@@86 ($generated@@380 $generated@@385) ($generated@@155 ($generated@@324 $generated@@148 $generated@@386))) ($generated@@156 ($generated@@324 $generated@@148 $generated@@386))))))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@288 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@287 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@86 ($generated@@335 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@86 ($generated@@285 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@86 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@86 ($generated@@285 $generated@@387) $generated@@391))
 :pattern ( ($generated@@86 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@86 ($generated@@335 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@306 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@305 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@86 ($generated@@346 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@86 ($generated@@303 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@86 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@86 ($generated@@303 $generated@@392) $generated@@396))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@86 ($generated@@346 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@69)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@287 $generated@@157 $generated@@157)) (= (type $generated@@401) $generated@@69)) (= (type $generated@@402) $generated@@69)) (= (type $generated@@403) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@157) ($generated@@0 ($generated@@86 ($generated@@285 $generated@@400) $generated@@404))) (and ($generated@@253 ($generated@@86 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@253 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@86 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@86 ($generated@@285 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@79 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@69)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@305 $generated@@157 $generated@@157)) (= (type $generated@@409) $generated@@69)) (= (type $generated@@410) $generated@@69)) (= (type $generated@@411) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@157) ($generated@@0 ($generated@@86 ($generated@@303 $generated@@408) $generated@@412))) (and ($generated@@253 ($generated@@86 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@253 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@86 ($generated@@303 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@79 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@81 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@307 (type $generated@@415))))
(let (($generated@@417 ($generated@@306 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@305 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@304 $generated@@417 $generated@@416)) (= ($generated@@303 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@303 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@307 (type $generated@@418))))
(let (($generated@@420 ($generated@@306 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@305 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@304 $generated@@420 $generated@@419)) (= ($generated@@346 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@346 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@307 (type $generated@@421))))
(let (($generated@@423 ($generated@@306 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@305 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@304 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@157))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@289 (type $generated@@424))))
(let (($generated@@426 ($generated@@288 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@287 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@286 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@157) (= (type $generated@@428) $generated@@157)) ($generated@@0 ($generated@@86 ($generated@@371 $generated@@424) ($generated@@274 ($generated@@226 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@307 (type $generated@@429))))
(let (($generated@@431 ($generated@@306 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@305 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@304 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@157) (= (type $generated@@433) $generated@@157)) ($generated@@0 ($generated@@86 ($generated@@379 $generated@@429) ($generated@@274 ($generated@@226 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@157) ($generated@@227 $generated@@434 $generated@@46)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@434)) $generated@@434) ($generated@@144 ($generated@@324 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@157) ($generated@@227 $generated@@435 $generated@@47)) (and (= ($generated@@274 ($generated@@324 $generated@@3 $generated@@435)) $generated@@435) ($generated@@144 ($generated@@324 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@157) ($generated@@227 $generated@@436 $generated@@44)) (and (= ($generated@@274 ($generated@@324 $generated@@4 $generated@@436)) $generated@@436) ($generated@@144 ($generated@@324 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@157) ($generated@@227 $generated@@438 $generated@@45)) (and (= ($generated@@274 ($generated@@324 $generated@@437 $generated@@438)) $generated@@438) ($generated@@144 ($generated@@324 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@69) (= ($generated@@227 ($generated@@274 $generated@@439) $generated@@440) ($generated@@144 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@227 ($generated@@274 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@84 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@81 $generated@@442 $generated@@2)) (<= 0 ($generated@@279 $generated@@441))))
 :pattern ( ($generated@@279 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@268 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@267 $generated@@444)) (<= 0 ($generated@@266 $generated@@443))))
 :pattern ( ($generated@@266 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@69)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@69) (= (type $generated@@448) $generated@@69)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@69)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@69) (= (type $generated@@452) $generated@@69)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@69) (= (type $generated@@454) $generated@@69)) (= ($generated@@77 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@69)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@69) (= (type $generated@@458) $generated@@69)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@69)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@69) (= (type $generated@@462) $generated@@69)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@77 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@157) (= (type $generated@@466) $generated@@157)) (= ($generated@@259 ($generated@@226 $generated@@465 $generated@@466)) $generated@@62))
 :pattern ( ($generated@@226 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@69)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@467 ($generated@@147 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@147 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@147 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@147 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@157) (= (type $generated@@476) $generated@@157)) (= ($generated@@155 ($generated@@226 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@226 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@157) (= (type $generated@@478) $generated@@157)) (= ($generated@@156 ($generated@@226 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@226 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@268 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@480 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@267 $generated@@157)) (= (type $generated@@486) $generated@@69)) (= (type $generated@@487) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@485 ($generated@@479 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@266 $generated@@485))) ($generated@@253 ($generated@@480 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@480 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@79 $generated@@485 ($generated@@479 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@80 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@80 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@69) (= ($generated@@491 ($generated@@236 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@236 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@69) (= ($generated@@77 ($generated@@236 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@69) (= ($generated@@495 ($generated@@241 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@241 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@69) (= ($generated@@77 ($generated@@241 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@69) (= ($generated@@499 ($generated@@162 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@162 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@69) (= ($generated@@77 ($generated@@162 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@479 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@479 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@77 ($generated@@479 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@324 $generated@@508 ($generated@@274 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@274 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@287 $generated@@157 $generated@@157)) (= (type $generated@@510) $generated@@69)) (= (type $generated@@511) $generated@@69)) (= ($generated@@144 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@157) ($generated@@0 ($generated@@86 ($generated@@285 $generated@@509) $generated@@512))) (and ($generated@@227 ($generated@@86 ($generated@@372 $generated@@509) $generated@@512) $generated@@511) ($generated@@227 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@86 ($generated@@372 $generated@@509) $generated@@512))
 :pattern ( ($generated@@86 ($generated@@285 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@144 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@305 $generated@@157 $generated@@157)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) $generated@@69)) (= ($generated@@144 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) ($generated@@0 ($generated@@86 ($generated@@303 $generated@@513) $generated@@516))) (and ($generated@@227 ($generated@@86 ($generated@@380 $generated@@513) $generated@@516) $generated@@515) ($generated@@227 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@513) $generated@@516))
 :pattern ( ($generated@@86 ($generated@@303 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@144 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@157) (= (type $generated@@520) $generated@@157)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@226 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@226 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@157) (= (type $generated@@522) $generated@@157)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@226 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@226 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@157) (= (type $generated@@524) $generated@@69)) (= (type $generated@@525) $generated@@69)) ($generated@@227 $generated@@523 ($generated@@397 $generated@@524 $generated@@525))) (and (= ($generated@@274 ($generated@@324 ($generated@@287 $generated@@157 $generated@@157) $generated@@523)) $generated@@523) ($generated@@144 ($generated@@324 ($generated@@287 $generated@@157 $generated@@157) $generated@@523) ($generated@@397 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@227 $generated@@523 ($generated@@397 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@157) (= (type $generated@@527) $generated@@69)) (= (type $generated@@528) $generated@@69)) ($generated@@227 $generated@@526 ($generated@@405 $generated@@527 $generated@@528))) (and (= ($generated@@274 ($generated@@324 ($generated@@305 $generated@@157 $generated@@157) $generated@@526)) $generated@@526) ($generated@@144 ($generated@@324 ($generated@@305 $generated@@157 $generated@@157) $generated@@526) ($generated@@405 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@227 $generated@@526 ($generated@@405 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@69) (= (type $generated@@530) $generated@@69)) (= (type $generated@@531) $generated@@157)) ($generated@@227 $generated@@531 ($generated@@147 $generated@@529 $generated@@530))) (and (= ($generated@@274 ($generated@@324 $generated@@148 $generated@@531)) $generated@@531) ($generated@@144 ($generated@@324 $generated@@148 $generated@@531) ($generated@@147 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@227 $generated@@531 ($generated@@147 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@86 ($generated@@413 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@86 ($generated@@413 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@74)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@69) (= (type $generated@@537) $generated@@69)) (and (= ($generated@@77 ($generated@@147 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@147 $generated@@536 $generated@@537)) $generated@@67)))
 :pattern ( ($generated@@147 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@148) (= ($generated@@517 ($generated@@274 $generated@@538)) ($generated@@518 $generated@@538)))
 :pattern ( ($generated@@517 ($generated@@274 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@157) ($generated@@227 $generated@@539 ($generated@@80 0))) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@539)) $generated@@539) ($generated@@144 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@539) ($generated@@80 0))))
 :pattern ( ($generated@@227 $generated@@539 ($generated@@80 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@157) (= (type $generated@@541) $generated@@69)) ($generated@@227 $generated@@540 ($generated@@236 $generated@@541))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@540)) $generated@@540) ($generated@@144 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@540) ($generated@@236 $generated@@541))))
 :pattern ( ($generated@@227 $generated@@540 ($generated@@236 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@157) (= (type $generated@@543) $generated@@69)) ($generated@@227 $generated@@542 ($generated@@241 $generated@@543))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@542)) $generated@@542) ($generated@@144 ($generated@@324 ($generated@@81 $generated@@157 $generated@@4) $generated@@542) ($generated@@241 $generated@@543))))
 :pattern ( ($generated@@227 $generated@@542 ($generated@@241 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@157) (= (type $generated@@545) $generated@@69)) ($generated@@227 $generated@@544 ($generated@@162 $generated@@545))) (and (= ($generated@@274 ($generated@@324 ($generated@@81 $generated@@157 $generated@@2) $generated@@544)) $generated@@544) ($generated@@144 ($generated@@324 ($generated@@81 $generated@@157 $generated@@2) $generated@@544) ($generated@@162 $generated@@545))))
 :pattern ( ($generated@@227 $generated@@544 ($generated@@162 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@157) (= (type $generated@@547) $generated@@69)) ($generated@@227 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@274 ($generated@@324 ($generated@@267 $generated@@157) $generated@@546)) $generated@@546) ($generated@@144 ($generated@@324 ($generated@@267 $generated@@157) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@227 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@61))
(assert (= ($generated@@534 $generated@@137) $generated@@66))
(assert (= ($generated@@77 $generated@@140) $generated@@64))
(assert (= ($generated@@534 $generated@@140) $generated@@68))
(assert (= ($generated@@77 $generated@@223) $generated@@65))
(assert (= ($generated@@534 $generated@@223) $generated@@68))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@81 $generated@@157 $generated@@2)) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@548 ($generated@@162 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@157) (< 0 ($generated ($generated@@86 $generated@@548 $generated@@551)))) ($generated@@253 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@86 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@79 $generated@@548 ($generated@@162 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@82) (= ($generated@@144 $generated@@555 $generated@@140)  (or (= $generated@@555 $generated@@141) ($generated@@552 ($generated@@553 $generated@@555)))))
 :pattern ( ($generated@@144 $generated@@555 $generated@@140))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@148) (= (type $generated@@557) $generated@@69)) (= (type $generated@@558) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@252 $generated@@558) (and ($generated@@146 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@69) ($generated@@79 $generated@@556 ($generated@@147 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@79 $generated@@556 ($generated@@147 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@253 ($generated@@155 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@148) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@252 $generated@@562) (and ($generated@@146 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@69) ($generated@@79 $generated@@560 ($generated@@147 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@79 $generated@@560 ($generated@@147 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@253 ($generated@@156 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@253 ($generated@@156 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@157) (= (type $generated@@565) $generated@@157)) (= ($generated@@226 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)) ($generated@@248 ($generated@@226 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@226 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@246 $generated@@566))) ($generated@@248 ($generated@@274 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@246 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@274 ($generated@@248 $generated@@567)) ($generated@@248 ($generated@@274 $generated@@567)))
 :pattern ( ($generated@@274 ($generated@@248 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@268 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@267 $generated@@569)) (= ($generated@@266 $generated@@568) 0)) (= $generated@@568 ($generated@@265 $generated@@569))))
 :pattern ( ($generated@@266 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@81 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@279 ($generated@@87 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@279 $generated@@570) ($generated ($generated@@86 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@279 ($generated@@87 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@575) $generated@@2)) ($generated@@79 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@79 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@577) $generated@@3)) ($generated@@79 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@79 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@579) $generated@@4)) ($generated@@79 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@79 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@581) $generated@@437)) ($generated@@79 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@79 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@583) $generated@@157)) ($generated@@79 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@79 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@267 $generated@@157)) (= (type $generated@@585) $generated@@69)) (= ($generated@@144 $generated@@584 ($generated@@479 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@266 $generated@@584))) ($generated@@227 ($generated@@480 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@480 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@144 $generated@@584 ($generated@@479 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@267 $generated@@157)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@266 $generated@@588))) (< ($generated@@518 ($generated@@324 $generated@@148 ($generated@@480 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@518 ($generated@@324 $generated@@148 ($generated@@480 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@287 $generated@@157 $generated@@157)) (= (type $generated@@591) $generated@@69)) (= (type $generated@@592) $generated@@69)) ($generated@@144 $generated@@590 ($generated@@397 $generated@@591 $generated@@592))) (and (and ($generated@@144 ($generated@@285 $generated@@590) ($generated@@236 $generated@@591)) ($generated@@144 ($generated@@335 $generated@@590) ($generated@@236 $generated@@592))) ($generated@@144 ($generated@@371 $generated@@590) ($generated@@236 ($generated@@147 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@144 $generated@@590 ($generated@@397 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@305 $generated@@157 $generated@@157)) (= (type $generated@@594) $generated@@69)) (= (type $generated@@595) $generated@@69)) ($generated@@144 $generated@@593 ($generated@@405 $generated@@594 $generated@@595))) (and (and ($generated@@144 ($generated@@303 $generated@@593) ($generated@@241 $generated@@594)) ($generated@@144 ($generated@@346 $generated@@593) ($generated@@241 $generated@@595))) ($generated@@144 ($generated@@379 $generated@@593) ($generated@@241 ($generated@@147 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@144 $generated@@593 ($generated@@405 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@144 $generated@@596 $generated@@46))
 :pattern ( ($generated@@144 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@144 $generated@@597 $generated@@47))
 :pattern ( ($generated@@144 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@144 $generated@@598 $generated@@44))
 :pattern ( ($generated@@144 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@437) ($generated@@144 $generated@@599 $generated@@45))
 :pattern ( ($generated@@144 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@157) ($generated@@144 $generated@@600 $generated@@48))
 :pattern ( ($generated@@144 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(assert  (and (and (= (type $generated@@601) $generated@@82) (= (type $generated@@603) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@604) ($generated@@169 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@606 true))
(let (($generated@@607  (=> (<= ($generated@@246 0) ($generated@@357 $generated@@601 $generated@@602)) (=> (and ($generated@@79 $generated@@601 $generated@@140 $generated@@603) ($generated@@79 ($generated@@8 $generated@@602) $generated@@137 $generated@@603)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@602) (= $generated@@602 $generated@@602))) (=> (or (<= 0 $generated@@602) (= $generated@@602 $generated@@602)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@601 $generated@@601) (= $generated@@602 $generated@@602)) (< $generated@@602 $generated@@602)))))))))
(let (($generated@@608  (=> (= $generated@@604 ($generated@@168 $generated@@141 $generated@@603 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@607) (=> (= (ControlFlow 0 5) 4) $generated@@606)))))
(let (($generated@@609  (=> (and ($generated@@252 $generated@@603) ($generated@@605 $generated@@603)) (=> (and (and (and (not (= $generated@@601 $generated@@141)) (and ($generated@@144 $generated@@601 $generated@@223) ($generated@@79 $generated@@601 $generated@@223 $generated@@603))) (<= ($generated@@246 0) $generated@@602)) (and (= 2 $generated@@356) (= (ControlFlow 0 6) 5))) $generated@@608))))
$generated@@609)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@318 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@349 () Int)
(declare-fun $generated@@350 (T@U Int) Int)
(declare-fun $generated@@351 (T@U Int) Bool)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U Int) T@U)
(declare-fun $generated@@482 (T@U) Int)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Bool)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@152)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@247 $generated@@253)) (= ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@251 $generated@@252) ($generated@@142 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@71)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@143) (= ($generated@@141 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@143) ($generated@@141 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@152) (= (type $generated@@259) $generated@@152)) (= $generated@@257 ($generated@@221 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@152)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@67) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@77 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@79 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@82 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@79 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@84 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@79 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@84 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@82 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@79 $generated@@316 $generated@@2)) (= ($generated@@158 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@84 $generated@@315 $generated@@317))) (<= ($generated ($generated@@84 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@84 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@158 $generated@@315))
)))
(assert (forall (($generated@@319 T@T) ($generated@@320 T@U) ) (! (= (type ($generated@@318 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@318 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@152) ($generated@@222 $generated@@321 $generated@@135)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@321)) $generated@@321) ($generated@@139 ($generated@@318 $generated@@80 $generated@@321) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@321 $generated@@135))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@222 $generated@@322 $generated@@218)) (and (= ($generated@@268 ($generated@@318 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@318 $generated@@80 $generated@@322) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@322 $generated@@218))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@80) (= ($generated@@139 $generated@@323 $generated@@218)  (and ($generated@@139 $generated@@323 $generated@@135) (not (= $generated@@323 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@323 $generated@@218))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@283 (type $generated@@324))))
(let (($generated@@326 ($generated@@282 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@281 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@280 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@279 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@283 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@79 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@283 (type $generated@@331))))
(let (($generated@@333 ($generated@@282 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@281 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@280 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@301 (type $generated@@335))))
(let (($generated@@337 ($generated@@300 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@299 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@298 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@297 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@79 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@301 (type $generated@@342))))
(let (($generated@@344 ($generated@@300 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@299 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@298 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@84 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@347) $generated@@67)) (= ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@346 $generated@@348)))) ($generated@@222 $generated@@348 $generated@@347))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@139 $generated@@346 ($generated@@157 $generated@@347)))
)))
(assert  (=> (<= 2 $generated@@349) (forall (($generated@@352 T@U) ($generated@@353 Int) ) (!  (=> (and (= (type $generated@@352) $generated@@80) (or ($generated@@351 $generated@@352 $generated@@353) (and (not (= 2 $generated@@349)) (and (and (not (= $generated@@352 $generated@@136)) ($generated@@139 $generated@@352 $generated@@218)) (<= ($generated@@241 0) $generated@@353))))) (and (< ($generated@@350 $generated@@352 $generated@@353) (+ 10 $generated@@353)) (<= ($generated@@241 0) ($generated@@350 $generated@@352 $generated@@353))))
 :pattern ( ($generated@@350 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@355) $generated@@67)) (= (type $generated@@356) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@354 ($generated@@231 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@152) ($generated@@0 ($generated@@84 $generated@@354 $generated@@357))) ($generated@@248 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@84 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@77 $generated@@354 ($generated@@231 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@359) $generated@@67)) (= (type $generated@@360) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@358 ($generated@@236 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@152) ($generated@@0 ($generated@@84 $generated@@358 $generated@@361))) ($generated@@248 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@84 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@77 $generated@@358 ($generated@@236 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@84 ($generated@@274 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@84 ($generated@@274 $generated@@363) $generated@@362)))
)))
(assert  (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@364 $generated@@366))
)) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@283 (type $generated@@367))))
(let (($generated@@369 ($generated@@282 (type $generated@@367))))
(= (type ($generated@@365 $generated@@367)) ($generated@@79 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@365 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@371) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@364 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@370) ($generated@@150 ($generated@@318 $generated@@143 $generated@@371)))) (= ($generated@@84 ($generated@@365 $generated@@370) ($generated@@150 ($generated@@318 $generated@@143 $generated@@371))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@371))))))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@301 (type $generated@@375))))
(let (($generated@@377 ($generated@@300 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@379) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@378) ($generated@@150 ($generated@@318 $generated@@143 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@150 ($generated@@318 $generated@@143 $generated@@379))) ($generated@@151 ($generated@@318 $generated@@143 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@282 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@281 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@84 ($generated@@328 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@84 ($generated@@279 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@84 ($generated@@365 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@380) $generated@@384))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@300 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@299 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@84 ($generated@@339 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@84 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@385) $generated@@389))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@84 ($generated@@339 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@67)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@394) $generated@@67)) (= (type $generated@@395) $generated@@67)) (= (type $generated@@396) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@393) $generated@@397))) (and ($generated@@248 ($generated@@84 ($generated@@365 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@248 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@77 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@401) $generated@@405))) (and ($generated@@248 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@248 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@79 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@301 (type $generated@@408))))
(let (($generated@@410 ($generated@@300 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@299 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@298 $generated@@410 $generated@@409)) (= ($generated@@297 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@297 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@301 (type $generated@@411))))
(let (($generated@@413 ($generated@@300 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@299 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@298 $generated@@413 $generated@@412)) (= ($generated@@339 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@339 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@301 (type $generated@@414))))
(let (($generated@@416 ($generated@@300 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@299 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@298 $generated@@416 $generated@@415)) (= ($generated@@372 $generated@@414) ($generated@@406 $generated@@152))))))
 :pattern ( ($generated@@372 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@283 (type $generated@@417))))
(let (($generated@@419 ($generated@@282 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@281 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@280 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@152) (= (type $generated@@421) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@364 $generated@@417) ($generated@@268 ($generated@@221 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@364 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@301 (type $generated@@422))))
(let (($generated@@424 ($generated@@300 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@299 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@298 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@152) (= (type $generated@@426) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@422) ($generated@@268 ($generated@@221 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@372 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@46)) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@318 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@152) ($generated@@222 $generated@@428 $generated@@47)) (and (= ($generated@@268 ($generated@@318 $generated@@3 $generated@@428)) $generated@@428) ($generated@@139 ($generated@@318 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@44)) (and (= ($generated@@268 ($generated@@318 $generated@@4 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@318 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 20))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@152) ($generated@@222 $generated@@431 $generated@@45)) (and (= ($generated@@268 ($generated@@318 $generated@@430 $generated@@431)) $generated@@431) ($generated@@139 ($generated@@318 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (= (type $generated@@433) $generated@@67) (= ($generated@@222 ($generated@@268 $generated@@432) $generated@@433) ($generated@@139 $generated@@432 $generated@@433)))
 :pattern ( ($generated@@222 ($generated@@268 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@82 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@79 $generated@@435 $generated@@2)) (<= 0 ($generated@@273 $generated@@434))))
 :pattern ( ($generated@@273 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@263 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@262 $generated@@437)) (<= 0 ($generated@@261 $generated@@436))))
 :pattern ( ($generated@@261 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@67) (= (type $generated@@441) $generated@@67)) (= ($generated@@438 ($generated@@390 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@390 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@390 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@390 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@75 ($generated@@390 $generated@@446 $generated@@447)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@398 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@398 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@452 ($generated@@398 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@456 $generated@@457)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@152) (= (type $generated@@459) $generated@@152)) (= ($generated@@254 ($generated@@221 $generated@@458 $generated@@459)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@460 ($generated@@142 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@142 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@142 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@142 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@152) (= (type $generated@@471) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@221 $generated@@470 $generated@@471))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ($generated@@476 Int) ) (! (let (($generated@@477 ($generated@@263 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475 $generated@@476)) $generated@@477))
 :pattern ( ($generated@@473 $generated@@475 $generated@@476))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@262 $generated@@152)) (= (type $generated@@479) $generated@@67)) (= (type $generated@@480) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@478 ($generated@@472 $generated@@479) $generated@@480) (forall (($generated@@481 Int) ) (!  (=> (and (<= 0 $generated@@481) (< $generated@@481 ($generated@@261 $generated@@478))) ($generated@@248 ($generated@@473 $generated@@478 $generated@@481) $generated@@479 $generated@@480))
 :pattern ( ($generated@@473 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@77 $generated@@478 ($generated@@472 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@483 Int) ) (! (= ($generated@@482 ($generated@@78 $generated@@483)) $generated@@483)
 :pattern ( ($generated@@78 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@484 ($generated@@231 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@231 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@487)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@488 ($generated@@236 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@236 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@491)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@492 ($generated@@157 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@157 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@495)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@496 ($generated@@472 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@472 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@75 ($generated@@472 $generated@@499)) $generated@@57))
 :pattern ( ($generated@@472 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated@@318 $generated@@501 ($generated@@268 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@268 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@503) $generated@@67)) (= (type $generated@@504) $generated@@67)) (= ($generated@@139 $generated@@502 ($generated@@390 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@279 $generated@@502) $generated@@505))) (and ($generated@@222 ($generated@@84 ($generated@@365 $generated@@502) $generated@@505) $generated@@504) ($generated@@222 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@502) $generated@@505))
 :pattern ( ($generated@@84 ($generated@@279 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@139 $generated@@502 ($generated@@390 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@139 $generated@@506 ($generated@@398 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@506) $generated@@509))) (and ($generated@@222 ($generated@@84 ($generated@@373 $generated@@506) $generated@@509) $generated@@508) ($generated@@222 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@506) $generated@@509))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@139 $generated@@506 ($generated@@398 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@510 $generated@@512) ($generated@@511 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@152)) (< ($generated@@510 $generated@@515) ($generated@@511 ($generated@@221 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@221 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@152) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) ($generated@@222 $generated@@516 ($generated@@390 $generated@@517 $generated@@518))) (and (= ($generated@@268 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@516)) $generated@@516) ($generated@@139 ($generated@@318 ($generated@@281 $generated@@152 $generated@@152) $generated@@516) ($generated@@390 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@222 $generated@@516 ($generated@@390 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@152) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) ($generated@@222 $generated@@519 ($generated@@398 $generated@@520 $generated@@521))) (and (= ($generated@@268 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@519)) $generated@@519) ($generated@@139 ($generated@@318 ($generated@@299 $generated@@152 $generated@@152) $generated@@519) ($generated@@398 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@67) (= (type $generated@@523) $generated@@67)) (= (type $generated@@524) $generated@@152)) ($generated@@222 $generated@@524 ($generated@@142 $generated@@522 $generated@@523))) (and (= ($generated@@268 ($generated@@318 $generated@@143 $generated@@524)) $generated@@524) ($generated@@139 ($generated@@318 $generated@@143 $generated@@524) ($generated@@142 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@222 $generated@@524 ($generated@@142 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (not ($generated@@0 ($generated@@84 ($generated@@406 $generated@@526) $generated@@525))))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@84 ($generated@@406 $generated@@526) $generated@@525)))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@72)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@67) (= (type $generated@@530) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@142 $generated@@529 $generated@@530)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@143) (= ($generated@@510 ($generated@@268 $generated@@531)) ($generated@@511 $generated@@531)))
 :pattern ( ($generated@@510 ($generated@@268 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@152) ($generated@@222 $generated@@532 ($generated@@78 0))) (and (= ($generated@@268 ($generated@@318 $generated@@2 $generated@@532)) $generated@@532) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@532) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@532 ($generated@@78 0)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@222 $generated@@533 ($generated@@231 $generated@@534))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@231 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@236 $generated@@536))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@4) $generated@@535) ($generated@@236 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@236 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@157 $generated@@538))) (and (= ($generated@@268 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@318 ($generated@@79 $generated@@152 $generated@@2) $generated@@537) ($generated@@157 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@157 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@152) (= (type $generated@@540) $generated@@67)) ($generated@@222 $generated@@539 ($generated@@472 $generated@@540))) (and (= ($generated@@268 ($generated@@318 ($generated@@262 $generated@@152) $generated@@539)) $generated@@539) ($generated@@139 ($generated@@318 ($generated@@262 $generated@@152) $generated@@539) ($generated@@472 $generated@@540))))
 :pattern ( ($generated@@222 $generated@@539 ($generated@@472 $generated@@540)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@527 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@527 $generated@@218) $generated@@66))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@541 ($generated@@157 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@541 $generated@@544)))) ($generated@@248 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@84 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@77 $generated@@541 ($generated@@157 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@80) (= ($generated@@139 $generated@@548 $generated@@135)  (or (= $generated@@548 $generated@@136) ($generated@@545 ($generated@@546 $generated@@548)))))
 :pattern ( ($generated@@139 $generated@@548 $generated@@135))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@143) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@551) (and ($generated@@141 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@67) ($generated@@77 $generated@@549 ($generated@@142 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@77 $generated@@549 ($generated@@142 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@248 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@248 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@143) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@247 $generated@@555) (and ($generated@@141 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@67) ($generated@@77 $generated@@553 ($generated@@142 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@77 $generated@@553 ($generated@@142 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@248 ($generated@@151 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@248 ($generated@@151 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@152) (= (type $generated@@558) $generated@@152)) (= ($generated@@221 ($generated@@243 $generated@@557) ($generated@@243 $generated@@558)) ($generated@@243 ($generated@@221 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@221 ($generated@@243 $generated@@557) ($generated@@243 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@559))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@560)) ($generated@@243 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@263 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@262 $generated@@562)) (= ($generated@@261 $generated@@561) 0)) (= $generated@@561 ($generated@@260 $generated@@562))))
 :pattern ( ($generated@@261 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@79 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@273 ($generated@@85 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@273 $generated@@563) ($generated ($generated@@84 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@273 ($generated@@85 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@2)) ($generated@@77 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@3)) ($generated@@77 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@4)) ($generated@@77 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@430)) ($generated@@77 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@152)) ($generated@@77 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@262 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= ($generated@@139 $generated@@577 ($generated@@472 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@261 $generated@@577))) ($generated@@222 ($generated@@473 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@473 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@472 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@262 $generated@@152)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@261 $generated@@581))) (< ($generated@@511 ($generated@@318 $generated@@143 ($generated@@473 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@511 ($generated@@318 $generated@@143 ($generated@@473 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@281 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@390 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@279 $generated@@583) ($generated@@231 $generated@@584)) ($generated@@139 ($generated@@328 $generated@@583) ($generated@@231 $generated@@585))) ($generated@@139 ($generated@@364 $generated@@583) ($generated@@231 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@390 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) $generated@@67)) ($generated@@139 $generated@@586 ($generated@@398 $generated@@587 $generated@@588))) (and (and ($generated@@139 ($generated@@297 $generated@@586) ($generated@@236 $generated@@587)) ($generated@@139 ($generated@@339 $generated@@586) ($generated@@236 $generated@@588))) ($generated@@139 ($generated@@372 $generated@@586) ($generated@@236 ($generated@@142 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@139 $generated@@586 ($generated@@398 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@139 $generated@@589 $generated@@46))
 :pattern ( ($generated@@139 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@139 $generated@@590 $generated@@47))
 :pattern ( ($generated@@139 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@139 $generated@@591 $generated@@44))
 :pattern ( ($generated@@139 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@430) ($generated@@139 $generated@@592 $generated@@45))
 :pattern ( ($generated@@139 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@152) ($generated@@139 $generated@@593 $generated@@48))
 :pattern ( ($generated@@139 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 5 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 5 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 8 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 5 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@635) $generated@@85) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4))) (= (type $generated@@639) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@641  (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@151 $generated@@635 $generated@@636) (+ 8 $generated@@636)))))
(let (($generated@@642  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140) (=> (= ($generated@@151 $generated@@635 $generated@@636) (+ 5 $generated@@636)) (=> (and ($generated@@153 ($generated@@8 ($generated@@151 $generated@@635 $generated@@636)) $generated@@140) (= (ControlFlow 0 6) 5)) $generated@@641)))))))
(let (($generated@@643  (=> (<= ($generated@@155 0) ($generated@@151 $generated@@635 $generated@@636)) (=> (and ($generated@@82 $generated@@635 $generated@@147 $generated@@638) ($generated@@82 ($generated@@8 $generated@@636) $generated@@140 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636))) (=> (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@635 $generated@@635) (= $generated@@636 $generated@@636)) (< $generated@@636 $generated@@636)))))))))
(let (($generated@@644  (=> (= $generated@@639 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@643) (=> (= (ControlFlow 0 8) 6) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@283 $generated@@638) ($generated@@640 $generated@@638)) (=> (and (and (and (not (= $generated@@635 $generated@@144)) (and ($generated@@153 $generated@@635 $generated@@154) ($generated@@82 $generated@@635 $generated@@154 $generated@@638))) (<= ($generated@@155 0) $generated@@636)) (and (= 1 $generated@@150) (= (ControlFlow 0 9) 8))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 5 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 5 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 8 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 5 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@628 T@T) )  (=> false false))) (=> (forall (($generated@@629 T@T) )  (=> false false)) (=> (< ($generated@@146 $generated@@625 $generated@@622) (+ 8 $generated@@622)) (=> (and (= ($generated@@146 $generated@@625 $generated@@622) ($generated@@375 $generated@@625 $generated@@622)) (= (ControlFlow 0 2) (- 0 1))) (< ($generated@@375 $generated@@625 $generated@@622) (+ 10 $generated@@622)))))))))))
(let (($generated@@630  (=> (and ($generated@@266 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and (and (not (= $generated@@625 $generated@@139)) (and ($generated@@148 $generated@@625 $generated@@149) ($generated@@80 $generated@@625 $generated@@149 $generated@@624))) (<= ($generated@@150 0) $generated@@622)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@630)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 5 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 5 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 8 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 5 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@639) $generated@@85)) (= (type $generated@@640) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@642  (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@635 (+ 8 $generated@@636)))))
(let (($generated@@643  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140) (=> (and (and (= ($generated@@151 $generated@@639 $generated@@636) (+ 5 $generated@@636)) ($generated@@153 ($generated@@8 ($generated@@151 $generated@@639 $generated@@636)) $generated@@140)) (and (= ($generated@@151 $generated@@639 $generated@@636) $generated@@635) (= (ControlFlow 0 4) 3))) $generated@@642))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@640 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@644) (=> (= (ControlFlow 0 6) 4) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@283 $generated@@638) ($generated@@641 $generated@@638)) (and (not (= $generated@@639 $generated@@144)) (and ($generated@@153 $generated@@639 $generated@@154) ($generated@@82 $generated@@639 $generated@@154 $generated@@638)))) (and (and (<= ($generated@@155 0) $generated@@636) (<= ($generated@@155 0) $generated@@635)) (and (= 1 $generated@@150) (= (ControlFlow 0 7) 6)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 5 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 5 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 8 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 5 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< $generated@@625 (+ 8 $generated@@622)) (= ($generated@@146 $generated@@626 $generated@@622) ($generated@@375 $generated@@626 $generated@@622))) (and (= ($generated@@146 $generated@@626 $generated@@622) $generated@@625) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@625 (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@626 $generated@@139)) (and ($generated@@148 $generated@@626 $generated@@149) ($generated@@80 $generated@@626 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@625)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 5 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 5 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 8 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 5 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@639) $generated@@85)) (= (type $generated@@640) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@642  (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@635 (+ 8 $generated@@636)))))
(let (($generated@@643  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140) (=> (and (and (= ($generated@@151 $generated@@639 $generated@@636) (+ 5 $generated@@636)) ($generated@@153 ($generated@@8 ($generated@@151 $generated@@639 $generated@@636)) $generated@@140)) (and (= ($generated@@151 $generated@@639 $generated@@636) $generated@@635) (= (ControlFlow 0 4) 3))) $generated@@642))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@640 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@644) (=> (= (ControlFlow 0 6) 4) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@283 $generated@@638) ($generated@@641 $generated@@638)) (and (not (= $generated@@639 $generated@@144)) (and ($generated@@153 $generated@@639 $generated@@154) ($generated@@82 $generated@@639 $generated@@154 $generated@@638)))) (and (and (<= ($generated@@155 0) $generated@@636) (<= ($generated@@155 0) $generated@@635)) (and (= 1 $generated@@150) (= (ControlFlow 0 7) 6)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 5 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 5 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 8 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 5 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< $generated@@625 (+ 8 $generated@@622)) (= ($generated@@146 $generated@@626 $generated@@622) ($generated@@375 $generated@@626 $generated@@622))) (and (= ($generated@@146 $generated@@626 $generated@@622) $generated@@625) (= (ControlFlow 0 2) (- 0 1)))) (< ($generated@@375 $generated@@626 $generated@@622) (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@626 $generated@@139)) (and ($generated@@148 $generated@@626 $generated@@149) ($generated@@80 $generated@@626 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@625)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 5 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 5 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 8 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 5 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@635) $generated@@85) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4))) (= (type $generated@@639) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@641  (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@151 $generated@@635 $generated@@636) (+ 8 $generated@@636)))))
(let (($generated@@642  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140) (=> (= ($generated@@151 $generated@@635 $generated@@636) (+ 5 $generated@@636)) (=> (and ($generated@@153 ($generated@@8 ($generated@@151 $generated@@635 $generated@@636)) $generated@@140) (= (ControlFlow 0 6) 5)) $generated@@641)))))))
(let (($generated@@643  (=> (<= ($generated@@155 0) ($generated@@151 $generated@@635 $generated@@636)) (=> (and ($generated@@82 $generated@@635 $generated@@147 $generated@@638) ($generated@@82 ($generated@@8 $generated@@636) $generated@@140 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636))) (=> (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@635 $generated@@635) (= $generated@@636 $generated@@636)) (< $generated@@636 $generated@@636)))))))))
(let (($generated@@644  (=> (= $generated@@639 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@643) (=> (= (ControlFlow 0 8) 6) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@283 $generated@@638) ($generated@@640 $generated@@638)) (=> (and (and (and (not (= $generated@@635 $generated@@144)) (and ($generated@@153 $generated@@635 $generated@@154) ($generated@@82 $generated@@635 $generated@@154 $generated@@638))) (<= ($generated@@155 0) $generated@@636)) (and (= 1 $generated@@150) (= (ControlFlow 0 9) 8))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 5 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 5 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 8 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 5 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< ($generated@@146 $generated@@625 $generated@@622) (+ 8 $generated@@622)) (= ($generated@@146 $generated@@625 $generated@@622) ($generated@@375 $generated@@625 $generated@@622))) (and (= ($generated@@146 $generated@@625 $generated@@622) $generated@@626) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@626 (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@625 $generated@@139)) (and ($generated@@148 $generated@@625 $generated@@149) ($generated@@80 $generated@@625 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@626)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 11 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 11 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 20 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 11 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@635) $generated@@85) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4))) (= (type $generated@@639) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@641  (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@151 $generated@@635 $generated@@636) (+ 20 $generated@@636)))))
(let (($generated@@642  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@153 ($generated@@8 (+ 11 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 11 $generated@@636)) $generated@@140) (=> (= ($generated@@151 $generated@@635 $generated@@636) (+ 11 $generated@@636)) (=> (and ($generated@@153 ($generated@@8 ($generated@@151 $generated@@635 $generated@@636)) $generated@@140) (= (ControlFlow 0 6) 5)) $generated@@641)))))))
(let (($generated@@643  (=> (<= ($generated@@155 0) ($generated@@151 $generated@@635 $generated@@636)) (=> (and ($generated@@82 $generated@@635 $generated@@147 $generated@@638) ($generated@@82 ($generated@@8 $generated@@636) $generated@@140 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636))) (=> (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@635 $generated@@635) (= $generated@@636 $generated@@636)) (< $generated@@636 $generated@@636)))))))))
(let (($generated@@644  (=> (= $generated@@639 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@643) (=> (= (ControlFlow 0 8) 6) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@283 $generated@@638) ($generated@@640 $generated@@638)) (=> (and (and (and (not (= $generated@@635 $generated@@144)) (and ($generated@@153 $generated@@635 $generated@@154) ($generated@@82 $generated@@635 $generated@@154 $generated@@638))) (<= ($generated@@155 0) $generated@@636)) (and (= 1 $generated@@150) (= (ControlFlow 0 9) 8))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 11 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 11 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 20 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 11 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@628 T@T) )  (=> false false))) (=> (forall (($generated@@629 T@T) )  (=> false false)) (=> (< ($generated@@146 $generated@@625 $generated@@622) (+ 20 $generated@@622)) (=> (and (= ($generated@@146 $generated@@625 $generated@@622) ($generated@@375 $generated@@625 $generated@@622)) (= (ControlFlow 0 2) (- 0 1))) (< ($generated@@375 $generated@@625 $generated@@622) (+ 10 $generated@@622)))))))))))
(let (($generated@@630  (=> (and ($generated@@266 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and (and (not (= $generated@@625 $generated@@139)) (and ($generated@@148 $generated@@625 $generated@@149) ($generated@@80 $generated@@625 $generated@@149 $generated@@624))) (<= ($generated@@150 0) $generated@@622)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@630)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 11 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 11 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 20 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 11 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@639) $generated@@85)) (= (type $generated@@640) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@642  (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@635 (+ 20 $generated@@636)))))
(let (($generated@@643  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@153 ($generated@@8 (+ 11 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 11 $generated@@636)) $generated@@140) (=> (and (and (= ($generated@@151 $generated@@639 $generated@@636) (+ 11 $generated@@636)) ($generated@@153 ($generated@@8 ($generated@@151 $generated@@639 $generated@@636)) $generated@@140)) (and (= ($generated@@151 $generated@@639 $generated@@636) $generated@@635) (= (ControlFlow 0 4) 3))) $generated@@642))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@640 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@644) (=> (= (ControlFlow 0 6) 4) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@283 $generated@@638) ($generated@@641 $generated@@638)) (and (not (= $generated@@639 $generated@@144)) (and ($generated@@153 $generated@@639 $generated@@154) ($generated@@82 $generated@@639 $generated@@154 $generated@@638)))) (and (and (<= ($generated@@155 0) $generated@@636) (<= ($generated@@155 0) $generated@@635)) (and (= 1 $generated@@150) (= (ControlFlow 0 7) 6)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 11 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 11 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 20 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 11 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< $generated@@625 (+ 20 $generated@@622)) (= ($generated@@146 $generated@@626 $generated@@622) ($generated@@375 $generated@@626 $generated@@622))) (and (= ($generated@@146 $generated@@626 $generated@@622) $generated@@625) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@625 (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@626 $generated@@139)) (and ($generated@@148 $generated@@626 $generated@@149) ($generated@@80 $generated@@626 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@625)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 11 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 11 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 20 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 11 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@639) $generated@@85)) (= (type $generated@@640) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@642  (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@635 (+ 20 $generated@@636)))))
(let (($generated@@643  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@153 ($generated@@8 (+ 11 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 11 $generated@@636)) $generated@@140) (=> (and (and (= ($generated@@151 $generated@@639 $generated@@636) (+ 11 $generated@@636)) ($generated@@153 ($generated@@8 ($generated@@151 $generated@@639 $generated@@636)) $generated@@140)) (and (= ($generated@@151 $generated@@639 $generated@@636) $generated@@635) (= (ControlFlow 0 4) 3))) $generated@@642))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@640 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@644) (=> (= (ControlFlow 0 6) 4) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@283 $generated@@638) ($generated@@641 $generated@@638)) (and (not (= $generated@@639 $generated@@144)) (and ($generated@@153 $generated@@639 $generated@@154) ($generated@@82 $generated@@639 $generated@@154 $generated@@638)))) (and (and (<= ($generated@@155 0) $generated@@636) (<= ($generated@@155 0) $generated@@635)) (and (= 1 $generated@@150) (= (ControlFlow 0 7) 6)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 11 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 11 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 20 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 11 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< $generated@@625 (+ 20 $generated@@622)) (= ($generated@@146 $generated@@626 $generated@@622) ($generated@@375 $generated@@626 $generated@@622))) (and (= ($generated@@146 $generated@@626 $generated@@622) $generated@@625) (= (ControlFlow 0 2) (- 0 1)))) (< ($generated@@375 $generated@@626 $generated@@622) (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@626 $generated@@139)) (and ($generated@@148 $generated@@626 $generated@@149) ($generated@@80 $generated@@626 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@625)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 11 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 11 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 20 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 11 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@635) $generated@@85) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4))) (= (type $generated@@639) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@641  (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@151 $generated@@635 $generated@@636) (+ 20 $generated@@636)))))
(let (($generated@@642  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@153 ($generated@@8 (+ 11 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 11 $generated@@636)) $generated@@140) (=> (= ($generated@@151 $generated@@635 $generated@@636) (+ 11 $generated@@636)) (=> (and ($generated@@153 ($generated@@8 ($generated@@151 $generated@@635 $generated@@636)) $generated@@140) (= (ControlFlow 0 6) 5)) $generated@@641)))))))
(let (($generated@@643  (=> (<= ($generated@@155 0) ($generated@@151 $generated@@635 $generated@@636)) (=> (and ($generated@@82 $generated@@635 $generated@@147 $generated@@638) ($generated@@82 ($generated@@8 $generated@@636) $generated@@140 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636))) (=> (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@635 $generated@@635) (= $generated@@636 $generated@@636)) (< $generated@@636 $generated@@636)))))))))
(let (($generated@@644  (=> (= $generated@@639 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@643) (=> (= (ControlFlow 0 8) 6) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@283 $generated@@638) ($generated@@640 $generated@@638)) (=> (and (and (and (not (= $generated@@635 $generated@@144)) (and ($generated@@153 $generated@@635 $generated@@154) ($generated@@82 $generated@@635 $generated@@154 $generated@@638))) (<= ($generated@@155 0) $generated@@636)) (and (= 1 $generated@@150) (= (ControlFlow 0 9) 8))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 11 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 11 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 20 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 11 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< ($generated@@146 $generated@@625 $generated@@622) (+ 20 $generated@@622)) (= ($generated@@146 $generated@@625 $generated@@622) ($generated@@375 $generated@@625 $generated@@622))) (and (= ($generated@@146 $generated@@625 $generated@@622) $generated@@626) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@626 (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@625 $generated@@139)) (and ($generated@@148 $generated@@625 $generated@@149) ($generated@@80 $generated@@625 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@626)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 5 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 5 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 20 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 5 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@635) $generated@@85) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4))) (= (type $generated@@639) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@641  (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@151 $generated@@635 $generated@@636) (+ 20 $generated@@636)))))
(let (($generated@@642  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140) (=> (= ($generated@@151 $generated@@635 $generated@@636) (+ 5 $generated@@636)) (=> (and ($generated@@153 ($generated@@8 ($generated@@151 $generated@@635 $generated@@636)) $generated@@140) (= (ControlFlow 0 6) 5)) $generated@@641)))))))
(let (($generated@@643  (=> (<= ($generated@@155 0) ($generated@@151 $generated@@635 $generated@@636)) (=> (and ($generated@@82 $generated@@635 $generated@@147 $generated@@638) ($generated@@82 ($generated@@8 $generated@@636) $generated@@140 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636))) (=> (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@635 $generated@@635) (= $generated@@636 $generated@@636)) (< $generated@@636 $generated@@636)))))))))
(let (($generated@@644  (=> (= $generated@@639 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@643) (=> (= (ControlFlow 0 8) 6) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@283 $generated@@638) ($generated@@640 $generated@@638)) (=> (and (and (and (not (= $generated@@635 $generated@@144)) (and ($generated@@153 $generated@@635 $generated@@154) ($generated@@82 $generated@@635 $generated@@154 $generated@@638))) (<= ($generated@@155 0) $generated@@636)) (and (= 1 $generated@@150) (= (ControlFlow 0 9) 8))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 5 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 5 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 20 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 5 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@628 T@T) )  (=> false false))) (=> (forall (($generated@@629 T@T) )  (=> false false)) (=> (< ($generated@@146 $generated@@625 $generated@@622) (+ 20 $generated@@622)) (=> (and (= ($generated@@146 $generated@@625 $generated@@622) ($generated@@375 $generated@@625 $generated@@622)) (= (ControlFlow 0 2) (- 0 1))) (< ($generated@@375 $generated@@625 $generated@@622) (+ 10 $generated@@622)))))))))))
(let (($generated@@630  (=> (and ($generated@@266 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and (and (not (= $generated@@625 $generated@@139)) (and ($generated@@148 $generated@@625 $generated@@149) ($generated@@80 $generated@@625 $generated@@149 $generated@@624))) (<= ($generated@@150 0) $generated@@622)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@630)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 5 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 5 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 20 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 5 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@639) $generated@@85)) (= (type $generated@@640) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@642  (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@635 (+ 20 $generated@@636)))))
(let (($generated@@643  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140) (=> (and (and (= ($generated@@151 $generated@@639 $generated@@636) (+ 5 $generated@@636)) ($generated@@153 ($generated@@8 ($generated@@151 $generated@@639 $generated@@636)) $generated@@140)) (and (= ($generated@@151 $generated@@639 $generated@@636) $generated@@635) (= (ControlFlow 0 4) 3))) $generated@@642))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@640 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@644) (=> (= (ControlFlow 0 6) 4) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@283 $generated@@638) ($generated@@641 $generated@@638)) (and (not (= $generated@@639 $generated@@144)) (and ($generated@@153 $generated@@639 $generated@@154) ($generated@@82 $generated@@639 $generated@@154 $generated@@638)))) (and (and (<= ($generated@@155 0) $generated@@636) (<= ($generated@@155 0) $generated@@635)) (and (= 1 $generated@@150) (= (ControlFlow 0 7) 6)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 5 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 5 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 20 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 5 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< $generated@@625 (+ 20 $generated@@622)) (= ($generated@@146 $generated@@626 $generated@@622) ($generated@@375 $generated@@626 $generated@@622))) (and (= ($generated@@146 $generated@@626 $generated@@622) $generated@@625) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@625 (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@626 $generated@@139)) (and ($generated@@148 $generated@@626 $generated@@149) ($generated@@80 $generated@@626 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@625)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 5 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 5 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 20 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 5 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@639) $generated@@85)) (= (type $generated@@640) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@642  (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@635 (+ 20 $generated@@636)))))
(let (($generated@@643  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140) (=> (and (and (= ($generated@@151 $generated@@639 $generated@@636) (+ 5 $generated@@636)) ($generated@@153 ($generated@@8 ($generated@@151 $generated@@639 $generated@@636)) $generated@@140)) (and (= ($generated@@151 $generated@@639 $generated@@636) $generated@@635) (= (ControlFlow 0 4) 3))) $generated@@642))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@640 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@644) (=> (= (ControlFlow 0 6) 4) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@283 $generated@@638) ($generated@@641 $generated@@638)) (and (not (= $generated@@639 $generated@@144)) (and ($generated@@153 $generated@@639 $generated@@154) ($generated@@82 $generated@@639 $generated@@154 $generated@@638)))) (and (and (<= ($generated@@155 0) $generated@@636) (<= ($generated@@155 0) $generated@@635)) (and (= 1 $generated@@150) (= (ControlFlow 0 7) 6)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 5 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 5 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 20 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 5 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< $generated@@625 (+ 20 $generated@@622)) (= ($generated@@146 $generated@@626 $generated@@622) ($generated@@375 $generated@@626 $generated@@622))) (and (= ($generated@@146 $generated@@626 $generated@@622) $generated@@625) (= (ControlFlow 0 2) (- 0 1)))) (< ($generated@@375 $generated@@626 $generated@@622) (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@626 $generated@@139)) (and ($generated@@148 $generated@@626 $generated@@149) ($generated@@80 $generated@@626 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@625)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 5 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 5 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 20 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 5 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@635) $generated@@85) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4))) (= (type $generated@@639) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@641  (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@151 $generated@@635 $generated@@636) (+ 20 $generated@@636)))))
(let (($generated@@642  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 5 $generated@@636)) $generated@@140) (=> (= ($generated@@151 $generated@@635 $generated@@636) (+ 5 $generated@@636)) (=> (and ($generated@@153 ($generated@@8 ($generated@@151 $generated@@635 $generated@@636)) $generated@@140) (= (ControlFlow 0 6) 5)) $generated@@641)))))))
(let (($generated@@643  (=> (<= ($generated@@155 0) ($generated@@151 $generated@@635 $generated@@636)) (=> (and ($generated@@82 $generated@@635 $generated@@147 $generated@@638) ($generated@@82 ($generated@@8 $generated@@636) $generated@@140 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636))) (=> (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@635 $generated@@635) (= $generated@@636 $generated@@636)) (< $generated@@636 $generated@@636)))))))))
(let (($generated@@644  (=> (= $generated@@639 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@643) (=> (= (ControlFlow 0 8) 6) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@283 $generated@@638) ($generated@@640 $generated@@638)) (=> (and (and (and (not (= $generated@@635 $generated@@144)) (and ($generated@@153 $generated@@635 $generated@@154) ($generated@@82 $generated@@635 $generated@@154 $generated@@638))) (<= ($generated@@155 0) $generated@@636)) (and (= 1 $generated@@150) (= (ControlFlow 0 9) 8))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 5 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 5 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 20 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 5 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< ($generated@@146 $generated@@625 $generated@@622) (+ 20 $generated@@622)) (= ($generated@@146 $generated@@625 $generated@@622) ($generated@@375 $generated@@625 $generated@@622))) (and (= ($generated@@146 $generated@@625 $generated@@622) $generated@@626) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@626 (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@625 $generated@@139)) (and ($generated@@148 $generated@@625 $generated@@149) ($generated@@80 $generated@@625 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@626)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 20 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 20 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 8 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 20 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@635) $generated@@85) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4))) (= (type $generated@@639) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@641  (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@151 $generated@@635 $generated@@636) (+ 8 $generated@@636)))))
(let (($generated@@642  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@153 ($generated@@8 (+ 20 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 20 $generated@@636)) $generated@@140) (=> (= ($generated@@151 $generated@@635 $generated@@636) (+ 20 $generated@@636)) (=> (and ($generated@@153 ($generated@@8 ($generated@@151 $generated@@635 $generated@@636)) $generated@@140) (= (ControlFlow 0 6) 5)) $generated@@641)))))))
(let (($generated@@643  (=> (<= ($generated@@155 0) ($generated@@151 $generated@@635 $generated@@636)) (=> (and ($generated@@82 $generated@@635 $generated@@147 $generated@@638) ($generated@@82 ($generated@@8 $generated@@636) $generated@@140 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636))) (=> (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@635 $generated@@635) (= $generated@@636 $generated@@636)) (< $generated@@636 $generated@@636)))))))))
(let (($generated@@644  (=> (= $generated@@639 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@643) (=> (= (ControlFlow 0 8) 6) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@283 $generated@@638) ($generated@@640 $generated@@638)) (=> (and (and (and (not (= $generated@@635 $generated@@144)) (and ($generated@@153 $generated@@635 $generated@@154) ($generated@@82 $generated@@635 $generated@@154 $generated@@638))) (<= ($generated@@155 0) $generated@@636)) (and (= 1 $generated@@150) (= (ControlFlow 0 9) 8))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 20 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 20 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 8 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 20 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@628 T@T) )  (=> false false))) (=> (forall (($generated@@629 T@T) )  (=> false false)) (=> (< ($generated@@146 $generated@@625 $generated@@622) (+ 8 $generated@@622)) (=> (and (= ($generated@@146 $generated@@625 $generated@@622) ($generated@@375 $generated@@625 $generated@@622)) (= (ControlFlow 0 2) (- 0 1))) (< ($generated@@375 $generated@@625 $generated@@622) (+ 10 $generated@@622)))))))))))
(let (($generated@@630  (=> (and ($generated@@266 $generated@@624) ($generated@@626 $generated@@624)) (=> (and (and (and (not (= $generated@@625 $generated@@139)) (and ($generated@@148 $generated@@625 $generated@@149) ($generated@@80 $generated@@625 $generated@@149 $generated@@624))) (<= ($generated@@150 0) $generated@@622)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2))) $generated@@627))))
$generated@@630)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 20 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 20 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 8 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 20 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@639) $generated@@85)) (= (type $generated@@640) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@642  (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@635 (+ 8 $generated@@636)))))
(let (($generated@@643  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@153 ($generated@@8 (+ 20 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 20 $generated@@636)) $generated@@140) (=> (and (and (= ($generated@@151 $generated@@639 $generated@@636) (+ 20 $generated@@636)) ($generated@@153 ($generated@@8 ($generated@@151 $generated@@639 $generated@@636)) $generated@@140)) (and (= ($generated@@151 $generated@@639 $generated@@636) $generated@@635) (= (ControlFlow 0 4) 3))) $generated@@642))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@640 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@644) (=> (= (ControlFlow 0 6) 4) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@283 $generated@@638) ($generated@@641 $generated@@638)) (and (not (= $generated@@639 $generated@@144)) (and ($generated@@153 $generated@@639 $generated@@154) ($generated@@82 $generated@@639 $generated@@154 $generated@@638)))) (and (and (<= ($generated@@155 0) $generated@@636) (<= ($generated@@155 0) $generated@@635)) (and (= 1 $generated@@150) (= (ControlFlow 0 7) 6)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 20 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 20 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 8 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 20 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< $generated@@625 (+ 8 $generated@@622)) (= ($generated@@146 $generated@@626 $generated@@622) ($generated@@375 $generated@@626 $generated@@622))) (and (= ($generated@@146 $generated@@626 $generated@@622) $generated@@625) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@625 (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@626 $generated@@139)) (and ($generated@@148 $generated@@626 $generated@@149) ($generated@@80 $generated@@626 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@625)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 20 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 20 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 8 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 20 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4)) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@639) $generated@@85)) (= (type $generated@@640) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@642  (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@635 (+ 8 $generated@@636)))))
(let (($generated@@643  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@153 ($generated@@8 (+ 20 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 20 $generated@@636)) $generated@@140) (=> (and (and (= ($generated@@151 $generated@@639 $generated@@636) (+ 20 $generated@@636)) ($generated@@153 ($generated@@8 ($generated@@151 $generated@@639 $generated@@636)) $generated@@140)) (and (= ($generated@@151 $generated@@639 $generated@@636) $generated@@635) (= (ControlFlow 0 4) 3))) $generated@@642))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@640 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@644) (=> (= (ControlFlow 0 6) 4) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@283 $generated@@638) ($generated@@641 $generated@@638)) (and (not (= $generated@@639 $generated@@144)) (and ($generated@@153 $generated@@639 $generated@@154) ($generated@@82 $generated@@639 $generated@@154 $generated@@638)))) (and (and (<= ($generated@@155 0) $generated@@636) (<= ($generated@@155 0) $generated@@635)) (and (= 1 $generated@@150) (= (ControlFlow 0 7) 6)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 20 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 20 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 8 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 20 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< $generated@@625 (+ 8 $generated@@622)) (= ($generated@@146 $generated@@626 $generated@@622) ($generated@@375 $generated@@626 $generated@@622))) (and (= ($generated@@146 $generated@@626 $generated@@622) $generated@@625) (= (ControlFlow 0 2) (- 0 1)))) (< ($generated@@375 $generated@@626 $generated@@622) (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@626 $generated@@139)) (and ($generated@@148 $generated@@626 $generated@@149) ($generated@@80 $generated@@626 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@625)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U Int) Int)
(declare-fun $generated@@152 (T@U Int) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (Int) Int)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (= (type $generated@@154) $generated@@72))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@85) (or ($generated@@152 $generated@@156 $generated@@157) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@156 $generated@@144)) ($generated@@153 $generated@@156 $generated@@154)) (<= ($generated@@155 0) $generated@@157))))) (= ($generated@@151 $generated@@156 $generated@@157) (+ 20 $generated@@157)))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@153 $generated@@158 ($generated@@83 0)))
 :pattern ( ($generated@@153 $generated@@158 ($generated@@83 0)))
)))
(assert ($generated@@159 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@162) 14) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@72) (= (type $generated@@166) $generated@@72)) (= (type $generated@@167) $generated@@162)) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@153 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (and (= ($generated@@1 $generated@@171) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@171)
 :pattern ( ($generated@@170 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@162) (= (type $generated@@175) $generated@@162)) true) (= ($generated@@168 $generated@@174 $generated@@175)  (and (= ($generated@@169 $generated@@174) ($generated@@169 $generated@@175)) (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)))))
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
)))
(assert (= (type $generated@@176) $generated@@72))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@85) (=> (and (not (= $generated@@177 $generated@@144)) ($generated@@153 $generated@@177 $generated@@147)) ($generated@@153 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@153 $generated@@177 $generated@@147))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@182) $generated@@72)) ($generated@@153 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@153 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@72)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@85) (= ($generated@@153 $generated@@185 $generated@@147)  (or (= $generated@@185 $generated@@144) (= ($generated@@183 $generated@@185) $generated@@147))))
 :pattern ( ($generated@@153 $generated@@185 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@75 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@85) (= (type $generated@@236) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@237) ($generated@@74 $generated@@4))) (= (type $generated@@239) $generated@@85)) (= (type $generated@@240) ($generated@@74 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@85 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@75 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@249) ($generated@@74 $generated@@4))) (= (type $generated@@251) $generated@@85)) (= (type $generated@@252) ($generated@@74 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@85) (= (type $generated@@255) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@254 $generated@@176 $generated@@255) ($generated@@82 $generated@@254 $generated@@143 $generated@@255)))
 :pattern ( ($generated@@82 $generated@@254 $generated@@176 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@85) (= (type $generated@@257) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@256 $generated@@154 $generated@@257) ($generated@@82 $generated@@256 $generated@@147 $generated@@257)))
 :pattern ( ($generated@@82 $generated@@256 $generated@@154 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@162)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@72) (= (type $generated@@263) $generated@@72)) (= (type $generated@@264) $generated@@171)) (= (type $generated@@265) $generated@@171)) (= ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@153 ($generated@@258 $generated@@264 $generated@@265) ($generated@@161 $generated@@262 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@162) (= (type $generated@@267) $generated@@162)) (= ($generated@@168 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@168 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@171) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@259 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@153 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@171) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@259 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@153 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@155 $generated@@278) $generated@@278)
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@171)) (= (type $generated@@288) $generated@@171)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@258 $generated@@287 $generated@@288) ($generated@@161 $generated@@285 $generated@@286) $generated@@289))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@290 T@U) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@290) $generated@@85) (or ($generated@@152 $generated@@290 ($generated@@155 $generated@@291)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@290 $generated@@144)) ($generated@@153 $generated@@290 $generated@@154)) (<= ($generated@@155 0) $generated@@291))))) (= ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)) ($generated@@155 (+ 20 $generated@@291))))
 :weight 3
 :pattern ( ($generated@@151 $generated@@290 ($generated@@155 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@76)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@162) (= ($generated@@160 $generated@@294) (= ($generated@@292 $generated@@294) $generated@@62)))
 :pattern ( ($generated@@160 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@162) ($generated@@160 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@171) (= (type $generated@@297) $generated@@171)) (= $generated@@295 ($generated@@258 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@160 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@2) (= ($generated@@153 $generated@@306 $generated@@140) (<= ($generated@@155 0) ($generated $generated@@306))))
 :pattern ( ($generated@@153 $generated@@306 $generated@@140))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@171)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@72) (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@82 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@84 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@87 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@84 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@89 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@84 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@89 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@84 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@89 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@87 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@84 $generated@@355 $generated@@2)) (= ($generated@@179 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@89 $generated@@354 $generated@@356))) (<= ($generated ($generated@@89 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@89 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@179 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@171) ($generated@@259 $generated@@360 $generated@@140)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@153 ($generated@@357 $generated@@2 $generated@@360) $generated@@140)))
 :pattern ( ($generated@@259 $generated@@360 $generated@@140))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@171) ($generated@@259 $generated@@361 $generated@@143)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@361)) $generated@@361) ($generated@@153 ($generated@@357 $generated@@85 $generated@@361) $generated@@143)))
 :pattern ( ($generated@@259 $generated@@361 $generated@@143))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@171) ($generated@@259 $generated@@362 $generated@@176)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@362)) $generated@@362) ($generated@@153 ($generated@@357 $generated@@85 $generated@@362) $generated@@176)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@176))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@171) ($generated@@259 $generated@@363 $generated@@147)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@363)) $generated@@363) ($generated@@153 ($generated@@357 $generated@@85 $generated@@363) $generated@@147)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@147))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@171) ($generated@@259 $generated@@364 $generated@@154)) (and (= ($generated@@307 ($generated@@357 $generated@@85 $generated@@364)) $generated@@364) ($generated@@153 ($generated@@357 $generated@@85 $generated@@364) $generated@@154)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@154))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@153 $generated@@365 $generated@@176)  (and ($generated@@153 $generated@@365 $generated@@143) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@365 $generated@@176))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@85) (= ($generated@@153 $generated@@366 $generated@@154)  (and ($generated@@153 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@153 $generated@@366 $generated@@154))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@322 (type $generated@@367))))
(let (($generated@@369 ($generated@@321 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@320 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@319 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@318 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@322 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@84 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@322 (type $generated@@374))))
(let (($generated@@376 ($generated@@321 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@320 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@319 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@89 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@340 (type $generated@@378))))
(let (($generated@@380 ($generated@@339 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@338 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@337 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@336 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@340 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@340 (type $generated@@385))))
(let (($generated@@387 ($generated@@339 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@338 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@337 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@89 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@390) $generated@@72)) (= ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@389 $generated@@391)))) ($generated@@259 $generated@@391 $generated@@390))
 :pattern ( ($generated@@89 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@153 $generated@@389 ($generated@@178 $generated@@390)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@392 T@U) ($generated@@393 Int) ) (!  (=> (and (= (type $generated@@392) $generated@@85) (or ($generated@@152 $generated@@392 $generated@@393) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@392 $generated@@144)) ($generated@@153 $generated@@392 $generated@@154)) (<= ($generated@@155 0) $generated@@393))))) (and (< ($generated@@151 $generated@@392 $generated@@393) (+ 8 $generated@@393)) (<= ($generated@@155 0) ($generated@@151 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@151 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@171) ($generated@@0 ($generated@@89 $generated@@394 $generated@@397))) ($generated@@284 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@89 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@82 $generated@@394 ($generated@@268 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@84 $generated@@171 $generated@@4)) (= (type $generated@@399) $generated@@72)) (= (type $generated@@400) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@171) ($generated@@0 ($generated@@89 $generated@@398 $generated@@401))) ($generated@@284 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@89 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@82 $generated@@398 ($generated@@273 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@89 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@89 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@84 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@411) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411)))) (= ($generated@@89 ($generated@@405 $generated@@410) ($generated@@169 ($generated@@357 $generated@@162 $generated@@411))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@411))))))
 :pattern ( ($generated@@89 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@84 $generated@@171 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@84 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@419) $generated@@171)) (= ($generated@@0 ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419)))) (= ($generated@@89 ($generated@@413 $generated@@418) ($generated@@169 ($generated@@357 $generated@@162 $generated@@419))) ($generated@@170 ($generated@@357 $generated@@162 $generated@@419))))))
 :pattern ( ($generated@@89 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@89 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@89 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@89 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@72)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@434) $generated@@72)) (= (type $generated@@435) $generated@@72)) (= (type $generated@@436) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@284 ($generated@@89 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@284 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@82 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@442) $generated@@72)) (= (type $generated@@443) $generated@@72)) (= (type $generated@@444) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@284 ($generated@@89 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@284 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@82 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@84 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@382 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@382 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@412 $generated@@454) ($generated@@446 $generated@@171))))))
 :pattern ( ($generated@@412 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@171) (= (type $generated@@461) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@404 $generated@@457) ($generated@@307 ($generated@@258 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@404 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@171) (= (type $generated@@466) $generated@@171)) ($generated@@0 ($generated@@89 ($generated@@412 $generated@@462) ($generated@@307 ($generated@@258 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@412 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@171) ($generated@@259 $generated@@467 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@153 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@171) ($generated@@259 $generated@@468 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@153 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@171) ($generated@@259 $generated@@469 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@153 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@171) ($generated@@259 $generated@@471 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@153 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@72) (= ($generated@@259 ($generated@@307 $generated@@472) $generated@@473) ($generated@@153 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@259 ($generated@@307 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@87 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@84 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@301 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@300 $generated@@477)) (<= 0 ($generated@@299 $generated@@476))))
 :pattern ( ($generated@@299 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@72)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@72) (= (type $generated@@481) $generated@@72)) (= ($generated@@478 ($generated@@430 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@430 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@72)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@72) (= (type $generated@@485) $generated@@72)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@80 ($generated@@430 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@72)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@72) (= (type $generated@@495) $generated@@72)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@80 ($generated@@438 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@171) (= (type $generated@@499) $generated@@171)) (= ($generated@@292 ($generated@@258 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@258 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@161 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@161 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@161 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@171) (= (type $generated@@509) $generated@@171)) (= ($generated@@169 ($generated@@258 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@258 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@171) (= (type $generated@@511) $generated@@171)) (= ($generated@@170 ($generated@@258 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@258 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@72)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@301 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@300 $generated@@171)) (= (type $generated@@519) $generated@@72)) (= (type $generated@@520) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@299 $generated@@518))) ($generated@@284 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@82 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@83 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@83 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@72)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@72) (= ($generated@@524 ($generated@@268 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@268 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@72)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@72) (= ($generated@@528 ($generated@@273 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@273 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@72) (= ($generated@@532 ($generated@@178 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@178 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@80 ($generated@@178 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@72) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@72) (= ($generated@@80 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@357 $generated@@541 ($generated@@307 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@307 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@543) $generated@@72)) (= (type $generated@@544) $generated@@72)) (= ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))) (and ($generated@@259 ($generated@@89 ($generated@@405 $generated@@542) $generated@@545) $generated@@544) ($generated@@259 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@89 ($generated@@405 $generated@@542) $generated@@545))
 :pattern ( ($generated@@89 ($generated@@318 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@153 $generated@@542 ($generated@@430 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@547) $generated@@72)) (= (type $generated@@548) $generated@@72)) (= ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@171) ($generated@@0 ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))) (and ($generated@@259 ($generated@@89 ($generated@@413 $generated@@546) $generated@@549) $generated@@548) ($generated@@259 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@89 ($generated@@413 $generated@@546) $generated@@549))
 :pattern ( ($generated@@89 ($generated@@336 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@438 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@171) (= (type $generated@@553) $generated@@171)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@258 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@258 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@171) (= (type $generated@@555) $generated@@171)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@258 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@258 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@171) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556)) $generated@@556) ($generated@@153 ($generated@@357 ($generated@@320 $generated@@171 $generated@@171) $generated@@556) ($generated@@430 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@259 $generated@@556 ($generated@@430 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@171) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@72)) ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559)) $generated@@559) ($generated@@153 ($generated@@357 ($generated@@338 $generated@@171 $generated@@171) $generated@@559) ($generated@@438 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@259 $generated@@559 ($generated@@438 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@72) (= (type $generated@@563) $generated@@72)) (= (type $generated@@564) $generated@@171)) ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563))) (and (= ($generated@@307 ($generated@@357 $generated@@162 $generated@@564)) $generated@@564) ($generated@@153 ($generated@@357 $generated@@162 $generated@@564) ($generated@@161 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@259 $generated@@564 ($generated@@161 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (!  (=> (and (= (type $generated@@565) $generated@@85) (or ($generated@@152 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) (and (not (= 1 $generated@@150)) (and (and (not (= $generated@@565 $generated@@144)) ($generated@@153 $generated@@565 $generated@@154)) (<= ($generated@@155 0) $generated@@566))))) (= ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)) ($generated@@155 (+ 20 $generated@@566))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@279 $generated@@565) ($generated@@155 $generated@@566)))
))))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@446 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@446 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@77)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (and (= ($generated@@80 ($generated@@161 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@161 $generated@@571 $generated@@572)) $generated@@69)))
 :pattern ( ($generated@@161 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@162) (= ($generated@@550 ($generated@@307 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@307 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@171) ($generated@@259 $generated@@574 ($generated@@83 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@574)) $generated@@574) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@574) ($generated@@83 0))))
 :pattern ( ($generated@@259 $generated@@574 ($generated@@83 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@171) (= (type $generated@@576) $generated@@72)) ($generated@@259 $generated@@575 ($generated@@268 $generated@@576))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575)) $generated@@575) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@575) ($generated@@268 $generated@@576))))
 :pattern ( ($generated@@259 $generated@@575 ($generated@@268 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@171) (= (type $generated@@578) $generated@@72)) ($generated@@259 $generated@@577 ($generated@@273 $generated@@578))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577)) $generated@@577) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@4) $generated@@577) ($generated@@273 $generated@@578))))
 :pattern ( ($generated@@259 $generated@@577 ($generated@@273 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@171) (= (type $generated@@580) $generated@@72)) ($generated@@259 $generated@@579 ($generated@@178 $generated@@580))) (and (= ($generated@@307 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579)) $generated@@579) ($generated@@153 ($generated@@357 ($generated@@84 $generated@@171 $generated@@2) $generated@@579) ($generated@@178 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@178 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@171) (= (type $generated@@582) $generated@@72)) ($generated@@259 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581)) $generated@@581) ($generated@@153 ($generated@@357 ($generated@@300 $generated@@171) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@85) (= (type $generated@@584) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@583 $generated@@144)) ($generated@@82 $generated@@583 $generated@@147 $generated@@584))) ($generated@@82 $generated@@583 $generated@@176 $generated@@584))
 :pattern ( ($generated@@82 $generated@@583 $generated@@147 $generated@@584))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@569 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@569 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@176) $generated@@65))
(assert (= ($generated@@569 $generated@@176) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@569 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@154) $generated@@67))
(assert (= ($generated@@569 $generated@@154) $generated@@71))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@84 $generated@@171 $generated@@2)) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@171) (< 0 ($generated ($generated@@89 $generated@@585 $generated@@588)))) ($generated@@284 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@89 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@178 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@85) (= ($generated@@153 $generated@@589 $generated@@143)  (or (= $generated@@589 $generated@@144) ($generated@@159 ($generated@@183 $generated@@589)))))
 :pattern ( ($generated@@153 $generated@@589 $generated@@143))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@72)) (= (type $generated@@592) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@592) (and ($generated@@160 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@72) ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@82 $generated@@590 ($generated@@161 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@284 ($generated@@169 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) (= (type $generated@@596) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@596) (and ($generated@@160 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@72) ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@82 $generated@@594 ($generated@@161 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@284 ($generated@@170 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@171) (= (type $generated@@599) $generated@@171)) (= ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)) ($generated@@279 ($generated@@258 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@258 ($generated@@279 $generated@@598) ($generated@@279 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))) ($generated@@279 ($generated@@307 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@155 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@307 ($generated@@279 $generated@@601)) ($generated@@279 ($generated@@307 $generated@@601)))
 :pattern ( ($generated@@307 ($generated@@279 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@301 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@300 $generated@@603)) (= ($generated@@299 $generated@@602) 0)) (= $generated@@602 ($generated@@298 $generated@@603))))
 :pattern ( ($generated@@299 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@84 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@312 $generated@@604) ($generated ($generated@@89 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@312 ($generated@@90 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@609) $generated@@2)) ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@82 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@3)) ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@82 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@613) $generated@@4)) ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@82 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@615) $generated@@470)) ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@82 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@617) $generated@@171)) ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@82 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@300 $generated@@171)) (= (type $generated@@619) $generated@@72)) (= ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@299 $generated@@618))) ($generated@@259 ($generated@@513 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@513 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@153 $generated@@618 ($generated@@512 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@300 $generated@@171)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@299 $generated@@622))) (< ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@551 ($generated@@357 $generated@@162 ($generated@@513 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@320 $generated@@171 $generated@@171)) (= (type $generated@@625) $generated@@72)) (= (type $generated@@626) $generated@@72)) ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626))) (and (and ($generated@@153 ($generated@@318 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@153 ($generated@@371 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@153 ($generated@@404 $generated@@624) ($generated@@268 ($generated@@161 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@153 $generated@@624 ($generated@@430 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@338 $generated@@171 $generated@@171)) (= (type $generated@@628) $generated@@72)) (= (type $generated@@629) $generated@@72)) ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629))) (and (and ($generated@@153 ($generated@@336 $generated@@627) ($generated@@273 $generated@@628)) ($generated@@153 ($generated@@382 $generated@@627) ($generated@@273 $generated@@629))) ($generated@@153 ($generated@@412 $generated@@627) ($generated@@273 ($generated@@161 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@153 $generated@@627 ($generated@@438 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@153 $generated@@630 $generated@@46))
 :pattern ( ($generated@@153 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@153 $generated@@631 $generated@@47))
 :pattern ( ($generated@@153 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@153 $generated@@632 $generated@@44))
 :pattern ( ($generated@@153 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@470) ($generated@@153 $generated@@633 $generated@@45))
 :pattern ( ($generated@@153 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@171) ($generated@@153 $generated@@634 $generated@@48))
 :pattern ( ($generated@@153 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@635) $generated@@85) (= (type $generated@@638) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@637) ($generated@@188 $generated@@85 $generated@@4))) (= (type $generated@@639) ($generated@@188 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@641  (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@151 $generated@@635 $generated@@636) (+ 8 $generated@@636)))))
(let (($generated@@642  (=> (= $generated@@637 ($generated@@242 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@153 ($generated@@8 (+ 20 $generated@@636)) $generated@@140)) (=> ($generated@@153 ($generated@@8 (+ 20 $generated@@636)) $generated@@140) (=> (= ($generated@@151 $generated@@635 $generated@@636) (+ 20 $generated@@636)) (=> (and ($generated@@153 ($generated@@8 ($generated@@151 $generated@@635 $generated@@636)) $generated@@140) (= (ControlFlow 0 6) 5)) $generated@@641)))))))
(let (($generated@@643  (=> (<= ($generated@@155 0) ($generated@@151 $generated@@635 $generated@@636)) (=> (and ($generated@@82 $generated@@635 $generated@@147 $generated@@638) ($generated@@82 ($generated@@8 $generated@@636) $generated@@140 $generated@@638)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636))) (=> (or (<= 0 $generated@@636) (= $generated@@636 $generated@@636)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@635 $generated@@635) (= $generated@@636 $generated@@636)) (< $generated@@636 $generated@@636)))))))))
(let (($generated@@644  (=> (= $generated@@639 ($generated@@187 $generated@@144 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@643) (=> (= (ControlFlow 0 8) 6) $generated@@642)))))
(let (($generated@@645  (=> (and ($generated@@283 $generated@@638) ($generated@@640 $generated@@638)) (=> (and (and (and (not (= $generated@@635 $generated@@144)) (and ($generated@@153 $generated@@635 $generated@@154) ($generated@@82 $generated@@635 $generated@@154 $generated@@638))) (<= ($generated@@155 0) $generated@@636)) (and (= 1 $generated@@150) (= (ControlFlow 0 9) 8))) $generated@@644))))
$generated@@645))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U Int) Int)
(declare-fun $generated@@147 (T@U Int) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 (Int) Int)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@375 (T@U Int) Int)
(declare-fun $generated@@376 (T@U Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (= (type $generated@@149) $generated@@70))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@147 $generated@@151 $generated@@152) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@151 $generated@@139)) ($generated@@148 $generated@@151 $generated@@149)) (<= ($generated@@150 0) $generated@@152))))) (= ($generated@@146 $generated@@151 $generated@@152) (+ 20 $generated@@152)))
 :pattern ( ($generated@@146 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@148 $generated@@153 ($generated@@81 0)))
 :pattern ( ($generated@@148 $generated@@153 ($generated@@81 0)))
)))
(assert ($generated@@154 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@157) 14) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@157)) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@148 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@83) (=> (and (not (= $generated@@172 $generated@@139)) ($generated@@148 $generated@@172 $generated@@142)) ($generated@@148 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@148 $generated@@172 $generated@@142))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@148 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@148 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@83) (= ($generated@@148 $generated@@180 $generated@@142)  (or (= $generated@@180 $generated@@139) (= ($generated@@178 $generated@@180) $generated@@142))))
 :pattern ( ($generated@@148 $generated@@180 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 16)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@83 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@83)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@171 $generated@@238) ($generated@@80 $generated@@237 $generated@@138 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@171 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@149 $generated@@240) ($generated@@80 $generated@@239 $generated@@142 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@149 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@157)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@166)) (= (type $generated@@248) $generated@@166)) (= ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@148 ($generated@@241 $generated@@247 $generated@@248) ($generated@@156 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@157) (= (type $generated@@250) $generated@@157)) (= ($generated@@163 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@163 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@254) $generated@@70)) (= ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@166) ($generated@@0 ($generated@@87 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@148 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@166) ($generated@@0 ($generated@@87 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@87 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@148 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@150 $generated@@261) $generated@@261)
 :pattern ( ($generated@@150 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@70) (= (type $generated@@269) $generated@@70)) (= (type $generated@@270) $generated@@166)) (= (type $generated@@271) $generated@@166)) (= (type $generated@@272) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@266 $generated@@272)) (= ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@80 ($generated@@241 $generated@@270 $generated@@271) ($generated@@156 $generated@@268 $generated@@269) $generated@@272))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@273 T@U) ($generated@@274 Int) ) (!  (=> (and (= (type $generated@@273) $generated@@83) (or ($generated@@147 $generated@@273 ($generated@@150 $generated@@274)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@273 $generated@@139)) ($generated@@148 $generated@@273 $generated@@149)) (<= ($generated@@150 0) $generated@@274))))) (= ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)) ($generated@@150 (+ 20 $generated@@274))))
 :weight 3
 :pattern ( ($generated@@146 $generated@@273 ($generated@@150 $generated@@274)))
))))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@157) (= ($generated@@155 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@155 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@166) (= (type $generated@@280) $generated@@166)) (= $generated@@278 ($generated@@241 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@155 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@166)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@70) (= (type $generated@@293) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@80 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@267 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@82 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@85 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@82 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@87 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@82 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@87 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@85 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@82 $generated@@337 $generated@@2)) (= ($generated@@174 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@87 $generated@@336 $generated@@338))) (<= ($generated ($generated@@87 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@87 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@174 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@166) ($generated@@242 $generated@@342 $generated@@138)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@342)) $generated@@342) ($generated@@148 ($generated@@339 $generated@@83 $generated@@342) $generated@@138)))
 :pattern ( ($generated@@242 $generated@@342 $generated@@138))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@242 $generated@@343 $generated@@171)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@343)) $generated@@343) ($generated@@148 ($generated@@339 $generated@@83 $generated@@343) $generated@@171)))
 :pattern ( ($generated@@242 $generated@@343 $generated@@171))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@166) ($generated@@242 $generated@@344 $generated@@142)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@344)) $generated@@344) ($generated@@148 ($generated@@339 $generated@@83 $generated@@344) $generated@@142)))
 :pattern ( ($generated@@242 $generated@@344 $generated@@142))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@166) ($generated@@242 $generated@@345 $generated@@149)) (and (= ($generated@@289 ($generated@@339 $generated@@83 $generated@@345)) $generated@@345) ($generated@@148 ($generated@@339 $generated@@83 $generated@@345) $generated@@149)))
 :pattern ( ($generated@@242 $generated@@345 $generated@@149))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@83) (= ($generated@@148 $generated@@346 $generated@@171)  (and ($generated@@148 $generated@@346 $generated@@138) (not (= $generated@@346 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@346 $generated@@171))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@148 $generated@@347 $generated@@149)  (and ($generated@@148 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@139)))))
 :pattern ( ($generated@@148 $generated@@347 $generated@@149))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@87 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@371) $generated@@70)) (= ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@370 $generated@@372)))) ($generated@@242 $generated@@372 $generated@@371))
 :pattern ( ($generated@@87 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@148 $generated@@370 ($generated@@173 $generated@@371)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@373 T@U) ($generated@@374 Int) ) (!  (=> (and (= (type $generated@@373) $generated@@83) (or ($generated@@147 $generated@@373 $generated@@374) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@373 $generated@@139)) ($generated@@148 $generated@@373 $generated@@149)) (<= ($generated@@150 0) $generated@@374))))) (and (< ($generated@@146 $generated@@373 $generated@@374) (+ 8 $generated@@374)) (<= ($generated@@150 0) ($generated@@146 $generated@@373 $generated@@374))))
 :pattern ( ($generated@@146 $generated@@373 $generated@@374))
))))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@377 T@U) ($generated@@378 Int) ) (!  (=> (and (= (type $generated@@377) $generated@@83) (or ($generated@@376 $generated@@377 $generated@@378) (and (not (= 2 $generated@@145)) (and (and (not (= $generated@@377 $generated@@139)) ($generated@@148 $generated@@377 $generated@@171)) (<= ($generated@@150 0) $generated@@378))))) (and (< ($generated@@375 $generated@@377 $generated@@378) (+ 10 $generated@@378)) (<= ($generated@@150 0) ($generated@@375 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@166) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@267 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@251 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@166 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@166) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@267 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@256 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@87 ($generated@@295 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@87 ($generated@@295 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@304 (type $generated@@392))))
(let (($generated@@394 ($generated@@303 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@82 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@396) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396)))) (= ($generated@@87 ($generated@@390 $generated@@395) ($generated@@164 ($generated@@339 $generated@@157 $generated@@396))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@396))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@166 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@322 (type $generated@@400))))
(let (($generated@@402 ($generated@@321 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@404) $generated@@166)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@164 ($generated@@339 $generated@@157 $generated@@404))) ($generated@@165 ($generated@@339 $generated@@157 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@300 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@321 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@320 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@87 ($generated@@363 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@410) $generated@@414))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@87 ($generated@@363 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@70)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@419) $generated@@70)) (= (type $generated@@420) $generated@@70)) (= (type $generated@@421) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))) (and ($generated@@267 ($generated@@87 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@267 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@80 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))) (and ($generated@@267 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@267 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@82 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@318 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@318 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@166))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@304 (type $generated@@442))))
(let (($generated@@444 ($generated@@303 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@302 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@301 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@166) (= (type $generated@@446) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@389 $generated@@442) ($generated@@289 ($generated@@241 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@322 (type $generated@@447))))
(let (($generated@@449 ($generated@@321 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@320 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@319 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@166) (= (type $generated@@451) $generated@@166)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@447) ($generated@@289 ($generated@@241 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) ($generated@@242 $generated@@452 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@339 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@166) ($generated@@242 $generated@@453 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@339 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) ($generated@@242 $generated@@454 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@454)) $generated@@454) ($generated@@148 ($generated@@339 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@166) ($generated@@242 $generated@@456 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@455 $generated@@456)) $generated@@456) ($generated@@148 ($generated@@339 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@70) (= ($generated@@242 ($generated@@289 $generated@@457) $generated@@458) ($generated@@148 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@242 ($generated@@289 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@85 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@82 $generated@@460 $generated@@2)) (<= 0 ($generated@@294 $generated@@459))))
 :pattern ( ($generated@@294 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@284 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@283 $generated@@462)) (<= 0 ($generated@@282 $generated@@461))))
 :pattern ( ($generated@@282 $generated@@461))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (!  (=> (= (type $generated@@463) $generated@@83) (=> (and (not (= $generated@@463 $generated@@139)) ($generated@@148 $generated@@463 $generated@@149)) (= ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@148 $generated@@463 $generated@@149))
 :pattern ( ($generated@@375 $generated@@463 $generated@@464) ($generated@@146 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@415 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@415 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@78 ($generated@@415 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@423 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@423 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@166) (= (type $generated@@486) $generated@@166)) (= ($generated@@275 ($generated@@241 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@156 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@156 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@156 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@156 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) (= (type $generated@@496) $generated@@166)) (= ($generated@@164 ($generated@@241 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@241 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@166) (= (type $generated@@498) $generated@@166)) (= ($generated@@165 ($generated@@241 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@241 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@284 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@283 $generated@@166)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@282 $generated@@505))) ($generated@@267 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@81 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@81 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@70) (= ($generated@@511 ($generated@@251 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@78 ($generated@@251 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@515 ($generated@@256 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@256 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@78 ($generated@@256 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@173 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@173 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@339 $generated@@528 ($generated@@289 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@289 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) (= ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))) (and ($generated@@242 ($generated@@87 ($generated@@390 $generated@@529) $generated@@532) $generated@@531) ($generated@@242 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@87 ($generated@@390 $generated@@529) $generated@@532))
 :pattern ( ($generated@@87 ($generated@@300 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@148 $generated@@529 ($generated@@415 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@166) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))) (and ($generated@@242 ($generated@@87 ($generated@@398 $generated@@533) $generated@@536) $generated@@535) ($generated@@242 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@533) $generated@@536))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@423 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@166) (= (type $generated@@540) $generated@@166)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@241 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@241 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@166) (= (type $generated@@542) $generated@@166)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@241 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@241 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@166) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543)) $generated@@543) ($generated@@148 ($generated@@339 ($generated@@302 $generated@@166 $generated@@166) $generated@@543) ($generated@@415 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@543 ($generated@@415 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@166) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546)) $generated@@546) ($generated@@148 ($generated@@339 ($generated@@320 $generated@@166 $generated@@166) $generated@@546) ($generated@@423 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@423 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@70) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@166)) ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550))) (and (= ($generated@@289 ($generated@@339 $generated@@157 $generated@@551)) $generated@@551) ($generated@@148 ($generated@@339 $generated@@157 $generated@@551) ($generated@@156 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@242 $generated@@551 ($generated@@156 $generated@@549 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@145) (forall (($generated@@552 T@U) ($generated@@553 Int) ) (!  (=> (and (= (type $generated@@552) $generated@@83) (or ($generated@@147 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) (and (not (= 1 $generated@@145)) (and (and (not (= $generated@@552 $generated@@139)) ($generated@@148 $generated@@552 $generated@@149)) (<= ($generated@@150 0) $generated@@553))))) (= ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)) ($generated@@150 (+ 20 $generated@@553))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@262 $generated@@552) ($generated@@150 $generated@@553)))
))))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@431 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@431 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@156 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@156 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@156 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@157) (= ($generated@@537 ($generated@@289 $generated@@560)) ($generated@@538 $generated@@560)))
 :pattern ( ($generated@@537 ($generated@@289 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@166) ($generated@@242 $generated@@561 ($generated@@81 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@561)) $generated@@561) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@242 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@166) (= (type $generated@@563) $generated@@70)) ($generated@@242 $generated@@562 ($generated@@251 $generated@@563))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562)) $generated@@562) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@562) ($generated@@251 $generated@@563))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@251 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@166) (= (type $generated@@565) $generated@@70)) ($generated@@242 $generated@@564 ($generated@@256 $generated@@565))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564)) $generated@@564) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@4) $generated@@564) ($generated@@256 $generated@@565))))
 :pattern ( ($generated@@242 $generated@@564 ($generated@@256 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@166) (= (type $generated@@567) $generated@@70)) ($generated@@242 $generated@@566 ($generated@@173 $generated@@567))) (and (= ($generated@@289 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566)) $generated@@566) ($generated@@148 ($generated@@339 ($generated@@82 $generated@@166 $generated@@2) $generated@@566) ($generated@@173 $generated@@567))))
 :pattern ( ($generated@@242 $generated@@566 ($generated@@173 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@166) (= (type $generated@@569) $generated@@70)) ($generated@@242 $generated@@568 ($generated@@499 $generated@@569))) (and (= ($generated@@289 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568)) $generated@@568) ($generated@@148 ($generated@@339 ($generated@@283 $generated@@166) $generated@@568) ($generated@@499 $generated@@569))))
 :pattern ( ($generated@@242 $generated@@568 ($generated@@499 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@83) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@570 $generated@@139)) ($generated@@80 $generated@@570 $generated@@142 $generated@@571))) ($generated@@80 $generated@@570 $generated@@171 $generated@@571))
 :pattern ( ($generated@@80 $generated@@570 $generated@@142 $generated@@571))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@556 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@171) $generated@@64))
(assert (= ($generated@@556 $generated@@171) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@556 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@149) $generated@@66))
(assert (= ($generated@@556 $generated@@149) $generated@@69))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@82 $generated@@166 $generated@@2)) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (< 0 ($generated ($generated@@87 $generated@@572 $generated@@575)))) ($generated@@267 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@87 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@80 $generated@@572 ($generated@@173 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@83) (= ($generated@@148 $generated@@576 $generated@@138)  (or (= $generated@@576 $generated@@139) ($generated@@154 ($generated@@178 $generated@@576)))))
 :pattern ( ($generated@@148 $generated@@576 $generated@@138))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@579) (and ($generated@@155 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@156 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@267 ($generated@@164 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@70)) (= (type $generated@@583) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@266 $generated@@583) (and ($generated@@155 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@70) ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@156 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@267 ($generated@@165 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@166) (= (type $generated@@586) $generated@@166)) (= ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)) ($generated@@262 ($generated@@241 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@585) ($generated@@262 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))) ($generated@@262 ($generated@@289 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@150 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@289 ($generated@@262 $generated@@588)) ($generated@@262 ($generated@@289 $generated@@588)))
 :pattern ( ($generated@@289 ($generated@@262 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@284 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@283 $generated@@590)) (= ($generated@@282 $generated@@589) 0)) (= $generated@@589 ($generated@@281 $generated@@590))))
 :pattern ( ($generated@@282 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@455)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@166)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@283 $generated@@166)) (= (type $generated@@606) $generated@@70)) (= ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@282 $generated@@605))) ($generated@@242 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@148 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@283 $generated@@166)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@282 $generated@@609))) (< ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@538 ($generated@@339 $generated@@157 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@166 $generated@@166)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613))) (and (and ($generated@@148 ($generated@@300 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@148 ($generated@@352 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@148 ($generated@@389 $generated@@611) ($generated@@251 ($generated@@156 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@148 $generated@@611 ($generated@@415 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@166 $generated@@166)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616))) (and (and ($generated@@148 ($generated@@318 $generated@@614) ($generated@@256 $generated@@615)) ($generated@@148 ($generated@@363 $generated@@614) ($generated@@256 $generated@@616))) ($generated@@148 ($generated@@397 $generated@@614) ($generated@@256 ($generated@@156 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@423 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@148 $generated@@617 $generated@@46))
 :pattern ( ($generated@@148 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@148 $generated@@618 $generated@@47))
 :pattern ( ($generated@@148 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@148 $generated@@619 $generated@@44))
 :pattern ( ($generated@@148 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@455) ($generated@@148 $generated@@620 $generated@@45))
 :pattern ( ($generated@@148 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@166) ($generated@@148 $generated@@621 $generated@@48))
 :pattern ( ($generated@@148 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (= (type $generated@@623) ($generated@@183 $generated@@83 $generated@@4)) (= (type $generated@@624) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true))) (=> (and (<= $generated@@622 $generated@@622) (=> (= $generated@@622 $generated@@622) true)) (=> (= $generated@@623 ($generated@@182 $generated@@139 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@T) )  (=> false false))) (=> (forall (($generated@@630 T@T) )  (=> false false)) (=> (and (and (< ($generated@@146 $generated@@625 $generated@@622) (+ 8 $generated@@622)) (= ($generated@@146 $generated@@625 $generated@@622) ($generated@@375 $generated@@625 $generated@@622))) (and (= ($generated@@146 $generated@@625 $generated@@622) $generated@@626) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@626 (+ 10 $generated@@622))))))))))
(let (($generated@@631  (=> (and (and (and ($generated@@266 $generated@@624) ($generated@@627 $generated@@624)) (and (not (= $generated@@625 $generated@@139)) (and ($generated@@148 $generated@@625 $generated@@149) ($generated@@80 $generated@@625 $generated@@149 $generated@@624)))) (and (and (<= ($generated@@150 0) $generated@@622) (<= ($generated@@150 0) $generated@@626)) (and (= 2 $generated@@145) (= (ControlFlow 0 5) 2)))) $generated@@628)))
$generated@@631)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
