(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U) Int)
(declare-fun $generated@@240 (T@U) Int)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (Int) Int)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert  (=> true (forall (($generated@@241 T@U) ) (!  (=> (= (type $generated@@241) $generated@@83) (=> (and (not (= $generated@@241 $generated@@143)) ($generated@@149 $generated@@241 $generated@@236)) (= ($generated@@239 $generated@@241) ($generated@@240 $generated@@241))))
 :pattern ( ($generated@@239 $generated@@241) ($generated@@149 $generated@@241 $generated@@236))
 :pattern ( ($generated@@239 $generated@@241) ($generated@@240 $generated@@241))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@70) (= (type $generated@@247) $generated@@70)) (= (type $generated@@248) $generated@@163)) (= (type $generated@@249) $generated@@163)) (= ($generated@@149 ($generated@@242 $generated@@248 $generated@@249) ($generated@@153 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@149 ($generated@@242 $generated@@248 $generated@@249) ($generated@@153 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@154) (= (type $generated@@251) $generated@@154)) (= ($generated@@160 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@160 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@163) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@243 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@149 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@163) ($generated@@0 ($generated@@87 $generated@@259 $generated@@261))) ($generated@@243 $generated@@261 $generated@@260))
 :pattern ( ($generated@@87 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@149 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@262 $generated@@263) $generated@@263)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(= (type ($generated@@264 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@264 $generated@@267) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@163)) (= (type $generated@@273) $generated@@163)) (= (type $generated@@274) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@268 $generated@@274)) (= ($generated@@80 ($generated@@242 $generated@@272 $generated@@273) ($generated@@153 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@80 ($generated@@242 $generated@@272 $generated@@273) ($generated@@153 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@154) (= ($generated@@152 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@277))
)))
(assert  (=> true (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@83) (or ($generated@@278 $generated@@279) (and (not (= $generated@@279 $generated@@143)) ($generated@@149 $generated@@279 $generated@@236)))) (= ($generated@@240 $generated@@279) ($generated@@262 0)))
 :pattern ( ($generated@@240 $generated@@279))
))))
(assert  (=> true (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@83) (or ($generated@@280 $generated@@281) (and (not (= $generated@@281 $generated@@143)) ($generated@@149 $generated@@281 $generated@@168)))) (<= ($generated@@262 0) ($generated@@239 $generated@@281)))
 :pattern ( ($generated@@239 $generated@@281))
))))
(assert  (=> true (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@83) (or ($generated@@278 $generated@@282) (and (not (= $generated@@282 $generated@@143)) ($generated@@149 $generated@@282 $generated@@236)))) (<= ($generated@@262 0) ($generated@@240 $generated@@282)))
 :pattern ( ($generated@@240 $generated@@282))
))))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@154) ($generated@@152 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@163) (= (type $generated@@285) $generated@@163)) (= $generated@@283 ($generated@@242 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@152 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@163)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@70) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@269 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@80 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@269 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@301) $generated@@163)) (= (type $generated@@302) $generated@@70)) ($generated@@138 $generated@@299 $generated@@300)) ($generated@@269 $generated@@301 $generated@@302 $generated@@299)) ($generated@@269 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@138 $generated@@299 $generated@@300) ($generated@@269 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@304) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@306) $generated@@70)) ($generated@@138 $generated@@303 $generated@@304)) ($generated@@80 $generated@@305 $generated@@306 $generated@@303)) ($generated@@80 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@138 $generated@@303 $generated@@304) ($generated@@80 $generated@@305 $generated@@306 $generated@@303))
)))
(assert  (=> true (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@83) (or ($generated@@278 ($generated@@264 $generated@@307)) (and (not (= $generated@@307 $generated@@143)) ($generated@@149 $generated@@307 $generated@@236)))) (= ($generated@@240 ($generated@@264 $generated@@307)) ($generated@@262 0)))
 :weight 3
 :pattern ( ($generated@@240 ($generated@@264 $generated@@307)))
))))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@82 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@85 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@82 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@87 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@82 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@82 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@85 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@82 $generated@@351 $generated@@2)) (= ($generated@@171 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@87 $generated@@350 $generated@@352))) (<= ($generated ($generated@@87 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@87 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@171 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@163) ($generated@@243 $generated@@356 $generated@@236)) (and (= ($generated@@294 ($generated@@353 $generated@@83 $generated@@356)) $generated@@356) ($generated@@149 ($generated@@353 $generated@@83 $generated@@356) $generated@@236)))
 :pattern ( ($generated@@243 $generated@@356 $generated@@236))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@163) ($generated@@243 $generated@@357 $generated@@146)) (and (= ($generated@@294 ($generated@@353 $generated@@83 $generated@@357)) $generated@@357) ($generated@@149 ($generated@@353 $generated@@83 $generated@@357) $generated@@146)))
 :pattern ( ($generated@@243 $generated@@357 $generated@@146))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@163) ($generated@@243 $generated@@358 $generated@@168)) (and (= ($generated@@294 ($generated@@353 $generated@@83 $generated@@358)) $generated@@358) ($generated@@149 ($generated@@353 $generated@@83 $generated@@358) $generated@@168)))
 :pattern ( ($generated@@243 $generated@@358 $generated@@168))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@163) ($generated@@243 $generated@@359 $generated@@142)) (and (= ($generated@@294 ($generated@@353 $generated@@83 $generated@@359)) $generated@@359) ($generated@@149 ($generated@@353 $generated@@83 $generated@@359) $generated@@142)))
 :pattern ( ($generated@@243 $generated@@359 $generated@@142))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@83) (= ($generated@@149 $generated@@360 $generated@@168)  (and ($generated@@149 $generated@@360 $generated@@142) (not (= $generated@@360 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@360 $generated@@168))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@83) (= ($generated@@149 $generated@@361 $generated@@236)  (and ($generated@@149 $generated@@361 $generated@@146) (not (= $generated@@361 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@361 $generated@@236))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@318 (type $generated@@362))))
(let (($generated@@364 ($generated@@317 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@316 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@315 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@314 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@318 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@318 (type $generated@@369))))
(let (($generated@@371 ($generated@@317 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@316 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@315 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@336 (type $generated@@373))))
(let (($generated@@375 ($generated@@335 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@334 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@333 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@332 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@336 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@82 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@336 (type $generated@@380))))
(let (($generated@@382 ($generated@@335 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@334 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@333 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@385) $generated@@70)) (= ($generated@@149 $generated@@384 ($generated@@170 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@384 $generated@@386)))) ($generated@@243 $generated@@386 $generated@@385))
 :pattern ( ($generated@@87 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@149 $generated@@384 ($generated@@170 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@252 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@163) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@269 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@252 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@257 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@163) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@269 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@257 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@87 ($generated@@309 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@87 ($generated@@309 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@404) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@403) ($generated@@161 ($generated@@353 $generated@@154 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@161 ($generated@@353 $generated@@154 $generated@@404))) ($generated@@162 ($generated@@353 $generated@@154 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@412) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@411) ($generated@@161 ($generated@@353 $generated@@154 $generated@@412)))) (= ($generated@@87 ($generated@@406 $generated@@411) ($generated@@161 ($generated@@353 $generated@@154 $generated@@412))) ($generated@@162 ($generated@@353 $generated@@154 $generated@@412))))))
 :pattern ( ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@87 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@269 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@269 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@269 ($generated@@87 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@269 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@440) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@439 $generated@@441))) (and ($generated@@138 $generated@@439 $generated@@440) ($generated@@138 $generated@@440 $generated@@441))) ($generated@@138 $generated@@439 $generated@@441))
 :pattern ( ($generated@@138 $generated@@439 $generated@@440) ($generated@@138 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@82 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@336 (type $generated@@444))))
(let (($generated@@446 ($generated@@335 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@334 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@333 $generated@@446 $generated@@445)) (= ($generated@@332 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@332 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@336 (type $generated@@447))))
(let (($generated@@449 ($generated@@335 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@334 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@333 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@336 (type $generated@@450))))
(let (($generated@@452 ($generated@@335 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@334 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@333 $generated@@452 $generated@@451)) (= ($generated@@405 $generated@@450) ($generated@@442 $generated@@163))))))
 :pattern ( ($generated@@405 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@318 (type $generated@@453))))
(let (($generated@@455 ($generated@@317 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@316 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@315 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@163) (= (type $generated@@457) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@453) ($generated@@294 ($generated@@242 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@336 (type $generated@@458))))
(let (($generated@@460 ($generated@@335 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@334 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@333 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@163) (= (type $generated@@462) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@405 $generated@@458) ($generated@@294 ($generated@@242 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@243 $generated@@463 $generated@@46)) (and (= ($generated@@294 ($generated@@353 $generated@@2 $generated@@463)) $generated@@463) ($generated@@149 ($generated@@353 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) ($generated@@243 $generated@@464 $generated@@47)) (and (= ($generated@@294 ($generated@@353 $generated@@3 $generated@@464)) $generated@@464) ($generated@@149 ($generated@@353 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@163) ($generated@@243 $generated@@465 $generated@@44)) (and (= ($generated@@294 ($generated@@353 $generated@@4 $generated@@465)) $generated@@465) ($generated@@149 ($generated@@353 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@163) ($generated@@243 $generated@@467 $generated@@45)) (and (= ($generated@@294 ($generated@@353 $generated@@466 $generated@@467)) $generated@@467) ($generated@@149 ($generated@@353 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@70) (= ($generated@@243 ($generated@@294 $generated@@468) $generated@@469) ($generated@@149 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@243 ($generated@@294 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@85 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@82 $generated@@471 $generated@@2)) (<= 0 ($generated@@308 $generated@@470))))
 :pattern ( ($generated@@308 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@289 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@288 $generated@@473)) (<= 0 ($generated@@287 $generated@@472))))
 :pattern ( ($generated@@287 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@423 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@423 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@423 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@431 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@431 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@431 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@431 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@78 ($generated@@431 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@163) (= (type $generated@@495) $generated@@163)) (= ($generated@@275 ($generated@@242 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@153 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@153 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@153 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@153 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@163) (= (type $generated@@505) $generated@@163)) (= ($generated@@161 ($generated@@242 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@242 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@163) (= (type $generated@@507) $generated@@163)) (= ($generated@@162 ($generated@@242 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@242 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ($generated@@512 Int) ) (! (let (($generated@@513 ($generated@@289 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511 $generated@@512)) $generated@@513))
 :pattern ( ($generated@@509 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@288 $generated@@163)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@514 ($generated@@508 $generated@@515) $generated@@516) (forall (($generated@@517 Int) ) (!  (=> (and (<= 0 $generated@@517) (< $generated@@517 ($generated@@287 $generated@@514))) ($generated@@269 ($generated@@509 $generated@@514 $generated@@517) $generated@@515 $generated@@516))
 :pattern ( ($generated@@509 $generated@@514 $generated@@517))
))))
 :pattern ( ($generated@@80 $generated@@514 ($generated@@508 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@81 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@81 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@252 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@252 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@252 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@257 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@257 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@257 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@170 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@170 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@508 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@508 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@78 ($generated@@508 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@508 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@353 $generated@@537 ($generated@@294 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@294 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) (= ($generated@@149 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@538) $generated@@541))) (and ($generated@@243 ($generated@@87 ($generated@@398 $generated@@538) $generated@@541) $generated@@540) ($generated@@243 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@538) $generated@@541))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@149 $generated@@542 ($generated@@431 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@542) $generated@@545))) (and ($generated@@243 ($generated@@87 ($generated@@406 $generated@@542) $generated@@545) $generated@@544) ($generated@@243 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@149 $generated@@542 ($generated@@431 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) (= (type $generated@@549) $generated@@163)) (< ($generated@@546 $generated@@548) ($generated@@547 ($generated@@242 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@242 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@163) (= (type $generated@@551) $generated@@163)) (< ($generated@@546 $generated@@551) ($generated@@547 ($generated@@242 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@242 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@163) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@70)) ($generated@@243 $generated@@552 ($generated@@423 $generated@@553 $generated@@554))) (and (= ($generated@@294 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@552)) $generated@@552) ($generated@@149 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@552) ($generated@@423 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@552 ($generated@@423 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@70)) ($generated@@243 $generated@@555 ($generated@@431 $generated@@556 $generated@@557))) (and (= ($generated@@294 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@555)) $generated@@555) ($generated@@149 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@555) ($generated@@431 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@243 $generated@@555 ($generated@@431 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@163)) ($generated@@243 $generated@@560 ($generated@@153 $generated@@558 $generated@@559))) (and (= ($generated@@294 ($generated@@353 $generated@@154 $generated@@560)) $generated@@560) ($generated@@149 ($generated@@353 $generated@@154 $generated@@560) ($generated@@153 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@243 $generated@@560 ($generated@@153 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@87 ($generated@@442 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@87 ($generated@@442 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@75)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@70) (= (type $generated@@566) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@565 $generated@@566)) $generated@@62) (= ($generated@@563 ($generated@@153 $generated@@565 $generated@@566)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@154) (= ($generated@@546 ($generated@@294 $generated@@567)) ($generated@@547 $generated@@567)))
 :pattern ( ($generated@@546 ($generated@@294 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@163) ($generated@@243 $generated@@568 ($generated@@81 0))) (and (= ($generated@@294 ($generated@@353 $generated@@2 $generated@@568)) $generated@@568) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@568) ($generated@@81 0))))
 :pattern ( ($generated@@243 $generated@@568 ($generated@@81 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@70)) ($generated@@243 $generated@@569 ($generated@@252 $generated@@570))) (and (= ($generated@@294 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@569) ($generated@@252 $generated@@570))))
 :pattern ( ($generated@@243 $generated@@569 ($generated@@252 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@163) (= (type $generated@@572) $generated@@70)) ($generated@@243 $generated@@571 ($generated@@257 $generated@@572))) (and (= ($generated@@294 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@571)) $generated@@571) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@571) ($generated@@257 $generated@@572))))
 :pattern ( ($generated@@243 $generated@@571 ($generated@@257 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@163) (= (type $generated@@574) $generated@@70)) ($generated@@243 $generated@@573 ($generated@@170 $generated@@574))) (and (= ($generated@@294 ($generated@@353 ($generated@@82 $generated@@163 $generated@@2) $generated@@573)) $generated@@573) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@2) $generated@@573) ($generated@@170 $generated@@574))))
 :pattern ( ($generated@@243 $generated@@573 ($generated@@170 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@163) (= (type $generated@@576) $generated@@70)) ($generated@@243 $generated@@575 ($generated@@508 $generated@@576))) (and (= ($generated@@294 ($generated@@353 ($generated@@288 $generated@@163) $generated@@575)) $generated@@575) ($generated@@149 ($generated@@353 ($generated@@288 $generated@@163) $generated@@575) ($generated@@508 $generated@@576))))
 :pattern ( ($generated@@243 $generated@@575 ($generated@@508 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@83) (= (type $generated@@578) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@577 $generated@@143)) ($generated@@80 $generated@@577 $generated@@146 $generated@@578))) ($generated@@80 $generated@@577 $generated@@168 $generated@@578))
 :pattern ( ($generated@@80 $generated@@577 $generated@@146 $generated@@578))
)))
(assert (= ($generated@@78 $generated@@236) $generated@@63))
(assert (= ($generated@@563 $generated@@236) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@64))
(assert (= ($generated@@563 $generated@@146) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@65))
(assert (= ($generated@@563 $generated@@168) $generated@@69))
(assert (= ($generated@@78 $generated@@142) $generated@@66))
(assert (= ($generated@@563 $generated@@142) $generated@@69))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@579 ($generated@@170 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@579 $generated@@582)))) ($generated@@269 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@87 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@170 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@83) (= ($generated@@149 $generated@@583 $generated@@142)  (or (= $generated@@583 $generated@@143) ($generated@@151 ($generated@@175 $generated@@583)))))
 :pattern ( ($generated@@149 $generated@@583 $generated@@142))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@268 $generated@@586) (and ($generated@@152 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@70) ($generated@@80 $generated@@584 ($generated@@153 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@153 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@269 ($generated@@161 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@269 ($generated@@161 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@154) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@268 $generated@@590) (and ($generated@@152 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@70) ($generated@@80 $generated@@588 ($generated@@153 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 $generated@@588 ($generated@@153 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@269 ($generated@@162 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@269 ($generated@@162 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@163) (= (type $generated@@593) $generated@@163)) (= ($generated@@242 ($generated@@264 $generated@@592) ($generated@@264 $generated@@593)) ($generated@@264 ($generated@@242 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@242 ($generated@@264 $generated@@592) ($generated@@264 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@262 $generated@@594))) ($generated@@264 ($generated@@294 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@262 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@294 ($generated@@264 $generated@@595)) ($generated@@264 ($generated@@294 $generated@@595)))
 :pattern ( ($generated@@294 ($generated@@264 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@289 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@288 $generated@@597)) (= ($generated@@287 $generated@@596) 0)) (= $generated@@596 ($generated@@286 $generated@@597))))
 :pattern ( ($generated@@287 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@82 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@308 ($generated@@88 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@308 $generated@@598) ($generated ($generated@@87 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@308 ($generated@@88 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@2)) ($generated@@80 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@3)) ($generated@@80 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@607) $generated@@4)) ($generated@@80 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@80 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@609) $generated@@466)) ($generated@@80 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@80 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@611) $generated@@163)) ($generated@@80 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@80 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@288 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= ($generated@@149 $generated@@612 ($generated@@508 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@287 $generated@@612))) ($generated@@243 ($generated@@509 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@509 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@508 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@288 $generated@@163)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@287 $generated@@616))) (< ($generated@@547 ($generated@@353 $generated@@154 ($generated@@509 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@547 ($generated@@353 $generated@@154 ($generated@@509 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) $generated@@70)) ($generated@@149 $generated@@618 ($generated@@423 $generated@@619 $generated@@620))) (and (and ($generated@@149 ($generated@@314 $generated@@618) ($generated@@252 $generated@@619)) ($generated@@149 ($generated@@366 $generated@@618) ($generated@@252 $generated@@620))) ($generated@@149 ($generated@@397 $generated@@618) ($generated@@252 ($generated@@153 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@423 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@149 $generated@@621 ($generated@@431 $generated@@622 $generated@@623))) (and (and ($generated@@149 ($generated@@332 $generated@@621) ($generated@@257 $generated@@622)) ($generated@@149 ($generated@@377 $generated@@621) ($generated@@257 $generated@@623))) ($generated@@149 ($generated@@405 $generated@@621) ($generated@@257 ($generated@@153 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@431 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@149 $generated@@624 $generated@@46))
 :pattern ( ($generated@@149 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@149 $generated@@625 $generated@@47))
 :pattern ( ($generated@@149 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@149 $generated@@626 $generated@@44))
 :pattern ( ($generated@@149 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@466) ($generated@@149 $generated@@627 $generated@@45))
 :pattern ( ($generated@@149 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@163) ($generated@@149 $generated@@628 $generated@@48))
 :pattern ( ($generated@@149 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () Bool)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@629) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@630) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@631) $generated@@83)) (= (type $generated@@632) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@634) $generated@@83)) (= (type $generated@@636) $generated@@83)) (= (type $generated@@638) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@640  (=> (= $generated@@629 ($generated@@179 $generated@@143 $generated@@630 $generated@@60 false)) (=> (and (and (not (= $generated@@631 $generated@@143)) (and ($generated@@149 $generated@@631 $generated@@236) ($generated@@80 $generated@@631 $generated@@236 $generated@@630))) (and ($generated@@268 $generated@@632) ($generated@@633 $generated@@632))) (=> (and (and (and (not (= $generated@@634 $generated@@143)) (and ($generated@@149 $generated@@634 $generated@@236) ($generated@@80 $generated@@634 $generated@@236 $generated@@632))) (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@630 $generated@@634) $generated@@60)))) (and (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@83) (=> (and (not (= $generated@@641 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@630 $generated@@641) $generated@@60))) (= ($generated@@87 $generated@@632 $generated@@641) ($generated@@87 $generated@@630 $generated@@641))))
 :pattern ( ($generated@@87 $generated@@632 $generated@@641))
)) ($generated@@138 $generated@@630 $generated@@632))) (and (=> (= (ControlFlow 0 2) (- 0 8)) true) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@634 $generated@@143))) (=> ($generated@@80 $generated@@634 $generated@@146 $generated@@632) (=> (and ($generated@@278 $generated@@634) ($generated@@278 $generated@@634)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= ($generated@@240 $generated@@634) ($generated@@262 0))) (=> (= ($generated@@240 $generated@@634) ($generated@@262 0)) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@634 $generated@@143))) (=> (and (and ($generated@@80 $generated@@634 $generated@@142 $generated@@632) ($generated@@280 $generated@@634)) (and ($generated@@280 $generated@@634) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@239 $generated@@634) ($generated@@262 0)))))))))))))))))
(let (($generated@@642  (=> (and (and (and ($generated@@268 $generated@@630) ($generated@@633 $generated@@630)) (and (=> $generated@@635 (and ($generated@@149 $generated@@636 $generated@@236) ($generated@@80 $generated@@636 $generated@@236 $generated@@630))) true)) (and (and (=> $generated@@637 (and ($generated@@149 $generated@@638 $generated@@168) ($generated@@80 $generated@@638 $generated@@168 $generated@@630))) true) (and (= 1 $generated@@639) (= (ControlFlow 0 9) 2)))) $generated@@640)))
$generated@@642)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 () Int)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@616 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= (type $generated@@140) $generated@@72))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
 :pattern ( ($generated@@82 $generated@@141 $generated@@140 $generated@@142))
)))
(assert  (and (= (type $generated@@143) $generated@@72) (= (type $generated@@144) $generated@@85)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@143 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@72))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@85) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@148 $generated@@147 $generated@@149)  (or (= $generated@@148 $generated@@144) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@83 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@83 0)))
)))
(assert ($generated@@152 $generated@@147))
(assert  (and (= ($generated@@1 $generated@@155) 14) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@72) (= (type $generated@@159) $generated@@72)) (= (type $generated@@160) $generated@@155)) ($generated@@150 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@150 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (= (type $generated@@169) $generated@@72))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@85) (=> (and (not (= $generated@@170 $generated@@144)) ($generated@@150 $generated@@170 $generated@@147)) ($generated@@150 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@150 $generated@@170 $generated@@147))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@72)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@84 $generated@@164 $generated@@2)) (= (type $generated@@175) $generated@@72)) ($generated@@150 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@150 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@176 $generated@@177)) $generated@@72)
 :pattern ( ($generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@85) (= ($generated@@150 $generated@@178 $generated@@147)  (or (= $generated@@178 $generated@@144) (= ($generated@@176 $generated@@178) $generated@@147))))
 :pattern ( ($generated@@150 $generated@@178 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 16)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@85 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@75 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@85) (= (type $generated@@229) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@230) ($generated@@74 $generated@@4))) (= (type $generated@@232) $generated@@85)) (= (type $generated@@233) ($generated@@74 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@181 $generated@@85 $generated@@4))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@75 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@85) (= (type $generated@@241) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@242) ($generated@@74 $generated@@4))) (= (type $generated@@244) $generated@@85)) (= (type $generated@@245) ($generated@@74 $generated@@246))) (= ($generated@@0 ($generated@@179 ($generated@@235 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@179 ($generated@@235 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@85) (= (type $generated@@248) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@247 $generated@@169 $generated@@248) ($generated@@82 $generated@@247 $generated@@143 $generated@@248)))
 :pattern ( ($generated@@82 $generated@@247 $generated@@169 $generated@@248))
)))
(assert (= (type $generated@@249) $generated@@72))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@85) (= (type $generated@@251) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@250 $generated@@249 $generated@@251) ($generated@@82 $generated@@250 $generated@@147 $generated@@251)))
 :pattern ( ($generated@@82 $generated@@250 $generated@@249 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@155)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@72) (= (type $generated@@257) $generated@@72)) (= (type $generated@@258) $generated@@164)) (= (type $generated@@259) $generated@@164)) (= ($generated@@150 ($generated@@252 $generated@@258 $generated@@259) ($generated@@154 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@150 ($generated@@252 $generated@@258 $generated@@259) ($generated@@154 $generated@@256 $generated@@257)))
)))
(assert  (=> (<= 1 $generated@@260) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@85) (or ($generated@@262 $generated@@264) (and (not (= 1 $generated@@260)) (and (not (= $generated@@264 $generated@@144)) ($generated@@150 $generated@@264 $generated@@249))))) (= ($generated@@261 $generated@@264) ($generated@@263 0)))
 :pattern ( ($generated@@261 $generated@@264))
))))
(assert  (=> (<= 1 $generated@@260) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@85) (or ($generated@@262 $generated@@265) (and (not (= 1 $generated@@260)) (and (not (= $generated@@265 $generated@@144)) ($generated@@150 $generated@@265 $generated@@249))))) (<= ($generated@@263 0) ($generated@@261 $generated@@265)))
 :pattern ( ($generated@@261 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@155) (= (type $generated@@267) $generated@@155)) (= ($generated@@161 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@161 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@84 $generated@@164 $generated@@4)) (= (type $generated@@271) $generated@@72)) (= ($generated@@150 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@164) ($generated@@0 ($generated@@89 $generated@@270 $generated@@272))) ($generated@@253 $generated@@272 $generated@@271))
 :pattern ( ($generated@@89 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@150 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@72)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@84 $generated@@164 $generated@@4)) (= (type $generated@@276) $generated@@72)) (= ($generated@@150 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@164) ($generated@@0 ($generated@@89 $generated@@275 $generated@@277))) ($generated@@253 $generated@@277 $generated@@276))
 :pattern ( ($generated@@89 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@150 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@263 $generated@@278) $generated@@278)
 :pattern ( ($generated@@263 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@72) (= (type $generated@@286) $generated@@72)) (= (type $generated@@287) $generated@@164)) (= (type $generated@@288) $generated@@164)) (= (type $generated@@289) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@283 $generated@@289)) (= ($generated@@82 ($generated@@252 $generated@@287 $generated@@288) ($generated@@154 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@82 ($generated@@252 $generated@@287 $generated@@288) ($generated@@154 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@76)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@155) (= ($generated@@153 $generated@@292) (= ($generated@@290 $generated@@292) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@292))
)))
(assert  (=> (<= 1 $generated@@260) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@85) (or ($generated@@262 ($generated@@279 $generated@@293)) (and (not (= 1 $generated@@260)) (and (not (= $generated@@293 $generated@@144)) ($generated@@150 $generated@@293 $generated@@249))))) (= ($generated@@261 ($generated@@279 $generated@@293)) ($generated@@263 0)))
 :weight 3
 :pattern ( ($generated@@261 ($generated@@279 $generated@@293)))
))))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@155) ($generated@@153 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@164) (= (type $generated@@296) $generated@@164)) (= $generated@@294 ($generated@@252 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@153 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@2) (= ($generated@@150 $generated@@305 $generated@@140) (<= ($generated@@263 0) ($generated $generated@@305))))
 :pattern ( ($generated@@150 $generated@@305 $generated@@140))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@164)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@72) (= (type $generated@@310) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@284 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@82 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@284 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@84 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@87 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@84 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@89 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@84 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@89 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@89 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@84 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@89 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@89 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@87 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@84 $generated@@354 $generated@@2)) (= ($generated@@172 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@89 $generated@@353 $generated@@355))) (<= ($generated ($generated@@89 $generated@@353 $generated@@355)) ($generated@@311 $generated@@353))))
 :pattern ( ($generated@@89 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@172 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@164) ($generated@@253 $generated@@359 $generated@@140)) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@359)) $generated@@359) ($generated@@150 ($generated@@356 $generated@@2 $generated@@359) $generated@@140)))
 :pattern ( ($generated@@253 $generated@@359 $generated@@140))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@164) ($generated@@253 $generated@@360 $generated@@143)) (and (= ($generated@@306 ($generated@@356 $generated@@85 $generated@@360)) $generated@@360) ($generated@@150 ($generated@@356 $generated@@85 $generated@@360) $generated@@143)))
 :pattern ( ($generated@@253 $generated@@360 $generated@@143))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@164) ($generated@@253 $generated@@361 $generated@@169)) (and (= ($generated@@306 ($generated@@356 $generated@@85 $generated@@361)) $generated@@361) ($generated@@150 ($generated@@356 $generated@@85 $generated@@361) $generated@@169)))
 :pattern ( ($generated@@253 $generated@@361 $generated@@169))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@164) ($generated@@253 $generated@@362 $generated@@147)) (and (= ($generated@@306 ($generated@@356 $generated@@85 $generated@@362)) $generated@@362) ($generated@@150 ($generated@@356 $generated@@85 $generated@@362) $generated@@147)))
 :pattern ( ($generated@@253 $generated@@362 $generated@@147))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@164) ($generated@@253 $generated@@363 $generated@@249)) (and (= ($generated@@306 ($generated@@356 $generated@@85 $generated@@363)) $generated@@363) ($generated@@150 ($generated@@356 $generated@@85 $generated@@363) $generated@@249)))
 :pattern ( ($generated@@253 $generated@@363 $generated@@249))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@85) (= ($generated@@150 $generated@@364 $generated@@169)  (and ($generated@@150 $generated@@364 $generated@@143) (not (= $generated@@364 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@364 $generated@@169))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@85) (= ($generated@@150 $generated@@365 $generated@@249)  (and ($generated@@150 $generated@@365 $generated@@147) (not (= $generated@@365 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@365 $generated@@249))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@321 (type $generated@@366))))
(let (($generated@@368 ($generated@@320 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@319 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@318 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@89 ($generated@@317 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@317 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@321 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@84 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@321 (type $generated@@373))))
(let (($generated@@375 ($generated@@320 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@319 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@318 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@89 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@339 (type $generated@@377))))
(let (($generated@@379 ($generated@@338 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@337 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@336 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@89 ($generated@@335 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@335 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@84 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@339 (type $generated@@384))))
(let (($generated@@386 ($generated@@338 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@337 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@336 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@89 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@84 $generated@@164 $generated@@2)) (= (type $generated@@389) $generated@@72)) (= ($generated@@150 $generated@@388 ($generated@@171 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@164) (< 0 ($generated ($generated@@89 $generated@@388 $generated@@390)))) ($generated@@253 $generated@@390 $generated@@389))
 :pattern ( ($generated@@89 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@150 $generated@@388 ($generated@@171 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@84 $generated@@164 $generated@@4)) (= (type $generated@@392) $generated@@72)) (= (type $generated@@393) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@391 ($generated@@268 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@164) ($generated@@0 ($generated@@89 $generated@@391 $generated@@394))) ($generated@@284 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@89 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@82 $generated@@391 ($generated@@268 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@84 $generated@@164 $generated@@4)) (= (type $generated@@396) $generated@@72)) (= (type $generated@@397) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@395 ($generated@@273 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@164) ($generated@@0 ($generated@@89 $generated@@395 $generated@@398))) ($generated@@284 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@89 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@82 $generated@@395 ($generated@@273 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@89 ($generated@@312 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@89 ($generated@@312 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@84 $generated@@164 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@321 (type $generated@@404))))
(let (($generated@@406 ($generated@@320 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@84 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@319 $generated@@164 $generated@@164)) (= (type $generated@@408) $generated@@164)) (= ($generated@@0 ($generated@@89 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@89 ($generated@@317 $generated@@407) ($generated@@162 ($generated@@356 $generated@@155 $generated@@408)))) (= ($generated@@89 ($generated@@402 $generated@@407) ($generated@@162 ($generated@@356 $generated@@155 $generated@@408))) ($generated@@163 ($generated@@356 $generated@@155 $generated@@408))))))
 :pattern ( ($generated@@89 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@84 $generated@@164 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@339 (type $generated@@412))))
(let (($generated@@414 ($generated@@338 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@84 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@337 $generated@@164 $generated@@164)) (= (type $generated@@416) $generated@@164)) (= ($generated@@0 ($generated@@89 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@89 ($generated@@335 $generated@@415) ($generated@@162 ($generated@@356 $generated@@155 $generated@@416)))) (= ($generated@@89 ($generated@@410 $generated@@415) ($generated@@162 ($generated@@356 $generated@@155 $generated@@416))) ($generated@@163 ($generated@@356 $generated@@155 $generated@@416))))))
 :pattern ( ($generated@@89 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@320 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@319 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@89 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@89 ($generated@@317 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@89 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@89 ($generated@@317 $generated@@417) $generated@@421))
 :pattern ( ($generated@@89 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@89 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@338 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@337 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@89 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@89 ($generated@@335 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@89 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@89 ($generated@@335 $generated@@422) $generated@@426))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@89 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@72)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@319 $generated@@164 $generated@@164)) (= (type $generated@@431) $generated@@72)) (= (type $generated@@432) $generated@@72)) (= (type $generated@@433) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@164) ($generated@@0 ($generated@@89 ($generated@@317 $generated@@430) $generated@@434))) (and ($generated@@284 ($generated@@89 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@284 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@89 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@89 ($generated@@317 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@82 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@72)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@337 $generated@@164 $generated@@164)) (= (type $generated@@439) $generated@@72)) (= (type $generated@@440) $generated@@72)) (= (type $generated@@441) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@164) ($generated@@0 ($generated@@89 ($generated@@335 $generated@@438) $generated@@442))) (and ($generated@@284 ($generated@@89 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@284 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@89 ($generated@@335 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@82 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@84 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@339 (type $generated@@445))))
(let (($generated@@447 ($generated@@338 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@337 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@335 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@335 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@339 (type $generated@@448))))
(let (($generated@@450 ($generated@@338 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@337 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@336 $generated@@450 $generated@@449)) (= ($generated@@381 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@381 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@339 (type $generated@@451))))
(let (($generated@@453 ($generated@@338 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@337 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@336 $generated@@453 $generated@@452)) (= ($generated@@409 $generated@@451) ($generated@@443 $generated@@164))))))
 :pattern ( ($generated@@409 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@321 (type $generated@@454))))
(let (($generated@@456 ($generated@@320 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@319 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@318 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@164) (= (type $generated@@458) $generated@@164)) ($generated@@0 ($generated@@89 ($generated@@401 $generated@@454) ($generated@@306 ($generated@@252 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@401 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@339 (type $generated@@459))))
(let (($generated@@461 ($generated@@338 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@337 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@336 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@164) (= (type $generated@@463) $generated@@164)) ($generated@@0 ($generated@@89 ($generated@@409 $generated@@459) ($generated@@306 ($generated@@252 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@409 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@164) ($generated@@253 $generated@@464 $generated@@46)) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@464)) $generated@@464) ($generated@@150 ($generated@@356 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@164) ($generated@@253 $generated@@465 $generated@@47)) (and (= ($generated@@306 ($generated@@356 $generated@@3 $generated@@465)) $generated@@465) ($generated@@150 ($generated@@356 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@164) ($generated@@253 $generated@@466 $generated@@44)) (and (= ($generated@@306 ($generated@@356 $generated@@4 $generated@@466)) $generated@@466) ($generated@@150 ($generated@@356 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@164) ($generated@@253 $generated@@468 $generated@@45)) (and (= ($generated@@306 ($generated@@356 $generated@@467 $generated@@468)) $generated@@468) ($generated@@150 ($generated@@356 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@72) (= ($generated@@253 ($generated@@306 $generated@@469) $generated@@470) ($generated@@150 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@253 ($generated@@306 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@87 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@84 $generated@@472 $generated@@2)) (<= 0 ($generated@@311 $generated@@471))))
 :pattern ( ($generated@@311 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@300 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@299 $generated@@474)) (<= 0 ($generated@@298 $generated@@473))))
 :pattern ( ($generated@@298 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@72)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@72) (= (type $generated@@478) $generated@@72)) (= ($generated@@475 ($generated@@427 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@427 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@72)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@72) (= (type $generated@@482) $generated@@72)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@72) (= (type $generated@@484) $generated@@72)) (= ($generated@@80 ($generated@@427 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@72)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@72) (= (type $generated@@488) $generated@@72)) (= ($generated@@485 ($generated@@435 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@435 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@72)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@72) (= (type $generated@@492) $generated@@72)) (= ($generated@@489 ($generated@@435 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@435 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@72) (= (type $generated@@494) $generated@@72)) (= ($generated@@80 ($generated@@435 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@164) (= (type $generated@@496) $generated@@164)) (= ($generated@@290 ($generated@@252 $generated@@495 $generated@@496)) $generated@@62))
 :pattern ( ($generated@@252 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@72)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@72) (= (type $generated@@500) $generated@@72)) (= ($generated@@497 ($generated@@154 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@154 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@72)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@72) (= (type $generated@@504) $generated@@72)) (= ($generated@@501 ($generated@@154 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@154 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@164) (= (type $generated@@506) $generated@@164)) (= ($generated@@162 ($generated@@252 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@252 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@164) (= (type $generated@@508) $generated@@164)) (= ($generated@@163 ($generated@@252 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@252 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@72)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@300 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@299 $generated@@164)) (= (type $generated@@516) $generated@@72)) (= (type $generated@@517) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@298 $generated@@515))) ($generated@@284 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@82 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@83 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@83 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@72)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@72) (= ($generated@@521 ($generated@@268 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@268 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@72) (= ($generated@@80 ($generated@@268 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@72) (= ($generated@@525 ($generated@@273 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@273 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@72) (= ($generated@@80 ($generated@@273 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@72)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@72) (= ($generated@@529 ($generated@@171 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@171 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@72) (= ($generated@@80 ($generated@@171 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@72)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@72) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@72) (= ($generated@@80 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(= ($generated@@356 $generated@@538 ($generated@@306 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@306 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@319 $generated@@164 $generated@@164)) (= (type $generated@@540) $generated@@72)) (= (type $generated@@541) $generated@@72)) (= ($generated@@150 $generated@@539 ($generated@@427 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@164) ($generated@@0 ($generated@@89 ($generated@@317 $generated@@539) $generated@@542))) (and ($generated@@253 ($generated@@89 ($generated@@402 $generated@@539) $generated@@542) $generated@@541) ($generated@@253 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@89 ($generated@@402 $generated@@539) $generated@@542))
 :pattern ( ($generated@@89 ($generated@@317 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@150 $generated@@539 ($generated@@427 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@337 $generated@@164 $generated@@164)) (= (type $generated@@544) $generated@@72)) (= (type $generated@@545) $generated@@72)) (= ($generated@@150 $generated@@543 ($generated@@435 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@164) ($generated@@0 ($generated@@89 ($generated@@335 $generated@@543) $generated@@546))) (and ($generated@@253 ($generated@@89 ($generated@@410 $generated@@543) $generated@@546) $generated@@545) ($generated@@253 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@543) $generated@@546))
 :pattern ( ($generated@@89 ($generated@@335 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@150 $generated@@543 ($generated@@435 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@164) (= (type $generated@@550) $generated@@164)) (< ($generated@@547 $generated@@549) ($generated@@548 ($generated@@252 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@252 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@164) (= (type $generated@@552) $generated@@164)) (< ($generated@@547 $generated@@552) ($generated@@548 ($generated@@252 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@252 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@164) (= (type $generated@@554) $generated@@72)) (= (type $generated@@555) $generated@@72)) ($generated@@253 $generated@@553 ($generated@@427 $generated@@554 $generated@@555))) (and (= ($generated@@306 ($generated@@356 ($generated@@319 $generated@@164 $generated@@164) $generated@@553)) $generated@@553) ($generated@@150 ($generated@@356 ($generated@@319 $generated@@164 $generated@@164) $generated@@553) ($generated@@427 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@253 $generated@@553 ($generated@@427 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@164) (= (type $generated@@557) $generated@@72)) (= (type $generated@@558) $generated@@72)) ($generated@@253 $generated@@556 ($generated@@435 $generated@@557 $generated@@558))) (and (= ($generated@@306 ($generated@@356 ($generated@@337 $generated@@164 $generated@@164) $generated@@556)) $generated@@556) ($generated@@150 ($generated@@356 ($generated@@337 $generated@@164 $generated@@164) $generated@@556) ($generated@@435 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@253 $generated@@556 ($generated@@435 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@72) (= (type $generated@@560) $generated@@72)) (= (type $generated@@561) $generated@@164)) ($generated@@253 $generated@@561 ($generated@@154 $generated@@559 $generated@@560))) (and (= ($generated@@306 ($generated@@356 $generated@@155 $generated@@561)) $generated@@561) ($generated@@150 ($generated@@356 $generated@@155 $generated@@561) ($generated@@154 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@253 $generated@@561 ($generated@@154 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
 (not ($generated@@0 ($generated@@89 ($generated@@443 $generated@@563) $generated@@562))))
 :pattern ( (let (($generated@@563 (type $generated@@562)))
($generated@@89 ($generated@@443 $generated@@563) $generated@@562)))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@77)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@72) (= (type $generated@@567) $generated@@72)) (and (= ($generated@@80 ($generated@@154 $generated@@566 $generated@@567)) $generated@@63) (= ($generated@@564 ($generated@@154 $generated@@566 $generated@@567)) $generated@@69)))
 :pattern ( ($generated@@154 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@155) (= ($generated@@547 ($generated@@306 $generated@@568)) ($generated@@548 $generated@@568)))
 :pattern ( ($generated@@547 ($generated@@306 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@164) ($generated@@253 $generated@@569 ($generated@@83 0))) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@569)) $generated@@569) ($generated@@150 ($generated@@356 ($generated@@84 $generated@@164 $generated@@4) $generated@@569) ($generated@@83 0))))
 :pattern ( ($generated@@253 $generated@@569 ($generated@@83 0)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@164) (= (type $generated@@571) $generated@@72)) ($generated@@253 $generated@@570 ($generated@@268 $generated@@571))) (and (= ($generated@@306 ($generated@@356 ($generated@@84 $generated@@164 $generated@@4) $generated@@570)) $generated@@570) ($generated@@150 ($generated@@356 ($generated@@84 $generated@@164 $generated@@4) $generated@@570) ($generated@@268 $generated@@571))))
 :pattern ( ($generated@@253 $generated@@570 ($generated@@268 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@164) (= (type $generated@@573) $generated@@72)) ($generated@@253 $generated@@572 ($generated@@273 $generated@@573))) (and (= ($generated@@306 ($generated@@356 ($generated@@84 $generated@@164 $generated@@4) $generated@@572)) $generated@@572) ($generated@@150 ($generated@@356 ($generated@@84 $generated@@164 $generated@@4) $generated@@572) ($generated@@273 $generated@@573))))
 :pattern ( ($generated@@253 $generated@@572 ($generated@@273 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@164) (= (type $generated@@575) $generated@@72)) ($generated@@253 $generated@@574 ($generated@@171 $generated@@575))) (and (= ($generated@@306 ($generated@@356 ($generated@@84 $generated@@164 $generated@@2) $generated@@574)) $generated@@574) ($generated@@150 ($generated@@356 ($generated@@84 $generated@@164 $generated@@2) $generated@@574) ($generated@@171 $generated@@575))))
 :pattern ( ($generated@@253 $generated@@574 ($generated@@171 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@164) (= (type $generated@@577) $generated@@72)) ($generated@@253 $generated@@576 ($generated@@509 $generated@@577))) (and (= ($generated@@306 ($generated@@356 ($generated@@299 $generated@@164) $generated@@576)) $generated@@576) ($generated@@150 ($generated@@356 ($generated@@299 $generated@@164) $generated@@576) ($generated@@509 $generated@@577))))
 :pattern ( ($generated@@253 $generated@@576 ($generated@@509 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@85) (= (type $generated@@579) ($generated@@84 $generated@@85 $generated@@86))) (and (not (= $generated@@578 $generated@@144)) ($generated@@82 $generated@@578 $generated@@147 $generated@@579))) ($generated@@82 $generated@@578 $generated@@169 $generated@@579))
 :pattern ( ($generated@@82 $generated@@578 $generated@@147 $generated@@579))
)))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@564 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@143) $generated@@64))
(assert (= ($generated@@564 $generated@@143) $generated@@70))
(assert (= ($generated@@80 $generated@@169) $generated@@65))
(assert (= ($generated@@564 $generated@@169) $generated@@70))
(assert (= ($generated@@80 $generated@@147) $generated@@66))
(assert (= ($generated@@564 $generated@@147) $generated@@71))
(assert (= ($generated@@80 $generated@@249) $generated@@67))
(assert (= ($generated@@564 $generated@@249) $generated@@71))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@84 $generated@@164 $generated@@2)) (= (type $generated@@581) $generated@@72)) (= (type $generated@@582) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@580 ($generated@@171 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@164) (< 0 ($generated ($generated@@89 $generated@@580 $generated@@583)))) ($generated@@284 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@89 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@82 $generated@@580 ($generated@@171 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@85) (= ($generated@@150 $generated@@584 $generated@@143)  (or (= $generated@@584 $generated@@144) ($generated@@152 ($generated@@176 $generated@@584)))))
 :pattern ( ($generated@@150 $generated@@584 $generated@@143))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@155) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@587) (and ($generated@@153 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@72) ($generated@@82 $generated@@585 ($generated@@154 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@82 $generated@@585 ($generated@@154 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@284 ($generated@@162 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@284 ($generated@@162 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@155) (= (type $generated@@590) $generated@@72)) (= (type $generated@@591) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@283 $generated@@591) (and ($generated@@153 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@72) ($generated@@82 $generated@@589 ($generated@@154 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@82 $generated@@589 ($generated@@154 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@284 ($generated@@163 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@284 ($generated@@163 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@164) (= (type $generated@@594) $generated@@164)) (= ($generated@@252 ($generated@@279 $generated@@593) ($generated@@279 $generated@@594)) ($generated@@279 ($generated@@252 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@252 ($generated@@279 $generated@@593) ($generated@@279 $generated@@594)))
)))
(assert (forall (($generated@@595 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@263 $generated@@595))) ($generated@@279 ($generated@@306 ($generated@@8 $generated@@595))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@263 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ) (! (= ($generated@@306 ($generated@@279 $generated@@596)) ($generated@@279 ($generated@@306 $generated@@596)))
 :pattern ( ($generated@@306 ($generated@@279 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@300 (type $generated@@597))))
 (=> (and (= (type $generated@@597) ($generated@@299 $generated@@598)) (= ($generated@@298 $generated@@597) 0)) (= $generated@@597 ($generated@@297 $generated@@598))))
 :pattern ( ($generated@@298 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@600)))
 (=> (and (and (= (type $generated@@599) ($generated@@84 $generated@@602 $generated@@2)) (= (type $generated@@601) $generated@@2)) (<= 0 ($generated $generated@@601))) (= ($generated@@311 ($generated@@90 $generated@@599 $generated@@600 $generated@@601)) (+ (- ($generated@@311 $generated@@599) ($generated ($generated@@89 $generated@@599 $generated@@600))) ($generated $generated@@601)))))
 :pattern ( ($generated@@311 ($generated@@90 $generated@@599 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@604) $generated@@2)) ($generated@@82 $generated@@604 $generated@@46 $generated@@603))
 :pattern ( ($generated@@82 $generated@@604 $generated@@46 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@606) $generated@@3)) ($generated@@82 $generated@@606 $generated@@47 $generated@@605))
 :pattern ( ($generated@@82 $generated@@606 $generated@@47 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@608) $generated@@4)) ($generated@@82 $generated@@608 $generated@@44 $generated@@607))
 :pattern ( ($generated@@82 $generated@@608 $generated@@44 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@610) $generated@@467)) ($generated@@82 $generated@@610 $generated@@45 $generated@@609))
 :pattern ( ($generated@@82 $generated@@610 $generated@@45 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@612) $generated@@164)) ($generated@@82 $generated@@612 $generated@@48 $generated@@611))
 :pattern ( ($generated@@82 $generated@@612 $generated@@48 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@299 $generated@@164)) (= (type $generated@@614) $generated@@72)) (= ($generated@@150 $generated@@613 ($generated@@509 $generated@@614)) (forall (($generated@@615 Int) ) (!  (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@298 $generated@@613))) ($generated@@253 ($generated@@510 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@510 $generated@@613 $generated@@615))
))))
 :pattern ( ($generated@@150 $generated@@613 ($generated@@509 $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 Int) ) (!  (=> (= (type $generated@@617) ($generated@@299 $generated@@164)) (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@298 $generated@@617))) (< ($generated@@548 ($generated@@356 $generated@@155 ($generated@@510 $generated@@617 $generated@@618))) ($generated@@616 $generated@@617))))
 :pattern ( ($generated@@548 ($generated@@356 $generated@@155 ($generated@@510 $generated@@617 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@319 $generated@@164 $generated@@164)) (= (type $generated@@620) $generated@@72)) (= (type $generated@@621) $generated@@72)) ($generated@@150 $generated@@619 ($generated@@427 $generated@@620 $generated@@621))) (and (and ($generated@@150 ($generated@@317 $generated@@619) ($generated@@268 $generated@@620)) ($generated@@150 ($generated@@370 $generated@@619) ($generated@@268 $generated@@621))) ($generated@@150 ($generated@@401 $generated@@619) ($generated@@268 ($generated@@154 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@150 $generated@@619 ($generated@@427 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@337 $generated@@164 $generated@@164)) (= (type $generated@@623) $generated@@72)) (= (type $generated@@624) $generated@@72)) ($generated@@150 $generated@@622 ($generated@@435 $generated@@623 $generated@@624))) (and (and ($generated@@150 ($generated@@335 $generated@@622) ($generated@@273 $generated@@623)) ($generated@@150 ($generated@@381 $generated@@622) ($generated@@273 $generated@@624))) ($generated@@150 ($generated@@409 $generated@@622) ($generated@@273 ($generated@@154 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@150 $generated@@622 ($generated@@435 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@2) ($generated@@150 $generated@@625 $generated@@46))
 :pattern ( ($generated@@150 $generated@@625 $generated@@46))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@3) ($generated@@150 $generated@@626 $generated@@47))
 :pattern ( ($generated@@150 $generated@@626 $generated@@47))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@4) ($generated@@150 $generated@@627 $generated@@44))
 :pattern ( ($generated@@150 $generated@@627 $generated@@44))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@467) ($generated@@150 $generated@@628 $generated@@45))
 :pattern ( ($generated@@150 $generated@@628 $generated@@45))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@164) ($generated@@150 $generated@@629 $generated@@48))
 :pattern ( ($generated@@150 $generated@@629 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(declare-fun $generated@@634 () T@U)
(assert  (and (and (and (= (type $generated@@630) ($generated@@181 $generated@@85 $generated@@4)) (= (type $generated@@631) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@632) ($generated@@181 $generated@@85 $generated@@4))) (= (type $generated@@634) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@635  (=> (and (= $generated@@630 ($generated@@235 $generated@@144 $generated@@631 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@150 ($generated@@8 ($generated@@263 0)) $generated@@140))))
(let (($generated@@636 true))
(let (($generated@@637  (=> (= $generated@@632 ($generated@@180 $generated@@144 $generated@@631 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@636) (=> (= (ControlFlow 0 4) 3) $generated@@635)))))
(let (($generated@@638  (=> (and ($generated@@283 $generated@@631) ($generated@@633 $generated@@631)) (=> (and (and (not (= $generated@@634 $generated@@144)) (and ($generated@@150 $generated@@634 $generated@@249) ($generated@@82 $generated@@634 $generated@@249 $generated@@631))) (and (= 1 $generated@@260) (= (ControlFlow 0 5) 4))) $generated@@637))))
$generated@@638)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U) Int)
(declare-fun $generated@@240 (T@U) Int)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (Int) Int)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert  (=> true (forall (($generated@@241 T@U) ) (!  (=> (= (type $generated@@241) $generated@@83) (=> (and (not (= $generated@@241 $generated@@143)) ($generated@@149 $generated@@241 $generated@@236)) (= ($generated@@239 $generated@@241) ($generated@@240 $generated@@241))))
 :pattern ( ($generated@@239 $generated@@241) ($generated@@149 $generated@@241 $generated@@236))
 :pattern ( ($generated@@239 $generated@@241) ($generated@@240 $generated@@241))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@70) (= (type $generated@@247) $generated@@70)) (= (type $generated@@248) $generated@@163)) (= (type $generated@@249) $generated@@163)) (= ($generated@@149 ($generated@@242 $generated@@248 $generated@@249) ($generated@@153 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@149 ($generated@@242 $generated@@248 $generated@@249) ($generated@@153 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@154) (= (type $generated@@251) $generated@@154)) (= ($generated@@160 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@160 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@163) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@243 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@149 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@163) ($generated@@0 ($generated@@87 $generated@@259 $generated@@261))) ($generated@@243 $generated@@261 $generated@@260))
 :pattern ( ($generated@@87 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@149 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@262 $generated@@263) $generated@@263)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(= (type ($generated@@264 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@264 $generated@@267) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@70) (= (type $generated@@271) $generated@@70)) (= (type $generated@@272) $generated@@163)) (= (type $generated@@273) $generated@@163)) (= (type $generated@@274) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@268 $generated@@274)) (= ($generated@@80 ($generated@@242 $generated@@272 $generated@@273) ($generated@@153 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@80 ($generated@@242 $generated@@272 $generated@@273) ($generated@@153 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@74)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@154) (= ($generated@@152 $generated@@277) (= ($generated@@275 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@277))
)))
(assert  (=> true (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@83) (or ($generated@@278 $generated@@279) (and (not (= $generated@@279 $generated@@143)) ($generated@@149 $generated@@279 $generated@@236)))) (= ($generated@@240 $generated@@279) ($generated@@262 0)))
 :pattern ( ($generated@@240 $generated@@279))
))))
(assert  (=> true (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@83) (or ($generated@@280 $generated@@281) (and (not (= $generated@@281 $generated@@143)) ($generated@@149 $generated@@281 $generated@@168)))) (<= ($generated@@262 0) ($generated@@239 $generated@@281)))
 :pattern ( ($generated@@239 $generated@@281))
))))
(assert  (=> true (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@83) (or ($generated@@278 $generated@@282) (and (not (= $generated@@282 $generated@@143)) ($generated@@149 $generated@@282 $generated@@236)))) (<= ($generated@@262 0) ($generated@@240 $generated@@282)))
 :pattern ( ($generated@@240 $generated@@282))
))))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@154) ($generated@@152 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@163) (= (type $generated@@285) $generated@@163)) (= $generated@@283 ($generated@@242 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@152 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@163)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@70) (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@269 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@80 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@269 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@301) $generated@@163)) (= (type $generated@@302) $generated@@70)) ($generated@@138 $generated@@299 $generated@@300)) ($generated@@269 $generated@@301 $generated@@302 $generated@@299)) ($generated@@269 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@138 $generated@@299 $generated@@300) ($generated@@269 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@304) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@306) $generated@@70)) ($generated@@138 $generated@@303 $generated@@304)) ($generated@@80 $generated@@305 $generated@@306 $generated@@303)) ($generated@@80 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@138 $generated@@303 $generated@@304) ($generated@@80 $generated@@305 $generated@@306 $generated@@303))
)))
(assert  (=> true (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@83) (or ($generated@@278 ($generated@@264 $generated@@307)) (and (not (= $generated@@307 $generated@@143)) ($generated@@149 $generated@@307 $generated@@236)))) (= ($generated@@240 ($generated@@264 $generated@@307)) ($generated@@262 0)))
 :weight 3
 :pattern ( ($generated@@240 ($generated@@264 $generated@@307)))
))))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@82 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@85 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@82 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@87 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@82 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@82 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@85 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@82 $generated@@351 $generated@@2)) (= ($generated@@171 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@87 $generated@@350 $generated@@352))) (<= ($generated ($generated@@87 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@87 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@171 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@163) ($generated@@243 $generated@@356 $generated@@236)) (and (= ($generated@@294 ($generated@@353 $generated@@83 $generated@@356)) $generated@@356) ($generated@@149 ($generated@@353 $generated@@83 $generated@@356) $generated@@236)))
 :pattern ( ($generated@@243 $generated@@356 $generated@@236))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@163) ($generated@@243 $generated@@357 $generated@@146)) (and (= ($generated@@294 ($generated@@353 $generated@@83 $generated@@357)) $generated@@357) ($generated@@149 ($generated@@353 $generated@@83 $generated@@357) $generated@@146)))
 :pattern ( ($generated@@243 $generated@@357 $generated@@146))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@163) ($generated@@243 $generated@@358 $generated@@168)) (and (= ($generated@@294 ($generated@@353 $generated@@83 $generated@@358)) $generated@@358) ($generated@@149 ($generated@@353 $generated@@83 $generated@@358) $generated@@168)))
 :pattern ( ($generated@@243 $generated@@358 $generated@@168))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@163) ($generated@@243 $generated@@359 $generated@@142)) (and (= ($generated@@294 ($generated@@353 $generated@@83 $generated@@359)) $generated@@359) ($generated@@149 ($generated@@353 $generated@@83 $generated@@359) $generated@@142)))
 :pattern ( ($generated@@243 $generated@@359 $generated@@142))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@83) (= ($generated@@149 $generated@@360 $generated@@168)  (and ($generated@@149 $generated@@360 $generated@@142) (not (= $generated@@360 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@360 $generated@@168))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@83) (= ($generated@@149 $generated@@361 $generated@@236)  (and ($generated@@149 $generated@@361 $generated@@146) (not (= $generated@@361 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@361 $generated@@236))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@318 (type $generated@@362))))
(let (($generated@@364 ($generated@@317 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@316 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@315 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@314 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@318 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@318 (type $generated@@369))))
(let (($generated@@371 ($generated@@317 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@316 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@315 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@336 (type $generated@@373))))
(let (($generated@@375 ($generated@@335 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@334 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@333 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@332 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@336 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@82 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@336 (type $generated@@380))))
(let (($generated@@382 ($generated@@335 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@334 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@333 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@385) $generated@@70)) (= ($generated@@149 $generated@@384 ($generated@@170 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@384 $generated@@386)))) ($generated@@243 $generated@@386 $generated@@385))
 :pattern ( ($generated@@87 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@149 $generated@@384 ($generated@@170 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@252 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@163) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@269 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@252 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@257 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@163) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@269 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@257 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@87 ($generated@@309 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@87 ($generated@@309 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@404) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@403) ($generated@@161 ($generated@@353 $generated@@154 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@161 ($generated@@353 $generated@@154 $generated@@404))) ($generated@@162 ($generated@@353 $generated@@154 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@412) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@411) ($generated@@161 ($generated@@353 $generated@@154 $generated@@412)))) (= ($generated@@87 ($generated@@406 $generated@@411) ($generated@@161 ($generated@@353 $generated@@154 $generated@@412))) ($generated@@162 ($generated@@353 $generated@@154 $generated@@412))))))
 :pattern ( ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@87 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@269 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@269 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@269 ($generated@@87 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@269 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@440) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@441) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@439 $generated@@441))) (and ($generated@@138 $generated@@439 $generated@@440) ($generated@@138 $generated@@440 $generated@@441))) ($generated@@138 $generated@@439 $generated@@441))
 :pattern ( ($generated@@138 $generated@@439 $generated@@440) ($generated@@138 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@82 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@336 (type $generated@@444))))
(let (($generated@@446 ($generated@@335 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@334 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@333 $generated@@446 $generated@@445)) (= ($generated@@332 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@332 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@336 (type $generated@@447))))
(let (($generated@@449 ($generated@@335 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@334 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@333 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@336 (type $generated@@450))))
(let (($generated@@452 ($generated@@335 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@334 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@333 $generated@@452 $generated@@451)) (= ($generated@@405 $generated@@450) ($generated@@442 $generated@@163))))))
 :pattern ( ($generated@@405 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@318 (type $generated@@453))))
(let (($generated@@455 ($generated@@317 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@316 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@315 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@163) (= (type $generated@@457) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@453) ($generated@@294 ($generated@@242 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@336 (type $generated@@458))))
(let (($generated@@460 ($generated@@335 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@334 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@333 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@163) (= (type $generated@@462) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@405 $generated@@458) ($generated@@294 ($generated@@242 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@243 $generated@@463 $generated@@46)) (and (= ($generated@@294 ($generated@@353 $generated@@2 $generated@@463)) $generated@@463) ($generated@@149 ($generated@@353 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) ($generated@@243 $generated@@464 $generated@@47)) (and (= ($generated@@294 ($generated@@353 $generated@@3 $generated@@464)) $generated@@464) ($generated@@149 ($generated@@353 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@163) ($generated@@243 $generated@@465 $generated@@44)) (and (= ($generated@@294 ($generated@@353 $generated@@4 $generated@@465)) $generated@@465) ($generated@@149 ($generated@@353 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@163) ($generated@@243 $generated@@467 $generated@@45)) (and (= ($generated@@294 ($generated@@353 $generated@@466 $generated@@467)) $generated@@467) ($generated@@149 ($generated@@353 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@70) (= ($generated@@243 ($generated@@294 $generated@@468) $generated@@469) ($generated@@149 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@243 ($generated@@294 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@85 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@82 $generated@@471 $generated@@2)) (<= 0 ($generated@@308 $generated@@470))))
 :pattern ( ($generated@@308 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@289 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@288 $generated@@473)) (<= 0 ($generated@@287 $generated@@472))))
 :pattern ( ($generated@@287 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@423 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@423 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@423 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@431 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@431 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@431 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@431 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@78 ($generated@@431 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@163) (= (type $generated@@495) $generated@@163)) (= ($generated@@275 ($generated@@242 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@153 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@153 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@153 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@153 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@163) (= (type $generated@@505) $generated@@163)) (= ($generated@@161 ($generated@@242 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@242 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@163) (= (type $generated@@507) $generated@@163)) (= ($generated@@162 ($generated@@242 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@242 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ($generated@@512 Int) ) (! (let (($generated@@513 ($generated@@289 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511 $generated@@512)) $generated@@513))
 :pattern ( ($generated@@509 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@288 $generated@@163)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@514 ($generated@@508 $generated@@515) $generated@@516) (forall (($generated@@517 Int) ) (!  (=> (and (<= 0 $generated@@517) (< $generated@@517 ($generated@@287 $generated@@514))) ($generated@@269 ($generated@@509 $generated@@514 $generated@@517) $generated@@515 $generated@@516))
 :pattern ( ($generated@@509 $generated@@514 $generated@@517))
))))
 :pattern ( ($generated@@80 $generated@@514 ($generated@@508 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@81 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@81 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@252 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@252 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@252 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@257 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@257 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@257 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@170 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@170 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@508 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@508 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@78 ($generated@@508 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@508 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@353 $generated@@537 ($generated@@294 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@294 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) (= ($generated@@149 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@538) $generated@@541))) (and ($generated@@243 ($generated@@87 ($generated@@398 $generated@@538) $generated@@541) $generated@@540) ($generated@@243 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@538) $generated@@541))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@423 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@149 $generated@@542 ($generated@@431 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@542) $generated@@545))) (and ($generated@@243 ($generated@@87 ($generated@@406 $generated@@542) $generated@@545) $generated@@544) ($generated@@243 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@149 $generated@@542 ($generated@@431 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) (= (type $generated@@549) $generated@@163)) (< ($generated@@546 $generated@@548) ($generated@@547 ($generated@@242 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@242 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@163) (= (type $generated@@551) $generated@@163)) (< ($generated@@546 $generated@@551) ($generated@@547 ($generated@@242 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@242 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@163) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@70)) ($generated@@243 $generated@@552 ($generated@@423 $generated@@553 $generated@@554))) (and (= ($generated@@294 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@552)) $generated@@552) ($generated@@149 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@552) ($generated@@423 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@552 ($generated@@423 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@70)) ($generated@@243 $generated@@555 ($generated@@431 $generated@@556 $generated@@557))) (and (= ($generated@@294 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@555)) $generated@@555) ($generated@@149 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@555) ($generated@@431 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@243 $generated@@555 ($generated@@431 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@163)) ($generated@@243 $generated@@560 ($generated@@153 $generated@@558 $generated@@559))) (and (= ($generated@@294 ($generated@@353 $generated@@154 $generated@@560)) $generated@@560) ($generated@@149 ($generated@@353 $generated@@154 $generated@@560) ($generated@@153 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@243 $generated@@560 ($generated@@153 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@87 ($generated@@442 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@87 ($generated@@442 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@75)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@70) (= (type $generated@@566) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@565 $generated@@566)) $generated@@62) (= ($generated@@563 ($generated@@153 $generated@@565 $generated@@566)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@154) (= ($generated@@546 ($generated@@294 $generated@@567)) ($generated@@547 $generated@@567)))
 :pattern ( ($generated@@546 ($generated@@294 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@163) ($generated@@243 $generated@@568 ($generated@@81 0))) (and (= ($generated@@294 ($generated@@353 $generated@@2 $generated@@568)) $generated@@568) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@568) ($generated@@81 0))))
 :pattern ( ($generated@@243 $generated@@568 ($generated@@81 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@70)) ($generated@@243 $generated@@569 ($generated@@252 $generated@@570))) (and (= ($generated@@294 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@569) ($generated@@252 $generated@@570))))
 :pattern ( ($generated@@243 $generated@@569 ($generated@@252 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@163) (= (type $generated@@572) $generated@@70)) ($generated@@243 $generated@@571 ($generated@@257 $generated@@572))) (and (= ($generated@@294 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@571)) $generated@@571) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@4) $generated@@571) ($generated@@257 $generated@@572))))
 :pattern ( ($generated@@243 $generated@@571 ($generated@@257 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@163) (= (type $generated@@574) $generated@@70)) ($generated@@243 $generated@@573 ($generated@@170 $generated@@574))) (and (= ($generated@@294 ($generated@@353 ($generated@@82 $generated@@163 $generated@@2) $generated@@573)) $generated@@573) ($generated@@149 ($generated@@353 ($generated@@82 $generated@@163 $generated@@2) $generated@@573) ($generated@@170 $generated@@574))))
 :pattern ( ($generated@@243 $generated@@573 ($generated@@170 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@163) (= (type $generated@@576) $generated@@70)) ($generated@@243 $generated@@575 ($generated@@508 $generated@@576))) (and (= ($generated@@294 ($generated@@353 ($generated@@288 $generated@@163) $generated@@575)) $generated@@575) ($generated@@149 ($generated@@353 ($generated@@288 $generated@@163) $generated@@575) ($generated@@508 $generated@@576))))
 :pattern ( ($generated@@243 $generated@@575 ($generated@@508 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@83) (= (type $generated@@578) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@577 $generated@@143)) ($generated@@80 $generated@@577 $generated@@146 $generated@@578))) ($generated@@80 $generated@@577 $generated@@168 $generated@@578))
 :pattern ( ($generated@@80 $generated@@577 $generated@@146 $generated@@578))
)))
(assert (= ($generated@@78 $generated@@236) $generated@@63))
(assert (= ($generated@@563 $generated@@236) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@64))
(assert (= ($generated@@563 $generated@@146) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@65))
(assert (= ($generated@@563 $generated@@168) $generated@@69))
(assert (= ($generated@@78 $generated@@142) $generated@@66))
(assert (= ($generated@@563 $generated@@142) $generated@@69))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@579 ($generated@@170 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@579 $generated@@582)))) ($generated@@269 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@87 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@80 $generated@@579 ($generated@@170 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@83) (= ($generated@@149 $generated@@583 $generated@@142)  (or (= $generated@@583 $generated@@143) ($generated@@151 ($generated@@175 $generated@@583)))))
 :pattern ( ($generated@@149 $generated@@583 $generated@@142))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@268 $generated@@586) (and ($generated@@152 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@70) ($generated@@80 $generated@@584 ($generated@@153 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@153 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@269 ($generated@@161 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@269 ($generated@@161 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@154) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@268 $generated@@590) (and ($generated@@152 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@70) ($generated@@80 $generated@@588 ($generated@@153 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 $generated@@588 ($generated@@153 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@269 ($generated@@162 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@269 ($generated@@162 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@163) (= (type $generated@@593) $generated@@163)) (= ($generated@@242 ($generated@@264 $generated@@592) ($generated@@264 $generated@@593)) ($generated@@264 ($generated@@242 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@242 ($generated@@264 $generated@@592) ($generated@@264 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@262 $generated@@594))) ($generated@@264 ($generated@@294 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@262 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@294 ($generated@@264 $generated@@595)) ($generated@@264 ($generated@@294 $generated@@595)))
 :pattern ( ($generated@@294 ($generated@@264 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@289 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@288 $generated@@597)) (= ($generated@@287 $generated@@596) 0)) (= $generated@@596 ($generated@@286 $generated@@597))))
 :pattern ( ($generated@@287 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@82 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@308 ($generated@@88 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@308 $generated@@598) ($generated ($generated@@87 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@308 ($generated@@88 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@2)) ($generated@@80 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@3)) ($generated@@80 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@607) $generated@@4)) ($generated@@80 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@80 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@609) $generated@@466)) ($generated@@80 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@80 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@611) $generated@@163)) ($generated@@80 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@80 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@288 $generated@@163)) (= (type $generated@@613) $generated@@70)) (= ($generated@@149 $generated@@612 ($generated@@508 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@287 $generated@@612))) ($generated@@243 ($generated@@509 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@509 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@508 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@288 $generated@@163)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@287 $generated@@616))) (< ($generated@@547 ($generated@@353 $generated@@154 ($generated@@509 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@547 ($generated@@353 $generated@@154 ($generated@@509 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@619) $generated@@70)) (= (type $generated@@620) $generated@@70)) ($generated@@149 $generated@@618 ($generated@@423 $generated@@619 $generated@@620))) (and (and ($generated@@149 ($generated@@314 $generated@@618) ($generated@@252 $generated@@619)) ($generated@@149 ($generated@@366 $generated@@618) ($generated@@252 $generated@@620))) ($generated@@149 ($generated@@397 $generated@@618) ($generated@@252 ($generated@@153 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@423 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@149 $generated@@621 ($generated@@431 $generated@@622 $generated@@623))) (and (and ($generated@@149 ($generated@@332 $generated@@621) ($generated@@257 $generated@@622)) ($generated@@149 ($generated@@377 $generated@@621) ($generated@@257 $generated@@623))) ($generated@@149 ($generated@@405 $generated@@621) ($generated@@257 ($generated@@153 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@431 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@149 $generated@@624 $generated@@46))
 :pattern ( ($generated@@149 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@149 $generated@@625 $generated@@47))
 :pattern ( ($generated@@149 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@149 $generated@@626 $generated@@44))
 :pattern ( ($generated@@149 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@466) ($generated@@149 $generated@@627 $generated@@45))
 :pattern ( ($generated@@149 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@163) ($generated@@149 $generated@@628 $generated@@48))
 :pattern ( ($generated@@149 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 (T@U) Bool)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@629) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@630) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@631) $generated@@83)) (= (type $generated@@632) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@634) $generated@@83)) (= (type $generated@@635) $generated@@83)) (= (type $generated@@637) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@639  (=> (= $generated@@629 ($generated@@179 $generated@@143 $generated@@630 $generated@@60 false)) (=> (and (and (not (= $generated@@631 $generated@@143)) (and ($generated@@149 $generated@@631 $generated@@236) ($generated@@80 $generated@@631 $generated@@236 $generated@@630))) (and ($generated@@268 $generated@@632) ($generated@@633 $generated@@632))) (=> (and (and (and (not (= $generated@@634 $generated@@143)) (and ($generated@@149 $generated@@634 $generated@@236) ($generated@@80 $generated@@634 $generated@@236 $generated@@632))) (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@630 $generated@@634) $generated@@60)))) (and (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@83) (=> (and (not (= $generated@@640 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@630 $generated@@640) $generated@@60))) (= ($generated@@87 $generated@@632 $generated@@640) ($generated@@87 $generated@@630 $generated@@640))))
 :pattern ( ($generated@@87 $generated@@632 $generated@@640))
)) ($generated@@138 $generated@@630 $generated@@632))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@149 $generated@@634 $generated@@168)) (=> ($generated@@149 $generated@@634 $generated@@168) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@634 $generated@@143))) (=> (and (and ($generated@@80 $generated@@634 $generated@@142 $generated@@632) ($generated@@280 $generated@@634)) (and ($generated@@280 $generated@@634) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@239 $generated@@634) ($generated@@262 0)))))))))))
(let (($generated@@641  (=> (and ($generated@@268 $generated@@630) ($generated@@633 $generated@@630)) (=> (and (and (and ($generated@@149 $generated@@635 $generated@@142) ($generated@@80 $generated@@635 $generated@@142 $generated@@630)) true) (and (and (=> $generated@@636 (and ($generated@@149 $generated@@637 $generated@@168) ($generated@@80 $generated@@637 $generated@@168 $generated@@630))) true) (and (= 1 $generated@@638) (= (ControlFlow 0 5) 2)))) $generated@@639))))
$generated@@641)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (Int) Int)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@150)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@70) (= (type $generated@@240) $generated@@70)) (= (type $generated@@241) $generated@@159)) (= (type $generated@@242) $generated@@159)) (= ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@241 $generated@@242) ($generated@@149 $generated@@239 $generated@@240)))
)))
(assert  (=> (<= 1 $generated@@243) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@83) (or ($generated@@245 $generated@@247) (and (not (= 1 $generated@@243)) (and (not (= $generated@@247 $generated@@139)) ($generated@@145 $generated@@247 $generated@@232))))) (= ($generated@@244 $generated@@247) ($generated@@246 0)))
 :pattern ( ($generated@@244 $generated@@247))
))))
(assert  (=> (<= 1 $generated@@243) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@83) (or ($generated@@245 $generated@@248) (and (not (= 1 $generated@@243)) (and (not (= $generated@@248 $generated@@139)) ($generated@@145 $generated@@248 $generated@@232))))) (<= ($generated@@246 0) ($generated@@244 $generated@@248)))
 :pattern ( ($generated@@244 $generated@@248))
))))
(assert  (=> (<= 2 $generated@@243) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@83) (or ($generated@@250 $generated@@251) (and (not (= 2 $generated@@243)) (and (not (= $generated@@251 $generated@@139)) ($generated@@145 $generated@@251 $generated@@164))))) (<= ($generated@@246 0) ($generated@@249 $generated@@251)))
 :pattern ( ($generated@@249 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) (= (type $generated@@253) $generated@@150)) (= ($generated@@156 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@156 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@159) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@236 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@145 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@159) ($generated@@0 ($generated@@87 $generated@@261 $generated@@263))) ($generated@@236 $generated@@263 $generated@@262))
 :pattern ( ($generated@@87 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@145 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@246 $generated@@264) $generated@@264)
 :pattern ( ($generated@@246 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@70)) (= (type $generated@@273) $generated@@159)) (= (type $generated@@274) $generated@@159)) (= (type $generated@@275) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@269 $generated@@275)) (= ($generated@@80 ($generated@@235 $generated@@273 $generated@@274) ($generated@@149 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@80 ($generated@@235 $generated@@273 $generated@@274) ($generated@@149 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@74)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@150) (= ($generated@@148 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@278))
)))
(assert  (=> (<= 1 $generated@@243) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@83) (or ($generated@@245 ($generated@@265 $generated@@279)) (and (not (= 1 $generated@@243)) (and (not (= $generated@@279 $generated@@139)) ($generated@@145 $generated@@279 $generated@@232))))) (= ($generated@@244 ($generated@@265 $generated@@279)) ($generated@@246 0)))
 :weight 3
 :pattern ( ($generated@@244 ($generated@@265 $generated@@279)))
))))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@150) ($generated@@148 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@159) (= (type $generated@@282) $generated@@159)) (= $generated@@280 ($generated@@235 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@148 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@159)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@70) (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@80 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@82 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@85 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@82 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@87 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@82 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@87 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@87 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@82 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@85 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@82 $generated@@339 $generated@@2)) (= ($generated@@167 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@87 $generated@@338 $generated@@340))) (<= ($generated ($generated@@87 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@87 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@167 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@159) ($generated@@236 $generated@@344 $generated@@138)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@344)) $generated@@344) ($generated@@145 ($generated@@341 $generated@@83 $generated@@344) $generated@@138)))
 :pattern ( ($generated@@236 $generated@@344 $generated@@138))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@159) ($generated@@236 $generated@@345 $generated@@164)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@345)) $generated@@345) ($generated@@145 ($generated@@341 $generated@@83 $generated@@345) $generated@@164)))
 :pattern ( ($generated@@236 $generated@@345 $generated@@164))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@159) ($generated@@236 $generated@@346 $generated@@142)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@346)) $generated@@346) ($generated@@145 ($generated@@341 $generated@@83 $generated@@346) $generated@@142)))
 :pattern ( ($generated@@236 $generated@@346 $generated@@142))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@159) ($generated@@236 $generated@@347 $generated@@232)) (and (= ($generated@@291 ($generated@@341 $generated@@83 $generated@@347)) $generated@@347) ($generated@@145 ($generated@@341 $generated@@83 $generated@@347) $generated@@232)))
 :pattern ( ($generated@@236 $generated@@347 $generated@@232))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@83) (= ($generated@@145 $generated@@348 $generated@@164)  (and ($generated@@145 $generated@@348 $generated@@138) (not (= $generated@@348 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@348 $generated@@164))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@145 $generated@@349 $generated@@232)  (and ($generated@@145 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@349 $generated@@232))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@306 (type $generated@@350))))
(let (($generated@@352 ($generated@@305 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@304 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@303 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@302 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@306 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@82 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@306 (type $generated@@357))))
(let (($generated@@359 ($generated@@305 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@304 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@303 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@324 (type $generated@@361))))
(let (($generated@@363 ($generated@@323 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@322 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@321 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@320 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@324 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@82 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@324 (type $generated@@368))))
(let (($generated@@370 ($generated@@323 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@322 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@321 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@373) $generated@@70)) (= ($generated@@145 $generated@@372 ($generated@@166 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@372 $generated@@374)))) ($generated@@236 $generated@@374 $generated@@373))
 :pattern ( ($generated@@87 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@145 $generated@@372 ($generated@@166 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@375 ($generated@@254 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) ($generated@@0 ($generated@@87 $generated@@375 $generated@@378))) ($generated@@270 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@87 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@80 $generated@@375 ($generated@@254 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@259 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@159) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@270 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@259 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@87 ($generated@@297 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@87 ($generated@@297 $generated@@384) $generated@@383)))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@306 (type $generated@@388))))
(let (($generated@@390 ($generated@@305 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@392) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@87 ($generated@@302 $generated@@391) ($generated@@157 ($generated@@341 $generated@@150 $generated@@392)))) (= ($generated@@87 ($generated@@386 $generated@@391) ($generated@@157 ($generated@@341 $generated@@150 $generated@@392))) ($generated@@158 ($generated@@341 $generated@@150 $generated@@392))))))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@324 (type $generated@@396))))
(let (($generated@@398 ($generated@@323 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@400) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@399) ($generated@@157 ($generated@@341 $generated@@150 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@157 ($generated@@341 $generated@@150 $generated@@400))) ($generated@@158 ($generated@@341 $generated@@150 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@305 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@304 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@87 ($generated@@354 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@87 ($generated@@302 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@87 ($generated@@386 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@87 ($generated@@354 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@323 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@322 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@87 ($generated@@365 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@87 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@406) $generated@@410))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@87 ($generated@@365 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@70)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@414) $generated@@418))) (and ($generated@@270 ($generated@@87 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@270 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@422) $generated@@426))) (and ($generated@@270 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@270 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@82 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@324 (type $generated@@429))))
(let (($generated@@431 ($generated@@323 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@322 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@321 $generated@@431 $generated@@430)) (= ($generated@@320 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@320 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@324 (type $generated@@432))))
(let (($generated@@434 ($generated@@323 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@322 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@321 $generated@@434 $generated@@433)) (= ($generated@@365 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@365 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@324 (type $generated@@435))))
(let (($generated@@437 ($generated@@323 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@322 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@321 $generated@@437 $generated@@436)) (= ($generated@@393 $generated@@435) ($generated@@427 $generated@@159))))))
 :pattern ( ($generated@@393 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@306 (type $generated@@438))))
(let (($generated@@440 ($generated@@305 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@304 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@303 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@159) (= (type $generated@@442) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@385 $generated@@438) ($generated@@291 ($generated@@235 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@324 (type $generated@@443))))
(let (($generated@@445 ($generated@@323 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@322 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@321 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@159) (= (type $generated@@447) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@443) ($generated@@291 ($generated@@235 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@393 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@236 $generated@@448 $generated@@46)) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@341 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@159) ($generated@@236 $generated@@449 $generated@@47)) (and (= ($generated@@291 ($generated@@341 $generated@@3 $generated@@449)) $generated@@449) ($generated@@145 ($generated@@341 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@236 $generated@@450 $generated@@44)) (and (= ($generated@@291 ($generated@@341 $generated@@4 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@341 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@159) ($generated@@236 $generated@@452 $generated@@45)) (and (= ($generated@@291 ($generated@@341 $generated@@451 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@341 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@70) (= ($generated@@236 ($generated@@291 $generated@@453) $generated@@454) ($generated@@145 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@236 ($generated@@291 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@85 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@82 $generated@@456 $generated@@2)) (<= 0 ($generated@@296 $generated@@455))))
 :pattern ( ($generated@@296 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@286 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@285 $generated@@458)) (<= 0 ($generated@@284 $generated@@457))))
 :pattern ( ($generated@@284 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@411 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@411 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@78 ($generated@@411 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@159) (= (type $generated@@480) $generated@@159)) (= ($generated@@276 ($generated@@235 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@149 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@149 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@149 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@149 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@159) (= (type $generated@@490) $generated@@159)) (= ($generated@@157 ($generated@@235 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@235 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@159) (= (type $generated@@492) $generated@@159)) (= ($generated@@158 ($generated@@235 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@235 $generated@@491 $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@286 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@285 $generated@@159)) (= (type $generated@@500) $generated@@70)) (= (type $generated@@501) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@284 $generated@@499))) ($generated@@270 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@81 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@81 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@254 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@254 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@259 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@259 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@259 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@166 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@341 $generated@@522 ($generated@@291 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@291 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@523) $generated@@526))) (and ($generated@@236 ($generated@@87 ($generated@@386 $generated@@523) $generated@@526) $generated@@525) ($generated@@236 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@145 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@527) $generated@@530))) (and ($generated@@236 ($generated@@87 ($generated@@394 $generated@@527) $generated@@530) $generated@@529) ($generated@@236 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@145 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) (= (type $generated@@534) $generated@@159)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@235 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@235 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@159) (= (type $generated@@536) $generated@@159)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@235 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@235 $generated@@535 $generated@@536))
)))
(assert  (=> (<= 2 $generated@@243) (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@83) (=> (and (not (= $generated@@537 $generated@@139)) ($generated@@145 $generated@@537 $generated@@232)) (= ($generated@@249 $generated@@537) ($generated@@244 $generated@@537))))
 :pattern ( ($generated@@249 $generated@@537) ($generated@@145 $generated@@537 $generated@@232))
 :pattern ( ($generated@@249 $generated@@537) ($generated@@244 $generated@@537))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@159) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) ($generated@@236 $generated@@538 ($generated@@411 $generated@@539 $generated@@540))) (and (= ($generated@@291 ($generated@@341 ($generated@@304 $generated@@159 $generated@@159) $generated@@538)) $generated@@538) ($generated@@145 ($generated@@341 ($generated@@304 $generated@@159 $generated@@159) $generated@@538) ($generated@@411 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@236 $generated@@538 ($generated@@411 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@159) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) ($generated@@236 $generated@@541 ($generated@@419 $generated@@542 $generated@@543))) (and (= ($generated@@291 ($generated@@341 ($generated@@322 $generated@@159 $generated@@159) $generated@@541)) $generated@@541) ($generated@@145 ($generated@@341 ($generated@@322 $generated@@159 $generated@@159) $generated@@541) ($generated@@419 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@236 $generated@@541 ($generated@@419 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@70) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@159)) ($generated@@236 $generated@@546 ($generated@@149 $generated@@544 $generated@@545))) (and (= ($generated@@291 ($generated@@341 $generated@@150 $generated@@546)) $generated@@546) ($generated@@145 ($generated@@341 $generated@@150 $generated@@546) ($generated@@149 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@236 $generated@@546 ($generated@@149 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@87 ($generated@@427 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@87 ($generated@@427 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@75)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@551 $generated@@552)) $generated@@62) (= ($generated@@549 ($generated@@149 $generated@@551 $generated@@552)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@150) (= ($generated@@531 ($generated@@291 $generated@@553)) ($generated@@532 $generated@@553)))
 :pattern ( ($generated@@531 ($generated@@291 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@159) ($generated@@236 $generated@@554 ($generated@@81 0))) (and (= ($generated@@291 ($generated@@341 $generated@@2 $generated@@554)) $generated@@554) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@554) ($generated@@81 0))))
 :pattern ( ($generated@@236 $generated@@554 ($generated@@81 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@159) (= (type $generated@@556) $generated@@70)) ($generated@@236 $generated@@555 ($generated@@254 $generated@@556))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@555)) $generated@@555) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@555) ($generated@@254 $generated@@556))))
 :pattern ( ($generated@@236 $generated@@555 ($generated@@254 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@159) (= (type $generated@@558) $generated@@70)) ($generated@@236 $generated@@557 ($generated@@259 $generated@@558))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@557)) $generated@@557) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@557) ($generated@@259 $generated@@558))))
 :pattern ( ($generated@@236 $generated@@557 ($generated@@259 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@159) (= (type $generated@@560) $generated@@70)) ($generated@@236 $generated@@559 ($generated@@166 $generated@@560))) (and (= ($generated@@291 ($generated@@341 ($generated@@82 $generated@@159 $generated@@2) $generated@@559)) $generated@@559) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@2) $generated@@559) ($generated@@166 $generated@@560))))
 :pattern ( ($generated@@236 $generated@@559 ($generated@@166 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@159) (= (type $generated@@562) $generated@@70)) ($generated@@236 $generated@@561 ($generated@@493 $generated@@562))) (and (= ($generated@@291 ($generated@@341 ($generated@@285 $generated@@159) $generated@@561)) $generated@@561) ($generated@@145 ($generated@@341 ($generated@@285 $generated@@159) $generated@@561) ($generated@@493 $generated@@562))))
 :pattern ( ($generated@@236 $generated@@561 ($generated@@493 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@83) (= (type $generated@@564) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@563 $generated@@139)) ($generated@@80 $generated@@563 $generated@@142 $generated@@564))) ($generated@@80 $generated@@563 $generated@@164 $generated@@564))
 :pattern ( ($generated@@80 $generated@@563 $generated@@142 $generated@@564))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@549 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@64))
(assert (= ($generated@@549 $generated@@164) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@549 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@232) $generated@@66))
(assert (= ($generated@@549 $generated@@232) $generated@@69))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@566) $generated@@70)) (= (type $generated@@567) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@565 ($generated@@166 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@565 $generated@@568)))) ($generated@@270 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@87 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@80 $generated@@565 ($generated@@166 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@83) (= ($generated@@145 $generated@@569 $generated@@138)  (or (= $generated@@569 $generated@@139) ($generated@@147 ($generated@@171 $generated@@569)))))
 :pattern ( ($generated@@145 $generated@@569 $generated@@138))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@150) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@269 $generated@@572) (and ($generated@@148 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@70) ($generated@@80 $generated@@570 ($generated@@149 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@149 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@270 ($generated@@157 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@270 ($generated@@157 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@150) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@269 $generated@@576) (and ($generated@@148 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@70) ($generated@@80 $generated@@574 ($generated@@149 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@80 $generated@@574 ($generated@@149 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@270 ($generated@@158 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@270 ($generated@@158 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@159) (= (type $generated@@579) $generated@@159)) (= ($generated@@235 ($generated@@265 $generated@@578) ($generated@@265 $generated@@579)) ($generated@@265 ($generated@@235 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@235 ($generated@@265 $generated@@578) ($generated@@265 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@246 $generated@@580))) ($generated@@265 ($generated@@291 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@246 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@291 ($generated@@265 $generated@@581)) ($generated@@265 ($generated@@291 $generated@@581)))
 :pattern ( ($generated@@291 ($generated@@265 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@286 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@285 $generated@@583)) (= ($generated@@284 $generated@@582) 0)) (= $generated@@582 ($generated@@283 $generated@@583))))
 :pattern ( ($generated@@284 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@82 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@296 ($generated@@88 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@296 $generated@@584) ($generated ($generated@@87 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@296 ($generated@@88 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@589) $generated@@2)) ($generated@@80 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@80 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@3)) ($generated@@80 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@4)) ($generated@@80 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@451)) ($generated@@80 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@159)) ($generated@@80 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@285 $generated@@159)) (= (type $generated@@599) $generated@@70)) (= ($generated@@145 $generated@@598 ($generated@@493 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@284 $generated@@598))) ($generated@@236 ($generated@@494 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@494 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@145 $generated@@598 ($generated@@493 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@285 $generated@@159)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@284 $generated@@602))) (< ($generated@@532 ($generated@@341 $generated@@150 ($generated@@494 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@532 ($generated@@341 $generated@@150 ($generated@@494 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) $generated@@70)) ($generated@@145 $generated@@604 ($generated@@411 $generated@@605 $generated@@606))) (and (and ($generated@@145 ($generated@@302 $generated@@604) ($generated@@254 $generated@@605)) ($generated@@145 ($generated@@354 $generated@@604) ($generated@@254 $generated@@606))) ($generated@@145 ($generated@@385 $generated@@604) ($generated@@254 ($generated@@149 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@145 $generated@@604 ($generated@@411 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) $generated@@70)) ($generated@@145 $generated@@607 ($generated@@419 $generated@@608 $generated@@609))) (and (and ($generated@@145 ($generated@@320 $generated@@607) ($generated@@259 $generated@@608)) ($generated@@145 ($generated@@365 $generated@@607) ($generated@@259 $generated@@609))) ($generated@@145 ($generated@@393 $generated@@607) ($generated@@259 ($generated@@149 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@145 $generated@@607 ($generated@@419 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@145 $generated@@610 $generated@@46))
 :pattern ( ($generated@@145 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@145 $generated@@611 $generated@@47))
 :pattern ( ($generated@@145 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@145 $generated@@612 $generated@@44))
 :pattern ( ($generated@@145 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@451) ($generated@@145 $generated@@613 $generated@@45))
 :pattern ( ($generated@@145 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@159) ($generated@@145 $generated@@614 $generated@@48))
 :pattern ( ($generated@@145 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 (T@U) Bool)
(declare-fun $generated@@618 () T@U)
(assert  (and (and (= (type $generated@@615) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@616) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@618) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@619  (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@615 ($generated@@175 $generated@@139 $generated@@616 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@620 T@T) )  (=> false false))))))
(let (($generated@@621  (=> (and ($generated@@269 $generated@@616) ($generated@@617 $generated@@616)) (=> (and (and (not (= $generated@@618 $generated@@139)) (and ($generated@@145 $generated@@618 $generated@@232) ($generated@@80 $generated@@618 $generated@@232 $generated@@616))) (and (= 2 $generated@@243) (= (ControlFlow 0 4) 2))) $generated@@619))))
$generated@@621)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@462 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert  (=> true (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@83) (or ($generated@@276 $generated@@277) (and (not (= $generated@@277 $generated@@143)) ($generated@@149 $generated@@277 $generated@@236)))) (= ($generated@@275 $generated@@277) ($generated@@259 0)))
 :pattern ( ($generated@@275 $generated@@277))
))))
(assert  (=> true (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@83) (or ($generated@@276 $generated@@278) (and (not (= $generated@@278 $generated@@143)) ($generated@@149 $generated@@278 $generated@@236)))) (<= ($generated@@259 0) ($generated@@275 $generated@@278)))
 :pattern ( ($generated@@275 $generated@@278))
))))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@154) ($generated@@152 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@163) (= (type $generated@@281) $generated@@163)) (= $generated@@279 ($generated@@239 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@152 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@163)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@80 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@266 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@297) $generated@@163)) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@266 $generated@@297 $generated@@298 $generated@@295)) ($generated@@266 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@266 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@302) $generated@@70)) ($generated@@138 $generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@302 $generated@@299)) ($generated@@80 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@138 $generated@@299 $generated@@300) ($generated@@80 $generated@@301 $generated@@302 $generated@@299))
)))
(assert  (=> true (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@83) (or ($generated@@276 ($generated@@261 $generated@@303)) (and (not (= $generated@@303 $generated@@143)) ($generated@@149 $generated@@303 $generated@@236)))) (= ($generated@@275 ($generated@@261 $generated@@303)) ($generated@@259 0)))
 :weight 3
 :pattern ( ($generated@@275 ($generated@@261 $generated@@303)))
))))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@82 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@85 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@82 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@87 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@82 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@87 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@87 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@82 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@87 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@87 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@85 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@82 $generated@@347 $generated@@2)) (= ($generated@@171 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@87 $generated@@346 $generated@@348))) (<= ($generated ($generated@@87 $generated@@346 $generated@@348)) ($generated@@304 $generated@@346))))
 :pattern ( ($generated@@87 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@171 $generated@@346))
)))
(assert (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@163) ($generated@@240 $generated@@352 $generated@@236)) (and (= ($generated@@290 ($generated@@349 $generated@@83 $generated@@352)) $generated@@352) ($generated@@149 ($generated@@349 $generated@@83 $generated@@352) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@163) ($generated@@240 $generated@@353 $generated@@146)) (and (= ($generated@@290 ($generated@@349 $generated@@83 $generated@@353)) $generated@@353) ($generated@@149 ($generated@@349 $generated@@83 $generated@@353) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@353 $generated@@146))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@163) ($generated@@240 $generated@@354 $generated@@168)) (and (= ($generated@@290 ($generated@@349 $generated@@83 $generated@@354)) $generated@@354) ($generated@@149 ($generated@@349 $generated@@83 $generated@@354) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@354 $generated@@168))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@163) ($generated@@240 $generated@@355 $generated@@142)) (and (= ($generated@@290 ($generated@@349 $generated@@83 $generated@@355)) $generated@@355) ($generated@@149 ($generated@@349 $generated@@83 $generated@@355) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@355 $generated@@142))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@83) (= ($generated@@149 $generated@@356 $generated@@168)  (and ($generated@@149 $generated@@356 $generated@@142) (not (= $generated@@356 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@356 $generated@@168))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@83) (= ($generated@@149 $generated@@357 $generated@@236)  (and ($generated@@149 $generated@@357 $generated@@146) (not (= $generated@@357 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@357 $generated@@236))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@310 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@310 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@314 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@82 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@314 (type $generated@@365))))
(let (($generated@@367 ($generated@@313 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@312 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@311 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@87 ($generated@@328 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@328 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@332 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@82 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@332 (type $generated@@376))))
(let (($generated@@378 ($generated@@331 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@330 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@329 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@87 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@381) $generated@@70)) (= ($generated@@149 $generated@@380 ($generated@@170 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@380 $generated@@382)))) ($generated@@240 $generated@@382 $generated@@381))
 :pattern ( ($generated@@87 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@149 $generated@@380 ($generated@@170 $generated@@381)))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@163) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@266 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@163) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@266 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@87 ($generated@@305 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@87 ($generated@@305 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@314 (type $generated@@396))))
(let (($generated@@398 ($generated@@313 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@400) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@310 $generated@@399) ($generated@@161 ($generated@@349 $generated@@154 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@161 ($generated@@349 $generated@@154 $generated@@400))) ($generated@@162 ($generated@@349 $generated@@154 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@332 (type $generated@@404))))
(let (($generated@@406 ($generated@@331 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@408) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@328 $generated@@407) ($generated@@161 ($generated@@349 $generated@@154 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@161 ($generated@@349 $generated@@154 $generated@@408))) ($generated@@162 ($generated@@349 $generated@@154 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@313 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@312 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@362 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@310 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@310 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@362 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@331 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@330 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@373 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@328 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@328 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@310 $generated@@422) $generated@@426))) (and ($generated@@266 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@266 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@310 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@328 $generated@@430) $generated@@434))) (and ($generated@@266 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@266 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@328 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@436) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@435 $generated@@437))) (and ($generated@@138 $generated@@435 $generated@@436) ($generated@@138 $generated@@436 $generated@@437))) ($generated@@138 $generated@@435 $generated@@437))
 :pattern ( ($generated@@138 $generated@@435 $generated@@436) ($generated@@138 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@82 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@332 (type $generated@@440))))
(let (($generated@@442 ($generated@@331 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@330 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@329 $generated@@442 $generated@@441)) (= ($generated@@328 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@328 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@332 (type $generated@@443))))
(let (($generated@@445 ($generated@@331 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@330 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@329 $generated@@445 $generated@@444)) (= ($generated@@373 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@373 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@332 (type $generated@@446))))
(let (($generated@@448 ($generated@@331 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@330 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@329 $generated@@448 $generated@@447)) (= ($generated@@401 $generated@@446) ($generated@@438 $generated@@163))))))
 :pattern ( ($generated@@401 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@314 (type $generated@@449))))
(let (($generated@@451 ($generated@@313 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@312 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@311 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@449) ($generated@@290 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@393 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@332 (type $generated@@454))))
(let (($generated@@456 ($generated@@331 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@330 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@329 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@163) (= (type $generated@@458) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@454) ($generated@@290 ($generated@@239 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@401 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@240 $generated@@459 $generated@@46)) (and (= ($generated@@290 ($generated@@349 $generated@@2 $generated@@459)) $generated@@459) ($generated@@149 ($generated@@349 $generated@@2 $generated@@459) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@459 $generated@@46))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@163) ($generated@@240 $generated@@460 $generated@@47)) (and (= ($generated@@290 ($generated@@349 $generated@@3 $generated@@460)) $generated@@460) ($generated@@149 ($generated@@349 $generated@@3 $generated@@460) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@460 $generated@@47))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@163) ($generated@@240 $generated@@461 $generated@@44)) (and (= ($generated@@290 ($generated@@349 $generated@@4 $generated@@461)) $generated@@461) ($generated@@149 ($generated@@349 $generated@@4 $generated@@461) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@462) 20))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@240 $generated@@463 $generated@@45)) (and (= ($generated@@290 ($generated@@349 $generated@@462 $generated@@463)) $generated@@463) ($generated@@149 ($generated@@349 $generated@@462 $generated@@463) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@45))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@70) (= ($generated@@240 ($generated@@290 $generated@@464) $generated@@465) ($generated@@149 $generated@@464 $generated@@465)))
 :pattern ( ($generated@@240 ($generated@@290 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@85 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@82 $generated@@467 $generated@@2)) (<= 0 ($generated@@304 $generated@@466))))
 :pattern ( ($generated@@304 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@285 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@284 $generated@@469)) (<= 0 ($generated@@283 $generated@@468))))
 :pattern ( ($generated@@283 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@470 ($generated@@419 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@419 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@419 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@419 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@427 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@427 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@427 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@427 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@163) (= (type $generated@@491) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@490 $generated@@491)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@153 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@153 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@153 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@163) (= (type $generated@@501) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@163) (= (type $generated@@503) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@285 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@284 $generated@@163)) (= (type $generated@@511) $generated@@70)) (= (type $generated@@512) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@283 $generated@@510))) ($generated@@266 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@80 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@81 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@81 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@249 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@249 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@254 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@254 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@170 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@170 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@504 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@504 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@504 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@349 $generated@@533 ($generated@@290 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@290 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@70)) (= ($generated@@149 $generated@@534 ($generated@@419 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@310 $generated@@534) $generated@@537))) (and ($generated@@240 ($generated@@87 ($generated@@394 $generated@@534) $generated@@537) $generated@@536) ($generated@@240 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@534) $generated@@537))
 :pattern ( ($generated@@87 ($generated@@310 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@149 $generated@@534 ($generated@@419 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) (= ($generated@@149 $generated@@538 ($generated@@427 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@328 $generated@@538) $generated@@541))) (and ($generated@@240 ($generated@@87 ($generated@@402 $generated@@538) $generated@@541) $generated@@540) ($generated@@240 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@538) $generated@@541))
 :pattern ( ($generated@@87 ($generated@@328 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@427 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@163) (= (type $generated@@545) $generated@@163)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@239 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@239 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@163)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@239 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@239 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@163) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) ($generated@@240 $generated@@548 ($generated@@419 $generated@@549 $generated@@550))) (and (= ($generated@@290 ($generated@@349 ($generated@@312 $generated@@163 $generated@@163) $generated@@548)) $generated@@548) ($generated@@149 ($generated@@349 ($generated@@312 $generated@@163 $generated@@163) $generated@@548) ($generated@@419 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@548 ($generated@@419 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@70)) ($generated@@240 $generated@@551 ($generated@@427 $generated@@552 $generated@@553))) (and (= ($generated@@290 ($generated@@349 ($generated@@330 $generated@@163 $generated@@163) $generated@@551)) $generated@@551) ($generated@@149 ($generated@@349 ($generated@@330 $generated@@163 $generated@@163) $generated@@551) ($generated@@427 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@427 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@163)) ($generated@@240 $generated@@556 ($generated@@153 $generated@@554 $generated@@555))) (and (= ($generated@@290 ($generated@@349 $generated@@154 $generated@@556)) $generated@@556) ($generated@@149 ($generated@@349 $generated@@154 $generated@@556) ($generated@@153 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@240 $generated@@556 ($generated@@153 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@87 ($generated@@438 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@87 ($generated@@438 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@75)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@70) (= (type $generated@@562) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@153 $generated@@561 $generated@@562)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@154) (= ($generated@@542 ($generated@@290 $generated@@563)) ($generated@@543 $generated@@563)))
 :pattern ( ($generated@@542 ($generated@@290 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@163) ($generated@@240 $generated@@564 ($generated@@81 0))) (and (= ($generated@@290 ($generated@@349 $generated@@2 $generated@@564)) $generated@@564) ($generated@@149 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@564) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@81 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@163) (= (type $generated@@566) $generated@@70)) ($generated@@240 $generated@@565 ($generated@@249 $generated@@566))) (and (= ($generated@@290 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@565)) $generated@@565) ($generated@@149 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@565) ($generated@@249 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@565 ($generated@@249 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@70)) ($generated@@240 $generated@@567 ($generated@@254 $generated@@568))) (and (= ($generated@@290 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@567)) $generated@@567) ($generated@@149 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@567) ($generated@@254 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@254 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@70)) ($generated@@240 $generated@@569 ($generated@@170 $generated@@570))) (and (= ($generated@@290 ($generated@@349 ($generated@@82 $generated@@163 $generated@@2) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@349 ($generated@@82 $generated@@163 $generated@@2) $generated@@569) ($generated@@170 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@569 ($generated@@170 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@163) (= (type $generated@@572) $generated@@70)) ($generated@@240 $generated@@571 ($generated@@504 $generated@@572))) (and (= ($generated@@290 ($generated@@349 ($generated@@284 $generated@@163) $generated@@571)) $generated@@571) ($generated@@149 ($generated@@349 ($generated@@284 $generated@@163) $generated@@571) ($generated@@504 $generated@@572))))
 :pattern ( ($generated@@240 $generated@@571 ($generated@@504 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@83) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@573 $generated@@143)) ($generated@@80 $generated@@573 $generated@@146 $generated@@574))) ($generated@@80 $generated@@573 $generated@@168 $generated@@574))
 :pattern ( ($generated@@80 $generated@@573 $generated@@146 $generated@@574))
)))
(assert (= ($generated@@78 $generated@@236) $generated@@63))
(assert (= ($generated@@559 $generated@@236) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@64))
(assert (= ($generated@@559 $generated@@146) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@65))
(assert (= ($generated@@559 $generated@@168) $generated@@69))
(assert (= ($generated@@78 $generated@@142) $generated@@66))
(assert (= ($generated@@559 $generated@@142) $generated@@69))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@575 ($generated@@170 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@575 $generated@@578)))) ($generated@@266 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@87 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@170 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@83) (= ($generated@@149 $generated@@579 $generated@@142)  (or (= $generated@@579 $generated@@143) ($generated@@151 ($generated@@175 $generated@@579)))))
 :pattern ( ($generated@@149 $generated@@579 $generated@@142))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@582) (and ($generated@@152 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@70) ($generated@@80 $generated@@580 ($generated@@153 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@80 $generated@@580 ($generated@@153 $generated@@581 $generated@@583) $generated@@582))
))))) ($generated@@266 ($generated@@161 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@586) (and ($generated@@152 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@70) ($generated@@80 $generated@@584 ($generated@@153 $generated@@587 $generated@@585) $generated@@586))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@153 $generated@@587 $generated@@585) $generated@@586))
))))) ($generated@@266 ($generated@@162 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@163) (= (type $generated@@589) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@588) ($generated@@261 $generated@@589)) ($generated@@261 ($generated@@239 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@588) ($generated@@261 $generated@@589)))
)))
(assert (forall (($generated@@590 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@259 $generated@@590))) ($generated@@261 ($generated@@290 ($generated@@8 $generated@@590))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@259 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@290 ($generated@@261 $generated@@591)) ($generated@@261 ($generated@@290 $generated@@591)))
 :pattern ( ($generated@@290 ($generated@@261 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@285 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@284 $generated@@593)) (= ($generated@@283 $generated@@592) 0)) (= $generated@@592 ($generated@@282 $generated@@593))))
 :pattern ( ($generated@@283 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@82 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@304 ($generated@@88 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@304 $generated@@594) ($generated ($generated@@87 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@304 ($generated@@88 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@2)) ($generated@@80 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@601) $generated@@3)) ($generated@@80 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@80 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@4)) ($generated@@80 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@462)) ($generated@@80 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@607) $generated@@163)) ($generated@@80 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@80 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@284 $generated@@163)) (= (type $generated@@609) $generated@@70)) (= ($generated@@149 $generated@@608 ($generated@@504 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@283 $generated@@608))) ($generated@@240 ($generated@@505 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@505 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@149 $generated@@608 ($generated@@504 $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@284 $generated@@163)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@283 $generated@@612))) (< ($generated@@543 ($generated@@349 $generated@@154 ($generated@@505 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@543 ($generated@@349 $generated@@154 ($generated@@505 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@149 $generated@@614 ($generated@@419 $generated@@615 $generated@@616))) (and (and ($generated@@149 ($generated@@310 $generated@@614) ($generated@@249 $generated@@615)) ($generated@@149 ($generated@@362 $generated@@614) ($generated@@249 $generated@@616))) ($generated@@149 ($generated@@393 $generated@@614) ($generated@@249 ($generated@@153 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@419 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) ($generated@@149 $generated@@617 ($generated@@427 $generated@@618 $generated@@619))) (and (and ($generated@@149 ($generated@@328 $generated@@617) ($generated@@254 $generated@@618)) ($generated@@149 ($generated@@373 $generated@@617) ($generated@@254 $generated@@619))) ($generated@@149 ($generated@@401 $generated@@617) ($generated@@254 ($generated@@153 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@149 $generated@@617 ($generated@@427 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@149 $generated@@620 $generated@@46))
 :pattern ( ($generated@@149 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@149 $generated@@621 $generated@@47))
 :pattern ( ($generated@@149 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@149 $generated@@622 $generated@@44))
 :pattern ( ($generated@@149 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@462) ($generated@@149 $generated@@623 $generated@@45))
 :pattern ( ($generated@@149 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@163) ($generated@@149 $generated@@624 $generated@@48))
 :pattern ( ($generated@@149 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (and (and (= (type $generated@@625) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@627) $generated@@83)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@630) $generated@@83)) (= (type $generated@@632) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@634  (=> (= $generated@@625 ($generated@@179 $generated@@143 $generated@@626 $generated@@60 false)) (=> (and (and (not (= $generated@@627 $generated@@143)) (and ($generated@@149 $generated@@627 $generated@@236) ($generated@@80 $generated@@627 $generated@@236 $generated@@626))) (and ($generated@@265 $generated@@628) ($generated@@629 $generated@@628))) (=> (and (and (and (not (= $generated@@630 $generated@@143)) (and ($generated@@149 $generated@@630 $generated@@236) ($generated@@80 $generated@@630 $generated@@236 $generated@@628))) (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@626 $generated@@630) $generated@@60)))) (and (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@83) (=> (and (not (= $generated@@635 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@626 $generated@@635) $generated@@60))) (= ($generated@@87 $generated@@628 $generated@@635) ($generated@@87 $generated@@626 $generated@@635))))
 :pattern ( ($generated@@87 $generated@@628 $generated@@635))
)) ($generated@@138 $generated@@626 $generated@@628))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@630 $generated@@143))) (=> (and (and ($generated@@80 $generated@@630 $generated@@146 $generated@@628) ($generated@@276 $generated@@630)) (and ($generated@@276 $generated@@630) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@275 $generated@@630) ($generated@@259 0))))))))))
(let (($generated@@636  (=> (and ($generated@@265 $generated@@626) ($generated@@629 $generated@@626)) (=> (and (and (=> $generated@@631 (and ($generated@@149 $generated@@632 $generated@@236) ($generated@@80 $generated@@632 $generated@@236 $generated@@626))) true) (and (= 1 $generated@@633) (= (ControlFlow 0 5) 2))) $generated@@634))))
$generated@@636)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@462 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert ($generated@@151 $generated@@146))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@154)) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@149 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@168) $generated@@70))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@83) (=> (and (not (= $generated@@169 $generated@@143)) ($generated@@149 $generated@@169 $generated@@146)) ($generated@@149 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@149 $generated@@169 $generated@@146))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@174) $generated@@70)) ($generated@@149 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@149 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@83) (= ($generated@@149 $generated@@177 $generated@@146)  (or (= $generated@@177 $generated@@143) (= ($generated@@175 $generated@@177) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@177 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@83) (= (type $generated@@235) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@234 $generated@@168 $generated@@235) ($generated@@80 $generated@@234 $generated@@142 $generated@@235)))
 :pattern ( ($generated@@80 $generated@@234 $generated@@168 $generated@@235))
)))
(assert (= (type $generated@@236) $generated@@70))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@237 $generated@@236 $generated@@238) ($generated@@80 $generated@@237 $generated@@146 $generated@@238)))
 :pattern ( ($generated@@80 $generated@@237 $generated@@236 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) $generated@@70)) (= (type $generated@@245) $generated@@163)) (= (type $generated@@246) $generated@@163)) (= ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@149 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@163) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@149 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@149 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@70) (= (type $generated@@268) $generated@@70)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@265 $generated@@271)) (= ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@80 ($generated@@239 $generated@@269 $generated@@270) ($generated@@153 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@74)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@154) (= ($generated@@152 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert  (=> true (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@83) (or ($generated@@276 $generated@@277) (and (not (= $generated@@277 $generated@@143)) ($generated@@149 $generated@@277 $generated@@236)))) (= ($generated@@275 $generated@@277) ($generated@@259 0)))
 :pattern ( ($generated@@275 $generated@@277))
))))
(assert  (=> true (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@83) (or ($generated@@276 $generated@@278) (and (not (= $generated@@278 $generated@@143)) ($generated@@149 $generated@@278 $generated@@236)))) (<= ($generated@@259 0) ($generated@@275 $generated@@278)))
 :pattern ( ($generated@@275 $generated@@278))
))))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@154) ($generated@@152 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@163) (= (type $generated@@281) $generated@@163)) (= $generated@@279 ($generated@@239 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@152 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@163)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@266 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@80 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@266 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@296) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@297) $generated@@163)) (= (type $generated@@298) $generated@@70)) ($generated@@138 $generated@@295 $generated@@296)) ($generated@@266 $generated@@297 $generated@@298 $generated@@295)) ($generated@@266 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@138 $generated@@295 $generated@@296) ($generated@@266 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@300) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@302) $generated@@70)) ($generated@@138 $generated@@299 $generated@@300)) ($generated@@80 $generated@@301 $generated@@302 $generated@@299)) ($generated@@80 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@138 $generated@@299 $generated@@300) ($generated@@80 $generated@@301 $generated@@302 $generated@@299))
)))
(assert  (=> true (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@83) (or ($generated@@276 ($generated@@261 $generated@@303)) (and (not (= $generated@@303 $generated@@143)) ($generated@@149 $generated@@303 $generated@@236)))) (= ($generated@@275 ($generated@@261 $generated@@303)) ($generated@@259 0)))
 :weight 3
 :pattern ( ($generated@@275 ($generated@@261 $generated@@303)))
))))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@82 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@85 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@82 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@87 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@82 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@87 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@87 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@82 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@87 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@87 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@85 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@82 $generated@@347 $generated@@2)) (= ($generated@@171 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@87 $generated@@346 $generated@@348))) (<= ($generated ($generated@@87 $generated@@346 $generated@@348)) ($generated@@304 $generated@@346))))
 :pattern ( ($generated@@87 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@171 $generated@@346))
)))
(assert (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@163) ($generated@@240 $generated@@352 $generated@@236)) (and (= ($generated@@290 ($generated@@349 $generated@@83 $generated@@352)) $generated@@352) ($generated@@149 ($generated@@349 $generated@@83 $generated@@352) $generated@@236)))
 :pattern ( ($generated@@240 $generated@@352 $generated@@236))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@163) ($generated@@240 $generated@@353 $generated@@146)) (and (= ($generated@@290 ($generated@@349 $generated@@83 $generated@@353)) $generated@@353) ($generated@@149 ($generated@@349 $generated@@83 $generated@@353) $generated@@146)))
 :pattern ( ($generated@@240 $generated@@353 $generated@@146))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@163) ($generated@@240 $generated@@354 $generated@@168)) (and (= ($generated@@290 ($generated@@349 $generated@@83 $generated@@354)) $generated@@354) ($generated@@149 ($generated@@349 $generated@@83 $generated@@354) $generated@@168)))
 :pattern ( ($generated@@240 $generated@@354 $generated@@168))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@163) ($generated@@240 $generated@@355 $generated@@142)) (and (= ($generated@@290 ($generated@@349 $generated@@83 $generated@@355)) $generated@@355) ($generated@@149 ($generated@@349 $generated@@83 $generated@@355) $generated@@142)))
 :pattern ( ($generated@@240 $generated@@355 $generated@@142))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@83) (= ($generated@@149 $generated@@356 $generated@@168)  (and ($generated@@149 $generated@@356 $generated@@142) (not (= $generated@@356 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@356 $generated@@168))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@83) (= ($generated@@149 $generated@@357 $generated@@236)  (and ($generated@@149 $generated@@357 $generated@@146) (not (= $generated@@357 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@357 $generated@@236))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@87 ($generated@@310 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@310 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@314 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@82 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@314 (type $generated@@365))))
(let (($generated@@367 ($generated@@313 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@312 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@311 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@87 ($generated@@328 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@328 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@332 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@82 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@332 (type $generated@@376))))
(let (($generated@@378 ($generated@@331 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@330 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@329 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@87 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@381) $generated@@70)) (= ($generated@@149 $generated@@380 ($generated@@170 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@380 $generated@@382)))) ($generated@@240 $generated@@382 $generated@@381))
 :pattern ( ($generated@@87 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@149 $generated@@380 ($generated@@170 $generated@@381)))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@163) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@266 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@163) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@266 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@87 ($generated@@305 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@87 ($generated@@305 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@314 (type $generated@@396))))
(let (($generated@@398 ($generated@@313 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@400) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@310 $generated@@399) ($generated@@161 ($generated@@349 $generated@@154 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@161 ($generated@@349 $generated@@154 $generated@@400))) ($generated@@162 ($generated@@349 $generated@@154 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@332 (type $generated@@404))))
(let (($generated@@406 ($generated@@331 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@408) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@328 $generated@@407) ($generated@@161 ($generated@@349 $generated@@154 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@161 ($generated@@349 $generated@@154 $generated@@408))) ($generated@@162 ($generated@@349 $generated@@154 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@313 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@312 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@362 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@310 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@310 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@362 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@331 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@330 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@373 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@328 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@328 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@310 $generated@@422) $generated@@426))) (and ($generated@@266 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@266 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@310 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@328 $generated@@430) $generated@@434))) (and ($generated@@266 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@266 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@328 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@436) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@435 $generated@@437))) (and ($generated@@138 $generated@@435 $generated@@436) ($generated@@138 $generated@@436 $generated@@437))) ($generated@@138 $generated@@435 $generated@@437))
 :pattern ( ($generated@@138 $generated@@435 $generated@@436) ($generated@@138 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@82 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@332 (type $generated@@440))))
(let (($generated@@442 ($generated@@331 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@330 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@329 $generated@@442 $generated@@441)) (= ($generated@@328 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@328 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@332 (type $generated@@443))))
(let (($generated@@445 ($generated@@331 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@330 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@329 $generated@@445 $generated@@444)) (= ($generated@@373 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@373 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@332 (type $generated@@446))))
(let (($generated@@448 ($generated@@331 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@330 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@329 $generated@@448 $generated@@447)) (= ($generated@@401 $generated@@446) ($generated@@438 $generated@@163))))))
 :pattern ( ($generated@@401 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@314 (type $generated@@449))))
(let (($generated@@451 ($generated@@313 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@312 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@311 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@449) ($generated@@290 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@393 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@332 (type $generated@@454))))
(let (($generated@@456 ($generated@@331 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@330 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@329 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@163) (= (type $generated@@458) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@454) ($generated@@290 ($generated@@239 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@401 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@240 $generated@@459 $generated@@46)) (and (= ($generated@@290 ($generated@@349 $generated@@2 $generated@@459)) $generated@@459) ($generated@@149 ($generated@@349 $generated@@2 $generated@@459) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@459 $generated@@46))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@163) ($generated@@240 $generated@@460 $generated@@47)) (and (= ($generated@@290 ($generated@@349 $generated@@3 $generated@@460)) $generated@@460) ($generated@@149 ($generated@@349 $generated@@3 $generated@@460) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@460 $generated@@47))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@163) ($generated@@240 $generated@@461 $generated@@44)) (and (= ($generated@@290 ($generated@@349 $generated@@4 $generated@@461)) $generated@@461) ($generated@@149 ($generated@@349 $generated@@4 $generated@@461) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@462) 20))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@240 $generated@@463 $generated@@45)) (and (= ($generated@@290 ($generated@@349 $generated@@462 $generated@@463)) $generated@@463) ($generated@@149 ($generated@@349 $generated@@462 $generated@@463) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@45))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@70) (= ($generated@@240 ($generated@@290 $generated@@464) $generated@@465) ($generated@@149 $generated@@464 $generated@@465)))
 :pattern ( ($generated@@240 ($generated@@290 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@85 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@82 $generated@@467 $generated@@2)) (<= 0 ($generated@@304 $generated@@466))))
 :pattern ( ($generated@@304 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@285 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@284 $generated@@469)) (<= 0 ($generated@@283 $generated@@468))))
 :pattern ( ($generated@@283 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@470 ($generated@@419 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@419 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@419 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@419 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@427 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@427 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@427 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@427 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@163) (= (type $generated@@491) $generated@@163)) (= ($generated@@272 ($generated@@239 $generated@@490 $generated@@491)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@153 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@153 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@153 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@153 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@163) (= (type $generated@@501) $generated@@163)) (= ($generated@@161 ($generated@@239 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@163) (= (type $generated@@503) $generated@@163)) (= ($generated@@162 ($generated@@239 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@285 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@284 $generated@@163)) (= (type $generated@@511) $generated@@70)) (= (type $generated@@512) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@283 $generated@@510))) ($generated@@266 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@80 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@81 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@81 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@249 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@249 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@254 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@254 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@170 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@170 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@170 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@504 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@504 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@504 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@349 $generated@@533 ($generated@@290 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@290 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@70)) (= ($generated@@149 $generated@@534 ($generated@@419 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@310 $generated@@534) $generated@@537))) (and ($generated@@240 ($generated@@87 ($generated@@394 $generated@@534) $generated@@537) $generated@@536) ($generated@@240 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@534) $generated@@537))
 :pattern ( ($generated@@87 ($generated@@310 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@149 $generated@@534 ($generated@@419 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@539) $generated@@70)) (= (type $generated@@540) $generated@@70)) (= ($generated@@149 $generated@@538 ($generated@@427 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@328 $generated@@538) $generated@@541))) (and ($generated@@240 ($generated@@87 ($generated@@402 $generated@@538) $generated@@541) $generated@@540) ($generated@@240 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@538) $generated@@541))
 :pattern ( ($generated@@87 ($generated@@328 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@427 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@163) (= (type $generated@@545) $generated@@163)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@239 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@239 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@163)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@239 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@239 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@163) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) ($generated@@240 $generated@@548 ($generated@@419 $generated@@549 $generated@@550))) (and (= ($generated@@290 ($generated@@349 ($generated@@312 $generated@@163 $generated@@163) $generated@@548)) $generated@@548) ($generated@@149 ($generated@@349 ($generated@@312 $generated@@163 $generated@@163) $generated@@548) ($generated@@419 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@240 $generated@@548 ($generated@@419 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@70)) ($generated@@240 $generated@@551 ($generated@@427 $generated@@552 $generated@@553))) (and (= ($generated@@290 ($generated@@349 ($generated@@330 $generated@@163 $generated@@163) $generated@@551)) $generated@@551) ($generated@@149 ($generated@@349 ($generated@@330 $generated@@163 $generated@@163) $generated@@551) ($generated@@427 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@240 $generated@@551 ($generated@@427 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@70) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@163)) ($generated@@240 $generated@@556 ($generated@@153 $generated@@554 $generated@@555))) (and (= ($generated@@290 ($generated@@349 $generated@@154 $generated@@556)) $generated@@556) ($generated@@149 ($generated@@349 $generated@@154 $generated@@556) ($generated@@153 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@240 $generated@@556 ($generated@@153 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@87 ($generated@@438 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@87 ($generated@@438 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@75)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@70) (= (type $generated@@562) $generated@@70)) (and (= ($generated@@78 ($generated@@153 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@153 $generated@@561 $generated@@562)) $generated@@67)))
 :pattern ( ($generated@@153 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@154) (= ($generated@@542 ($generated@@290 $generated@@563)) ($generated@@543 $generated@@563)))
 :pattern ( ($generated@@542 ($generated@@290 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@163) ($generated@@240 $generated@@564 ($generated@@81 0))) (and (= ($generated@@290 ($generated@@349 $generated@@2 $generated@@564)) $generated@@564) ($generated@@149 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@564) ($generated@@81 0))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@81 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@163) (= (type $generated@@566) $generated@@70)) ($generated@@240 $generated@@565 ($generated@@249 $generated@@566))) (and (= ($generated@@290 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@565)) $generated@@565) ($generated@@149 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@565) ($generated@@249 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@565 ($generated@@249 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@70)) ($generated@@240 $generated@@567 ($generated@@254 $generated@@568))) (and (= ($generated@@290 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@567)) $generated@@567) ($generated@@149 ($generated@@349 ($generated@@82 $generated@@163 $generated@@4) $generated@@567) ($generated@@254 $generated@@568))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@254 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@70)) ($generated@@240 $generated@@569 ($generated@@170 $generated@@570))) (and (= ($generated@@290 ($generated@@349 ($generated@@82 $generated@@163 $generated@@2) $generated@@569)) $generated@@569) ($generated@@149 ($generated@@349 ($generated@@82 $generated@@163 $generated@@2) $generated@@569) ($generated@@170 $generated@@570))))
 :pattern ( ($generated@@240 $generated@@569 ($generated@@170 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@163) (= (type $generated@@572) $generated@@70)) ($generated@@240 $generated@@571 ($generated@@504 $generated@@572))) (and (= ($generated@@290 ($generated@@349 ($generated@@284 $generated@@163) $generated@@571)) $generated@@571) ($generated@@149 ($generated@@349 ($generated@@284 $generated@@163) $generated@@571) ($generated@@504 $generated@@572))))
 :pattern ( ($generated@@240 $generated@@571 ($generated@@504 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@83) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@573 $generated@@143)) ($generated@@80 $generated@@573 $generated@@146 $generated@@574))) ($generated@@80 $generated@@573 $generated@@168 $generated@@574))
 :pattern ( ($generated@@80 $generated@@573 $generated@@146 $generated@@574))
)))
(assert (= ($generated@@78 $generated@@236) $generated@@63))
(assert (= ($generated@@559 $generated@@236) $generated@@68))
(assert (= ($generated@@78 $generated@@146) $generated@@64))
(assert (= ($generated@@559 $generated@@146) $generated@@68))
(assert (= ($generated@@78 $generated@@168) $generated@@65))
(assert (= ($generated@@559 $generated@@168) $generated@@69))
(assert (= ($generated@@78 $generated@@142) $generated@@66))
(assert (= ($generated@@559 $generated@@142) $generated@@69))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@575 ($generated@@170 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@575 $generated@@578)))) ($generated@@266 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@87 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@170 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@83) (= ($generated@@149 $generated@@579 $generated@@142)  (or (= $generated@@579 $generated@@143) ($generated@@151 ($generated@@175 $generated@@579)))))
 :pattern ( ($generated@@149 $generated@@579 $generated@@142))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@582) (and ($generated@@152 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@70) ($generated@@80 $generated@@580 ($generated@@153 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@80 $generated@@580 ($generated@@153 $generated@@581 $generated@@583) $generated@@582))
))))) ($generated@@266 ($generated@@161 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@265 $generated@@586) (and ($generated@@152 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@70) ($generated@@80 $generated@@584 ($generated@@153 $generated@@587 $generated@@585) $generated@@586))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@153 $generated@@587 $generated@@585) $generated@@586))
))))) ($generated@@266 ($generated@@162 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@163) (= (type $generated@@589) $generated@@163)) (= ($generated@@239 ($generated@@261 $generated@@588) ($generated@@261 $generated@@589)) ($generated@@261 ($generated@@239 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@588) ($generated@@261 $generated@@589)))
)))
(assert (forall (($generated@@590 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@259 $generated@@590))) ($generated@@261 ($generated@@290 ($generated@@8 $generated@@590))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@259 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@290 ($generated@@261 $generated@@591)) ($generated@@261 ($generated@@290 $generated@@591)))
 :pattern ( ($generated@@290 ($generated@@261 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@285 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@284 $generated@@593)) (= ($generated@@283 $generated@@592) 0)) (= $generated@@592 ($generated@@282 $generated@@593))))
 :pattern ( ($generated@@283 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@82 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@304 ($generated@@88 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@304 $generated@@594) ($generated ($generated@@87 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@304 ($generated@@88 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@2)) ($generated@@80 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@601) $generated@@3)) ($generated@@80 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@80 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@603) $generated@@4)) ($generated@@80 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@80 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@462)) ($generated@@80 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@607) $generated@@163)) ($generated@@80 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@80 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@284 $generated@@163)) (= (type $generated@@609) $generated@@70)) (= ($generated@@149 $generated@@608 ($generated@@504 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@283 $generated@@608))) ($generated@@240 ($generated@@505 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@505 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@149 $generated@@608 ($generated@@504 $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@284 $generated@@163)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@283 $generated@@612))) (< ($generated@@543 ($generated@@349 $generated@@154 ($generated@@505 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@543 ($generated@@349 $generated@@154 ($generated@@505 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@149 $generated@@614 ($generated@@419 $generated@@615 $generated@@616))) (and (and ($generated@@149 ($generated@@310 $generated@@614) ($generated@@249 $generated@@615)) ($generated@@149 ($generated@@362 $generated@@614) ($generated@@249 $generated@@616))) ($generated@@149 ($generated@@393 $generated@@614) ($generated@@249 ($generated@@153 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@419 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) ($generated@@149 $generated@@617 ($generated@@427 $generated@@618 $generated@@619))) (and (and ($generated@@149 ($generated@@328 $generated@@617) ($generated@@254 $generated@@618)) ($generated@@149 ($generated@@373 $generated@@617) ($generated@@254 $generated@@619))) ($generated@@149 ($generated@@401 $generated@@617) ($generated@@254 ($generated@@153 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@149 $generated@@617 ($generated@@427 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@149 $generated@@620 $generated@@46))
 :pattern ( ($generated@@149 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@149 $generated@@621 $generated@@47))
 :pattern ( ($generated@@149 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@149 $generated@@622 $generated@@44))
 :pattern ( ($generated@@149 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@462) ($generated@@149 $generated@@623 $generated@@45))
 :pattern ( ($generated@@149 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@163) ($generated@@149 $generated@@624 $generated@@48))
 :pattern ( ($generated@@149 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () Bool)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@625) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@626) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@627) $generated@@83)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@630) $generated@@83)) (= (type $generated@@632) $generated@@83)) (= (type $generated@@634) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@636  (=> (= $generated@@625 ($generated@@179 $generated@@143 $generated@@626 $generated@@60 false)) (=> (and (and (not (= $generated@@627 $generated@@143)) (and ($generated@@149 $generated@@627 $generated@@236) ($generated@@80 $generated@@627 $generated@@236 $generated@@626))) (and ($generated@@265 $generated@@628) ($generated@@629 $generated@@628))) (=> (and (and (and (not (= $generated@@630 $generated@@143)) (and ($generated@@149 $generated@@630 $generated@@236) ($generated@@80 $generated@@630 $generated@@236 $generated@@628))) (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@626 $generated@@630) $generated@@60)))) (and (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@83) (=> (and (not (= $generated@@637 $generated@@143)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@626 $generated@@637) $generated@@60))) (= ($generated@@87 $generated@@628 $generated@@637) ($generated@@87 $generated@@626 $generated@@637))))
 :pattern ( ($generated@@87 $generated@@628 $generated@@637))
)) ($generated@@138 $generated@@626 $generated@@628))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@630 $generated@@143))) (=> (and (and ($generated@@80 $generated@@630 $generated@@146 $generated@@628) ($generated@@276 $generated@@630)) (and ($generated@@276 $generated@@630) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@275 $generated@@630) ($generated@@259 0)))))))))))
(let (($generated@@638  (=> (and (and (and ($generated@@265 $generated@@626) ($generated@@629 $generated@@626)) (and (=> $generated@@631 (and ($generated@@149 $generated@@632 $generated@@236) ($generated@@80 $generated@@632 $generated@@236 $generated@@626))) true)) (and (and (=> $generated@@633 (and ($generated@@149 $generated@@634 $generated@@168) ($generated@@80 $generated@@634 $generated@@168 $generated@@626))) true) (and (= 1 $generated@@635) (= (ControlFlow 0 6) 2)))) $generated@@636)))
$generated@@638)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@235 (T@U) Int)
(declare-fun $generated@@236 (T@U) Int)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@451 () T@T)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert ($generated@@147 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@70)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@70) (= (type $generated@@154) $generated@@70)) (= (type $generated@@155) $generated@@150)) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@145 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@70))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@83) (=> (and (not (= $generated@@165 $generated@@139)) ($generated@@145 $generated@@165 $generated@@142)) ($generated@@145 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@145 $generated@@165 $generated@@142))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@70)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@170) $generated@@70)) ($generated@@145 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@145 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@83) (= ($generated@@145 $generated@@173 $generated@@142)  (or (= $generated@@173 $generated@@139) (= ($generated@@171 $generated@@173) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@173 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@83 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@73 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@83) (= (type $generated@@224) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@225) ($generated@@72 $generated@@4))) (= (type $generated@@227) $generated@@83)) (= (type $generated@@228) ($generated@@72 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@83) (= (type $generated@@231) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@230 $generated@@164 $generated@@231) ($generated@@80 $generated@@230 $generated@@138 $generated@@231)))
 :pattern ( ($generated@@80 $generated@@230 $generated@@164 $generated@@231))
)))
(assert (= (type $generated@@232) $generated@@70))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@83) (= (type $generated@@234) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@233 $generated@@232 $generated@@234) ($generated@@80 $generated@@233 $generated@@142 $generated@@234)))
 :pattern ( ($generated@@80 $generated@@233 $generated@@232 $generated@@234))
)))
(assert  (=> true (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@83) (=> (and (not (= $generated@@237 $generated@@139)) ($generated@@145 $generated@@237 $generated@@232)) (= ($generated@@235 $generated@@237) ($generated@@236 $generated@@237))))
 :pattern ( ($generated@@235 $generated@@237) ($generated@@145 $generated@@237 $generated@@232))
 :pattern ( ($generated@@235 $generated@@237) ($generated@@236 $generated@@237))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@150)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@70) (= (type $generated@@243) $generated@@70)) (= (type $generated@@244) $generated@@159)) (= (type $generated@@245) $generated@@159)) (= ($generated@@145 ($generated@@238 $generated@@244 $generated@@245) ($generated@@149 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@145 ($generated@@238 $generated@@244 $generated@@245) ($generated@@149 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@150) (= (type $generated@@247) $generated@@150)) (= ($generated@@156 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@156 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@70)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@251) $generated@@70)) (= ($generated@@145 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@159) ($generated@@0 ($generated@@87 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@87 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@145 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@256) $generated@@70)) (= ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@159) ($generated@@0 ($generated@@87 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@87 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@145 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@70) (= (type $generated@@267) $generated@@70)) (= (type $generated@@268) $generated@@159)) (= (type $generated@@269) $generated@@159)) (= (type $generated@@270) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@264 $generated@@270)) (= ($generated@@80 ($generated@@238 $generated@@268 $generated@@269) ($generated@@149 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@80 ($generated@@238 $generated@@268 $generated@@269) ($generated@@149 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@74)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@150) (= ($generated@@148 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@273))
)))
(assert  (=> true (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@83) (or ($generated@@274 $generated@@275) (and (not (= $generated@@275 $generated@@139)) ($generated@@145 $generated@@275 $generated@@232)))) (= ($generated@@236 $generated@@275) ($generated@@258 0)))
 :pattern ( ($generated@@236 $generated@@275))
))))
(assert  (=> true (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@83) (or ($generated@@276 $generated@@277) (and (not (= $generated@@277 $generated@@139)) ($generated@@145 $generated@@277 $generated@@164)))) (<= ($generated@@258 0) ($generated@@235 $generated@@277)))
 :pattern ( ($generated@@235 $generated@@277))
))))
(assert  (=> true (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@83) (or ($generated@@274 $generated@@278) (and (not (= $generated@@278 $generated@@139)) ($generated@@145 $generated@@278 $generated@@232)))) (<= ($generated@@258 0) ($generated@@236 $generated@@278)))
 :pattern ( ($generated@@236 $generated@@278))
))))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@150) ($generated@@148 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@159) (= (type $generated@@281) $generated@@159)) (= $generated@@279 ($generated@@238 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@148 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@159)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@265 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@80 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@265 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert  (=> true (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@83) (or ($generated@@274 ($generated@@260 $generated@@295)) (and (not (= $generated@@295 $generated@@139)) ($generated@@145 $generated@@295 $generated@@232)))) (= ($generated@@236 ($generated@@260 $generated@@295)) ($generated@@258 0)))
 :weight 3
 :pattern ( ($generated@@236 ($generated@@260 $generated@@295)))
))))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@82 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@85 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@82 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@87 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@82 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@87 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@87 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@82 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@87 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@85 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@82 $generated@@339 $generated@@2)) (= ($generated@@167 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@87 $generated@@338 $generated@@340))) (<= ($generated ($generated@@87 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@87 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@167 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@159) ($generated@@239 $generated@@344 $generated@@232)) (and (= ($generated@@290 ($generated@@341 $generated@@83 $generated@@344)) $generated@@344) ($generated@@145 ($generated@@341 $generated@@83 $generated@@344) $generated@@232)))
 :pattern ( ($generated@@239 $generated@@344 $generated@@232))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@159) ($generated@@239 $generated@@345 $generated@@142)) (and (= ($generated@@290 ($generated@@341 $generated@@83 $generated@@345)) $generated@@345) ($generated@@145 ($generated@@341 $generated@@83 $generated@@345) $generated@@142)))
 :pattern ( ($generated@@239 $generated@@345 $generated@@142))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@159) ($generated@@239 $generated@@346 $generated@@164)) (and (= ($generated@@290 ($generated@@341 $generated@@83 $generated@@346)) $generated@@346) ($generated@@145 ($generated@@341 $generated@@83 $generated@@346) $generated@@164)))
 :pattern ( ($generated@@239 $generated@@346 $generated@@164))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@159) ($generated@@239 $generated@@347 $generated@@138)) (and (= ($generated@@290 ($generated@@341 $generated@@83 $generated@@347)) $generated@@347) ($generated@@145 ($generated@@341 $generated@@83 $generated@@347) $generated@@138)))
 :pattern ( ($generated@@239 $generated@@347 $generated@@138))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@83) (= ($generated@@145 $generated@@348 $generated@@164)  (and ($generated@@145 $generated@@348 $generated@@138) (not (= $generated@@348 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@348 $generated@@164))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@83) (= ($generated@@145 $generated@@349 $generated@@232)  (and ($generated@@145 $generated@@349 $generated@@142) (not (= $generated@@349 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@349 $generated@@232))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@306 (type $generated@@350))))
(let (($generated@@352 ($generated@@305 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@304 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@303 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@302 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@306 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@82 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@306 (type $generated@@357))))
(let (($generated@@359 ($generated@@305 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@304 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@303 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@324 (type $generated@@361))))
(let (($generated@@363 ($generated@@323 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@322 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@321 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@320 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@324 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@82 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@324 (type $generated@@368))))
(let (($generated@@370 ($generated@@323 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@322 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@321 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@373) $generated@@70)) (= ($generated@@145 $generated@@372 ($generated@@166 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@372 $generated@@374)))) ($generated@@239 $generated@@374 $generated@@373))
 :pattern ( ($generated@@87 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@145 $generated@@372 ($generated@@166 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@159) ($generated@@0 ($generated@@87 $generated@@375 $generated@@378))) ($generated@@265 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@87 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@80 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@82 $generated@@159 $generated@@4)) (= (type $generated@@380) $generated@@70)) (= (type $generated@@381) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@159) ($generated@@0 ($generated@@87 $generated@@379 $generated@@382))) ($generated@@265 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@80 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@87 ($generated@@297 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@87 ($generated@@297 $generated@@384) $generated@@383)))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@306 (type $generated@@388))))
(let (($generated@@390 ($generated@@305 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@392) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@87 ($generated@@302 $generated@@391) ($generated@@157 ($generated@@341 $generated@@150 $generated@@392)))) (= ($generated@@87 ($generated@@386 $generated@@391) ($generated@@157 ($generated@@341 $generated@@150 $generated@@392))) ($generated@@158 ($generated@@341 $generated@@150 $generated@@392))))))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@159 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@324 (type $generated@@396))))
(let (($generated@@398 ($generated@@323 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@400) $generated@@159)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@399) ($generated@@157 ($generated@@341 $generated@@150 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@157 ($generated@@341 $generated@@150 $generated@@400))) ($generated@@158 ($generated@@341 $generated@@150 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@305 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@304 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@87 ($generated@@354 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@87 ($generated@@302 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@87 ($generated@@386 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@87 ($generated@@354 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@323 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@322 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@87 ($generated@@365 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@87 ($generated@@320 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@87 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@406) $generated@@410))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@87 ($generated@@365 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@70)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@414) $generated@@418))) (and ($generated@@265 ($generated@@87 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@265 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@80 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@422) $generated@@426))) (and ($generated@@265 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@265 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@T) ) (! (= (type ($generated@@427 $generated@@428)) ($generated@@82 $generated@@428 $generated@@4))
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@324 (type $generated@@429))))
(let (($generated@@431 ($generated@@323 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@322 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@321 $generated@@431 $generated@@430)) (= ($generated@@320 $generated@@429) ($generated@@427 $generated@@431))))))
 :pattern ( ($generated@@320 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@324 (type $generated@@432))))
(let (($generated@@434 ($generated@@323 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@322 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@321 $generated@@434 $generated@@433)) (= ($generated@@365 $generated@@432) ($generated@@427 $generated@@433))))))
 :pattern ( ($generated@@365 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@324 (type $generated@@435))))
(let (($generated@@437 ($generated@@323 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@322 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@321 $generated@@437 $generated@@436)) (= ($generated@@393 $generated@@435) ($generated@@427 $generated@@159))))))
 :pattern ( ($generated@@393 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@306 (type $generated@@438))))
(let (($generated@@440 ($generated@@305 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@304 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@303 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@159) (= (type $generated@@442) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@385 $generated@@438) ($generated@@290 ($generated@@238 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@324 (type $generated@@443))))
(let (($generated@@445 ($generated@@323 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@322 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@321 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@159) (= (type $generated@@447) $generated@@159)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@443) ($generated@@290 ($generated@@238 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@393 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@159) ($generated@@239 $generated@@448 $generated@@46)) (and (= ($generated@@290 ($generated@@341 $generated@@2 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@341 $generated@@2 $generated@@448) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@448 $generated@@46))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@159) ($generated@@239 $generated@@449 $generated@@47)) (and (= ($generated@@290 ($generated@@341 $generated@@3 $generated@@449)) $generated@@449) ($generated@@145 ($generated@@341 $generated@@3 $generated@@449) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@449 $generated@@47))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@159) ($generated@@239 $generated@@450 $generated@@44)) (and (= ($generated@@290 ($generated@@341 $generated@@4 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@341 $generated@@4 $generated@@450) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@450 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@451) 20))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@159) ($generated@@239 $generated@@452 $generated@@45)) (and (= ($generated@@290 ($generated@@341 $generated@@451 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@341 $generated@@451 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@70) (= ($generated@@239 ($generated@@290 $generated@@453) $generated@@454) ($generated@@145 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@239 ($generated@@290 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@85 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@82 $generated@@456 $generated@@2)) (<= 0 ($generated@@296 $generated@@455))))
 :pattern ( ($generated@@296 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@285 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@284 $generated@@458)) (<= 0 ($generated@@283 $generated@@457))))
 :pattern ( ($generated@@283 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@411 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@411 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@78 ($generated@@411 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@159) (= (type $generated@@480) $generated@@159)) (= ($generated@@271 ($generated@@238 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@70) (= (type $generated@@484) $generated@@70)) (= ($generated@@481 ($generated@@149 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@149 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@149 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@149 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@159) (= (type $generated@@490) $generated@@159)) (= ($generated@@157 ($generated@@238 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@238 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@159) (= (type $generated@@492) $generated@@159)) (= ($generated@@158 ($generated@@238 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@238 $generated@@491 $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@285 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@284 $generated@@159)) (= (type $generated@@500) $generated@@70)) (= (type $generated@@501) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@283 $generated@@499))) ($generated@@265 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@81 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@81 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@248 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@248 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@248 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@509 ($generated@@253 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@253 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@70) (= ($generated@@78 ($generated@@253 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@513 ($generated@@166 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@78 ($generated@@166 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@78 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@341 $generated@@522 ($generated@@290 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@290 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@524) $generated@@70)) (= (type $generated@@525) $generated@@70)) (= ($generated@@145 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@302 $generated@@523) $generated@@526))) (and ($generated@@239 ($generated@@87 ($generated@@386 $generated@@523) $generated@@526) $generated@@525) ($generated@@239 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@523) $generated@@526))
 :pattern ( ($generated@@87 ($generated@@302 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@145 $generated@@523 ($generated@@411 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) $generated@@70)) (= ($generated@@145 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) ($generated@@0 ($generated@@87 ($generated@@320 $generated@@527) $generated@@530))) (and ($generated@@239 ($generated@@87 ($generated@@394 $generated@@527) $generated@@530) $generated@@529) ($generated@@239 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@527) $generated@@530))
 :pattern ( ($generated@@87 ($generated@@320 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@145 $generated@@527 ($generated@@419 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@159) (= (type $generated@@534) $generated@@159)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@238 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@238 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@159) (= (type $generated@@536) $generated@@159)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@238 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@238 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@159) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) ($generated@@239 $generated@@537 ($generated@@411 $generated@@538 $generated@@539))) (and (= ($generated@@290 ($generated@@341 ($generated@@304 $generated@@159 $generated@@159) $generated@@537)) $generated@@537) ($generated@@145 ($generated@@341 ($generated@@304 $generated@@159 $generated@@159) $generated@@537) ($generated@@411 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@239 $generated@@537 ($generated@@411 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@159) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) ($generated@@239 $generated@@540 ($generated@@419 $generated@@541 $generated@@542))) (and (= ($generated@@290 ($generated@@341 ($generated@@322 $generated@@159 $generated@@159) $generated@@540)) $generated@@540) ($generated@@145 ($generated@@341 ($generated@@322 $generated@@159 $generated@@159) $generated@@540) ($generated@@419 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@540 ($generated@@419 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@70) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@159)) ($generated@@239 $generated@@545 ($generated@@149 $generated@@543 $generated@@544))) (and (= ($generated@@290 ($generated@@341 $generated@@150 $generated@@545)) $generated@@545) ($generated@@145 ($generated@@341 $generated@@150 $generated@@545) ($generated@@149 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@239 $generated@@545 ($generated@@149 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@87 ($generated@@427 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@87 ($generated@@427 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@75)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@70) (= (type $generated@@551) $generated@@70)) (and (= ($generated@@78 ($generated@@149 $generated@@550 $generated@@551)) $generated@@62) (= ($generated@@548 ($generated@@149 $generated@@550 $generated@@551)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@150) (= ($generated@@531 ($generated@@290 $generated@@552)) ($generated@@532 $generated@@552)))
 :pattern ( ($generated@@531 ($generated@@290 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@159) ($generated@@239 $generated@@553 ($generated@@81 0))) (and (= ($generated@@290 ($generated@@341 $generated@@2 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@553) ($generated@@81 0))))
 :pattern ( ($generated@@239 $generated@@553 ($generated@@81 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@70)) ($generated@@239 $generated@@554 ($generated@@248 $generated@@555))) (and (= ($generated@@290 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@554) ($generated@@248 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@554 ($generated@@248 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@159) (= (type $generated@@557) $generated@@70)) ($generated@@239 $generated@@556 ($generated@@253 $generated@@557))) (and (= ($generated@@290 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@4) $generated@@556) ($generated@@253 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@556 ($generated@@253 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@159) (= (type $generated@@559) $generated@@70)) ($generated@@239 $generated@@558 ($generated@@166 $generated@@559))) (and (= ($generated@@290 ($generated@@341 ($generated@@82 $generated@@159 $generated@@2) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@341 ($generated@@82 $generated@@159 $generated@@2) $generated@@558) ($generated@@166 $generated@@559))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@166 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@159) (= (type $generated@@561) $generated@@70)) ($generated@@239 $generated@@560 ($generated@@493 $generated@@561))) (and (= ($generated@@290 ($generated@@341 ($generated@@284 $generated@@159) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@341 ($generated@@284 $generated@@159) $generated@@560) ($generated@@493 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 ($generated@@493 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@83) (= (type $generated@@563) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@562 $generated@@139)) ($generated@@80 $generated@@562 $generated@@142 $generated@@563))) ($generated@@80 $generated@@562 $generated@@164 $generated@@563))
 :pattern ( ($generated@@80 $generated@@562 $generated@@142 $generated@@563))
)))
(assert (= ($generated@@78 $generated@@232) $generated@@63))
(assert (= ($generated@@548 $generated@@232) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@64))
(assert (= ($generated@@548 $generated@@142) $generated@@68))
(assert (= ($generated@@78 $generated@@164) $generated@@65))
(assert (= ($generated@@548 $generated@@164) $generated@@69))
(assert (= ($generated@@78 $generated@@138) $generated@@66))
(assert (= ($generated@@548 $generated@@138) $generated@@69))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@82 $generated@@159 $generated@@2)) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@564 ($generated@@166 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@159) (< 0 ($generated ($generated@@87 $generated@@564 $generated@@567)))) ($generated@@265 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@87 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@166 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@83) (= ($generated@@145 $generated@@568 $generated@@138)  (or (= $generated@@568 $generated@@139) ($generated@@147 ($generated@@171 $generated@@568)))))
 :pattern ( ($generated@@145 $generated@@568 $generated@@138))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@571) (and ($generated@@148 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@70) ($generated@@80 $generated@@569 ($generated@@149 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@80 $generated@@569 ($generated@@149 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@265 ($generated@@157 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@265 ($generated@@157 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@150) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@264 $generated@@575) (and ($generated@@148 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@80 $generated@@573 ($generated@@149 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@149 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@265 ($generated@@158 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@265 ($generated@@158 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@159) (= (type $generated@@578) $generated@@159)) (= ($generated@@238 ($generated@@260 $generated@@577) ($generated@@260 $generated@@578)) ($generated@@260 ($generated@@238 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@577) ($generated@@260 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@258 $generated@@579))) ($generated@@260 ($generated@@290 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@258 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@290 ($generated@@260 $generated@@580)) ($generated@@260 ($generated@@290 $generated@@580)))
 :pattern ( ($generated@@290 ($generated@@260 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@285 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@284 $generated@@582)) (= ($generated@@283 $generated@@581) 0)) (= $generated@@581 ($generated@@282 $generated@@582))))
 :pattern ( ($generated@@283 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@82 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@296 ($generated@@88 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@296 $generated@@583) ($generated ($generated@@87 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@296 ($generated@@88 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@588) $generated@@2)) ($generated@@80 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@80 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@590) $generated@@3)) ($generated@@80 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@80 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@4)) ($generated@@80 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@451)) ($generated@@80 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@159)) ($generated@@80 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@284 $generated@@159)) (= (type $generated@@598) $generated@@70)) (= ($generated@@145 $generated@@597 ($generated@@493 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@283 $generated@@597))) ($generated@@239 ($generated@@494 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@494 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@493 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@284 $generated@@159)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@283 $generated@@601))) (< ($generated@@532 ($generated@@341 $generated@@150 ($generated@@494 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@532 ($generated@@341 $generated@@150 ($generated@@494 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@304 $generated@@159 $generated@@159)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) $generated@@70)) ($generated@@145 $generated@@603 ($generated@@411 $generated@@604 $generated@@605))) (and (and ($generated@@145 ($generated@@302 $generated@@603) ($generated@@248 $generated@@604)) ($generated@@145 ($generated@@354 $generated@@603) ($generated@@248 $generated@@605))) ($generated@@145 ($generated@@385 $generated@@603) ($generated@@248 ($generated@@149 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@145 $generated@@603 ($generated@@411 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@322 $generated@@159 $generated@@159)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@70)) ($generated@@145 $generated@@606 ($generated@@419 $generated@@607 $generated@@608))) (and (and ($generated@@145 ($generated@@320 $generated@@606) ($generated@@253 $generated@@607)) ($generated@@145 ($generated@@365 $generated@@606) ($generated@@253 $generated@@608))) ($generated@@145 ($generated@@393 $generated@@606) ($generated@@253 ($generated@@149 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@145 $generated@@606 ($generated@@419 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@145 $generated@@609 $generated@@46))
 :pattern ( ($generated@@145 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@145 $generated@@610 $generated@@47))
 :pattern ( ($generated@@145 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@145 $generated@@611 $generated@@44))
 :pattern ( ($generated@@145 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@451) ($generated@@145 $generated@@612 $generated@@45))
 :pattern ( ($generated@@145 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@159) ($generated@@145 $generated@@613 $generated@@48))
 :pattern ( ($generated@@145 $generated@@613 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () Int)
(assert  (and (and (and (= (type $generated@@614) ($generated@@176 $generated@@83 $generated@@4)) (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@616) $generated@@83)) (= (type $generated@@617) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@620  (=> (= $generated@@614 ($generated@@175 $generated@@139 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@616 $generated@@139))) (=> ($generated@@80 $generated@@616 $generated@@142 $generated@@615) (=> (and ($generated@@274 $generated@@616) ($generated@@274 $generated@@616)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@236 $generated@@616) ($generated@@258 0))) (=> (= ($generated@@236 $generated@@616) ($generated@@258 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@617 $generated@@139))) (=> (and (and ($generated@@80 $generated@@617 $generated@@138 $generated@@615) ($generated@@276 $generated@@617)) (and ($generated@@276 $generated@@617) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@235 $generated@@617) ($generated@@258 0))))))))))))
(let (($generated@@621  (=> (and (and ($generated@@264 $generated@@615) ($generated@@618 $generated@@615)) (and ($generated@@145 $generated@@616 $generated@@232) ($generated@@80 $generated@@616 $generated@@232 $generated@@615))) (=> (and (and (and ($generated@@145 $generated@@617 $generated@@164) ($generated@@80 $generated@@617 $generated@@164 $generated@@615)) (= 1 $generated@@619)) (and (= $generated@@616 $generated@@617) (= (ControlFlow 0 6) 2))) $generated@@620))))
$generated@@621)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
