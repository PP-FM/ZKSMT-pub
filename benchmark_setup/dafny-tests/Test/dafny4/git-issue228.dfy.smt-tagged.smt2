(set-logic UFNIRABV)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(assert  (and (and (and (= (type $generated@@177) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@178) $generated@@47)) (= (type $generated@@179) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@180) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@184 true))
(let (($generated@@185  (=> (and (< $generated@@176 0) (= (ControlFlow 0 4) (- 0 3))) (not (= ($generated@@157 2) 0)))))
(let (($generated@@186  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@0 ($generated@@159 ($generated@@11 (< 1 0)))) (= ($generated@@157 ($generated@@171 1 ($generated@@157 2))) ($generated@@157 1))))))
(let (($generated@@187  (=> (= $generated@@177 ($generated@@45 $generated@@178 $generated@@179 $generated@@180 false)) (and (and (=> (= (ControlFlow 0 6) 2) $generated@@186) (=> (= (ControlFlow 0 6) 4) $generated@@185)) (=> (= (ControlFlow 0 6) 5) $generated@@184)))))
(let (($generated@@188  (=> (and (and ($generated@@181 $generated@@179) ($generated@@182 $generated@@179)) (and (= 0 $generated@@183) (= (ControlFlow 0 7) 6))) $generated@@187)))
$generated@@188))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(assert  (and (and (and (= (type $generated@@177) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@178) $generated@@47)) (= (type $generated@@179) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@180) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@184 true))
(let (($generated@@185  (=> (and (< $generated@@176 0) (= (ControlFlow 0 4) (- 0 3))) (not (= ($generated@@157 2) 0)))))
(let (($generated@@186  (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@0 ($generated@@159 ($generated@@11 (< 1 0)))) (= ($generated@@157 ($generated@@171 1 ($generated@@157 2))) ($generated@@157 1))))))
(let (($generated@@187  (=> (= $generated@@177 ($generated@@45 $generated@@178 $generated@@179 $generated@@180 false)) (and (and (=> (= (ControlFlow 0 6) 2) $generated@@186) (=> (= (ControlFlow 0 6) 4) $generated@@185)) (=> (= (ControlFlow 0 6) 5) $generated@@184)))))
(let (($generated@@188  (=> (and (and ($generated@@181 $generated@@179) ($generated@@182 $generated@@179)) (and (= 0 $generated@@183) (= (ControlFlow 0 7) 6))) $generated@@187)))
$generated@@188))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 19)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 19))
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@U) Int)
(declare-fun $generated@@258 (T@U Int) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 19)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 19)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 19) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 19) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@132) ($generated@@140 $generated@@142 ($generated@@75 19)))
 :pattern ( ($generated@@140 $generated@@142 ($generated@@75 19)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@140 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@140 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@140 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@140 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@140 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(= (type ($generated@@240 $generated@@241)) $generated@@242))
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@240 $generated@@243) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) $generated@@64) (= (type $generated@@247) $generated@@64)) (= (type $generated@@248) $generated@@154)) (= (type $generated@@249) $generated@@154)) (= (type $generated@@250) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@244 $generated@@250)) (= ($generated@@74 ($generated@@220 $generated@@248 $generated@@249) ($generated@@144 $generated@@246 $generated@@247) $generated@@250)  (and ($generated@@245 $generated@@248 $generated@@246 $generated@@250) ($generated@@245 $generated@@249 $generated@@247 $generated@@250))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@248 $generated@@249) ($generated@@144 $generated@@246 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@145) (= ($generated@@143 $generated@@253) (= ($generated@@251 $generated@@253) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@253))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259)) 18)) (forall (($generated@@260 T@T) ) (! (= ($generated@@255 ($generated@@256 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@256 $generated@@260))
))) (forall (($generated@@261 T@U) ($generated@@262 Int) ) (! (let (($generated@@263 ($generated@@255 (type $generated@@261))))
(= (type ($generated@@258 $generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@258 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@255 (type $generated@@264))))
 (=> (and (= (type $generated@@264) ($generated@@256 $generated@@266)) (= (type $generated@@265) ($generated@@256 $generated@@266))) (= ($generated@@254 $generated@@264 $generated@@265)  (and (= ($generated@@257 $generated@@264) ($generated@@257 $generated@@265)) (forall (($generated@@267 Int) ) (!  (=> (and (<= 0 $generated@@267) (< $generated@@267 ($generated@@257 $generated@@264))) (= ($generated@@258 $generated@@264 $generated@@267) ($generated@@258 $generated@@265 $generated@@267)))
 :pattern ( ($generated@@258 $generated@@264 $generated@@267))
 :pattern ( ($generated@@258 $generated@@265 $generated@@267))
))))))
 :pattern ( ($generated@@254 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@145) ($generated@@143 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@154) (= (type $generated@@270) $generated@@154)) (= $generated@@268 ($generated@@220 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@143 $generated@@268))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@256 $generated@@272))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@257 ($generated@@271 $generated@@273)) 0)
 :pattern ( ($generated@@271 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@154)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@245 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@245 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@255 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322 $generated@@323)) ($generated@@256 $generated@@324)))
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@255 (type $generated@@325))))
 (=> (and (= (type $generated@@325) ($generated@@256 $generated@@327)) (= (type $generated@@326) ($generated@@256 $generated@@327))) (= ($generated@@257 ($generated@@321 $generated@@325 $generated@@326)) (+ ($generated@@257 $generated@@325) ($generated@@257 $generated@@326)))))
 :pattern ( ($generated@@257 ($generated@@321 $generated@@325 $generated@@326)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@2)) (= ($generated@@160 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@81 $generated@@328 $generated@@330))) (<= ($generated ($generated@@81 $generated@@328 $generated@@330)) ($generated@@279 $generated@@328))))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@160 $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@285 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@289 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@289 (type $generated@@338))))
(let (($generated@@340 ($generated@@288 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@287 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@286 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@303 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@307 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@307 (type $generated@@349))))
(let (($generated@@351 ($generated@@306 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@305 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@304 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@354) $generated@@64)) (= ($generated@@140 $generated@@353 ($generated@@159 $generated@@354)) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@353 $generated@@355)))) ($generated@@221 $generated@@355 $generated@@354))
 :pattern ( ($generated@@81 $generated@@353 $generated@@355))
))))
 :pattern ( ($generated@@140 $generated@@353 ($generated@@159 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@154) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@245 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@235 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@154) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@245 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@235 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@81 ($generated@@280 $generated@@365) $generated@@364)))
)))
(assert  (and (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@366 $generated@@369)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@366 $generated@@369))
)) (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@367 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@367 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@289 (type $generated@@372))))
(let (($generated@@374 ($generated@@288 (type $generated@@372))))
(= (type ($generated@@368 $generated@@372)) ($generated@@76 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@368 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@287 $generated@@154 $generated@@154)) (= (type $generated@@376) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@375) ($generated@@152 ($generated@@367 $generated@@145 $generated@@376)))) (= ($generated@@81 ($generated@@368 $generated@@375) ($generated@@152 ($generated@@367 $generated@@145 $generated@@376))) ($generated@@153 ($generated@@367 $generated@@145 $generated@@376))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@375) $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@307 (type $generated@@380))))
(let (($generated@@382 ($generated@@306 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@305 $generated@@154 $generated@@154)) (= (type $generated@@384) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@383) ($generated@@152 ($generated@@367 $generated@@145 $generated@@384)))) (= ($generated@@81 ($generated@@378 $generated@@383) ($generated@@152 ($generated@@367 $generated@@145 $generated@@384))) ($generated@@153 ($generated@@367 $generated@@145 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@288 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@287 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@306 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@305 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@287 $generated@@154 $generated@@154)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@398) $generated@@402))) (and ($generated@@245 ($generated@@81 ($generated@@368 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@245 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@305 $generated@@154 $generated@@154)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@406) $generated@@410))) (and ($generated@@245 ($generated@@81 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@245 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@255 (type $generated@@411))))
 (=> (and (and (= (type $generated@@411) ($generated@@256 $generated@@413)) (= (type $generated@@412) ($generated@@256 $generated@@413))) ($generated@@254 $generated@@411 $generated@@412)) (= $generated@@411 $generated@@412)))
 :pattern ( ($generated@@254 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@76 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@307 (type $generated@@416))))
(let (($generated@@418 ($generated@@306 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@305 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@304 $generated@@418 $generated@@417)) (= ($generated@@303 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@303 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@307 (type $generated@@419))))
(let (($generated@@421 ($generated@@306 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@305 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@304 $generated@@421 $generated@@420)) (= ($generated@@346 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@346 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@307 (type $generated@@422))))
(let (($generated@@424 ($generated@@306 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@305 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@304 $generated@@424 $generated@@423)) (= ($generated@@377 $generated@@422) ($generated@@414 $generated@@154))))))
 :pattern ( ($generated@@377 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@289 (type $generated@@425))))
(let (($generated@@427 ($generated@@288 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@287 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@286 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@154) (= (type $generated@@429) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@425) ($generated@@274 ($generated@@220 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@366 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@307 (type $generated@@430))))
(let (($generated@@432 ($generated@@306 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@305 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@304 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@154) (= (type $generated@@434) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@377 $generated@@430) ($generated@@274 ($generated@@220 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@377 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@46)) (and (= ($generated@@274 ($generated@@367 $generated@@2 $generated@@435)) $generated@@435) ($generated@@140 ($generated@@367 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@154) ($generated@@221 $generated@@436 $generated@@47)) (and (= ($generated@@274 ($generated@@367 $generated@@3 $generated@@436)) $generated@@436) ($generated@@140 ($generated@@367 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@154) ($generated@@221 $generated@@437 $generated@@44)) (and (= ($generated@@274 ($generated@@367 $generated@@4 $generated@@437)) $generated@@437) ($generated@@140 ($generated@@367 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 21))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@221 $generated@@439 $generated@@45)) (and (= ($generated@@274 ($generated@@367 $generated@@438 $generated@@439)) $generated@@439) ($generated@@140 ($generated@@367 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@64) (= ($generated@@221 ($generated@@274 $generated@@440) $generated@@441) ($generated@@140 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@221 ($generated@@274 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@79 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@76 $generated@@443 $generated@@2)) (<= 0 ($generated@@279 $generated@@442))))
 :pattern ( ($generated@@279 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@255 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@256 $generated@@445)) (<= 0 ($generated@@257 $generated@@444))))
 :pattern ( ($generated@@257 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@395 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@395 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@395 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@395 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@395 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@403 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@403 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@154) (= (type $generated@@467) $generated@@154)) (= ($generated@@251 ($generated@@220 $generated@@466 $generated@@467)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@144 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@144 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@154) (= (type $generated@@477) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@220 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@154) (= (type $generated@@479) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@220 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@256 $generated@@154)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@480 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@257 $generated@@482))) ($generated@@245 ($generated@@258 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@258 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@480 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@75 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@75 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@480 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@480 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@480 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@480 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@367 $generated@@505 ($generated@@274 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@274 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@287 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) (= ($generated@@140 $generated@@506 ($generated@@395 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@81 ($generated@@368 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@506) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@140 $generated@@506 ($generated@@395 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@305 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) (= ($generated@@140 $generated@@510 ($generated@@403 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@81 ($generated@@378 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@510) $generated@@513))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@140 $generated@@510 ($generated@@403 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@221 $generated@@520 ($generated@@395 $generated@@521 $generated@@522))) (and (= ($generated@@274 ($generated@@367 ($generated@@287 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@140 ($generated@@367 ($generated@@287 $generated@@154 $generated@@154) $generated@@520) ($generated@@395 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@395 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@221 $generated@@523 ($generated@@403 $generated@@524 $generated@@525))) (and (= ($generated@@274 ($generated@@367 ($generated@@305 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@140 ($generated@@367 ($generated@@305 $generated@@154 $generated@@154) $generated@@523) ($generated@@403 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@367 $generated@@145 $generated@@528)) $generated@@528) ($generated@@140 ($generated@@367 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@81 ($generated@@414 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@81 ($generated@@414 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@69)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@533 $generated@@534)) $generated@@62) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@274 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@274 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@367 $generated@@2 $generated@@536)) $generated@@536) ($generated@@140 ($generated@@367 ($generated@@76 $generated@@154 $generated@@4) $generated@@536) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@75 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@64)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@274 ($generated@@367 ($generated@@76 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@140 ($generated@@367 ($generated@@76 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@64)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@274 ($generated@@367 ($generated@@76 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@140 ($generated@@367 ($generated@@76 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@64)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@274 ($generated@@367 ($generated@@76 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@140 ($generated@@367 ($generated@@76 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@64)) ($generated@@221 $generated@@543 ($generated@@480 $generated@@544))) (and (= ($generated@@274 ($generated@@367 ($generated@@256 $generated@@154) $generated@@543)) $generated@@543) ($generated@@140 ($generated@@367 ($generated@@256 $generated@@154) $generated@@543) ($generated@@480 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@480 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@221 $generated@@545 ($generated@@75 19))) (and (= ($generated@@274 ($generated@@367 $generated@@132 $generated@@545)) $generated@@545) ($generated@@140 ($generated@@367 $generated@@132 $generated@@545) ($generated@@75 19))))
 :pattern ( ($generated@@221 $generated@@545 ($generated@@75 19)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@159 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@245 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@159 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@552) (and ($generated@@143 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@144 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@144 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@245 ($generated@@152 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@245 ($generated@@152 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@244 $generated@@556) (and ($generated@@143 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@144 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@144 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@245 ($generated@@153 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@245 ($generated@@153 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 Int) ) (! (let (($generated@@561 ($generated@@255 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@256 $generated@@561)) (= (type $generated@@559) ($generated@@256 $generated@@561))) (and (=> (< $generated@@560 ($generated@@257 $generated@@558)) (= ($generated@@258 ($generated@@321 $generated@@558 $generated@@559) $generated@@560) ($generated@@258 $generated@@558 $generated@@560))) (=> (<= ($generated@@257 $generated@@558) $generated@@560) (= ($generated@@258 ($generated@@321 $generated@@558 $generated@@559) $generated@@560) ($generated@@258 $generated@@559 (- $generated@@560 ($generated@@257 $generated@@558))))))))
 :pattern ( ($generated@@258 ($generated@@321 $generated@@558 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@154) (= (type $generated@@563) $generated@@154)) (= ($generated@@220 ($generated@@240 $generated@@562) ($generated@@240 $generated@@563)) ($generated@@240 ($generated@@220 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@562) ($generated@@240 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@274 ($generated@@240 $generated@@564)) ($generated@@240 ($generated@@274 $generated@@564)))
 :pattern ( ($generated@@274 ($generated@@240 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@255 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@256 $generated@@566)) (= ($generated@@257 $generated@@565) 0)) (= $generated@@565 ($generated@@271 $generated@@566))))
 :pattern ( ($generated@@257 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@76 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@279 ($generated@@82 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@279 $generated@@567) ($generated ($generated@@81 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@2)) ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@3)) ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@4)) ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@438)) ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@154)) ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@256 $generated@@154)) (= (type $generated@@582) $generated@@64)) (= ($generated@@140 $generated@@581 ($generated@@480 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@257 $generated@@581))) ($generated@@221 ($generated@@258 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@258 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@140 $generated@@581 ($generated@@480 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@256 $generated@@154)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@257 $generated@@585))) (< ($generated@@515 ($generated@@367 $generated@@145 ($generated@@258 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@515 ($generated@@367 $generated@@145 ($generated@@258 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@287 $generated@@154 $generated@@154)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@140 $generated@@587 ($generated@@395 $generated@@588 $generated@@589))) (and (and ($generated@@140 ($generated@@285 $generated@@587) ($generated@@230 $generated@@588)) ($generated@@140 ($generated@@335 $generated@@587) ($generated@@230 $generated@@589))) ($generated@@140 ($generated@@366 $generated@@587) ($generated@@230 ($generated@@144 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@140 $generated@@587 ($generated@@395 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@305 $generated@@154 $generated@@154)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@140 $generated@@590 ($generated@@403 $generated@@591 $generated@@592))) (and (and ($generated@@140 ($generated@@303 $generated@@590) ($generated@@235 $generated@@591)) ($generated@@140 ($generated@@346 $generated@@590) ($generated@@235 $generated@@592))) ($generated@@140 ($generated@@377 $generated@@590) ($generated@@235 ($generated@@144 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@140 $generated@@590 ($generated@@403 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@140 $generated@@593 $generated@@46))
 :pattern ( ($generated@@140 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@140 $generated@@594 $generated@@47))
 :pattern ( ($generated@@140 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@140 $generated@@595 $generated@@44))
 :pattern ( ($generated@@140 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@438) ($generated@@140 $generated@@596 $generated@@45))
 :pattern ( ($generated@@140 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@154) ($generated@@140 $generated@@597 $generated@@48))
 :pattern ( ($generated@@140 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@598) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@599) $generated@@77)) (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@601) ($generated@@256 $generated@@154))) (= (type $generated@@602) ($generated@@256 $generated@@154))) (= (type $generated@@603) ($generated@@256 $generated@@154))) (= (type $generated@@605) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@607  (=> (and (= $generated@@598 ($generated@@165 $generated@@599 $generated@@600 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@254 ($generated@@321 ($generated@@321 $generated@@601 $generated@@602) $generated@@603) ($generated@@321 $generated@@601 ($generated@@321 $generated@@602 $generated@@603))))))
(let (($generated@@608  (=> (and ($generated@@244 $generated@@600) ($generated@@604 $generated@@600)) (=> (and (and (and ($generated@@140 $generated@@601 ($generated@@480 $generated@@605)) ($generated@@74 $generated@@601 ($generated@@480 $generated@@605) $generated@@600)) (and ($generated@@140 $generated@@602 ($generated@@480 $generated@@605)) ($generated@@74 $generated@@602 ($generated@@480 $generated@@605) $generated@@600))) (and (and ($generated@@140 $generated@@603 ($generated@@480 $generated@@605)) ($generated@@74 $generated@@603 ($generated@@480 $generated@@605) $generated@@600)) (and (= 0 $generated@@606) (= (ControlFlow 0 3) 2)))) $generated@@607))))
$generated@@608)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 19)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 19))
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 (T@U T@U) Bool)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@359 (T@U T@U) Bool)
(declare-fun $generated@@360 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 (T@U Int) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@629 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 19)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 19)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 19) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 19) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@132) ($generated@@140 $generated@@142 ($generated@@75 19)))
 :pattern ( ($generated@@140 $generated@@142 ($generated@@75 19)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@140 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@79 (type $generated@@221))))
(= (type ($generated@@220 $generated@@221 $generated@@222)) ($generated@@76 $generated@@223 $generated@@4)))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@79 (type $generated@@224))))
 (=> (and (= (type $generated@@224) ($generated@@76 $generated@@226 $generated@@4)) (= (type $generated@@225) ($generated@@76 $generated@@226 $generated@@4))) (= ($generated@@220 ($generated@@220 $generated@@224 $generated@@225) $generated@@225) ($generated@@220 $generated@@224 $generated@@225))))
 :pattern ( ($generated@@220 ($generated@@220 $generated@@224 $generated@@225) $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@79 (type $generated@@228))))
(= (type ($generated@@227 $generated@@228 $generated@@229)) ($generated@@76 $generated@@230 $generated@@4)))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@79 (type $generated@@231))))
 (=> (and (= (type $generated@@231) ($generated@@76 $generated@@233 $generated@@4)) (= (type $generated@@232) ($generated@@76 $generated@@233 $generated@@4))) (= ($generated@@227 ($generated@@227 $generated@@231 $generated@@232) $generated@@232) ($generated@@227 $generated@@231 $generated@@232))))
 :pattern ( ($generated@@227 ($generated@@227 $generated@@231 $generated@@232) $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@145)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) $generated@@64)) (= (type $generated@@240) $generated@@154)) (= (type $generated@@241) $generated@@154)) (= ($generated@@140 ($generated@@234 $generated@@240 $generated@@241) ($generated@@144 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@140 ($generated@@234 $generated@@240 $generated@@241) ($generated@@144 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) (= (type $generated@@243) $generated@@145)) (= ($generated@@151 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@151 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@154) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@235 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@140 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@252) $generated@@64)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@154) ($generated@@0 ($generated@@81 $generated@@251 $generated@@253))) ($generated@@235 $generated@@253 $generated@@252))
 :pattern ( ($generated@@81 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@154)) (= (type $generated@@263) $generated@@154)) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@258 $generated@@264)) (= ($generated@@74 ($generated@@234 $generated@@262 $generated@@263) ($generated@@144 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@74 ($generated@@234 $generated@@262 $generated@@263) ($generated@@144 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@145) (= ($generated@@143 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@145) ($generated@@143 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@154) (= (type $generated@@270) $generated@@154)) (= $generated@@268 ($generated@@234 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@143 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 18)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@154)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@64) (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@259 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@74 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@259 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@76 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@79 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@76 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@81 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 19)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 20)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@76 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@81 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@81 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@79 (type $generated@@327))))
 (=> (and (= (type $generated@@327) ($generated@@76 $generated@@329 $generated@@4)) (= (type $generated@@328) ($generated@@76 $generated@@329 $generated@@4))) (= ($generated@@326 $generated@@327 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (= ($generated@@0 ($generated@@81 $generated@@327 $generated@@330)) ($generated@@0 ($generated@@81 $generated@@328 $generated@@330))))
 :pattern ( ($generated@@81 $generated@@327 $generated@@330))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@79 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@76 $generated@@332 $generated@@2)) (= ($generated@@160 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@81 $generated@@331 $generated@@333))) (<= ($generated ($generated@@81 $generated@@331 $generated@@333)) ($generated@@284 $generated@@331))))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@160 $generated@@331))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@294 (type $generated@@334))))
(let (($generated@@336 ($generated@@293 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@292 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@291 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@290 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@294 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@76 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@294 (type $generated@@341))))
(let (($generated@@343 ($generated@@293 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@292 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@291 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@312 (type $generated@@345))))
(let (($generated@@347 ($generated@@311 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@310 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@309 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@308 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@312 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@76 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@312 (type $generated@@352))))
(let (($generated@@354 ($generated@@311 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@310 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@309 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@357) $generated@@64)) (= ($generated@@140 $generated@@356 ($generated@@159 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@356 $generated@@358)))) ($generated@@235 $generated@@358 $generated@@357))
 :pattern ( ($generated@@81 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@140 $generated@@356 ($generated@@159 $generated@@357)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@79 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@79 (type $generated@@364))))
 (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@366 $generated@@4)) (= (type $generated@@365) ($generated@@76 $generated@@366 $generated@@4))) ($generated@@359 $generated@@364 $generated@@365)) (and (= ($generated@@360 ($generated@@220 $generated@@364 $generated@@365) $generated@@364) $generated@@365) (= ($generated@@360 ($generated@@220 $generated@@364 $generated@@365) $generated@@365) $generated@@364))))
 :pattern ( ($generated@@220 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
 (=> (and (= (type $generated@@367) ($generated@@76 $generated@@370 $generated@@4)) (= (type $generated@@368) ($generated@@76 $generated@@370 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@227 $generated@@367 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 $generated@@367 $generated@@369)) ($generated@@0 ($generated@@81 $generated@@368 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@227 $generated@@367 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
 (=> (and (= (type $generated@@371) ($generated@@76 $generated@@374 $generated@@4)) (= (type $generated@@372) ($generated@@76 $generated@@374 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@371 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 $generated@@371 $generated@@373)) (not ($generated@@0 ($generated@@81 $generated@@372 $generated@@373)))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@371 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@244 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@154) ($generated@@0 ($generated@@81 $generated@@375 $generated@@378))) ($generated@@259 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@244 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@249 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@154) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@259 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@249 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@81 ($generated@@285 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@81 ($generated@@285 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@294 (type $generated@@391))))
(let (($generated@@393 ($generated@@293 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@76 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@292 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@394) ($generated@@152 ($generated@@386 $generated@@145 $generated@@395)))) (= ($generated@@81 ($generated@@387 $generated@@394) ($generated@@152 ($generated@@386 $generated@@145 $generated@@395))) ($generated@@153 ($generated@@386 $generated@@145 $generated@@395))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@312 (type $generated@@399))))
(let (($generated@@401 ($generated@@311 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@76 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@310 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@81 ($generated@@308 $generated@@402) ($generated@@152 ($generated@@386 $generated@@145 $generated@@403)))) (= ($generated@@81 ($generated@@397 $generated@@402) ($generated@@152 ($generated@@386 $generated@@145 $generated@@403))) ($generated@@153 ($generated@@386 $generated@@145 $generated@@403))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@293 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@292 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@81 ($generated@@338 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@81 ($generated@@338 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@311 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@310 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@349 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@81 ($generated@@308 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@292 $generated@@154 $generated@@154)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@417) $generated@@421))) (and ($generated@@259 ($generated@@81 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@259 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@310 $generated@@154 $generated@@154)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@425) $generated@@429))) (and ($generated@@259 ($generated@@81 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@259 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@430))))
 (=> (and (and (= (type $generated@@430) ($generated@@76 $generated@@432 $generated@@4)) (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@4))) ($generated@@326 $generated@@430 $generated@@431)) (= $generated@@430 $generated@@431)))
 :pattern ( ($generated@@326 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
 (=> (and (and (= (type $generated@@433) ($generated@@76 $generated@@436 $generated@@4)) (= (type $generated@@434) ($generated@@76 $generated@@436 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@433 $generated@@435))) ($generated@@0 ($generated@@81 ($generated@@220 $generated@@433 $generated@@434) $generated@@435))))
 :pattern ( ($generated@@220 $generated@@433 $generated@@434) ($generated@@81 $generated@@433 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
 (=> (and (and (= (type $generated@@437) ($generated@@76 $generated@@440 $generated@@4)) (= (type $generated@@438) ($generated@@76 $generated@@440 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@438 $generated@@439))) ($generated@@0 ($generated@@81 ($generated@@220 $generated@@437 $generated@@438) $generated@@439))))
 :pattern ( ($generated@@220 $generated@@437 $generated@@438) ($generated@@81 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
 (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@444 $generated@@4)) (= (type $generated@@442) ($generated@@76 $generated@@444 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@442 $generated@@443))) (not ($generated@@0 ($generated@@81 ($generated@@360 $generated@@441 $generated@@442) $generated@@443)))))
 :pattern ( ($generated@@360 $generated@@441 $generated@@442) ($generated@@81 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@76 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@312 (type $generated@@447))))
(let (($generated@@449 ($generated@@311 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@310 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@309 $generated@@449 $generated@@448)) (= ($generated@@308 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@308 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@312 (type $generated@@450))))
(let (($generated@@452 ($generated@@311 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@310 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@309 $generated@@452 $generated@@451)) (= ($generated@@349 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@349 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@312 (type $generated@@453))))
(let (($generated@@455 ($generated@@311 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@310 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@309 $generated@@455 $generated@@454)) (= ($generated@@396 $generated@@453) ($generated@@445 $generated@@154))))))
 :pattern ( ($generated@@396 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@294 (type $generated@@456))))
(let (($generated@@458 ($generated@@293 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@292 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@291 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@154) (= (type $generated@@460) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@456) ($generated@@279 ($generated@@234 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@385 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@312 (type $generated@@461))))
(let (($generated@@463 ($generated@@311 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@310 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@309 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@154) (= (type $generated@@465) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@461) ($generated@@279 ($generated@@234 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@396 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@154) ($generated@@235 $generated@@466 $generated@@46)) (and (= ($generated@@279 ($generated@@386 $generated@@2 $generated@@466)) $generated@@466) ($generated@@140 ($generated@@386 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@154) ($generated@@235 $generated@@467 $generated@@47)) (and (= ($generated@@279 ($generated@@386 $generated@@3 $generated@@467)) $generated@@467) ($generated@@140 ($generated@@386 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@154) ($generated@@235 $generated@@468 $generated@@44)) (and (= ($generated@@279 ($generated@@386 $generated@@4 $generated@@468)) $generated@@468) ($generated@@140 ($generated@@386 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 21))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@154) ($generated@@235 $generated@@470 $generated@@45)) (and (= ($generated@@279 ($generated@@386 $generated@@469 $generated@@470)) $generated@@470) ($generated@@140 ($generated@@386 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@235 ($generated@@279 $generated@@471) $generated@@472) ($generated@@140 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@235 ($generated@@279 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@79 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@76 $generated@@474 $generated@@2)) (<= 0 ($generated@@284 $generated@@473))))
 :pattern ( ($generated@@284 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@274 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@273 $generated@@476)) (<= 0 ($generated@@272 $generated@@475))))
 :pattern ( ($generated@@272 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@414 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@414 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@414 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@414 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@422 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@422 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@422 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@422 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@154) (= (type $generated@@498) $generated@@154)) (= ($generated@@265 ($generated@@234 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@144 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@144 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@503 ($generated@@144 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@144 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) (= (type $generated@@508) $generated@@154)) (= ($generated@@152 ($generated@@234 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@234 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) (= (type $generated@@510) $generated@@154)) (= ($generated@@153 ($generated@@234 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@234 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@513))
)) (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@274 (type $generated@@514))))
(= (type ($generated@@512 $generated@@514 $generated@@515)) $generated@@516))
 :pattern ( ($generated@@512 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@273 $generated@@154)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@517 ($generated@@511 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@272 $generated@@517))) ($generated@@259 ($generated@@512 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@512 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@74 $generated@@517 ($generated@@511 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@75 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@75 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@244 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@244 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@249 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@249 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@159 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@159 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@535 ($generated@@511 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@511 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@72 ($generated@@511 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@511 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@386 $generated@@540 ($generated@@279 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@279 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@292 $generated@@154 $generated@@154)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) (= ($generated@@140 $generated@@541 ($generated@@414 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@541) $generated@@544))) (and ($generated@@235 ($generated@@81 ($generated@@387 $generated@@541) $generated@@544) $generated@@543) ($generated@@235 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@541) $generated@@544))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@140 $generated@@541 ($generated@@414 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@310 $generated@@154 $generated@@154)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) (= ($generated@@140 $generated@@545 ($generated@@422 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@545) $generated@@548))) (and ($generated@@235 ($generated@@81 ($generated@@397 $generated@@545) $generated@@548) $generated@@547) ($generated@@235 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@545) $generated@@548))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@140 $generated@@545 ($generated@@422 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@154) (= (type $generated@@552) $generated@@154)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@234 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@234 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@154) (= (type $generated@@554) $generated@@154)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@234 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@234 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@79 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@76 $generated@@557 $generated@@4)) (= (type $generated@@556) ($generated@@76 $generated@@557 $generated@@4))) (= ($generated@@220 $generated@@555 ($generated@@220 $generated@@555 $generated@@556)) ($generated@@220 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@220 $generated@@555 ($generated@@220 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@79 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@76 $generated@@560 $generated@@4)) (= (type $generated@@559) ($generated@@76 $generated@@560 $generated@@4))) (= ($generated@@227 $generated@@558 ($generated@@227 $generated@@558 $generated@@559)) ($generated@@227 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@227 $generated@@558 ($generated@@227 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@235 $generated@@561 ($generated@@414 $generated@@562 $generated@@563))) (and (= ($generated@@279 ($generated@@386 ($generated@@292 $generated@@154 $generated@@154) $generated@@561)) $generated@@561) ($generated@@140 ($generated@@386 ($generated@@292 $generated@@154 $generated@@154) $generated@@561) ($generated@@414 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@235 $generated@@561 ($generated@@414 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@154) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@64)) ($generated@@235 $generated@@564 ($generated@@422 $generated@@565 $generated@@566))) (and (= ($generated@@279 ($generated@@386 ($generated@@310 $generated@@154 $generated@@154) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@386 ($generated@@310 $generated@@154 $generated@@154) $generated@@564) ($generated@@422 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@235 $generated@@564 ($generated@@422 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@64) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@154)) ($generated@@235 $generated@@569 ($generated@@144 $generated@@567 $generated@@568))) (and (= ($generated@@279 ($generated@@386 $generated@@145 $generated@@569)) $generated@@569) ($generated@@140 ($generated@@386 $generated@@145 $generated@@569) ($generated@@144 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@235 $generated@@569 ($generated@@144 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@81 ($generated@@445 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@81 ($generated@@445 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@69)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@64) (= (type $generated@@575) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@574 $generated@@575)) $generated@@62) (= ($generated@@572 ($generated@@144 $generated@@574 $generated@@575)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@145) (= ($generated@@549 ($generated@@279 $generated@@576)) ($generated@@550 $generated@@576)))
 :pattern ( ($generated@@549 ($generated@@279 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@154) ($generated@@235 $generated@@577 ($generated@@75 0))) (and (= ($generated@@279 ($generated@@386 $generated@@2 $generated@@577)) $generated@@577) ($generated@@140 ($generated@@386 ($generated@@76 $generated@@154 $generated@@4) $generated@@577) ($generated@@75 0))))
 :pattern ( ($generated@@235 $generated@@577 ($generated@@75 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@64)) ($generated@@235 $generated@@578 ($generated@@244 $generated@@579))) (and (= ($generated@@279 ($generated@@386 ($generated@@76 $generated@@154 $generated@@4) $generated@@578)) $generated@@578) ($generated@@140 ($generated@@386 ($generated@@76 $generated@@154 $generated@@4) $generated@@578) ($generated@@244 $generated@@579))))
 :pattern ( ($generated@@235 $generated@@578 ($generated@@244 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@64)) ($generated@@235 $generated@@580 ($generated@@249 $generated@@581))) (and (= ($generated@@279 ($generated@@386 ($generated@@76 $generated@@154 $generated@@4) $generated@@580)) $generated@@580) ($generated@@140 ($generated@@386 ($generated@@76 $generated@@154 $generated@@4) $generated@@580) ($generated@@249 $generated@@581))))
 :pattern ( ($generated@@235 $generated@@580 ($generated@@249 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@64)) ($generated@@235 $generated@@582 ($generated@@159 $generated@@583))) (and (= ($generated@@279 ($generated@@386 ($generated@@76 $generated@@154 $generated@@2) $generated@@582)) $generated@@582) ($generated@@140 ($generated@@386 ($generated@@76 $generated@@154 $generated@@2) $generated@@582) ($generated@@159 $generated@@583))))
 :pattern ( ($generated@@235 $generated@@582 ($generated@@159 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@64)) ($generated@@235 $generated@@584 ($generated@@511 $generated@@585))) (and (= ($generated@@279 ($generated@@386 ($generated@@273 $generated@@154) $generated@@584)) $generated@@584) ($generated@@140 ($generated@@386 ($generated@@273 $generated@@154) $generated@@584) ($generated@@511 $generated@@585))))
 :pattern ( ($generated@@235 $generated@@584 ($generated@@511 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@154) ($generated@@235 $generated@@586 ($generated@@75 19))) (and (= ($generated@@279 ($generated@@386 $generated@@132 $generated@@586)) $generated@@586) ($generated@@140 ($generated@@386 $generated@@132 $generated@@586) ($generated@@75 19))))
 :pattern ( ($generated@@235 $generated@@586 ($generated@@75 19)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@587 ($generated@@159 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@587 $generated@@590)))) ($generated@@259 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@81 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@74 $generated@@587 ($generated@@159 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@79 (type $generated@@591))))
 (=> (and (= (type $generated@@591) ($generated@@76 $generated@@593 $generated@@4)) (= (type $generated@@592) ($generated@@76 $generated@@593 $generated@@4))) (= ($generated@@359 $generated@@591 $generated@@592) (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@593) (or (not ($generated@@0 ($generated@@81 $generated@@591 $generated@@594))) (not ($generated@@0 ($generated@@81 $generated@@592 $generated@@594)))))
 :pattern ( ($generated@@81 $generated@@591 $generated@@594))
 :pattern ( ($generated@@81 $generated@@592 $generated@@594))
)))))
 :pattern ( ($generated@@359 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@258 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@64) ($generated@@74 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@74 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@259 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@259 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@258 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@64) ($generated@@74 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@74 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@259 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@259 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@154) (= (type $generated@@604) $generated@@154)) (= ($generated@@234 ($generated@@254 $generated@@603) ($generated@@254 $generated@@604)) ($generated@@254 ($generated@@234 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@234 ($generated@@254 $generated@@603) ($generated@@254 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@279 ($generated@@254 $generated@@605)) ($generated@@254 ($generated@@279 $generated@@605)))
 :pattern ( ($generated@@279 ($generated@@254 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@274 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@273 $generated@@607)) (= ($generated@@272 $generated@@606) 0)) (= $generated@@606 ($generated@@271 $generated@@607))))
 :pattern ( ($generated@@272 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@609)))
 (=> (and (and (= (type $generated@@608) ($generated@@76 $generated@@611 $generated@@2)) (= (type $generated@@610) $generated@@2)) (<= 0 ($generated $generated@@610))) (= ($generated@@284 ($generated@@82 $generated@@608 $generated@@609 $generated@@610)) (+ (- ($generated@@284 $generated@@608) ($generated ($generated@@81 $generated@@608 $generated@@609))) ($generated $generated@@610)))))
 :pattern ( ($generated@@284 ($generated@@82 $generated@@608 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (=> (and (= (type $generated@@612) ($generated@@76 $generated@@615 $generated@@4)) (= (type $generated@@613) ($generated@@76 $generated@@615 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@220 $generated@@612 $generated@@613) $generated@@614))  (or ($generated@@0 ($generated@@81 $generated@@612 $generated@@614)) ($generated@@0 ($generated@@81 $generated@@613 $generated@@614))))))
 :pattern ( ($generated@@81 ($generated@@220 $generated@@612 $generated@@613) $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@617) $generated@@2)) ($generated@@74 $generated@@617 $generated@@46 $generated@@616))
 :pattern ( ($generated@@74 $generated@@617 $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@619) $generated@@3)) ($generated@@74 $generated@@619 $generated@@47 $generated@@618))
 :pattern ( ($generated@@74 $generated@@619 $generated@@47 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@621) $generated@@4)) ($generated@@74 $generated@@621 $generated@@44 $generated@@620))
 :pattern ( ($generated@@74 $generated@@621 $generated@@44 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@623) $generated@@469)) ($generated@@74 $generated@@623 $generated@@45 $generated@@622))
 :pattern ( ($generated@@74 $generated@@623 $generated@@45 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@625) $generated@@154)) ($generated@@74 $generated@@625 $generated@@48 $generated@@624))
 :pattern ( ($generated@@74 $generated@@625 $generated@@48 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@273 $generated@@154)) (= (type $generated@@627) $generated@@64)) (= ($generated@@140 $generated@@626 ($generated@@511 $generated@@627)) (forall (($generated@@628 Int) ) (!  (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@272 $generated@@626))) ($generated@@235 ($generated@@512 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@512 $generated@@626 $generated@@628))
))))
 :pattern ( ($generated@@140 $generated@@626 ($generated@@511 $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 Int) ) (!  (=> (= (type $generated@@630) ($generated@@273 $generated@@154)) (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@272 $generated@@630))) (< ($generated@@550 ($generated@@386 $generated@@145 ($generated@@512 $generated@@630 $generated@@631))) ($generated@@629 $generated@@630))))
 :pattern ( ($generated@@550 ($generated@@386 $generated@@145 ($generated@@512 $generated@@630 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@292 $generated@@154 $generated@@154)) (= (type $generated@@633) $generated@@64)) (= (type $generated@@634) $generated@@64)) ($generated@@140 $generated@@632 ($generated@@414 $generated@@633 $generated@@634))) (and (and ($generated@@140 ($generated@@290 $generated@@632) ($generated@@244 $generated@@633)) ($generated@@140 ($generated@@338 $generated@@632) ($generated@@244 $generated@@634))) ($generated@@140 ($generated@@385 $generated@@632) ($generated@@244 ($generated@@144 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@140 $generated@@632 ($generated@@414 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@310 $generated@@154 $generated@@154)) (= (type $generated@@636) $generated@@64)) (= (type $generated@@637) $generated@@64)) ($generated@@140 $generated@@635 ($generated@@422 $generated@@636 $generated@@637))) (and (and ($generated@@140 ($generated@@308 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@140 ($generated@@349 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@140 ($generated@@396 $generated@@635) ($generated@@249 ($generated@@144 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@140 $generated@@635 ($generated@@422 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@2) ($generated@@140 $generated@@638 $generated@@46))
 :pattern ( ($generated@@140 $generated@@638 $generated@@46))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@3) ($generated@@140 $generated@@639 $generated@@47))
 :pattern ( ($generated@@140 $generated@@639 $generated@@47))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@4) ($generated@@140 $generated@@640 $generated@@44))
 :pattern ( ($generated@@140 $generated@@640 $generated@@44))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@469) ($generated@@140 $generated@@641 $generated@@45))
 :pattern ( ($generated@@140 $generated@@641 $generated@@45))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@154) ($generated@@140 $generated@@642 $generated@@48))
 :pattern ( ($generated@@140 $generated@@642 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@643) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@644) $generated@@77)) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@646) ($generated@@76 $generated@@154 $generated@@4))) (= (type $generated@@647) ($generated@@76 $generated@@154 $generated@@4))) (= (type $generated@@648) ($generated@@76 $generated@@154 $generated@@4))) (= (type $generated@@650) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@652  (=> (= $generated@@643 ($generated@@165 $generated@@644 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@326 ($generated@@220 ($generated@@220 $generated@@646 $generated@@647) $generated@@648) ($generated@@220 $generated@@646 ($generated@@220 $generated@@647 $generated@@648)))) (=> ($generated@@326 ($generated@@220 ($generated@@220 $generated@@646 $generated@@647) $generated@@648) ($generated@@220 $generated@@646 ($generated@@220 $generated@@647 $generated@@648))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@326 ($generated@@227 ($generated@@227 $generated@@646 $generated@@647) $generated@@648) ($generated@@227 $generated@@646 ($generated@@227 $generated@@647 $generated@@648)))))))))
(let (($generated@@653  (=> (and ($generated@@258 $generated@@645) ($generated@@649 $generated@@645)) (=> (and (and (and ($generated@@140 $generated@@646 ($generated@@244 $generated@@650)) ($generated@@74 $generated@@646 ($generated@@244 $generated@@650) $generated@@645)) (and ($generated@@140 $generated@@647 ($generated@@244 $generated@@650)) ($generated@@74 $generated@@647 ($generated@@244 $generated@@650) $generated@@645))) (and (and ($generated@@140 $generated@@648 ($generated@@244 $generated@@650)) ($generated@@74 $generated@@648 ($generated@@244 $generated@@650) $generated@@645)) (and (= 0 $generated@@651) (= (ControlFlow 0 4) 2)))) $generated@@652))))
$generated@@653)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 ((_ BitVec 19)) T@U)
(declare-fun $generated@@136 (T@U) (_ BitVec 19))
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (Int) T@U)
(declare-fun $generated@@325 (T@U) Bool)
(declare-fun $generated@@326 (T@U) Int)
(declare-fun $generated@@332 (T@U T@U) T@U)
(declare-fun $generated@@337 (T@T T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (forall (($generated@@137 (_ BitVec 19)) ) (! (= ($generated@@136 ($generated@@135 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@135 $generated@@137))
)) (= ($generated@@1 $generated@@134) 14)) (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@134) (= ($generated@@135 ($generated@@136 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@136 $generated@@138))
))) (forall (($generated@@139 (_ BitVec 19)) ) (! (= (type ($generated@@135 $generated@@139)) $generated@@134)
 :pattern ( ($generated@@135 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@134) (= (type $generated@@141) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@140 ($generated@@77 19) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140 ($generated@@77 19) $generated@@141))
)))
(assert (= ($generated@@1 $generated@@143) 15))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@143) (= (type $generated@@145) $generated@@143)) (= (type $generated@@146) $generated@@143)) (and ($generated@@142 $generated@@144 $generated@@145) ($generated@@142 $generated@@145 $generated@@146))) ($generated@@142 $generated@@144 $generated@@146))
 :pattern ( ($generated@@142 $generated@@144 $generated@@145) ($generated@@142 $generated@@145 $generated@@146))
 :pattern ( ($generated@@142 $generated@@144 $generated@@145) ($generated@@142 $generated@@144 $generated@@146))
)))
(assert (= (type $generated@@147) $generated@@66))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@148 $generated@@147 $generated@@149))
 :pattern ( ($generated@@76 $generated@@148 $generated@@147 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@77 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@77 0)))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@134) ($generated@@150 $generated@@152 ($generated@@77 19)))
 :pattern ( ($generated@@150 $generated@@152 ($generated@@77 19)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 16) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@66) (= (type $generated@@159) $generated@@66)) (= (type $generated@@160) $generated@@155)) ($generated@@150 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@150 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@143)
 :pattern ( ($generated@@162 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@143)
 :pattern ( ($generated@@163 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@155) (= (type $generated@@167) $generated@@155)) true) (= ($generated@@161 $generated@@166 $generated@@167)  (and (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)) (= ($generated@@163 $generated@@166) ($generated@@163 $generated@@167)))))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@66)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@78 $generated@@143 $generated@@2)) (= (type $generated@@172) $generated@@66)) ($generated@@150 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@150 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 17)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@79 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@69 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@79) (= (type $generated@@223) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@224) ($generated@@68 $generated@@4))) (= (type $generated@@226) $generated@@79)) (= (type $generated@@227) ($generated@@68 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@155)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@66) (= (type $generated@@234) $generated@@66)) (= (type $generated@@235) $generated@@143)) (= (type $generated@@236) $generated@@143)) (= ($generated@@150 ($generated@@229 $generated@@235 $generated@@236) ($generated@@154 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@150 ($generated@@229 $generated@@235 $generated@@236) ($generated@@154 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@155) (= (type $generated@@238) $generated@@155)) (= ($generated@@161 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@161 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@66)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@78 $generated@@143 $generated@@4)) (= (type $generated@@242) $generated@@66)) (= ($generated@@150 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@143) ($generated@@0 ($generated@@83 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@83 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@150 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@143 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@150 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@143) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@150 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@66) (= (type $generated@@258) $generated@@66)) (= (type $generated@@259) $generated@@143)) (= (type $generated@@260) $generated@@143)) (= (type $generated@@261) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@255 $generated@@261)) (= ($generated@@76 ($generated@@229 $generated@@259 $generated@@260) ($generated@@154 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@259 $generated@@260) ($generated@@154 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@155) (= ($generated@@153 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@155) ($generated@@153 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@143) (= (type $generated@@267) $generated@@143)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@153 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 18)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@150 $generated@@276 $generated@@147) (<= ($generated@@249 0) ($generated $generated@@276))))
 :pattern ( ($generated@@150 $generated@@276 $generated@@147))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@143)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@76 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@256 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@78 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@81 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@78 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@83 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 19)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@78 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@83 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@83 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 20)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@78 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@83 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@83 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@327 Int) ) (! (= (type ($generated@@324 $generated@@327)) $generated@@143)
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@328 Int) ) (!  (=> (<= 0 $generated@@328) (and ($generated@@325 ($generated@@324 $generated@@328)) (= ($generated@@326 ($generated@@324 $generated@@328)) $generated@@328)))
 :pattern ( ($generated@@324 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@81 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@78 $generated@@330 $generated@@2)) (= ($generated@@169 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@83 $generated@@329 $generated@@331))) (<= ($generated ($generated@@83 $generated@@329 $generated@@331)) ($generated@@282 $generated@@329))))
 :pattern ( ($generated@@83 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@169 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@143)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@143) (= (type $generated@@336) $generated@@143)) (and (or (= $generated@@335 ($generated@@332 $generated@@335 $generated@@336)) ($generated@@142 $generated@@335 ($generated@@332 $generated@@335 $generated@@336))) (or (= $generated@@336 ($generated@@332 $generated@@335 $generated@@336)) ($generated@@142 $generated@@336 ($generated@@332 $generated@@335 $generated@@336)))))
 :pattern ( ($generated@@332 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@T) ($generated@@339 T@U) ) (! (= (type ($generated@@337 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@337 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@143) ($generated@@230 $generated@@340 $generated@@147)) (and (= ($generated@@277 ($generated@@337 $generated@@2 $generated@@340)) $generated@@340) ($generated@@150 ($generated@@337 $generated@@2 $generated@@340) $generated@@147)))
 :pattern ( ($generated@@230 $generated@@340 $generated@@147))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@292 (type $generated@@341))))
(let (($generated@@343 ($generated@@291 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@290 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@289 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@288 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@292 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@292 (type $generated@@348))))
(let (($generated@@350 ($generated@@291 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@290 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@289 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(let (($generated@@354 ($generated@@309 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@308 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@307 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@306 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@310 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@310 (type $generated@@359))))
(let (($generated@@361 ($generated@@309 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@308 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@307 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@78 $generated@@143 $generated@@2)) (= (type $generated@@364) $generated@@66)) (= ($generated@@150 $generated@@363 ($generated@@168 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@143) (< 0 ($generated ($generated@@83 $generated@@363 $generated@@365)))) ($generated@@230 $generated@@365 $generated@@364))
 :pattern ( ($generated@@83 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@150 $generated@@363 ($generated@@168 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@143) (= (type $generated@@367) $generated@@143)) (or (or ($generated@@142 $generated@@366 $generated@@367) (= $generated@@366 $generated@@367)) ($generated@@142 $generated@@367 $generated@@366)))
 :pattern ( ($generated@@142 $generated@@366 $generated@@367) ($generated@@142 $generated@@367 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@78 $generated@@143 $generated@@4)) (= (type $generated@@369) $generated@@66)) (= (type $generated@@370) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@368 ($generated@@239 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@143) ($generated@@0 ($generated@@83 $generated@@368 $generated@@371))) ($generated@@256 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@83 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@76 $generated@@368 ($generated@@239 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@78 $generated@@143 $generated@@4)) (= (type $generated@@373) $generated@@66)) (= (type $generated@@374) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@372 ($generated@@244 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@143) ($generated@@0 ($generated@@83 $generated@@372 $generated@@375))) ($generated@@256 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@83 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@76 $generated@@372 ($generated@@244 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@83 ($generated@@283 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@83 ($generated@@283 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@292 (type $generated@@381))))
(let (($generated@@383 ($generated@@291 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@290 $generated@@143 $generated@@143)) (= (type $generated@@385) $generated@@143)) (= ($generated@@0 ($generated@@83 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@83 ($generated@@288 $generated@@384) ($generated@@162 ($generated@@337 $generated@@155 $generated@@385)))) (= ($generated@@83 ($generated@@379 $generated@@384) ($generated@@162 ($generated@@337 $generated@@155 $generated@@385))) ($generated@@163 ($generated@@337 $generated@@155 $generated@@385))))))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@310 (type $generated@@389))))
(let (($generated@@391 ($generated@@309 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@308 $generated@@143 $generated@@143)) (= (type $generated@@393) $generated@@143)) (= ($generated@@0 ($generated@@83 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@83 ($generated@@306 $generated@@392) ($generated@@162 ($generated@@337 $generated@@155 $generated@@393)))) (= ($generated@@83 ($generated@@387 $generated@@392) ($generated@@162 ($generated@@337 $generated@@155 $generated@@393))) ($generated@@163 ($generated@@337 $generated@@155 $generated@@393))))))
 :pattern ( ($generated@@83 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@291 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@290 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@83 ($generated@@288 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@83 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@309 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@308 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@83 ($generated@@306 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@83 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@399) $generated@@403))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@66)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@290 $generated@@143 $generated@@143)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@143) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@407) $generated@@411))) (and ($generated@@256 ($generated@@83 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@256 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@76 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@66)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@308 $generated@@143 $generated@@143)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@143) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@415) $generated@@419))) (and ($generated@@256 ($generated@@83 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@256 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@76 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@143) (= (type $generated@@421) $generated@@143)) (and (=> (= $generated@@420 ($generated@@324 0)) (= ($generated@@332 $generated@@420 $generated@@421) $generated@@421)) (=> (= $generated@@421 ($generated@@324 0)) (= ($generated@@332 $generated@@420 $generated@@421) $generated@@420))))
 :pattern ( ($generated@@332 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@78 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@310 (type $generated@@424))))
(let (($generated@@426 ($generated@@309 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@308 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@307 $generated@@426 $generated@@425)) (= ($generated@@306 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@306 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@310 (type $generated@@427))))
(let (($generated@@429 ($generated@@309 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@308 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@307 $generated@@429 $generated@@428)) (= ($generated@@356 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@356 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@310 (type $generated@@430))))
(let (($generated@@432 ($generated@@309 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@308 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@307 $generated@@432 $generated@@431)) (= ($generated@@386 $generated@@430) ($generated@@422 $generated@@143))))))
 :pattern ( ($generated@@386 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@292 (type $generated@@433))))
(let (($generated@@435 ($generated@@291 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@290 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@289 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@143) (= (type $generated@@437) $generated@@143)) ($generated@@0 ($generated@@83 ($generated@@378 $generated@@433) ($generated@@277 ($generated@@229 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@378 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@310 (type $generated@@438))))
(let (($generated@@440 ($generated@@309 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@308 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@307 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@143) (= (type $generated@@442) $generated@@143)) ($generated@@0 ($generated@@83 ($generated@@386 $generated@@438) ($generated@@277 ($generated@@229 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@386 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@143) ($generated@@230 $generated@@443 $generated@@46)) (and (= ($generated@@277 ($generated@@337 $generated@@2 $generated@@443)) $generated@@443) ($generated@@150 ($generated@@337 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@143) ($generated@@230 $generated@@444 $generated@@47)) (and (= ($generated@@277 ($generated@@337 $generated@@3 $generated@@444)) $generated@@444) ($generated@@150 ($generated@@337 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@143) ($generated@@230 $generated@@445 $generated@@44)) (and (= ($generated@@277 ($generated@@337 $generated@@4 $generated@@445)) $generated@@445) ($generated@@150 ($generated@@337 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 21))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@143) ($generated@@230 $generated@@447 $generated@@45)) (and (= ($generated@@277 ($generated@@337 $generated@@446 $generated@@447)) $generated@@447) ($generated@@150 ($generated@@337 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@66) (= ($generated@@230 ($generated@@277 $generated@@448) $generated@@449) ($generated@@150 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@230 ($generated@@277 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@143) (<= 0 ($generated@@326 $generated@@450)))
 :pattern ( ($generated@@326 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@81 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@78 $generated@@452 $generated@@2)) (<= 0 ($generated@@282 $generated@@451))))
 :pattern ( ($generated@@282 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@271 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@270 $generated@@454)) (<= 0 ($generated@@269 $generated@@453))))
 :pattern ( ($generated@@269 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@404 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@404 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@404 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@404 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@74 ($generated@@404 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@412 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@412 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@74 ($generated@@412 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@143) (= (type $generated@@476) $generated@@143)) (= ($generated@@262 ($generated@@229 $generated@@475 $generated@@476)) $generated@@62))
 :pattern ( ($generated@@229 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@154 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@154 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@154 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@154 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@143) (= (type $generated@@486) $generated@@143)) (= ($generated@@162 ($generated@@229 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@229 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@143) (= (type $generated@@488) $generated@@143)) (= ($generated@@163 ($generated@@229 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@229 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@271 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@270 $generated@@143)) (= (type $generated@@496) $generated@@66)) (= (type $generated@@497) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@269 $generated@@495))) ($generated@@256 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@77 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@77 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@239 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@239 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@244 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@244 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@244 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@168 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@168 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@168 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@74 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@337 $generated@@518 ($generated@@277 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@277 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@290 $generated@@143 $generated@@143)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@150 $generated@@519 ($generated@@404 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@143) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@519) $generated@@522))) (and ($generated@@230 ($generated@@83 ($generated@@379 $generated@@519) $generated@@522) $generated@@521) ($generated@@230 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@150 $generated@@519 ($generated@@404 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@308 $generated@@143 $generated@@143)) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) (= ($generated@@150 $generated@@523 ($generated@@412 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@143) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@523) $generated@@526))) (and ($generated@@230 ($generated@@83 ($generated@@387 $generated@@523) $generated@@526) $generated@@525) ($generated@@230 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@523) $generated@@526))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@150 $generated@@523 ($generated@@412 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@143) (= (type $generated@@528) $generated@@143)) (and (and (and (=> ($generated@@142 $generated@@527 $generated@@528) (not (= $generated@@527 $generated@@528))) (=> (and ($generated@@325 $generated@@527) (not ($generated@@325 $generated@@528))) ($generated@@142 $generated@@527 $generated@@528))) (=> (and ($generated@@325 $generated@@527) ($generated@@325 $generated@@528)) (= ($generated@@142 $generated@@527 $generated@@528) (< ($generated@@326 $generated@@527) ($generated@@326 $generated@@528))))) (=> (and ($generated@@142 $generated@@527 $generated@@528) ($generated@@325 $generated@@528)) ($generated@@325 $generated@@527))))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@143) (= (type $generated@@532) $generated@@143)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@229 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@143) (= (type $generated@@534) $generated@@143)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@229 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@143) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) ($generated@@230 $generated@@535 ($generated@@404 $generated@@536 $generated@@537))) (and (= ($generated@@277 ($generated@@337 ($generated@@290 $generated@@143 $generated@@143) $generated@@535)) $generated@@535) ($generated@@150 ($generated@@337 ($generated@@290 $generated@@143 $generated@@143) $generated@@535) ($generated@@404 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@230 $generated@@535 ($generated@@404 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@143) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@230 $generated@@538 ($generated@@412 $generated@@539 $generated@@540))) (and (= ($generated@@277 ($generated@@337 ($generated@@308 $generated@@143 $generated@@143) $generated@@538)) $generated@@538) ($generated@@150 ($generated@@337 ($generated@@308 $generated@@143 $generated@@143) $generated@@538) ($generated@@412 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@412 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@143)) ($generated@@230 $generated@@543 ($generated@@154 $generated@@541 $generated@@542))) (and (= ($generated@@277 ($generated@@337 $generated@@155 $generated@@543)) $generated@@543) ($generated@@150 ($generated@@337 $generated@@155 $generated@@543) ($generated@@154 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@230 $generated@@543 ($generated@@154 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@83 ($generated@@422 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@83 ($generated@@422 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@71)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@66) (= (type $generated@@549) $generated@@66)) (and (= ($generated@@74 ($generated@@154 $generated@@548 $generated@@549)) $generated@@63) (= ($generated@@546 ($generated@@154 $generated@@548 $generated@@549)) $generated@@65)))
 :pattern ( ($generated@@154 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 Int) ($generated@@552 Int) ) (!  (=> (= (type $generated@@550) $generated@@143) (=> (and (<= 0 $generated@@551) (<= 0 $generated@@552)) (= ($generated@@332 ($generated@@332 $generated@@550 ($generated@@324 $generated@@551)) ($generated@@324 $generated@@552)) ($generated@@332 $generated@@550 ($generated@@324 (+ $generated@@551 $generated@@552))))))
 :pattern ( ($generated@@332 ($generated@@332 $generated@@550 ($generated@@324 $generated@@551)) ($generated@@324 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@155) (= ($generated@@529 ($generated@@277 $generated@@553)) ($generated@@530 $generated@@553)))
 :pattern ( ($generated@@529 ($generated@@277 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@143) ($generated@@230 $generated@@554 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@337 $generated@@2 $generated@@554)) $generated@@554) ($generated@@150 ($generated@@337 ($generated@@78 $generated@@143 $generated@@4) $generated@@554) ($generated@@77 0))))
 :pattern ( ($generated@@230 $generated@@554 ($generated@@77 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@66)) ($generated@@230 $generated@@555 ($generated@@239 $generated@@556))) (and (= ($generated@@277 ($generated@@337 ($generated@@78 $generated@@143 $generated@@4) $generated@@555)) $generated@@555) ($generated@@150 ($generated@@337 ($generated@@78 $generated@@143 $generated@@4) $generated@@555) ($generated@@239 $generated@@556))))
 :pattern ( ($generated@@230 $generated@@555 ($generated@@239 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@143) (= (type $generated@@558) $generated@@66)) ($generated@@230 $generated@@557 ($generated@@244 $generated@@558))) (and (= ($generated@@277 ($generated@@337 ($generated@@78 $generated@@143 $generated@@4) $generated@@557)) $generated@@557) ($generated@@150 ($generated@@337 ($generated@@78 $generated@@143 $generated@@4) $generated@@557) ($generated@@244 $generated@@558))))
 :pattern ( ($generated@@230 $generated@@557 ($generated@@244 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@66)) ($generated@@230 $generated@@559 ($generated@@168 $generated@@560))) (and (= ($generated@@277 ($generated@@337 ($generated@@78 $generated@@143 $generated@@2) $generated@@559)) $generated@@559) ($generated@@150 ($generated@@337 ($generated@@78 $generated@@143 $generated@@2) $generated@@559) ($generated@@168 $generated@@560))))
 :pattern ( ($generated@@230 $generated@@559 ($generated@@168 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@143) (= (type $generated@@562) $generated@@66)) ($generated@@230 $generated@@561 ($generated@@489 $generated@@562))) (and (= ($generated@@277 ($generated@@337 ($generated@@270 $generated@@143) $generated@@561)) $generated@@561) ($generated@@150 ($generated@@337 ($generated@@270 $generated@@143) $generated@@561) ($generated@@489 $generated@@562))))
 :pattern ( ($generated@@230 $generated@@561 ($generated@@489 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@143) ($generated@@230 $generated@@563 ($generated@@77 19))) (and (= ($generated@@277 ($generated@@337 $generated@@134 $generated@@563)) $generated@@563) ($generated@@150 ($generated@@337 $generated@@134 $generated@@563) ($generated@@77 19))))
 :pattern ( ($generated@@230 $generated@@563 ($generated@@77 19)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@143) ($generated@@325 $generated@@564)) (= $generated@@564 ($generated@@324 ($generated@@326 $generated@@564))))
 :pattern ( ($generated@@326 $generated@@564))
 :pattern ( ($generated@@325 $generated@@564))
)))
(assert (= ($generated@@74 $generated@@147) $generated@@61))
(assert (= ($generated@@546 $generated@@147) $generated@@64))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@78 $generated@@143 $generated@@2)) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@565 ($generated@@168 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@143) (< 0 ($generated ($generated@@83 $generated@@565 $generated@@568)))) ($generated@@256 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@83 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@168 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@155) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@571) (and ($generated@@153 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@66) ($generated@@76 $generated@@569 ($generated@@154 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@154 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@256 ($generated@@162 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@256 ($generated@@162 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@155) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@255 $generated@@575) (and ($generated@@153 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@66) ($generated@@76 $generated@@573 ($generated@@154 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@76 $generated@@573 ($generated@@154 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@256 ($generated@@163 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@256 ($generated@@163 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@143) (= (type $generated@@578) $generated@@143)) (and (=> ($generated@@325 ($generated@@332 $generated@@577 $generated@@578)) (and ($generated@@325 $generated@@577) ($generated@@325 $generated@@578))) (=> ($generated@@325 $generated@@578) (and (= ($generated@@325 ($generated@@332 $generated@@577 $generated@@578)) ($generated@@325 $generated@@577)) (= ($generated@@326 ($generated@@332 $generated@@577 $generated@@578)) (+ ($generated@@326 $generated@@577) ($generated@@326 $generated@@578)))))))
 :pattern ( ($generated@@332 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@143) (= (type $generated@@580) $generated@@143)) (= ($generated@@229 ($generated@@251 $generated@@579) ($generated@@251 $generated@@580)) ($generated@@251 ($generated@@229 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@229 ($generated@@251 $generated@@579) ($generated@@251 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@249 $generated@@581))) ($generated@@251 ($generated@@277 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@249 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@277 ($generated@@251 $generated@@582)) ($generated@@251 ($generated@@277 $generated@@582)))
 :pattern ( ($generated@@277 ($generated@@251 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@271 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@270 $generated@@584)) (= ($generated@@269 $generated@@583) 0)) (= $generated@@583 ($generated@@268 $generated@@584))))
 :pattern ( ($generated@@269 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@78 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@282 ($generated@@84 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@282 $generated@@585) ($generated ($generated@@83 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@282 ($generated@@84 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@2)) ($generated@@76 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@3)) ($generated@@76 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@4)) ($generated@@76 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@446)) ($generated@@76 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@143)) ($generated@@76 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@270 $generated@@143)) (= (type $generated@@600) $generated@@66)) (= ($generated@@150 $generated@@599 ($generated@@489 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@269 $generated@@599))) ($generated@@230 ($generated@@490 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@490 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@150 $generated@@599 ($generated@@489 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@270 $generated@@143)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@269 $generated@@603))) (< ($generated@@530 ($generated@@337 $generated@@155 ($generated@@490 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@530 ($generated@@337 $generated@@155 ($generated@@490 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@290 $generated@@143 $generated@@143)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) ($generated@@150 $generated@@605 ($generated@@404 $generated@@606 $generated@@607))) (and (and ($generated@@150 ($generated@@288 $generated@@605) ($generated@@239 $generated@@606)) ($generated@@150 ($generated@@345 $generated@@605) ($generated@@239 $generated@@607))) ($generated@@150 ($generated@@378 $generated@@605) ($generated@@239 ($generated@@154 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@150 $generated@@605 ($generated@@404 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@308 $generated@@143 $generated@@143)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) $generated@@66)) ($generated@@150 $generated@@608 ($generated@@412 $generated@@609 $generated@@610))) (and (and ($generated@@150 ($generated@@306 $generated@@608) ($generated@@244 $generated@@609)) ($generated@@150 ($generated@@356 $generated@@608) ($generated@@244 $generated@@610))) ($generated@@150 ($generated@@386 $generated@@608) ($generated@@244 ($generated@@154 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@150 $generated@@608 ($generated@@412 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@150 $generated@@611 $generated@@46))
 :pattern ( ($generated@@150 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@150 $generated@@612 $generated@@47))
 :pattern ( ($generated@@150 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@150 $generated@@613 $generated@@44))
 :pattern ( ($generated@@150 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@446) ($generated@@150 $generated@@614 $generated@@45))
 :pattern ( ($generated@@150 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@143) ($generated@@150 $generated@@615 $generated@@48))
 :pattern ( ($generated@@150 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(assert  (and (and (= (type $generated@@616) ($generated@@175 $generated@@79 $generated@@4)) (= (type $generated@@617) $generated@@79)) (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@625  (=> (= $generated@@616 ($generated@@174 $generated@@617 $generated@@618 $generated@@60 false)) (=> (and (= $generated@@619 (+ (+ $generated@@620 $generated@@620) (+ $generated@@620 $generated@@620))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@150 ($generated@@8 (+ (+ $generated@@621 $generated@@621) (+ $generated@@621 $generated@@621))) $generated@@147)))))
(let (($generated@@626  (=> (and ($generated@@255 $generated@@618) ($generated@@622 $generated@@618)) (=> (and (and (<= ($generated@@249 0) $generated@@621) (= 0 $generated@@623)) (and (= 1 $generated@@624) (= (ControlFlow 0 3) 2))) $generated@@625))))
$generated@@626)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (mod $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(assert  (and (and (= (type $generated@@184) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@185) $generated@@46)) (= (type $generated@@186) ($generated@@45 $generated@@46 $generated@@47))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@196  (=> (and (= $generated@@184 ($generated@@107 $generated@@185 $generated@@186 $generated@@50 false)) (= $generated@@187 ($generated@@162 0))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (< $generated@@187 0) (= ($generated@@179 $generated@@187 ($generated@@162 2)) ($generated@@162 1)))) (=> (=> (< $generated@@187 0) (= ($generated@@179 $generated@@187 ($generated@@162 2)) ($generated@@162 1))) (=> (<= ($generated@@162 0) $generated@@188) (=> (and (= $generated@@189 ($generated@@162 0)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@162 0) $generated@@189) (< $generated@@189 256)))))))))
(let (($generated@@197  (=> (and ($generated@@190 $generated@@186) ($generated@@191 $generated@@186)) (=> (and (and (and (=> (< $generated@@192 0) (= ($generated@@179 $generated@@192 ($generated@@162 2)) ($generated@@162 1))) (=> (< $generated@@188 0) (= ($generated@@179 $generated@@188 ($generated@@162 2)) ($generated@@162 1)))) (and (<= ($generated@@162 0) $generated@@193) (< $generated@@193 256))) (and (and (<= ($generated@@162 0) $generated@@194) (< $generated@@194 256)) (and (= 1 $generated@@195) (= (ControlFlow 0 4) 2)))) $generated@@196))))
$generated@@197)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(declare-fun $generated@@174 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 Int) ) (! (= ($generated@@174 $generated@@175 $generated@@176) (* $generated@@175 $generated@@176))
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@177))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@177))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@178)) ($generated@@159 ($generated@@163 $generated@@178)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@178)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(assert  (and (and (and (= (type $generated@@179) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@180) $generated@@47)) (= (type $generated@@181) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@182) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@205  (=> (and (= $generated@@179 ($generated@@45 $generated@@180 $generated@@181 $generated@@182 false)) (= $generated@@183 (+ $generated@@184 $generated@@184))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (=> (< $generated@@183 0) (= ($generated@@171 $generated@@183 ($generated@@157 2)) ($generated@@157 1)))) (=> (=> (< $generated@@183 0) (= ($generated@@171 $generated@@183 ($generated@@157 2)) ($generated@@157 1))) (=> (= $generated@@185 (+ $generated@@186 (+ $generated@@184 $generated@@184))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (=> (< $generated@@185 0) (= ($generated@@171 $generated@@185 ($generated@@157 2)) ($generated@@157 1)))) (=> (=> (< $generated@@185 0) (= ($generated@@171 $generated@@185 ($generated@@157 2)) ($generated@@157 1))) (=> (and (= $generated@@187 (+ $generated@@186 (+ $generated@@184 $generated@@184))) (= $generated@@188 (+ $generated@@186 $generated@@184))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> (< $generated@@188 0) (= ($generated@@171 $generated@@188 ($generated@@157 2)) ($generated@@157 1)))) (=> (=> (< $generated@@188 0) (= ($generated@@171 $generated@@188 ($generated@@157 2)) ($generated@@157 1))) (=> (= $generated@@189 (+ (+ $generated@@186 $generated@@184) $generated@@184)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> (< $generated@@189 0) (= ($generated@@171 $generated@@189 ($generated@@157 2)) ($generated@@157 1)))) (=> (=> (< $generated@@189 0) (= ($generated@@171 $generated@@189 ($generated@@157 2)) ($generated@@157 1))) (=> (and (= $generated@@190 (+ (+ $generated@@186 $generated@@184) $generated@@184)) (= $generated@@191 ($generated@@174 $generated@@192 $generated@@193))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@157 0) $generated@@191) (< $generated@@191 256))) (=> (and (<= ($generated@@157 0) $generated@@191) (< $generated@@191 256)) (=> (= $generated@@194 ($generated@@174 $generated@@192 ($generated@@174 $generated@@192 $generated@@193))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@157 0) $generated@@194) (< $generated@@194 256))) (=> (and (<= ($generated@@157 0) $generated@@194) (< $generated@@194 256)) (=> (and (= $generated@@195 ($generated@@174 $generated@@192 ($generated@@174 $generated@@192 $generated@@193))) (= $generated@@196 ($generated@@174 $generated@@192 $generated@@192))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@157 0) $generated@@196) (< $generated@@196 256))) (=> (and (<= ($generated@@157 0) $generated@@196) (< $generated@@196 256)) (=> (and (= $generated@@197 ($generated@@174 ($generated@@174 $generated@@192 $generated@@192) $generated@@193)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@157 0) $generated@@197) (< $generated@@197 256))))))))))))))))))))))))))
(let (($generated@@206  (=> (and (and (and ($generated@@198 $generated@@181) ($generated@@199 $generated@@181)) (and (=> (< $generated@@186 0) (= ($generated@@171 $generated@@186 ($generated@@157 2)) ($generated@@157 1))) (=> (< $generated@@184 0) (= ($generated@@171 $generated@@184 ($generated@@157 2)) ($generated@@157 1))))) (and (and (<= ($generated@@157 0) $generated@@192) (< $generated@@192 256)) (and (<= ($generated@@157 0) $generated@@193) (< $generated@@193 256)))) (=> (and (and (and (and (=> (< $generated@@200 0) (= ($generated@@171 $generated@@200 ($generated@@157 2)) ($generated@@157 1))) true) (and (=> (< $generated@@201 0) (= ($generated@@171 $generated@@201 ($generated@@157 2)) ($generated@@157 1))) true)) (and (and (<= ($generated@@157 0) $generated@@202) (< $generated@@202 256)) true)) (and (and (and (<= ($generated@@157 0) $generated@@203) (< $generated@@203 256)) true) (and (and (= 1 $generated@@204) (<= ($generated@@157 0) $generated@@184)) (and (= $generated@@193 ($generated@@157 0)) (= (ControlFlow 0 10) 2))))) $generated@@205))))
$generated@@206)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 7))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
