(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 (Int) T@U)
(declare-fun $generated@@223 (Int) Bool)
(declare-fun $generated@@224 (Int) Bool)
(declare-fun $generated@@225 (Int) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@215 $generated@@216)) $generated@@133)
 :pattern ( ($generated@@213 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@64) (= (type $generated@@218) $generated@@64)) (= (type $generated@@219) $generated@@147)) (= (type $generated@@220) $generated@@147)) (= ($generated@@136 ($generated@@213 $generated@@219 $generated@@220) ($generated@@138 $generated@@217 $generated@@218))  (and ($generated@@214 $generated@@219 $generated@@217) ($generated@@214 $generated@@220 $generated@@218))))
 :pattern ( ($generated@@136 ($generated@@213 $generated@@219 $generated@@220) ($generated@@138 $generated@@217 $generated@@218)))
)))
(assert  (and (forall (($generated@@226 Int) ) (! (= (type ($generated@@222 $generated@@226)) $generated@@133)
 :pattern ( ($generated@@222 $generated@@226))
)) (forall (($generated@@227 Int) ) (! (= (type ($generated@@225 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@225 $generated@@227))
))))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@228 Int) ) (!  (=> (or ($generated@@223 $generated@@228) (not (= 2 $generated@@221))) (and ($generated@@224 $generated@@228) (= ($generated@@222 $generated@@228) ($generated@@225 $generated@@228))))
 :pattern ( ($generated@@222 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@133) (= (type $generated@@230) $generated@@133)) (= ($generated@@144 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@144 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@64)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@234) $generated@@64)) (= ($generated@@136 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@147) ($generated@@0 ($generated@@81 $generated@@233 $generated@@235))) ($generated@@214 $generated@@235 $generated@@234))
 :pattern ( ($generated@@81 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@136 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@147) ($generated@@0 ($generated@@81 $generated@@238 $generated@@240))) ($generated@@214 $generated@@240 $generated@@239))
 :pattern ( ($generated@@81 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@147)) (= (type $generated@@252) $generated@@147)) (= (type $generated@@253) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@247 $generated@@253)) (= ($generated@@74 ($generated@@213 $generated@@251 $generated@@252) ($generated@@138 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@74 ($generated@@213 $generated@@251 $generated@@252) ($generated@@138 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@133) (= ($generated@@134 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@133) ($generated@@134 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@147) (= (type $generated@@259) $generated@@147)) (= $generated@@257 ($generated@@213 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@134 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@147)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@74 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@76 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@79 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@76 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@81 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@76 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@79 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@76 $generated@@316 $generated@@2)) (= ($generated@@153 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@81 $generated@@315 $generated@@317))) (<= ($generated ($generated@@81 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@81 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@153 $generated@@315))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@318 Int) ) (!  (=> (or ($generated@@224 $generated@@318) (not (= 1 $generated@@221))) ($generated@@136 ($generated@@225 $generated@@318) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@225 $generated@@318))
))))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@319 Int) ) (!  (=> (or ($generated@@223 $generated@@319) (not (= 2 $generated@@221))) ($generated@@136 ($generated@@222 $generated@@319) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@222 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@283 (type $generated@@320))))
(let (($generated@@322 ($generated@@282 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@281 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@280 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@279 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@283 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@283 (type $generated@@327))))
(let (($generated@@329 ($generated@@282 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@281 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@280 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@301 (type $generated@@331))))
(let (($generated@@333 ($generated@@300 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@299 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@298 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@297 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@301 (type $generated@@338))))
(let (($generated@@340 ($generated@@300 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@299 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@298 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@342 Int) ) (!  (=> (or ($generated@@224 $generated@@342) (not (= 1 $generated@@221))) (= ($generated@@225 $generated@@342) ($generated@@243 ($generated@@213 ($generated@@268 ($generated@@8 ($generated@@241 5))) ($generated@@268 ($generated@@8 ($generated@@241 7)))))))
 :pattern ( ($generated@@225 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@344) $generated@@64)) (= ($generated@@136 $generated@@343 ($generated@@152 $generated@@344)) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@343 $generated@@345)))) ($generated@@214 $generated@@345 $generated@@344))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
))))
 :pattern ( ($generated@@136 $generated@@343 ($generated@@152 $generated@@344)))
)))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@346 Int) ) (!  (=> (or ($generated@@223 ($generated@@241 $generated@@346)) (not (= 2 $generated@@221))) (and ($generated@@224 ($generated@@241 $generated@@346)) (= ($generated@@222 ($generated@@241 $generated@@346)) ($generated@@243 ($generated@@225 ($generated@@241 $generated@@346))))))
 :weight 3
 :pattern ( ($generated@@222 ($generated@@241 $generated@@346)))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@348) $generated@@64)) (= (type $generated@@349) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@147) ($generated@@0 ($generated@@81 $generated@@347 $generated@@350))) ($generated@@248 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@81 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@74 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@147) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@248 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@81 ($generated@@274 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@81 ($generated@@274 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@283 (type $generated@@363))))
(let (($generated@@365 ($generated@@282 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@76 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@367) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@366) ($generated@@145 ($generated@@358 $generated@@133 $generated@@367)))) (= ($generated@@81 ($generated@@359 $generated@@366) ($generated@@145 ($generated@@358 $generated@@133 $generated@@367))) ($generated@@146 ($generated@@358 $generated@@133 $generated@@367))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@301 (type $generated@@371))))
(let (($generated@@373 ($generated@@300 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@375) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@374) ($generated@@145 ($generated@@358 $generated@@133 $generated@@375)))) (= ($generated@@81 ($generated@@369 $generated@@374) ($generated@@145 ($generated@@358 $generated@@133 $generated@@375))) ($generated@@146 ($generated@@358 $generated@@133 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@282 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@281 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@300 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@299 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@381) $generated@@382))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@386 Int) ) (!  (=> (or ($generated@@224 ($generated@@241 $generated@@386)) (not (= 1 $generated@@221))) (= ($generated@@225 ($generated@@241 $generated@@386)) ($generated@@243 ($generated@@213 ($generated@@268 ($generated@@8 ($generated@@241 5))) ($generated@@268 ($generated@@8 ($generated@@241 7)))))))
 :weight 3
 :pattern ( ($generated@@225 ($generated@@241 $generated@@386)))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@64)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@390) $generated@@394))) (and ($generated@@248 ($generated@@81 ($generated@@359 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@248 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@398) $generated@@402))) (and ($generated@@248 ($generated@@81 ($generated@@369 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@248 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@301 (type $generated@@405))))
(let (($generated@@407 ($generated@@300 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@299 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@298 $generated@@407 $generated@@406)) (= ($generated@@297 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@297 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@301 (type $generated@@408))))
(let (($generated@@410 ($generated@@300 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@299 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@298 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@301 (type $generated@@411))))
(let (($generated@@413 ($generated@@300 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@299 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@298 $generated@@413 $generated@@412)) (= ($generated@@368 $generated@@411) ($generated@@403 $generated@@147))))))
 :pattern ( ($generated@@368 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@283 (type $generated@@414))))
(let (($generated@@416 ($generated@@282 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@281 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@280 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@147) (= (type $generated@@418) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@414) ($generated@@268 ($generated@@213 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@357 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@301 (type $generated@@419))))
(let (($generated@@421 ($generated@@300 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@299 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@298 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@147) (= (type $generated@@423) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@419) ($generated@@268 ($generated@@213 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@368 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@147) ($generated@@214 $generated@@424 $generated@@46)) (and (= ($generated@@268 ($generated@@358 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@358 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@147) ($generated@@214 $generated@@425 $generated@@47)) (and (= ($generated@@268 ($generated@@358 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@358 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@147) ($generated@@214 $generated@@426 $generated@@44)) (and (= ($generated@@268 ($generated@@358 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@358 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@147) ($generated@@214 $generated@@428 $generated@@45)) (and (= ($generated@@268 ($generated@@358 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@358 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@214 ($generated@@268 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@214 ($generated@@268 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@273 $generated@@431))))
 :pattern ( ($generated@@273 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@263 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@262 $generated@@434)) (<= 0 ($generated@@261 $generated@@433))))
 :pattern ( ($generated@@261 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@387 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@387 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@387 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@387 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@387 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@395 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@395 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@395 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@147) (= (type $generated@@456) $generated@@147)) (= ($generated@@254 ($generated@@213 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@213 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@138 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@138 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@138 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@138 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@147) (= (type $generated@@466) $generated@@147)) (= ($generated@@145 ($generated@@213 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@213 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@147) (= (type $generated@@468) $generated@@147)) (= ($generated@@146 ($generated@@213 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@213 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@263 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@262 $generated@@147)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@261 $generated@@475))) ($generated@@248 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@231 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@231 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@231 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@236 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@236 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@152 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@152 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@358 $generated@@498 ($generated@@268 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@268 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@499) $generated@@502))) (and ($generated@@214 ($generated@@81 ($generated@@359 $generated@@499) $generated@@502) $generated@@501) ($generated@@214 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@503) $generated@@506))) (and ($generated@@214 ($generated@@81 ($generated@@369 $generated@@503) $generated@@506) $generated@@505) ($generated@@214 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@147) (= (type $generated@@510) $generated@@147)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@213 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@213 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@147) (= (type $generated@@512) $generated@@147)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@213 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@213 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@147) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@214 $generated@@513 ($generated@@387 $generated@@514 $generated@@515))) (and (= ($generated@@268 ($generated@@358 ($generated@@281 $generated@@147 $generated@@147) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@358 ($generated@@281 $generated@@147 $generated@@147) $generated@@513) ($generated@@387 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@214 $generated@@513 ($generated@@387 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@147) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@214 $generated@@516 ($generated@@395 $generated@@517 $generated@@518))) (and (= ($generated@@268 ($generated@@358 ($generated@@299 $generated@@147 $generated@@147) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@358 ($generated@@299 $generated@@147 $generated@@147) $generated@@516) ($generated@@395 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@214 $generated@@516 ($generated@@395 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@147)) ($generated@@214 $generated@@521 ($generated@@138 $generated@@519 $generated@@520))) (and (= ($generated@@268 ($generated@@358 $generated@@133 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@358 $generated@@133 $generated@@521) ($generated@@138 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@214 $generated@@521 ($generated@@138 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@138 $generated@@526 $generated@@527)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@133) (= ($generated@@507 ($generated@@268 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@268 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@147) ($generated@@214 $generated@@529 ($generated@@75 0))) (and (= ($generated@@268 ($generated@@358 $generated@@2 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@214 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@147) (= (type $generated@@531) $generated@@64)) ($generated@@214 $generated@@530 ($generated@@231 $generated@@531))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@530)) $generated@@530) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@530) ($generated@@231 $generated@@531))))
 :pattern ( ($generated@@214 $generated@@530 ($generated@@231 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@147) (= (type $generated@@533) $generated@@64)) ($generated@@214 $generated@@532 ($generated@@236 $generated@@533))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@532)) $generated@@532) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@532) ($generated@@236 $generated@@533))))
 :pattern ( ($generated@@214 $generated@@532 ($generated@@236 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@147) (= (type $generated@@535) $generated@@64)) ($generated@@214 $generated@@534 ($generated@@152 $generated@@535))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@2) $generated@@534)) $generated@@534) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@2) $generated@@534) ($generated@@152 $generated@@535))))
 :pattern ( ($generated@@214 $generated@@534 ($generated@@152 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@147) (= (type $generated@@537) $generated@@64)) ($generated@@214 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@268 ($generated@@358 ($generated@@262 $generated@@147) $generated@@536)) $generated@@536) ($generated@@136 ($generated@@358 ($generated@@262 $generated@@147) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@214 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@152 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@248 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@152 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@133) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@138 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@138 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@248 ($generated@@145 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@248 ($generated@@145 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@133) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@548) (and ($generated@@134 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@138 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@138 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@248 ($generated@@146 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@248 ($generated@@146 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@147) (= (type $generated@@551) $generated@@147)) (= ($generated@@213 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)) ($generated@@243 ($generated@@213 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@213 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@552))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@553)) ($generated@@243 ($generated@@268 $generated@@553)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@263 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@262 $generated@@555)) (= ($generated@@261 $generated@@554) 0)) (= $generated@@554 ($generated@@260 $generated@@555))))
 :pattern ( ($generated@@261 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@273 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@273 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@273 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@427)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@147)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@262 $generated@@147)) (= (type $generated@@571) $generated@@64)) (= ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@261 $generated@@570))) ($generated@@214 ($generated@@470 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@470 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@262 $generated@@147)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@261 $generated@@574))) (< ($generated@@508 ($generated@@358 $generated@@133 ($generated@@470 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@508 ($generated@@358 $generated@@133 ($generated@@470 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@136 $generated@@576 ($generated@@387 $generated@@577 $generated@@578))) (and (and ($generated@@136 ($generated@@279 $generated@@576) ($generated@@231 $generated@@577)) ($generated@@136 ($generated@@324 $generated@@576) ($generated@@231 $generated@@578))) ($generated@@136 ($generated@@357 $generated@@576) ($generated@@231 ($generated@@138 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@136 $generated@@576 ($generated@@387 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@395 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@297 $generated@@579) ($generated@@236 $generated@@580)) ($generated@@136 ($generated@@335 $generated@@579) ($generated@@236 $generated@@581))) ($generated@@136 ($generated@@368 $generated@@579) ($generated@@236 ($generated@@138 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@395 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@136 $generated@@582 $generated@@46))
 :pattern ( ($generated@@136 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@136 $generated@@583 $generated@@47))
 :pattern ( ($generated@@136 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@136 $generated@@584 $generated@@44))
 :pattern ( ($generated@@136 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@427) ($generated@@136 $generated@@585 $generated@@45))
 :pattern ( ($generated@@136 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@147) ($generated@@136 $generated@@586 $generated@@48))
 :pattern ( ($generated@@136 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 (T@U) Bool)
(assert  (and (and (= (type $generated@@587) ($generated@@159 $generated@@77 $generated@@4)) (= (type $generated@@588) $generated@@77)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@594  (=> (and (and (and (= $generated@@587 ($generated@@158 $generated@@588 $generated@@589 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@590) $generated@@46 $generated@@589)) (and ($generated@@224 $generated@@590) ($generated@@134 ($generated@@225 $generated@@590)))) (and (and ($generated@@132 ($generated@@225 $generated@@590)) ($generated@@224 $generated@@590)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@213 ($generated@@268 ($generated@@8 $generated@@591)) ($generated@@268 ($generated@@8 $generated@@592))) ($generated@@225 $generated@@590)))))
(let (($generated@@595  (=> (and (and (and ($generated@@247 $generated@@589) ($generated@@593 $generated@@589)) (= 3 $generated@@221)) (and ($generated@@144 ($generated@@213 ($generated@@268 ($generated@@8 $generated@@591)) ($generated@@268 ($generated@@8 $generated@@592))) ($generated@@222 $generated@@590)) (= (ControlFlow 0 3) 2))) $generated@@594)))
$generated@@595)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 (Int) T@U)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@216 (Int) Bool)
(declare-fun $generated@@217 (T@U Int) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@220 Int) ) (! (= (type ($generated@@214 $generated@@220)) $generated@@133)
 :pattern ( ($generated@@214 $generated@@220))
)) (forall (($generated@@221 T@U) ($generated@@222 Int) ) (! (= (type ($generated@@217 $generated@@221 $generated@@222)) $generated@@133)
 :pattern ( ($generated@@217 $generated@@221 $generated@@222))
))) (= ($generated@@1 $generated@@219) 17)) (= (type $generated@@218) $generated@@219)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@223 Int) ) (!  (=> (or ($generated@@215 $generated@@223) (not (= 2 $generated@@213))) (and ($generated@@216 $generated@@223) (= ($generated@@214 $generated@@223) ($generated@@217 $generated@@218 $generated@@223))))
 :pattern ( ($generated@@214 $generated@@223))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@64) (= (type $generated@@229) $generated@@64)) (= (type $generated@@230) $generated@@147)) (= (type $generated@@231) $generated@@147)) (= ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@133) (= (type $generated@@233) $generated@@133)) (= ($generated@@144 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@144 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@147) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@147) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@147)) (= (type $generated@@255) $generated@@147)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@133) (= ($generated@@134 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@133) ($generated@@134 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@147) (= (type $generated@@262) $generated@@147)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@134 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 18)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@147)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@74 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@276 Int) ) (!  (=> (or ($generated@@215 ($generated@@244 $generated@@276)) (not (= 2 $generated@@213))) (and ($generated@@216 ($generated@@244 $generated@@276)) (= ($generated@@214 ($generated@@244 $generated@@276)) ($generated@@217 $generated@@218 ($generated@@244 $generated@@276)))))
 :weight 3
 :pattern ( ($generated@@214 ($generated@@244 $generated@@276)))
))))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@76 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@79 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@76 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@81 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 19)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@76 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 20)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@76 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@319 T@U) ($generated@@320 Int) ) (!  (=> (and (= (type $generated@@319) $generated@@219) (or ($generated@@216 $generated@@320) (not (= 1 $generated@@213)))) ($generated@@136 ($generated@@217 $generated@@319 $generated@@320) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@217 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@153 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@277 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@153 $generated@@321))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@324 Int) ) (!  (=> (or ($generated@@215 $generated@@324) (not (= 2 $generated@@213))) ($generated@@136 ($generated@@214 $generated@@324) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@214 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@287 (type $generated@@325))))
(let (($generated@@327 ($generated@@286 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@285 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@284 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@283 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@287 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@287 (type $generated@@332))))
(let (($generated@@334 ($generated@@286 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@285 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@284 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@305 (type $generated@@336))))
(let (($generated@@338 ($generated@@304 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@303 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@302 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@301 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@305 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@305 (type $generated@@343))))
(let (($generated@@345 ($generated@@304 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@303 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@302 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@136 $generated@@347 ($generated@@152 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@225 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@136 $generated@@347 ($generated@@152 $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@219)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@352 T@U) ($generated@@353 Int) ) (!  (=> (and (= (type $generated@@352) $generated@@219) (or ($generated@@216 $generated@@353) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@350 $generated@@352) $generated@@353) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :pattern ( ($generated@@217 ($generated@@350 $generated@@352) $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@147) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@251 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@147) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@251 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@278 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@278 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@287 (type $generated@@370))))
(let (($generated@@372 ($generated@@286 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@374) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@305 (type $generated@@378))))
(let (($generated@@380 ($generated@@304 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@382) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@286 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@285 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@304 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@303 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@396) $generated@@400))) (and ($generated@@251 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@251 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@404) $generated@@408))) (and ($generated@@251 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@251 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@409 T@U) ($generated@@410 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@219) (or ($generated@@216 ($generated@@244 $generated@@410)) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@350 $generated@@409) ($generated@@244 $generated@@410)) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :weight 3
 :pattern ( ($generated@@217 ($generated@@350 $generated@@409) ($generated@@244 $generated@@410)))
))))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@305 (type $generated@@413))))
(let (($generated@@415 ($generated@@304 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@303 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@302 $generated@@415 $generated@@414)) (= ($generated@@301 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@301 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@305 (type $generated@@416))))
(let (($generated@@418 ($generated@@304 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@303 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@302 $generated@@418 $generated@@417)) (= ($generated@@340 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@340 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@305 (type $generated@@419))))
(let (($generated@@421 ($generated@@304 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@303 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@302 $generated@@421 $generated@@420)) (= ($generated@@375 $generated@@419) ($generated@@411 $generated@@147))))))
 :pattern ( ($generated@@375 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@287 (type $generated@@422))))
(let (($generated@@424 ($generated@@286 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@285 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@284 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@147) (= (type $generated@@426) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@422) ($generated@@271 ($generated@@224 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@364 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@305 (type $generated@@427))))
(let (($generated@@429 ($generated@@304 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@303 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@302 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@427) ($generated@@271 ($generated@@224 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@375 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@147) ($generated@@225 $generated@@432 $generated@@46)) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@365 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@147) ($generated@@225 $generated@@433 $generated@@47)) (and (= ($generated@@271 ($generated@@365 $generated@@3 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@365 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@147) ($generated@@225 $generated@@434 $generated@@44)) (and (= ($generated@@271 ($generated@@365 $generated@@4 $generated@@434)) $generated@@434) ($generated@@136 ($generated@@365 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 21))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) ($generated@@225 $generated@@436 $generated@@45)) (and (= ($generated@@271 ($generated@@365 $generated@@435 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@365 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@225 ($generated@@271 $generated@@437) $generated@@438) ($generated@@136 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@277 $generated@@439))))
 :pattern ( ($generated@@277 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@266 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@265 $generated@@442)) (<= 0 ($generated@@264 $generated@@441))))
 :pattern ( ($generated@@264 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@393 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@393 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@147) (= (type $generated@@464) $generated@@147)) (= ($generated@@257 ($generated@@224 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@138 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@138 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@138 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@138 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@147) (= (type $generated@@474) $generated@@147)) (= ($generated@@145 ($generated@@224 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@224 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@147) (= (type $generated@@476) $generated@@147)) (= ($generated@@146 ($generated@@224 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@224 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@219)
 :pattern ( ($generated@@477 $generated@@479))
)) (= (type $generated@@478) $generated@@219)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ) (!  (=> (= (type $generated@@480) $generated@@219) (= ($generated@@217 $generated@@480 $generated@@481) ($generated@@217 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@217 ($generated@@477 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@266 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@265 $generated@@147)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@264 $generated@@488))) ($generated@@251 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@234 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@234 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@234 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@152 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@152 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@365 $generated@@511 ($generated@@271 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@271 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@512) $generated@@515))) (and ($generated@@225 ($generated@@81 ($generated@@366 $generated@@512) $generated@@515) $generated@@514) ($generated@@225 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@516) $generated@@519))) (and ($generated@@225 ($generated@@81 ($generated@@376 $generated@@516) $generated@@519) $generated@@518) ($generated@@225 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@147) (= (type $generated@@523) $generated@@147)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@224 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@147) (= (type $generated@@525) $generated@@147)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@224 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (= (type $generated@@526) $generated@@219) (= ($generated@@217 ($generated@@350 $generated@@526) $generated@@527) ($generated@@217 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@217 ($generated@@350 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@147) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530))) (and (= ($generated@@271 ($generated@@365 ($generated@@285 $generated@@147 $generated@@147) $generated@@528)) $generated@@528) ($generated@@136 ($generated@@365 ($generated@@285 $generated@@147 $generated@@147) $generated@@528) ($generated@@393 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@147) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533))) (and (= ($generated@@271 ($generated@@365 ($generated@@303 $generated@@147 $generated@@147) $generated@@531)) $generated@@531) ($generated@@136 ($generated@@365 ($generated@@303 $generated@@147 $generated@@147) $generated@@531) ($generated@@401 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@147)) ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535))) (and (= ($generated@@271 ($generated@@365 $generated@@133 $generated@@536)) $generated@@536) ($generated@@136 ($generated@@365 $generated@@133 $generated@@536) ($generated@@138 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@411 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@138 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@133) (= ($generated@@520 ($generated@@271 $generated@@543)) ($generated@@521 $generated@@543)))
 :pattern ( ($generated@@520 ($generated@@271 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@147) ($generated@@225 $generated@@544 ($generated@@75 0))) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@544)) $generated@@544) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@225 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@147) (= (type $generated@@546) $generated@@64)) ($generated@@225 $generated@@545 ($generated@@234 $generated@@546))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545) ($generated@@234 $generated@@546))))
 :pattern ( ($generated@@225 $generated@@545 ($generated@@234 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@147) (= (type $generated@@548) $generated@@64)) ($generated@@225 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@147) (= (type $generated@@550) $generated@@64)) ($generated@@225 $generated@@549 ($generated@@152 $generated@@550))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549)) $generated@@549) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549) ($generated@@152 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@152 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@147) (= (type $generated@@552) $generated@@64)) ($generated@@225 $generated@@551 ($generated@@482 $generated@@552))) (and (= ($generated@@271 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551) ($generated@@482 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@482 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@251 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@133) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@559) (and ($generated@@134 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@133) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@563) (and ($generated@@134 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@147)) (= ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)) ($generated@@246 ($generated@@224 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@568)) ($generated@@246 ($generated@@271 $generated@@568)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@266 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@265 $generated@@570)) (= ($generated@@264 $generated@@569) 0)) (= $generated@@569 ($generated@@263 $generated@@570))))
 :pattern ( ($generated@@264 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@277 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@277 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@435)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@147)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@265 $generated@@147)) (= (type $generated@@586) $generated@@64)) (= ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@264 $generated@@585))) ($generated@@225 ($generated@@483 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@483 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@265 $generated@@147)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@264 $generated@@589))) (< ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593))) (and (and ($generated@@136 ($generated@@283 $generated@@591) ($generated@@234 $generated@@592)) ($generated@@136 ($generated@@329 $generated@@591) ($generated@@234 $generated@@593))) ($generated@@136 ($generated@@364 $generated@@591) ($generated@@234 ($generated@@138 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596))) (and (and ($generated@@136 ($generated@@301 $generated@@594) ($generated@@239 $generated@@595)) ($generated@@136 ($generated@@340 $generated@@594) ($generated@@239 $generated@@596))) ($generated@@136 ($generated@@375 $generated@@594) ($generated@@239 ($generated@@138 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@136 $generated@@597 $generated@@46))
 :pattern ( ($generated@@136 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@136 $generated@@598 $generated@@47))
 :pattern ( ($generated@@136 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@136 $generated@@599 $generated@@44))
 :pattern ( ($generated@@136 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@435) ($generated@@136 $generated@@600 $generated@@45))
 :pattern ( ($generated@@136 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@147) ($generated@@136 $generated@@601 $generated@@48))
 :pattern ( ($generated@@136 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@602) $generated@@219) (= (type $generated@@603) ($generated@@159 $generated@@77 $generated@@4))) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@610  (=> (and (= ($generated@@477 $generated@@218) $generated@@218) (= ($generated@@477 $generated@@602) $generated@@602)) (=> (and (and (and (= $generated@@603 ($generated@@158 $generated@@604 $generated@@605 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605)) (and ($generated@@216 $generated@@606) ($generated@@134 ($generated@@217 $generated@@218 $generated@@606)))) (and (and ($generated@@132 ($generated@@217 $generated@@218 $generated@@606)) ($generated@@216 $generated@@606)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@224 ($generated@@271 ($generated@@8 $generated@@607)) ($generated@@271 ($generated@@8 $generated@@608))) ($generated@@217 $generated@@602 $generated@@606))))))
(let (($generated@@611  (=> (and (and (and ($generated@@250 $generated@@605) ($generated@@609 $generated@@605)) (= 3 $generated@@213)) (and ($generated@@144 ($generated@@224 ($generated@@271 ($generated@@8 $generated@@607)) ($generated@@271 ($generated@@8 $generated@@608))) ($generated@@214 $generated@@606)) (= (ControlFlow 0 3) 2))) $generated@@610)))
$generated@@611)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 (Int) T@U)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@216 (Int) Bool)
(declare-fun $generated@@217 (T@U Int) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@220 Int) ) (! (= (type ($generated@@214 $generated@@220)) $generated@@133)
 :pattern ( ($generated@@214 $generated@@220))
)) (forall (($generated@@221 T@U) ($generated@@222 Int) ) (! (= (type ($generated@@217 $generated@@221 $generated@@222)) $generated@@133)
 :pattern ( ($generated@@217 $generated@@221 $generated@@222))
))) (= ($generated@@1 $generated@@219) 17)) (= (type $generated@@218) $generated@@219)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@223 Int) ) (!  (=> (or ($generated@@215 $generated@@223) (not (= 2 $generated@@213))) (and ($generated@@216 $generated@@223) (= ($generated@@214 $generated@@223) ($generated@@217 $generated@@218 $generated@@223))))
 :pattern ( ($generated@@214 $generated@@223))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@64) (= (type $generated@@229) $generated@@64)) (= (type $generated@@230) $generated@@147)) (= (type $generated@@231) $generated@@147)) (= ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@133) (= (type $generated@@233) $generated@@133)) (= ($generated@@144 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@144 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@147) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@147) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@147)) (= (type $generated@@255) $generated@@147)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@133) (= ($generated@@134 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@133) ($generated@@134 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@147) (= (type $generated@@262) $generated@@147)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@134 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 18)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@147)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@74 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@76 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@79 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@76 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@81 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 19)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@76 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@81 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@81 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 20)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (!  (=> (and (= (type $generated@@318) $generated@@219) (or ($generated@@216 $generated@@319) (not (= 1 $generated@@213)))) ($generated@@136 ($generated@@217 $generated@@318 $generated@@319) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@217 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@79 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@76 $generated@@321 $generated@@2)) (= ($generated@@153 $generated@@320) (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@321) (and (<= 0 ($generated ($generated@@81 $generated@@320 $generated@@322))) (<= ($generated ($generated@@81 $generated@@320 $generated@@322)) ($generated@@276 $generated@@320))))
 :pattern ( ($generated@@81 $generated@@320 $generated@@322))
)))))
 :pattern ( ($generated@@153 $generated@@320))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@323 Int) ) (!  (=> (or ($generated@@215 $generated@@323) (not (= 2 $generated@@213))) ($generated@@136 ($generated@@214 $generated@@323) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@214 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@286 (type $generated@@324))))
(let (($generated@@326 ($generated@@285 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@284 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@283 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@282 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@286 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@286 (type $generated@@331))))
(let (($generated@@333 ($generated@@285 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@284 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@283 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@304 (type $generated@@335))))
(let (($generated@@337 ($generated@@303 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@302 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@301 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@300 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@304 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@304 (type $generated@@342))))
(let (($generated@@344 ($generated@@303 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@302 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@301 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@136 $generated@@346 ($generated@@152 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@225 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@136 $generated@@346 ($generated@@152 $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@219)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (!  (=> (and (= (type $generated@@351) $generated@@219) (or ($generated@@216 $generated@@352) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@349 $generated@@351) $generated@@352) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :pattern ( ($generated@@217 ($generated@@349 $generated@@351) $generated@@352))
))))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@353 Int) ) (!  (=> (or ($generated@@215 ($generated@@244 $generated@@353)) (not (= 2 $generated@@213))) (and ($generated@@216 ($generated@@244 $generated@@353)) (= ($generated@@214 ($generated@@244 $generated@@353)) ($generated@@246 ($generated@@217 $generated@@218 ($generated@@244 $generated@@353))))))
 :weight 3
 :pattern ( ($generated@@214 ($generated@@244 $generated@@353)))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@147) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@251 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@147) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@251 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@277 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@277 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@286 (type $generated@@370))))
(let (($generated@@372 ($generated@@285 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@374) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@282 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@304 (type $generated@@378))))
(let (($generated@@380 ($generated@@303 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@382) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@285 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@284 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@282 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@303 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@302 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@396) $generated@@400))) (and ($generated@@251 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@251 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@404) $generated@@408))) (and ($generated@@251 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@251 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@409 T@U) ($generated@@410 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@219) (or ($generated@@216 ($generated@@244 $generated@@410)) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@349 $generated@@409) ($generated@@244 $generated@@410)) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :weight 3
 :pattern ( ($generated@@217 ($generated@@349 $generated@@409) ($generated@@244 $generated@@410)))
))))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@304 (type $generated@@413))))
(let (($generated@@415 ($generated@@303 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@302 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@301 $generated@@415 $generated@@414)) (= ($generated@@300 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@300 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@304 (type $generated@@416))))
(let (($generated@@418 ($generated@@303 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@302 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@301 $generated@@418 $generated@@417)) (= ($generated@@339 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@339 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@304 (type $generated@@419))))
(let (($generated@@421 ($generated@@303 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@302 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@301 $generated@@421 $generated@@420)) (= ($generated@@375 $generated@@419) ($generated@@411 $generated@@147))))))
 :pattern ( ($generated@@375 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@286 (type $generated@@422))))
(let (($generated@@424 ($generated@@285 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@284 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@283 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@147) (= (type $generated@@426) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@422) ($generated@@271 ($generated@@224 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@364 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@304 (type $generated@@427))))
(let (($generated@@429 ($generated@@303 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@302 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@301 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@427) ($generated@@271 ($generated@@224 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@375 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@147) ($generated@@225 $generated@@432 $generated@@46)) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@365 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@147) ($generated@@225 $generated@@433 $generated@@47)) (and (= ($generated@@271 ($generated@@365 $generated@@3 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@365 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@147) ($generated@@225 $generated@@434 $generated@@44)) (and (= ($generated@@271 ($generated@@365 $generated@@4 $generated@@434)) $generated@@434) ($generated@@136 ($generated@@365 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 21))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) ($generated@@225 $generated@@436 $generated@@45)) (and (= ($generated@@271 ($generated@@365 $generated@@435 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@365 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@225 ($generated@@271 $generated@@437) $generated@@438) ($generated@@136 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@276 $generated@@439))))
 :pattern ( ($generated@@276 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@266 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@265 $generated@@442)) (<= 0 ($generated@@264 $generated@@441))))
 :pattern ( ($generated@@264 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@393 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@393 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@147) (= (type $generated@@464) $generated@@147)) (= ($generated@@257 ($generated@@224 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@138 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@138 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@138 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@138 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@147) (= (type $generated@@474) $generated@@147)) (= ($generated@@145 ($generated@@224 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@224 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@147) (= (type $generated@@476) $generated@@147)) (= ($generated@@146 ($generated@@224 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@224 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@219)
 :pattern ( ($generated@@477 $generated@@479))
)) (= (type $generated@@478) $generated@@219)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ) (!  (=> (= (type $generated@@480) $generated@@219) (= ($generated@@217 $generated@@480 $generated@@481) ($generated@@217 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@217 ($generated@@477 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@266 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@265 $generated@@147)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@264 $generated@@488))) ($generated@@251 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@234 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@234 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@234 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@152 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@152 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@365 $generated@@511 ($generated@@271 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@271 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@512) $generated@@515))) (and ($generated@@225 ($generated@@81 ($generated@@366 $generated@@512) $generated@@515) $generated@@514) ($generated@@225 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@516) $generated@@519))) (and ($generated@@225 ($generated@@81 ($generated@@376 $generated@@516) $generated@@519) $generated@@518) ($generated@@225 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@147) (= (type $generated@@523) $generated@@147)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@224 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@147) (= (type $generated@@525) $generated@@147)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@224 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (= (type $generated@@526) $generated@@219) (= ($generated@@217 ($generated@@349 $generated@@526) $generated@@527) ($generated@@217 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@217 ($generated@@349 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@147) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530))) (and (= ($generated@@271 ($generated@@365 ($generated@@284 $generated@@147 $generated@@147) $generated@@528)) $generated@@528) ($generated@@136 ($generated@@365 ($generated@@284 $generated@@147 $generated@@147) $generated@@528) ($generated@@393 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@147) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533))) (and (= ($generated@@271 ($generated@@365 ($generated@@302 $generated@@147 $generated@@147) $generated@@531)) $generated@@531) ($generated@@136 ($generated@@365 ($generated@@302 $generated@@147 $generated@@147) $generated@@531) ($generated@@401 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@147)) ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535))) (and (= ($generated@@271 ($generated@@365 $generated@@133 $generated@@536)) $generated@@536) ($generated@@136 ($generated@@365 $generated@@133 $generated@@536) ($generated@@138 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@411 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@138 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@133) (= ($generated@@520 ($generated@@271 $generated@@543)) ($generated@@521 $generated@@543)))
 :pattern ( ($generated@@520 ($generated@@271 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@147) ($generated@@225 $generated@@544 ($generated@@75 0))) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@544)) $generated@@544) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@225 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@147) (= (type $generated@@546) $generated@@64)) ($generated@@225 $generated@@545 ($generated@@234 $generated@@546))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545) ($generated@@234 $generated@@546))))
 :pattern ( ($generated@@225 $generated@@545 ($generated@@234 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@147) (= (type $generated@@548) $generated@@64)) ($generated@@225 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@147) (= (type $generated@@550) $generated@@64)) ($generated@@225 $generated@@549 ($generated@@152 $generated@@550))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549)) $generated@@549) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549) ($generated@@152 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@152 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@147) (= (type $generated@@552) $generated@@64)) ($generated@@225 $generated@@551 ($generated@@482 $generated@@552))) (and (= ($generated@@271 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551) ($generated@@482 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@482 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@251 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@133) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@559) (and ($generated@@134 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@133) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@563) (and ($generated@@134 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@147)) (= ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)) ($generated@@246 ($generated@@224 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@568)) ($generated@@246 ($generated@@271 $generated@@568)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@266 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@265 $generated@@570)) (= ($generated@@264 $generated@@569) 0)) (= $generated@@569 ($generated@@263 $generated@@570))))
 :pattern ( ($generated@@264 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@276 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@276 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@276 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@435)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@147)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@265 $generated@@147)) (= (type $generated@@586) $generated@@64)) (= ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@264 $generated@@585))) ($generated@@225 ($generated@@483 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@483 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@265 $generated@@147)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@264 $generated@@589))) (< ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593))) (and (and ($generated@@136 ($generated@@282 $generated@@591) ($generated@@234 $generated@@592)) ($generated@@136 ($generated@@328 $generated@@591) ($generated@@234 $generated@@593))) ($generated@@136 ($generated@@364 $generated@@591) ($generated@@234 ($generated@@138 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596))) (and (and ($generated@@136 ($generated@@300 $generated@@594) ($generated@@239 $generated@@595)) ($generated@@136 ($generated@@339 $generated@@594) ($generated@@239 $generated@@596))) ($generated@@136 ($generated@@375 $generated@@594) ($generated@@239 ($generated@@138 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@136 $generated@@597 $generated@@46))
 :pattern ( ($generated@@136 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@136 $generated@@598 $generated@@47))
 :pattern ( ($generated@@136 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@136 $generated@@599 $generated@@44))
 :pattern ( ($generated@@136 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@435) ($generated@@136 $generated@@600 $generated@@45))
 :pattern ( ($generated@@136 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@147) ($generated@@136 $generated@@601 $generated@@48))
 :pattern ( ($generated@@136 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@602) $generated@@219) (= (type $generated@@603) ($generated@@159 $generated@@77 $generated@@4))) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@610  (=> (and (= ($generated@@477 $generated@@218) $generated@@218) (= ($generated@@477 $generated@@602) $generated@@602)) (=> (and (and (and (= $generated@@603 ($generated@@158 $generated@@604 $generated@@605 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605)) (and ($generated@@216 $generated@@606) ($generated@@134 ($generated@@217 $generated@@218 $generated@@606)))) (and (and ($generated@@132 ($generated@@217 $generated@@218 $generated@@606)) ($generated@@216 $generated@@606)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@224 ($generated@@271 ($generated@@8 $generated@@607)) ($generated@@271 ($generated@@8 $generated@@608))) ($generated@@217 $generated@@602 $generated@@606))))))
(let (($generated@@611  (=> (and (and (and ($generated@@250 $generated@@605) ($generated@@609 $generated@@605)) (= 3 $generated@@213)) (and ($generated@@144 ($generated@@224 ($generated@@271 ($generated@@8 $generated@@607)) ($generated@@271 ($generated@@8 $generated@@608))) ($generated@@214 $generated@@606)) (= (ControlFlow 0 3) 2))) $generated@@610)))
$generated@@611)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 (Int) T@U)
(declare-fun $generated@@223 (Int) Bool)
(declare-fun $generated@@224 (Int) Bool)
(declare-fun $generated@@225 (Int) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@215 $generated@@216)) $generated@@133)
 :pattern ( ($generated@@213 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@64) (= (type $generated@@218) $generated@@64)) (= (type $generated@@219) $generated@@147)) (= (type $generated@@220) $generated@@147)) (= ($generated@@136 ($generated@@213 $generated@@219 $generated@@220) ($generated@@138 $generated@@217 $generated@@218))  (and ($generated@@214 $generated@@219 $generated@@217) ($generated@@214 $generated@@220 $generated@@218))))
 :pattern ( ($generated@@136 ($generated@@213 $generated@@219 $generated@@220) ($generated@@138 $generated@@217 $generated@@218)))
)))
(assert  (and (forall (($generated@@226 Int) ) (! (= (type ($generated@@222 $generated@@226)) $generated@@133)
 :pattern ( ($generated@@222 $generated@@226))
)) (forall (($generated@@227 Int) ) (! (= (type ($generated@@225 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@225 $generated@@227))
))))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@228 Int) ) (!  (=> (or ($generated@@223 $generated@@228) (not (= 2 $generated@@221))) (and ($generated@@224 $generated@@228) (= ($generated@@222 $generated@@228) ($generated@@225 $generated@@228))))
 :pattern ( ($generated@@222 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@133) (= (type $generated@@230) $generated@@133)) (= ($generated@@144 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@144 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@64)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@234) $generated@@64)) (= ($generated@@136 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@147) ($generated@@0 ($generated@@81 $generated@@233 $generated@@235))) ($generated@@214 $generated@@235 $generated@@234))
 :pattern ( ($generated@@81 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@136 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@147) ($generated@@0 ($generated@@81 $generated@@238 $generated@@240))) ($generated@@214 $generated@@240 $generated@@239))
 :pattern ( ($generated@@81 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@147)) (= (type $generated@@252) $generated@@147)) (= (type $generated@@253) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@247 $generated@@253)) (= ($generated@@74 ($generated@@213 $generated@@251 $generated@@252) ($generated@@138 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@74 ($generated@@213 $generated@@251 $generated@@252) ($generated@@138 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@133) (= ($generated@@134 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@133) ($generated@@134 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@147) (= (type $generated@@259) $generated@@147)) (= $generated@@257 ($generated@@213 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@134 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@147)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@74 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@76 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@79 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@76 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@81 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@76 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@79 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@76 $generated@@316 $generated@@2)) (= ($generated@@153 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@81 $generated@@315 $generated@@317))) (<= ($generated ($generated@@81 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@81 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@153 $generated@@315))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@318 Int) ) (!  (=> (or ($generated@@224 $generated@@318) (not (= 1 $generated@@221))) ($generated@@136 ($generated@@225 $generated@@318) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@225 $generated@@318))
))))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@319 Int) ) (!  (=> (or ($generated@@223 $generated@@319) (not (= 2 $generated@@221))) ($generated@@136 ($generated@@222 $generated@@319) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@222 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@283 (type $generated@@320))))
(let (($generated@@322 ($generated@@282 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@281 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@280 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@279 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@283 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@283 (type $generated@@327))))
(let (($generated@@329 ($generated@@282 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@281 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@280 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@301 (type $generated@@331))))
(let (($generated@@333 ($generated@@300 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@299 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@298 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@297 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@301 (type $generated@@338))))
(let (($generated@@340 ($generated@@300 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@299 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@298 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@342 Int) ) (!  (=> (or ($generated@@224 $generated@@342) (not (= 1 $generated@@221))) (= ($generated@@225 $generated@@342) ($generated@@243 ($generated@@213 ($generated@@268 ($generated@@8 ($generated@@241 5))) ($generated@@268 ($generated@@8 ($generated@@241 7)))))))
 :pattern ( ($generated@@225 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@344) $generated@@64)) (= ($generated@@136 $generated@@343 ($generated@@152 $generated@@344)) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@343 $generated@@345)))) ($generated@@214 $generated@@345 $generated@@344))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
))))
 :pattern ( ($generated@@136 $generated@@343 ($generated@@152 $generated@@344)))
)))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@346 Int) ) (!  (=> (or ($generated@@223 ($generated@@241 $generated@@346)) (not (= 2 $generated@@221))) (and ($generated@@224 ($generated@@241 $generated@@346)) (= ($generated@@222 ($generated@@241 $generated@@346)) ($generated@@243 ($generated@@225 ($generated@@241 $generated@@346))))))
 :weight 3
 :pattern ( ($generated@@222 ($generated@@241 $generated@@346)))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@348) $generated@@64)) (= (type $generated@@349) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@147) ($generated@@0 ($generated@@81 $generated@@347 $generated@@350))) ($generated@@248 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@81 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@74 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@147) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@248 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@81 ($generated@@274 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@81 ($generated@@274 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@283 (type $generated@@363))))
(let (($generated@@365 ($generated@@282 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@76 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@367) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@366) ($generated@@145 ($generated@@358 $generated@@133 $generated@@367)))) (= ($generated@@81 ($generated@@359 $generated@@366) ($generated@@145 ($generated@@358 $generated@@133 $generated@@367))) ($generated@@146 ($generated@@358 $generated@@133 $generated@@367))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@301 (type $generated@@371))))
(let (($generated@@373 ($generated@@300 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@375) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@374) ($generated@@145 ($generated@@358 $generated@@133 $generated@@375)))) (= ($generated@@81 ($generated@@369 $generated@@374) ($generated@@145 ($generated@@358 $generated@@133 $generated@@375))) ($generated@@146 ($generated@@358 $generated@@133 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@282 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@281 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@300 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@299 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@381) $generated@@382))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@386 Int) ) (!  (=> (or ($generated@@224 ($generated@@241 $generated@@386)) (not (= 1 $generated@@221))) (= ($generated@@225 ($generated@@241 $generated@@386)) ($generated@@243 ($generated@@213 ($generated@@268 ($generated@@8 ($generated@@241 5))) ($generated@@268 ($generated@@8 ($generated@@241 7)))))))
 :weight 3
 :pattern ( ($generated@@225 ($generated@@241 $generated@@386)))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@64)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@390) $generated@@394))) (and ($generated@@248 ($generated@@81 ($generated@@359 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@248 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@398) $generated@@402))) (and ($generated@@248 ($generated@@81 ($generated@@369 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@248 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@301 (type $generated@@405))))
(let (($generated@@407 ($generated@@300 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@299 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@298 $generated@@407 $generated@@406)) (= ($generated@@297 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@297 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@301 (type $generated@@408))))
(let (($generated@@410 ($generated@@300 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@299 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@298 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@301 (type $generated@@411))))
(let (($generated@@413 ($generated@@300 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@299 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@298 $generated@@413 $generated@@412)) (= ($generated@@368 $generated@@411) ($generated@@403 $generated@@147))))))
 :pattern ( ($generated@@368 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@283 (type $generated@@414))))
(let (($generated@@416 ($generated@@282 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@281 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@280 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@147) (= (type $generated@@418) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@414) ($generated@@268 ($generated@@213 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@357 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@301 (type $generated@@419))))
(let (($generated@@421 ($generated@@300 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@299 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@298 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@147) (= (type $generated@@423) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@419) ($generated@@268 ($generated@@213 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@368 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@147) ($generated@@214 $generated@@424 $generated@@46)) (and (= ($generated@@268 ($generated@@358 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@358 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@147) ($generated@@214 $generated@@425 $generated@@47)) (and (= ($generated@@268 ($generated@@358 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@358 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@147) ($generated@@214 $generated@@426 $generated@@44)) (and (= ($generated@@268 ($generated@@358 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@358 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@147) ($generated@@214 $generated@@428 $generated@@45)) (and (= ($generated@@268 ($generated@@358 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@358 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@214 ($generated@@268 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@214 ($generated@@268 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@273 $generated@@431))))
 :pattern ( ($generated@@273 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@263 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@262 $generated@@434)) (<= 0 ($generated@@261 $generated@@433))))
 :pattern ( ($generated@@261 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@387 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@387 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@387 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@387 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@387 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@395 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@395 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@395 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@147) (= (type $generated@@456) $generated@@147)) (= ($generated@@254 ($generated@@213 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@213 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@138 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@138 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@138 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@138 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@147) (= (type $generated@@466) $generated@@147)) (= ($generated@@145 ($generated@@213 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@213 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@147) (= (type $generated@@468) $generated@@147)) (= ($generated@@146 ($generated@@213 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@213 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@263 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@262 $generated@@147)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@261 $generated@@475))) ($generated@@248 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@231 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@231 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@231 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@236 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@236 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@152 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@152 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@358 $generated@@498 ($generated@@268 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@268 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@499) $generated@@502))) (and ($generated@@214 ($generated@@81 ($generated@@359 $generated@@499) $generated@@502) $generated@@501) ($generated@@214 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@503) $generated@@506))) (and ($generated@@214 ($generated@@81 ($generated@@369 $generated@@503) $generated@@506) $generated@@505) ($generated@@214 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@147) (= (type $generated@@510) $generated@@147)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@213 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@213 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@147) (= (type $generated@@512) $generated@@147)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@213 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@213 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@147) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@214 $generated@@513 ($generated@@387 $generated@@514 $generated@@515))) (and (= ($generated@@268 ($generated@@358 ($generated@@281 $generated@@147 $generated@@147) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@358 ($generated@@281 $generated@@147 $generated@@147) $generated@@513) ($generated@@387 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@214 $generated@@513 ($generated@@387 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@147) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@214 $generated@@516 ($generated@@395 $generated@@517 $generated@@518))) (and (= ($generated@@268 ($generated@@358 ($generated@@299 $generated@@147 $generated@@147) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@358 ($generated@@299 $generated@@147 $generated@@147) $generated@@516) ($generated@@395 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@214 $generated@@516 ($generated@@395 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@147)) ($generated@@214 $generated@@521 ($generated@@138 $generated@@519 $generated@@520))) (and (= ($generated@@268 ($generated@@358 $generated@@133 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@358 $generated@@133 $generated@@521) ($generated@@138 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@214 $generated@@521 ($generated@@138 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@138 $generated@@526 $generated@@527)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@133) (= ($generated@@507 ($generated@@268 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@268 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@147) ($generated@@214 $generated@@529 ($generated@@75 0))) (and (= ($generated@@268 ($generated@@358 $generated@@2 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@214 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@147) (= (type $generated@@531) $generated@@64)) ($generated@@214 $generated@@530 ($generated@@231 $generated@@531))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@530)) $generated@@530) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@530) ($generated@@231 $generated@@531))))
 :pattern ( ($generated@@214 $generated@@530 ($generated@@231 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@147) (= (type $generated@@533) $generated@@64)) ($generated@@214 $generated@@532 ($generated@@236 $generated@@533))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@532)) $generated@@532) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@532) ($generated@@236 $generated@@533))))
 :pattern ( ($generated@@214 $generated@@532 ($generated@@236 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@147) (= (type $generated@@535) $generated@@64)) ($generated@@214 $generated@@534 ($generated@@152 $generated@@535))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@2) $generated@@534)) $generated@@534) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@2) $generated@@534) ($generated@@152 $generated@@535))))
 :pattern ( ($generated@@214 $generated@@534 ($generated@@152 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@147) (= (type $generated@@537) $generated@@64)) ($generated@@214 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@268 ($generated@@358 ($generated@@262 $generated@@147) $generated@@536)) $generated@@536) ($generated@@136 ($generated@@358 ($generated@@262 $generated@@147) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@214 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@152 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@248 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@152 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@133) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@138 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@138 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@248 ($generated@@145 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@248 ($generated@@145 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@133) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@548) (and ($generated@@134 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@138 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@138 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@248 ($generated@@146 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@248 ($generated@@146 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@147) (= (type $generated@@551) $generated@@147)) (= ($generated@@213 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)) ($generated@@243 ($generated@@213 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@213 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@552))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@553)) ($generated@@243 ($generated@@268 $generated@@553)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@263 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@262 $generated@@555)) (= ($generated@@261 $generated@@554) 0)) (= $generated@@554 ($generated@@260 $generated@@555))))
 :pattern ( ($generated@@261 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@273 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@273 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@273 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@427)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@147)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@262 $generated@@147)) (= (type $generated@@571) $generated@@64)) (= ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@261 $generated@@570))) ($generated@@214 ($generated@@470 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@470 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@262 $generated@@147)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@261 $generated@@574))) (< ($generated@@508 ($generated@@358 $generated@@133 ($generated@@470 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@508 ($generated@@358 $generated@@133 ($generated@@470 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@136 $generated@@576 ($generated@@387 $generated@@577 $generated@@578))) (and (and ($generated@@136 ($generated@@279 $generated@@576) ($generated@@231 $generated@@577)) ($generated@@136 ($generated@@324 $generated@@576) ($generated@@231 $generated@@578))) ($generated@@136 ($generated@@357 $generated@@576) ($generated@@231 ($generated@@138 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@136 $generated@@576 ($generated@@387 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@395 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@297 $generated@@579) ($generated@@236 $generated@@580)) ($generated@@136 ($generated@@335 $generated@@579) ($generated@@236 $generated@@581))) ($generated@@136 ($generated@@368 $generated@@579) ($generated@@236 ($generated@@138 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@395 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@136 $generated@@582 $generated@@46))
 :pattern ( ($generated@@136 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@136 $generated@@583 $generated@@47))
 :pattern ( ($generated@@136 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@136 $generated@@584 $generated@@44))
 :pattern ( ($generated@@136 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@427) ($generated@@136 $generated@@585 $generated@@45))
 :pattern ( ($generated@@136 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@147) ($generated@@136 $generated@@586 $generated@@48))
 :pattern ( ($generated@@136 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 (T@U) Bool)
(assert  (and (and (= (type $generated@@587) ($generated@@159 $generated@@77 $generated@@4)) (= (type $generated@@588) $generated@@77)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@594  (=> (and (and (and (= $generated@@587 ($generated@@158 $generated@@588 $generated@@589 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@590) $generated@@46 $generated@@589)) (and ($generated@@223 $generated@@590) ($generated@@134 ($generated@@222 $generated@@590)))) (and (and ($generated@@132 ($generated@@222 $generated@@590)) ($generated@@223 $generated@@590)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@213 ($generated@@268 ($generated@@8 $generated@@591)) ($generated@@268 ($generated@@8 $generated@@592))) ($generated@@222 $generated@@590)))))
(let (($generated@@595  (=> (and ($generated@@247 $generated@@589) ($generated@@593 $generated@@589)) (=> (and (and (= 3 $generated@@221) (= $generated@@591 ($generated ($generated@@358 $generated@@2 ($generated@@145 ($generated@@222 $generated@@590)))))) (and (= $generated@@592 ($generated ($generated@@358 $generated@@2 ($generated@@146 ($generated@@222 $generated@@590))))) (= (ControlFlow 0 3) 2))) $generated@@594))))
$generated@@595)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 (Int) T@U)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@216 (Int) Bool)
(declare-fun $generated@@217 (T@U Int) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@220 Int) ) (! (= (type ($generated@@214 $generated@@220)) $generated@@133)
 :pattern ( ($generated@@214 $generated@@220))
)) (forall (($generated@@221 T@U) ($generated@@222 Int) ) (! (= (type ($generated@@217 $generated@@221 $generated@@222)) $generated@@133)
 :pattern ( ($generated@@217 $generated@@221 $generated@@222))
))) (= ($generated@@1 $generated@@219) 17)) (= (type $generated@@218) $generated@@219)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@223 Int) ) (!  (=> (or ($generated@@215 $generated@@223) (not (= 2 $generated@@213))) (and ($generated@@216 $generated@@223) (= ($generated@@214 $generated@@223) ($generated@@217 $generated@@218 $generated@@223))))
 :pattern ( ($generated@@214 $generated@@223))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@64) (= (type $generated@@229) $generated@@64)) (= (type $generated@@230) $generated@@147)) (= (type $generated@@231) $generated@@147)) (= ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@133) (= (type $generated@@233) $generated@@133)) (= ($generated@@144 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@144 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@147) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@147) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@147)) (= (type $generated@@255) $generated@@147)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@133) (= ($generated@@134 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@133) ($generated@@134 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@147) (= (type $generated@@262) $generated@@147)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@134 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 18)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@147)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@74 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@276 Int) ) (!  (=> (or ($generated@@215 ($generated@@244 $generated@@276)) (not (= 2 $generated@@213))) (and ($generated@@216 ($generated@@244 $generated@@276)) (= ($generated@@214 ($generated@@244 $generated@@276)) ($generated@@217 $generated@@218 ($generated@@244 $generated@@276)))))
 :weight 3
 :pattern ( ($generated@@214 ($generated@@244 $generated@@276)))
))))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@76 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@79 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@76 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@81 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 19)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@76 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 20)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@76 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@319 T@U) ($generated@@320 Int) ) (!  (=> (and (= (type $generated@@319) $generated@@219) (or ($generated@@216 $generated@@320) (not (= 1 $generated@@213)))) ($generated@@136 ($generated@@217 $generated@@319 $generated@@320) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@217 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@153 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@277 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@153 $generated@@321))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@324 Int) ) (!  (=> (or ($generated@@215 $generated@@324) (not (= 2 $generated@@213))) ($generated@@136 ($generated@@214 $generated@@324) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@214 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@287 (type $generated@@325))))
(let (($generated@@327 ($generated@@286 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@285 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@284 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@283 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@287 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@287 (type $generated@@332))))
(let (($generated@@334 ($generated@@286 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@285 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@284 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@305 (type $generated@@336))))
(let (($generated@@338 ($generated@@304 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@303 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@302 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@301 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@305 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@305 (type $generated@@343))))
(let (($generated@@345 ($generated@@304 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@303 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@302 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@136 $generated@@347 ($generated@@152 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@225 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@136 $generated@@347 ($generated@@152 $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@219)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@352 T@U) ($generated@@353 Int) ) (!  (=> (and (= (type $generated@@352) $generated@@219) (or ($generated@@216 $generated@@353) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@350 $generated@@352) $generated@@353) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :pattern ( ($generated@@217 ($generated@@350 $generated@@352) $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@147) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@251 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@147) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@251 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@278 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@278 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@287 (type $generated@@370))))
(let (($generated@@372 ($generated@@286 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@374) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@305 (type $generated@@378))))
(let (($generated@@380 ($generated@@304 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@382) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@286 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@285 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@304 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@303 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@396) $generated@@400))) (and ($generated@@251 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@251 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@404) $generated@@408))) (and ($generated@@251 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@251 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@409 T@U) ($generated@@410 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@219) (or ($generated@@216 ($generated@@244 $generated@@410)) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@350 $generated@@409) ($generated@@244 $generated@@410)) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :weight 3
 :pattern ( ($generated@@217 ($generated@@350 $generated@@409) ($generated@@244 $generated@@410)))
))))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@305 (type $generated@@413))))
(let (($generated@@415 ($generated@@304 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@303 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@302 $generated@@415 $generated@@414)) (= ($generated@@301 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@301 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@305 (type $generated@@416))))
(let (($generated@@418 ($generated@@304 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@303 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@302 $generated@@418 $generated@@417)) (= ($generated@@340 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@340 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@305 (type $generated@@419))))
(let (($generated@@421 ($generated@@304 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@303 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@302 $generated@@421 $generated@@420)) (= ($generated@@375 $generated@@419) ($generated@@411 $generated@@147))))))
 :pattern ( ($generated@@375 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@287 (type $generated@@422))))
(let (($generated@@424 ($generated@@286 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@285 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@284 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@147) (= (type $generated@@426) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@422) ($generated@@271 ($generated@@224 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@364 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@305 (type $generated@@427))))
(let (($generated@@429 ($generated@@304 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@303 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@302 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@427) ($generated@@271 ($generated@@224 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@375 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@147) ($generated@@225 $generated@@432 $generated@@46)) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@365 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@147) ($generated@@225 $generated@@433 $generated@@47)) (and (= ($generated@@271 ($generated@@365 $generated@@3 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@365 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@147) ($generated@@225 $generated@@434 $generated@@44)) (and (= ($generated@@271 ($generated@@365 $generated@@4 $generated@@434)) $generated@@434) ($generated@@136 ($generated@@365 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 21))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) ($generated@@225 $generated@@436 $generated@@45)) (and (= ($generated@@271 ($generated@@365 $generated@@435 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@365 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@225 ($generated@@271 $generated@@437) $generated@@438) ($generated@@136 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@277 $generated@@439))))
 :pattern ( ($generated@@277 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@266 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@265 $generated@@442)) (<= 0 ($generated@@264 $generated@@441))))
 :pattern ( ($generated@@264 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@393 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@393 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@147) (= (type $generated@@464) $generated@@147)) (= ($generated@@257 ($generated@@224 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@138 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@138 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@138 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@138 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@147) (= (type $generated@@474) $generated@@147)) (= ($generated@@145 ($generated@@224 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@224 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@147) (= (type $generated@@476) $generated@@147)) (= ($generated@@146 ($generated@@224 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@224 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@219)
 :pattern ( ($generated@@477 $generated@@479))
)) (= (type $generated@@478) $generated@@219)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ) (!  (=> (= (type $generated@@480) $generated@@219) (= ($generated@@217 $generated@@480 $generated@@481) ($generated@@217 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@217 ($generated@@477 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@266 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@265 $generated@@147)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@264 $generated@@488))) ($generated@@251 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@234 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@234 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@234 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@152 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@152 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@365 $generated@@511 ($generated@@271 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@271 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@512) $generated@@515))) (and ($generated@@225 ($generated@@81 ($generated@@366 $generated@@512) $generated@@515) $generated@@514) ($generated@@225 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@516) $generated@@519))) (and ($generated@@225 ($generated@@81 ($generated@@376 $generated@@516) $generated@@519) $generated@@518) ($generated@@225 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@147) (= (type $generated@@523) $generated@@147)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@224 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@147) (= (type $generated@@525) $generated@@147)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@224 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (= (type $generated@@526) $generated@@219) (= ($generated@@217 ($generated@@350 $generated@@526) $generated@@527) ($generated@@217 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@217 ($generated@@350 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@147) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530))) (and (= ($generated@@271 ($generated@@365 ($generated@@285 $generated@@147 $generated@@147) $generated@@528)) $generated@@528) ($generated@@136 ($generated@@365 ($generated@@285 $generated@@147 $generated@@147) $generated@@528) ($generated@@393 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@147) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533))) (and (= ($generated@@271 ($generated@@365 ($generated@@303 $generated@@147 $generated@@147) $generated@@531)) $generated@@531) ($generated@@136 ($generated@@365 ($generated@@303 $generated@@147 $generated@@147) $generated@@531) ($generated@@401 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@147)) ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535))) (and (= ($generated@@271 ($generated@@365 $generated@@133 $generated@@536)) $generated@@536) ($generated@@136 ($generated@@365 $generated@@133 $generated@@536) ($generated@@138 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@411 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@138 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@133) (= ($generated@@520 ($generated@@271 $generated@@543)) ($generated@@521 $generated@@543)))
 :pattern ( ($generated@@520 ($generated@@271 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@147) ($generated@@225 $generated@@544 ($generated@@75 0))) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@544)) $generated@@544) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@225 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@147) (= (type $generated@@546) $generated@@64)) ($generated@@225 $generated@@545 ($generated@@234 $generated@@546))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545) ($generated@@234 $generated@@546))))
 :pattern ( ($generated@@225 $generated@@545 ($generated@@234 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@147) (= (type $generated@@548) $generated@@64)) ($generated@@225 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@147) (= (type $generated@@550) $generated@@64)) ($generated@@225 $generated@@549 ($generated@@152 $generated@@550))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549)) $generated@@549) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549) ($generated@@152 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@152 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@147) (= (type $generated@@552) $generated@@64)) ($generated@@225 $generated@@551 ($generated@@482 $generated@@552))) (and (= ($generated@@271 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551) ($generated@@482 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@482 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@251 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@133) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@559) (and ($generated@@134 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@133) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@563) (and ($generated@@134 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@147)) (= ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)) ($generated@@246 ($generated@@224 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@568)) ($generated@@246 ($generated@@271 $generated@@568)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@266 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@265 $generated@@570)) (= ($generated@@264 $generated@@569) 0)) (= $generated@@569 ($generated@@263 $generated@@570))))
 :pattern ( ($generated@@264 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@277 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@277 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@435)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@147)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@265 $generated@@147)) (= (type $generated@@586) $generated@@64)) (= ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@264 $generated@@585))) ($generated@@225 ($generated@@483 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@483 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@265 $generated@@147)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@264 $generated@@589))) (< ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593))) (and (and ($generated@@136 ($generated@@283 $generated@@591) ($generated@@234 $generated@@592)) ($generated@@136 ($generated@@329 $generated@@591) ($generated@@234 $generated@@593))) ($generated@@136 ($generated@@364 $generated@@591) ($generated@@234 ($generated@@138 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596))) (and (and ($generated@@136 ($generated@@301 $generated@@594) ($generated@@239 $generated@@595)) ($generated@@136 ($generated@@340 $generated@@594) ($generated@@239 $generated@@596))) ($generated@@136 ($generated@@375 $generated@@594) ($generated@@239 ($generated@@138 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@136 $generated@@597 $generated@@46))
 :pattern ( ($generated@@136 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@136 $generated@@598 $generated@@47))
 :pattern ( ($generated@@136 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@136 $generated@@599 $generated@@44))
 :pattern ( ($generated@@136 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@435) ($generated@@136 $generated@@600 $generated@@45))
 :pattern ( ($generated@@136 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@147) ($generated@@136 $generated@@601 $generated@@48))
 :pattern ( ($generated@@136 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@602) $generated@@219) (= (type $generated@@603) ($generated@@159 $generated@@77 $generated@@4))) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@610  (=> (and (= ($generated@@477 $generated@@218) $generated@@218) (= ($generated@@477 $generated@@602) $generated@@602)) (=> (and (and (and (= $generated@@603 ($generated@@158 $generated@@604 $generated@@605 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605)) (and ($generated@@215 $generated@@606) ($generated@@134 ($generated@@214 $generated@@606)))) (and (and ($generated@@132 ($generated@@214 $generated@@606)) ($generated@@215 $generated@@606)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@224 ($generated@@271 ($generated@@8 $generated@@607)) ($generated@@271 ($generated@@8 $generated@@608))) ($generated@@214 $generated@@606))))))
(let (($generated@@611  (=> (and ($generated@@250 $generated@@605) ($generated@@609 $generated@@605)) (=> (and (and (= 3 $generated@@213) (= $generated@@607 ($generated ($generated@@365 $generated@@2 ($generated@@145 ($generated@@214 $generated@@606)))))) (and (= $generated@@608 ($generated ($generated@@365 $generated@@2 ($generated@@146 ($generated@@214 $generated@@606))))) (= (ControlFlow 0 3) 2))) $generated@@610))))
$generated@@611)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 (Int) T@U)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@216 (Int) Bool)
(declare-fun $generated@@217 (T@U Int) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@220 Int) ) (! (= (type ($generated@@214 $generated@@220)) $generated@@133)
 :pattern ( ($generated@@214 $generated@@220))
)) (forall (($generated@@221 T@U) ($generated@@222 Int) ) (! (= (type ($generated@@217 $generated@@221 $generated@@222)) $generated@@133)
 :pattern ( ($generated@@217 $generated@@221 $generated@@222))
))) (= ($generated@@1 $generated@@219) 17)) (= (type $generated@@218) $generated@@219)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@223 Int) ) (!  (=> (or ($generated@@215 $generated@@223) (not (= 2 $generated@@213))) (and ($generated@@216 $generated@@223) (= ($generated@@214 $generated@@223) ($generated@@217 $generated@@218 $generated@@223))))
 :pattern ( ($generated@@214 $generated@@223))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@64) (= (type $generated@@229) $generated@@64)) (= (type $generated@@230) $generated@@147)) (= (type $generated@@231) $generated@@147)) (= ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@133) (= (type $generated@@233) $generated@@133)) (= ($generated@@144 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@144 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@147) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@147) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@147)) (= (type $generated@@255) $generated@@147)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@133) (= ($generated@@134 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@133) ($generated@@134 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@147) (= (type $generated@@262) $generated@@147)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@134 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 18)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@147)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@74 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@76 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@79 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@76 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@81 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 19)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@76 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@81 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@81 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 20)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (!  (=> (and (= (type $generated@@318) $generated@@219) (or ($generated@@216 $generated@@319) (not (= 1 $generated@@213)))) ($generated@@136 ($generated@@217 $generated@@318 $generated@@319) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@217 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@79 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@76 $generated@@321 $generated@@2)) (= ($generated@@153 $generated@@320) (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@321) (and (<= 0 ($generated ($generated@@81 $generated@@320 $generated@@322))) (<= ($generated ($generated@@81 $generated@@320 $generated@@322)) ($generated@@276 $generated@@320))))
 :pattern ( ($generated@@81 $generated@@320 $generated@@322))
)))))
 :pattern ( ($generated@@153 $generated@@320))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@323 Int) ) (!  (=> (or ($generated@@215 $generated@@323) (not (= 2 $generated@@213))) ($generated@@136 ($generated@@214 $generated@@323) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@214 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@286 (type $generated@@324))))
(let (($generated@@326 ($generated@@285 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@284 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@283 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@282 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@286 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@286 (type $generated@@331))))
(let (($generated@@333 ($generated@@285 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@284 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@283 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@304 (type $generated@@335))))
(let (($generated@@337 ($generated@@303 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@302 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@301 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@300 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@304 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@304 (type $generated@@342))))
(let (($generated@@344 ($generated@@303 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@302 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@301 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@136 $generated@@346 ($generated@@152 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@225 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@136 $generated@@346 ($generated@@152 $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@219)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (!  (=> (and (= (type $generated@@351) $generated@@219) (or ($generated@@216 $generated@@352) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@349 $generated@@351) $generated@@352) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :pattern ( ($generated@@217 ($generated@@349 $generated@@351) $generated@@352))
))))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@353 Int) ) (!  (=> (or ($generated@@215 ($generated@@244 $generated@@353)) (not (= 2 $generated@@213))) (and ($generated@@216 ($generated@@244 $generated@@353)) (= ($generated@@214 ($generated@@244 $generated@@353)) ($generated@@246 ($generated@@217 $generated@@218 ($generated@@244 $generated@@353))))))
 :weight 3
 :pattern ( ($generated@@214 ($generated@@244 $generated@@353)))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@147) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@251 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@147) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@251 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@277 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@277 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@286 (type $generated@@370))))
(let (($generated@@372 ($generated@@285 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@374) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@282 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@304 (type $generated@@378))))
(let (($generated@@380 ($generated@@303 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@382) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@285 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@284 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@282 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@303 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@302 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@396) $generated@@400))) (and ($generated@@251 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@251 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@404) $generated@@408))) (and ($generated@@251 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@251 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@409 T@U) ($generated@@410 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@219) (or ($generated@@216 ($generated@@244 $generated@@410)) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@349 $generated@@409) ($generated@@244 $generated@@410)) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :weight 3
 :pattern ( ($generated@@217 ($generated@@349 $generated@@409) ($generated@@244 $generated@@410)))
))))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@304 (type $generated@@413))))
(let (($generated@@415 ($generated@@303 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@302 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@301 $generated@@415 $generated@@414)) (= ($generated@@300 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@300 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@304 (type $generated@@416))))
(let (($generated@@418 ($generated@@303 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@302 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@301 $generated@@418 $generated@@417)) (= ($generated@@339 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@339 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@304 (type $generated@@419))))
(let (($generated@@421 ($generated@@303 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@302 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@301 $generated@@421 $generated@@420)) (= ($generated@@375 $generated@@419) ($generated@@411 $generated@@147))))))
 :pattern ( ($generated@@375 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@286 (type $generated@@422))))
(let (($generated@@424 ($generated@@285 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@284 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@283 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@147) (= (type $generated@@426) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@422) ($generated@@271 ($generated@@224 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@364 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@304 (type $generated@@427))))
(let (($generated@@429 ($generated@@303 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@302 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@301 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@427) ($generated@@271 ($generated@@224 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@375 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@147) ($generated@@225 $generated@@432 $generated@@46)) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@365 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@147) ($generated@@225 $generated@@433 $generated@@47)) (and (= ($generated@@271 ($generated@@365 $generated@@3 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@365 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@147) ($generated@@225 $generated@@434 $generated@@44)) (and (= ($generated@@271 ($generated@@365 $generated@@4 $generated@@434)) $generated@@434) ($generated@@136 ($generated@@365 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 21))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) ($generated@@225 $generated@@436 $generated@@45)) (and (= ($generated@@271 ($generated@@365 $generated@@435 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@365 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@225 ($generated@@271 $generated@@437) $generated@@438) ($generated@@136 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@276 $generated@@439))))
 :pattern ( ($generated@@276 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@266 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@265 $generated@@442)) (<= 0 ($generated@@264 $generated@@441))))
 :pattern ( ($generated@@264 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@393 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@393 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@147) (= (type $generated@@464) $generated@@147)) (= ($generated@@257 ($generated@@224 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@138 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@138 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@138 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@138 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@147) (= (type $generated@@474) $generated@@147)) (= ($generated@@145 ($generated@@224 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@224 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@147) (= (type $generated@@476) $generated@@147)) (= ($generated@@146 ($generated@@224 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@224 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@219)
 :pattern ( ($generated@@477 $generated@@479))
)) (= (type $generated@@478) $generated@@219)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ) (!  (=> (= (type $generated@@480) $generated@@219) (= ($generated@@217 $generated@@480 $generated@@481) ($generated@@217 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@217 ($generated@@477 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@266 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@265 $generated@@147)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@264 $generated@@488))) ($generated@@251 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@234 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@234 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@234 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@152 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@152 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@365 $generated@@511 ($generated@@271 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@271 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@512) $generated@@515))) (and ($generated@@225 ($generated@@81 ($generated@@366 $generated@@512) $generated@@515) $generated@@514) ($generated@@225 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@516) $generated@@519))) (and ($generated@@225 ($generated@@81 ($generated@@376 $generated@@516) $generated@@519) $generated@@518) ($generated@@225 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@147) (= (type $generated@@523) $generated@@147)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@224 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@147) (= (type $generated@@525) $generated@@147)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@224 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (= (type $generated@@526) $generated@@219) (= ($generated@@217 ($generated@@349 $generated@@526) $generated@@527) ($generated@@217 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@217 ($generated@@349 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@147) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530))) (and (= ($generated@@271 ($generated@@365 ($generated@@284 $generated@@147 $generated@@147) $generated@@528)) $generated@@528) ($generated@@136 ($generated@@365 ($generated@@284 $generated@@147 $generated@@147) $generated@@528) ($generated@@393 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@147) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533))) (and (= ($generated@@271 ($generated@@365 ($generated@@302 $generated@@147 $generated@@147) $generated@@531)) $generated@@531) ($generated@@136 ($generated@@365 ($generated@@302 $generated@@147 $generated@@147) $generated@@531) ($generated@@401 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@147)) ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535))) (and (= ($generated@@271 ($generated@@365 $generated@@133 $generated@@536)) $generated@@536) ($generated@@136 ($generated@@365 $generated@@133 $generated@@536) ($generated@@138 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@411 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@138 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@133) (= ($generated@@520 ($generated@@271 $generated@@543)) ($generated@@521 $generated@@543)))
 :pattern ( ($generated@@520 ($generated@@271 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@147) ($generated@@225 $generated@@544 ($generated@@75 0))) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@544)) $generated@@544) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@225 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@147) (= (type $generated@@546) $generated@@64)) ($generated@@225 $generated@@545 ($generated@@234 $generated@@546))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545) ($generated@@234 $generated@@546))))
 :pattern ( ($generated@@225 $generated@@545 ($generated@@234 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@147) (= (type $generated@@548) $generated@@64)) ($generated@@225 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@147) (= (type $generated@@550) $generated@@64)) ($generated@@225 $generated@@549 ($generated@@152 $generated@@550))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549)) $generated@@549) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549) ($generated@@152 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@152 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@147) (= (type $generated@@552) $generated@@64)) ($generated@@225 $generated@@551 ($generated@@482 $generated@@552))) (and (= ($generated@@271 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551) ($generated@@482 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@482 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@251 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@133) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@559) (and ($generated@@134 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@133) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@563) (and ($generated@@134 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@147)) (= ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)) ($generated@@246 ($generated@@224 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@568)) ($generated@@246 ($generated@@271 $generated@@568)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@266 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@265 $generated@@570)) (= ($generated@@264 $generated@@569) 0)) (= $generated@@569 ($generated@@263 $generated@@570))))
 :pattern ( ($generated@@264 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@276 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@276 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@276 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@435)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@147)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@265 $generated@@147)) (= (type $generated@@586) $generated@@64)) (= ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@264 $generated@@585))) ($generated@@225 ($generated@@483 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@483 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@265 $generated@@147)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@264 $generated@@589))) (< ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593))) (and (and ($generated@@136 ($generated@@282 $generated@@591) ($generated@@234 $generated@@592)) ($generated@@136 ($generated@@328 $generated@@591) ($generated@@234 $generated@@593))) ($generated@@136 ($generated@@364 $generated@@591) ($generated@@234 ($generated@@138 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596))) (and (and ($generated@@136 ($generated@@300 $generated@@594) ($generated@@239 $generated@@595)) ($generated@@136 ($generated@@339 $generated@@594) ($generated@@239 $generated@@596))) ($generated@@136 ($generated@@375 $generated@@594) ($generated@@239 ($generated@@138 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@136 $generated@@597 $generated@@46))
 :pattern ( ($generated@@136 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@136 $generated@@598 $generated@@47))
 :pattern ( ($generated@@136 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@136 $generated@@599 $generated@@44))
 :pattern ( ($generated@@136 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@435) ($generated@@136 $generated@@600 $generated@@45))
 :pattern ( ($generated@@136 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@147) ($generated@@136 $generated@@601 $generated@@48))
 :pattern ( ($generated@@136 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@602) $generated@@219) (= (type $generated@@603) ($generated@@159 $generated@@77 $generated@@4))) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@610  (=> (and (= ($generated@@477 $generated@@218) $generated@@218) (= ($generated@@477 $generated@@602) $generated@@602)) (=> (and (and (and (= $generated@@603 ($generated@@158 $generated@@604 $generated@@605 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605)) (and ($generated@@215 $generated@@606) ($generated@@134 ($generated@@214 $generated@@606)))) (and (and ($generated@@132 ($generated@@214 $generated@@606)) ($generated@@215 $generated@@606)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@224 ($generated@@271 ($generated@@8 $generated@@607)) ($generated@@271 ($generated@@8 $generated@@608))) ($generated@@214 $generated@@606))))))
(let (($generated@@611  (=> (and ($generated@@250 $generated@@605) ($generated@@609 $generated@@605)) (=> (and (and (= 3 $generated@@213) (= $generated@@607 ($generated ($generated@@365 $generated@@2 ($generated@@145 ($generated@@214 $generated@@606)))))) (and (= $generated@@608 ($generated ($generated@@365 $generated@@2 ($generated@@146 ($generated@@214 $generated@@606))))) (= (ControlFlow 0 3) 2))) $generated@@610))))
$generated@@611)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 (Int) T@U)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@216 (Int) Bool)
(declare-fun $generated@@217 (T@U Int) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@220 Int) ) (! (= (type ($generated@@214 $generated@@220)) $generated@@133)
 :pattern ( ($generated@@214 $generated@@220))
)) (forall (($generated@@221 T@U) ($generated@@222 Int) ) (! (= (type ($generated@@217 $generated@@221 $generated@@222)) $generated@@133)
 :pattern ( ($generated@@217 $generated@@221 $generated@@222))
))) (= ($generated@@1 $generated@@219) 17)) (= (type $generated@@218) $generated@@219)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@223 Int) ) (!  (=> (or ($generated@@215 $generated@@223) (not (= 2 $generated@@213))) (and ($generated@@216 $generated@@223) (= ($generated@@214 $generated@@223) ($generated@@217 $generated@@218 $generated@@223))))
 :pattern ( ($generated@@214 $generated@@223))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@64) (= (type $generated@@229) $generated@@64)) (= (type $generated@@230) $generated@@147)) (= (type $generated@@231) $generated@@147)) (= ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@133) (= (type $generated@@233) $generated@@133)) (= ($generated@@144 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@144 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@147) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@147) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@147)) (= (type $generated@@255) $generated@@147)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@133) (= ($generated@@134 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@133) ($generated@@134 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@147) (= (type $generated@@262) $generated@@147)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@134 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 18)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@147)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@74 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@276 Int) ) (!  (=> (or ($generated@@215 ($generated@@244 $generated@@276)) (not (= 2 $generated@@213))) (and ($generated@@216 ($generated@@244 $generated@@276)) (= ($generated@@214 ($generated@@244 $generated@@276)) ($generated@@217 $generated@@218 ($generated@@244 $generated@@276)))))
 :weight 3
 :pattern ( ($generated@@214 ($generated@@244 $generated@@276)))
))))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@76 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@79 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@76 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@81 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 19)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@76 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@81 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 20)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@76 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@81 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@319 T@U) ($generated@@320 Int) ) (!  (=> (and (= (type $generated@@319) $generated@@219) (or ($generated@@216 $generated@@320) (not (= 1 $generated@@213)))) ($generated@@136 ($generated@@217 $generated@@319 $generated@@320) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@217 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@153 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@277 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@153 $generated@@321))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@324 Int) ) (!  (=> (or ($generated@@215 $generated@@324) (not (= 2 $generated@@213))) ($generated@@136 ($generated@@214 $generated@@324) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@214 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@287 (type $generated@@325))))
(let (($generated@@327 ($generated@@286 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@285 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@284 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@283 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@287 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@287 (type $generated@@332))))
(let (($generated@@334 ($generated@@286 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@285 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@284 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@305 (type $generated@@336))))
(let (($generated@@338 ($generated@@304 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@303 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@302 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@301 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@305 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@305 (type $generated@@343))))
(let (($generated@@345 ($generated@@304 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@303 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@302 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@136 $generated@@347 ($generated@@152 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@225 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@136 $generated@@347 ($generated@@152 $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@219)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@352 T@U) ($generated@@353 Int) ) (!  (=> (and (= (type $generated@@352) $generated@@219) (or ($generated@@216 $generated@@353) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@350 $generated@@352) $generated@@353) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :pattern ( ($generated@@217 ($generated@@350 $generated@@352) $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@147) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@251 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@147) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@251 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@278 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@278 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@287 (type $generated@@370))))
(let (($generated@@372 ($generated@@286 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@374) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@305 (type $generated@@378))))
(let (($generated@@380 ($generated@@304 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@382) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@286 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@285 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@283 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@304 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@303 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@301 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@396) $generated@@400))) (and ($generated@@251 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@251 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@404) $generated@@408))) (and ($generated@@251 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@251 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@409 T@U) ($generated@@410 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@219) (or ($generated@@216 ($generated@@244 $generated@@410)) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@350 $generated@@409) ($generated@@244 $generated@@410)) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :weight 3
 :pattern ( ($generated@@217 ($generated@@350 $generated@@409) ($generated@@244 $generated@@410)))
))))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@305 (type $generated@@413))))
(let (($generated@@415 ($generated@@304 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@303 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@302 $generated@@415 $generated@@414)) (= ($generated@@301 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@301 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@305 (type $generated@@416))))
(let (($generated@@418 ($generated@@304 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@303 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@302 $generated@@418 $generated@@417)) (= ($generated@@340 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@340 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@305 (type $generated@@419))))
(let (($generated@@421 ($generated@@304 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@303 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@302 $generated@@421 $generated@@420)) (= ($generated@@375 $generated@@419) ($generated@@411 $generated@@147))))))
 :pattern ( ($generated@@375 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@287 (type $generated@@422))))
(let (($generated@@424 ($generated@@286 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@285 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@284 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@147) (= (type $generated@@426) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@422) ($generated@@271 ($generated@@224 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@364 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@305 (type $generated@@427))))
(let (($generated@@429 ($generated@@304 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@303 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@302 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@427) ($generated@@271 ($generated@@224 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@375 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@147) ($generated@@225 $generated@@432 $generated@@46)) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@365 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@147) ($generated@@225 $generated@@433 $generated@@47)) (and (= ($generated@@271 ($generated@@365 $generated@@3 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@365 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@147) ($generated@@225 $generated@@434 $generated@@44)) (and (= ($generated@@271 ($generated@@365 $generated@@4 $generated@@434)) $generated@@434) ($generated@@136 ($generated@@365 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 21))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) ($generated@@225 $generated@@436 $generated@@45)) (and (= ($generated@@271 ($generated@@365 $generated@@435 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@365 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@225 ($generated@@271 $generated@@437) $generated@@438) ($generated@@136 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@277 $generated@@439))))
 :pattern ( ($generated@@277 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@266 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@265 $generated@@442)) (<= 0 ($generated@@264 $generated@@441))))
 :pattern ( ($generated@@264 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@393 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@393 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@147) (= (type $generated@@464) $generated@@147)) (= ($generated@@257 ($generated@@224 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@138 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@138 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@138 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@138 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@147) (= (type $generated@@474) $generated@@147)) (= ($generated@@145 ($generated@@224 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@224 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@147) (= (type $generated@@476) $generated@@147)) (= ($generated@@146 ($generated@@224 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@224 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@219)
 :pattern ( ($generated@@477 $generated@@479))
)) (= (type $generated@@478) $generated@@219)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ) (!  (=> (= (type $generated@@480) $generated@@219) (= ($generated@@217 $generated@@480 $generated@@481) ($generated@@217 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@217 ($generated@@477 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@266 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@265 $generated@@147)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@264 $generated@@488))) ($generated@@251 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@234 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@234 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@234 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@152 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@152 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@365 $generated@@511 ($generated@@271 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@271 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@283 $generated@@512) $generated@@515))) (and ($generated@@225 ($generated@@81 ($generated@@366 $generated@@512) $generated@@515) $generated@@514) ($generated@@225 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@283 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@301 $generated@@516) $generated@@519))) (and ($generated@@225 ($generated@@81 ($generated@@376 $generated@@516) $generated@@519) $generated@@518) ($generated@@225 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@301 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@147) (= (type $generated@@523) $generated@@147)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@224 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@147) (= (type $generated@@525) $generated@@147)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@224 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (= (type $generated@@526) $generated@@219) (= ($generated@@217 ($generated@@350 $generated@@526) $generated@@527) ($generated@@217 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@217 ($generated@@350 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@147) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530))) (and (= ($generated@@271 ($generated@@365 ($generated@@285 $generated@@147 $generated@@147) $generated@@528)) $generated@@528) ($generated@@136 ($generated@@365 ($generated@@285 $generated@@147 $generated@@147) $generated@@528) ($generated@@393 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@147) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533))) (and (= ($generated@@271 ($generated@@365 ($generated@@303 $generated@@147 $generated@@147) $generated@@531)) $generated@@531) ($generated@@136 ($generated@@365 ($generated@@303 $generated@@147 $generated@@147) $generated@@531) ($generated@@401 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@147)) ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535))) (and (= ($generated@@271 ($generated@@365 $generated@@133 $generated@@536)) $generated@@536) ($generated@@136 ($generated@@365 $generated@@133 $generated@@536) ($generated@@138 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@411 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@138 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@133) (= ($generated@@520 ($generated@@271 $generated@@543)) ($generated@@521 $generated@@543)))
 :pattern ( ($generated@@520 ($generated@@271 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@147) ($generated@@225 $generated@@544 ($generated@@75 0))) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@544)) $generated@@544) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@225 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@147) (= (type $generated@@546) $generated@@64)) ($generated@@225 $generated@@545 ($generated@@234 $generated@@546))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545) ($generated@@234 $generated@@546))))
 :pattern ( ($generated@@225 $generated@@545 ($generated@@234 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@147) (= (type $generated@@548) $generated@@64)) ($generated@@225 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@147) (= (type $generated@@550) $generated@@64)) ($generated@@225 $generated@@549 ($generated@@152 $generated@@550))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549)) $generated@@549) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549) ($generated@@152 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@152 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@147) (= (type $generated@@552) $generated@@64)) ($generated@@225 $generated@@551 ($generated@@482 $generated@@552))) (and (= ($generated@@271 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551) ($generated@@482 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@482 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@251 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@133) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@559) (and ($generated@@134 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@133) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@563) (and ($generated@@134 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@147)) (= ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)) ($generated@@246 ($generated@@224 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@568)) ($generated@@246 ($generated@@271 $generated@@568)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@266 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@265 $generated@@570)) (= ($generated@@264 $generated@@569) 0)) (= $generated@@569 ($generated@@263 $generated@@570))))
 :pattern ( ($generated@@264 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@277 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@277 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@277 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@435)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@147)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@265 $generated@@147)) (= (type $generated@@586) $generated@@64)) (= ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@264 $generated@@585))) ($generated@@225 ($generated@@483 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@483 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@265 $generated@@147)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@264 $generated@@589))) (< ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@285 $generated@@147 $generated@@147)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593))) (and (and ($generated@@136 ($generated@@283 $generated@@591) ($generated@@234 $generated@@592)) ($generated@@136 ($generated@@329 $generated@@591) ($generated@@234 $generated@@593))) ($generated@@136 ($generated@@364 $generated@@591) ($generated@@234 ($generated@@138 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@303 $generated@@147 $generated@@147)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596))) (and (and ($generated@@136 ($generated@@301 $generated@@594) ($generated@@239 $generated@@595)) ($generated@@136 ($generated@@340 $generated@@594) ($generated@@239 $generated@@596))) ($generated@@136 ($generated@@375 $generated@@594) ($generated@@239 ($generated@@138 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@136 $generated@@597 $generated@@46))
 :pattern ( ($generated@@136 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@136 $generated@@598 $generated@@47))
 :pattern ( ($generated@@136 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@136 $generated@@599 $generated@@44))
 :pattern ( ($generated@@136 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@435) ($generated@@136 $generated@@600 $generated@@45))
 :pattern ( ($generated@@136 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@147) ($generated@@136 $generated@@601 $generated@@48))
 :pattern ( ($generated@@136 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@602) $generated@@219) (= (type $generated@@603) ($generated@@159 $generated@@77 $generated@@4))) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@610  (=> (and (= ($generated@@477 $generated@@218) $generated@@218) (= ($generated@@477 $generated@@602) $generated@@602)) (=> (and (and (and (= $generated@@603 ($generated@@158 $generated@@604 $generated@@605 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605)) (and ($generated@@216 $generated@@606) ($generated@@134 ($generated@@217 $generated@@218 $generated@@606)))) (and (and ($generated@@132 ($generated@@217 $generated@@218 $generated@@606)) ($generated@@216 $generated@@606)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@224 ($generated@@271 ($generated@@8 $generated@@607)) ($generated@@271 ($generated@@8 $generated@@608))) ($generated@@217 $generated@@602 $generated@@606))))))
(let (($generated@@611  (=> (and ($generated@@250 $generated@@605) ($generated@@609 $generated@@605)) (=> (and (and (= 3 $generated@@213) (= $generated@@607 ($generated ($generated@@365 $generated@@2 ($generated@@145 ($generated@@214 $generated@@606)))))) (and (= $generated@@608 ($generated ($generated@@365 $generated@@2 ($generated@@146 ($generated@@214 $generated@@606))))) (= (ControlFlow 0 3) 2))) $generated@@610))))
$generated@@611)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 (Int) T@U)
(declare-fun $generated@@215 (Int) Bool)
(declare-fun $generated@@216 (Int) Bool)
(declare-fun $generated@@217 (T@U Int) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 () T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (and (and (and (forall (($generated@@220 Int) ) (! (= (type ($generated@@214 $generated@@220)) $generated@@133)
 :pattern ( ($generated@@214 $generated@@220))
)) (forall (($generated@@221 T@U) ($generated@@222 Int) ) (! (= (type ($generated@@217 $generated@@221 $generated@@222)) $generated@@133)
 :pattern ( ($generated@@217 $generated@@221 $generated@@222))
))) (= ($generated@@1 $generated@@219) 17)) (= (type $generated@@218) $generated@@219)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@223 Int) ) (!  (=> (or ($generated@@215 $generated@@223) (not (= 2 $generated@@213))) (and ($generated@@216 $generated@@223) (= ($generated@@214 $generated@@223) ($generated@@217 $generated@@218 $generated@@223))))
 :pattern ( ($generated@@214 $generated@@223))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@64) (= (type $generated@@229) $generated@@64)) (= (type $generated@@230) $generated@@147)) (= (type $generated@@231) $generated@@147)) (= ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@136 ($generated@@224 $generated@@230 $generated@@231) ($generated@@138 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@133) (= (type $generated@@233) $generated@@133)) (= ($generated@@144 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@144 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@147) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@136 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@147) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@136 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@147)) (= (type $generated@@255) $generated@@147)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@133) (= ($generated@@134 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@133) ($generated@@134 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@147) (= (type $generated@@262) $generated@@147)) (= $generated@@260 ($generated@@224 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@134 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 18)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@147)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@74 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@251 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@76 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@79 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@76 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@81 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 19)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@76 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@81 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@81 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 20)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@318 T@U) ($generated@@319 Int) ) (!  (=> (and (= (type $generated@@318) $generated@@219) (or ($generated@@216 $generated@@319) (not (= 1 $generated@@213)))) ($generated@@136 ($generated@@217 $generated@@318 $generated@@319) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@217 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@79 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@76 $generated@@321 $generated@@2)) (= ($generated@@153 $generated@@320) (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@321) (and (<= 0 ($generated ($generated@@81 $generated@@320 $generated@@322))) (<= ($generated ($generated@@81 $generated@@320 $generated@@322)) ($generated@@276 $generated@@320))))
 :pattern ( ($generated@@81 $generated@@320 $generated@@322))
)))))
 :pattern ( ($generated@@153 $generated@@320))
)))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@323 Int) ) (!  (=> (or ($generated@@215 $generated@@323) (not (= 2 $generated@@213))) ($generated@@136 ($generated@@214 $generated@@323) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@214 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@286 (type $generated@@324))))
(let (($generated@@326 ($generated@@285 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@284 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@283 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@282 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@286 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@286 (type $generated@@331))))
(let (($generated@@333 ($generated@@285 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@284 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@283 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@304 (type $generated@@335))))
(let (($generated@@337 ($generated@@303 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@302 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@301 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@300 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@304 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@304 (type $generated@@342))))
(let (($generated@@344 ($generated@@303 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@302 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@301 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@136 $generated@@346 ($generated@@152 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@225 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@136 $generated@@346 ($generated@@152 $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@219)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (!  (=> (and (= (type $generated@@351) $generated@@219) (or ($generated@@216 $generated@@352) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@349 $generated@@351) $generated@@352) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :pattern ( ($generated@@217 ($generated@@349 $generated@@351) $generated@@352))
))))
(assert  (=> (<= 2 $generated@@213) (forall (($generated@@353 Int) ) (!  (=> (or ($generated@@215 ($generated@@244 $generated@@353)) (not (= 2 $generated@@213))) (and ($generated@@216 ($generated@@244 $generated@@353)) (= ($generated@@214 ($generated@@244 $generated@@353)) ($generated@@246 ($generated@@217 $generated@@218 ($generated@@244 $generated@@353))))))
 :weight 3
 :pattern ( ($generated@@214 ($generated@@244 $generated@@353)))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@147) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@251 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@234 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@147) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@251 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@239 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@277 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@277 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@286 (type $generated@@370))))
(let (($generated@@372 ($generated@@285 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@374) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@282 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@145 ($generated@@365 $generated@@133 $generated@@374))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@304 (type $generated@@378))))
(let (($generated@@380 ($generated@@303 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@382) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@145 ($generated@@365 $generated@@133 $generated@@382))) ($generated@@146 ($generated@@365 $generated@@133 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@285 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@284 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@282 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@303 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@302 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@396) $generated@@400))) (and ($generated@@251 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@251 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@404) $generated@@408))) (and ($generated@@251 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@251 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 1 $generated@@213) (forall (($generated@@409 T@U) ($generated@@410 Int) ) (!  (=> (and (= (type $generated@@409) $generated@@219) (or ($generated@@216 ($generated@@244 $generated@@410)) (not (= 1 $generated@@213)))) (= ($generated@@217 ($generated@@349 $generated@@409) ($generated@@244 $generated@@410)) ($generated@@246 ($generated@@224 ($generated@@271 ($generated@@8 ($generated@@244 5))) ($generated@@271 ($generated@@8 ($generated@@244 7)))))))
 :weight 3
 :pattern ( ($generated@@217 ($generated@@349 $generated@@409) ($generated@@244 $generated@@410)))
))))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@304 (type $generated@@413))))
(let (($generated@@415 ($generated@@303 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@302 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@301 $generated@@415 $generated@@414)) (= ($generated@@300 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@300 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@304 (type $generated@@416))))
(let (($generated@@418 ($generated@@303 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@302 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@301 $generated@@418 $generated@@417)) (= ($generated@@339 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@339 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@304 (type $generated@@419))))
(let (($generated@@421 ($generated@@303 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@302 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@301 $generated@@421 $generated@@420)) (= ($generated@@375 $generated@@419) ($generated@@411 $generated@@147))))))
 :pattern ( ($generated@@375 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@286 (type $generated@@422))))
(let (($generated@@424 ($generated@@285 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@284 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@283 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@147) (= (type $generated@@426) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@422) ($generated@@271 ($generated@@224 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@364 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@304 (type $generated@@427))))
(let (($generated@@429 ($generated@@303 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@302 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@301 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@147) (= (type $generated@@431) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@427) ($generated@@271 ($generated@@224 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@375 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@147) ($generated@@225 $generated@@432 $generated@@46)) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@365 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@147) ($generated@@225 $generated@@433 $generated@@47)) (and (= ($generated@@271 ($generated@@365 $generated@@3 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@365 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@147) ($generated@@225 $generated@@434 $generated@@44)) (and (= ($generated@@271 ($generated@@365 $generated@@4 $generated@@434)) $generated@@434) ($generated@@136 ($generated@@365 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 21))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) ($generated@@225 $generated@@436 $generated@@45)) (and (= ($generated@@271 ($generated@@365 $generated@@435 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@365 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@225 ($generated@@271 $generated@@437) $generated@@438) ($generated@@136 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@225 ($generated@@271 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@276 $generated@@439))))
 :pattern ( ($generated@@276 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@266 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@265 $generated@@442)) (<= 0 ($generated@@264 $generated@@441))))
 :pattern ( ($generated@@264 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@393 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@393 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@147) (= (type $generated@@464) $generated@@147)) (= ($generated@@257 ($generated@@224 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@138 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@138 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@138 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@138 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@147) (= (type $generated@@474) $generated@@147)) (= ($generated@@145 ($generated@@224 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@224 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@147) (= (type $generated@@476) $generated@@147)) (= ($generated@@146 ($generated@@224 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@224 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@219)
 :pattern ( ($generated@@477 $generated@@479))
)) (= (type $generated@@478) $generated@@219)))
(assert (forall (($generated@@480 T@U) ($generated@@481 Int) ) (!  (=> (= (type $generated@@480) $generated@@219) (= ($generated@@217 $generated@@480 $generated@@481) ($generated@@217 $generated@@478 $generated@@481)))
 :pattern ( ($generated@@217 ($generated@@477 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@266 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@265 $generated@@147)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@264 $generated@@488))) ($generated@@251 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@74 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@75 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@75 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@234 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@234 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@234 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@152 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@152 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
(= ($generated@@365 $generated@@511 ($generated@@271 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@271 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@64)) (= ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@512) $generated@@515))) (and ($generated@@225 ($generated@@81 ($generated@@366 $generated@@512) $generated@@515) $generated@@514) ($generated@@225 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@512) $generated@@515))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@136 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) (= ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@516) $generated@@519))) (and ($generated@@225 ($generated@@81 ($generated@@376 $generated@@516) $generated@@519) $generated@@518) ($generated@@225 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@516) $generated@@519))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@136 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@147) (= (type $generated@@523) $generated@@147)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@224 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@147) (= (type $generated@@525) $generated@@147)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@224 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 Int) ) (!  (=> (= (type $generated@@526) $generated@@219) (= ($generated@@217 ($generated@@349 $generated@@526) $generated@@527) ($generated@@217 $generated@@526 $generated@@527)))
 :pattern ( ($generated@@217 ($generated@@349 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@147) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530))) (and (= ($generated@@271 ($generated@@365 ($generated@@284 $generated@@147 $generated@@147) $generated@@528)) $generated@@528) ($generated@@136 ($generated@@365 ($generated@@284 $generated@@147 $generated@@147) $generated@@528) ($generated@@393 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@225 $generated@@528 ($generated@@393 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@147) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533))) (and (= ($generated@@271 ($generated@@365 ($generated@@302 $generated@@147 $generated@@147) $generated@@531)) $generated@@531) ($generated@@136 ($generated@@365 ($generated@@302 $generated@@147 $generated@@147) $generated@@531) ($generated@@401 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@401 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@147)) ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535))) (and (= ($generated@@271 ($generated@@365 $generated@@133 $generated@@536)) $generated@@536) ($generated@@136 ($generated@@365 $generated@@133 $generated@@536) ($generated@@138 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@138 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@411 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@138 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@133) (= ($generated@@520 ($generated@@271 $generated@@543)) ($generated@@521 $generated@@543)))
 :pattern ( ($generated@@520 ($generated@@271 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@147) ($generated@@225 $generated@@544 ($generated@@75 0))) (and (= ($generated@@271 ($generated@@365 $generated@@2 $generated@@544)) $generated@@544) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@225 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@147) (= (type $generated@@546) $generated@@64)) ($generated@@225 $generated@@545 ($generated@@234 $generated@@546))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@545) ($generated@@234 $generated@@546))))
 :pattern ( ($generated@@225 $generated@@545 ($generated@@234 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@147) (= (type $generated@@548) $generated@@64)) ($generated@@225 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@147) (= (type $generated@@550) $generated@@64)) ($generated@@225 $generated@@549 ($generated@@152 $generated@@550))) (and (= ($generated@@271 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549)) $generated@@549) ($generated@@136 ($generated@@365 ($generated@@76 $generated@@147 $generated@@2) $generated@@549) ($generated@@152 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@152 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@147) (= (type $generated@@552) $generated@@64)) ($generated@@225 $generated@@551 ($generated@@482 $generated@@552))) (and (= ($generated@@271 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@365 ($generated@@265 $generated@@147) $generated@@551) ($generated@@482 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@482 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@251 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@152 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@133) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@559) (and ($generated@@134 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@138 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@251 ($generated@@145 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@133) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@563) (and ($generated@@134 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@138 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@251 ($generated@@146 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@147)) (= ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)) ($generated@@246 ($generated@@224 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@565) ($generated@@246 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))) ($generated@@246 ($generated@@271 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@244 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@271 ($generated@@246 $generated@@568)) ($generated@@246 ($generated@@271 $generated@@568)))
 :pattern ( ($generated@@271 ($generated@@246 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@266 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@265 $generated@@570)) (= ($generated@@264 $generated@@569) 0)) (= $generated@@569 ($generated@@263 $generated@@570))))
 :pattern ( ($generated@@264 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@276 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@276 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@276 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@435)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@147)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@265 $generated@@147)) (= (type $generated@@586) $generated@@64)) (= ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@264 $generated@@585))) ($generated@@225 ($generated@@483 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@483 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@136 $generated@@585 ($generated@@482 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@265 $generated@@147)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@264 $generated@@589))) (< ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@521 ($generated@@365 $generated@@133 ($generated@@483 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593))) (and (and ($generated@@136 ($generated@@282 $generated@@591) ($generated@@234 $generated@@592)) ($generated@@136 ($generated@@328 $generated@@591) ($generated@@234 $generated@@593))) ($generated@@136 ($generated@@364 $generated@@591) ($generated@@234 ($generated@@138 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@136 $generated@@591 ($generated@@393 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596))) (and (and ($generated@@136 ($generated@@300 $generated@@594) ($generated@@239 $generated@@595)) ($generated@@136 ($generated@@339 $generated@@594) ($generated@@239 $generated@@596))) ($generated@@136 ($generated@@375 $generated@@594) ($generated@@239 ($generated@@138 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@136 $generated@@594 ($generated@@401 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@136 $generated@@597 $generated@@46))
 :pattern ( ($generated@@136 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@136 $generated@@598 $generated@@47))
 :pattern ( ($generated@@136 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@136 $generated@@599 $generated@@44))
 :pattern ( ($generated@@136 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@435) ($generated@@136 $generated@@600 $generated@@45))
 :pattern ( ($generated@@136 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@147) ($generated@@136 $generated@@601 $generated@@48))
 :pattern ( ($generated@@136 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@602) $generated@@219) (= (type $generated@@603) ($generated@@159 $generated@@77 $generated@@4))) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@610  (=> (and (= ($generated@@477 $generated@@218) $generated@@218) (= ($generated@@477 $generated@@602) $generated@@602)) (=> (and (and (and (= $generated@@603 ($generated@@158 $generated@@604 $generated@@605 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605)) (and ($generated@@216 $generated@@606) ($generated@@134 ($generated@@217 $generated@@218 $generated@@606)))) (and (and ($generated@@132 ($generated@@217 $generated@@218 $generated@@606)) ($generated@@216 $generated@@606)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@224 ($generated@@271 ($generated@@8 $generated@@607)) ($generated@@271 ($generated@@8 $generated@@608))) ($generated@@217 $generated@@602 $generated@@606))))))
(let (($generated@@611  (=> (and ($generated@@250 $generated@@605) ($generated@@609 $generated@@605)) (=> (and (and (= 3 $generated@@213) (= $generated@@607 ($generated ($generated@@365 $generated@@2 ($generated@@145 ($generated@@214 $generated@@606)))))) (and (= $generated@@608 ($generated ($generated@@365 $generated@@2 ($generated@@146 ($generated@@214 $generated@@606))))) (= (ControlFlow 0 3) 2))) $generated@@610))))
$generated@@611)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 (Int) T@U)
(declare-fun $generated@@223 (Int) Bool)
(declare-fun $generated@@224 (Int) Bool)
(declare-fun $generated@@225 (Int) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (= ($generated@@1 $generated@@133) 14))
(assert (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@133) ($generated@@132 $generated@@135)) ($generated@@134 $generated@@135))
 :pattern ( ($generated@@132 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@138 $generated@@139 $generated@@140)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@64)) (= (type $generated@@143) $generated@@133)) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142))) ($generated@@134 $generated@@143))
 :pattern ( ($generated@@134 $generated@@143) ($generated@@136 $generated@@143 ($generated@@138 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@133) (= (type $generated@@151) $generated@@133)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@64)) ($generated@@136 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@77 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@67 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@77) (= (type $generated@@207) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@208) ($generated@@66 $generated@@4))) (= (type $generated@@210) $generated@@77)) (= (type $generated@@211) ($generated@@66 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@215 $generated@@216)) $generated@@133)
 :pattern ( ($generated@@213 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@64) (= (type $generated@@218) $generated@@64)) (= (type $generated@@219) $generated@@147)) (= (type $generated@@220) $generated@@147)) (= ($generated@@136 ($generated@@213 $generated@@219 $generated@@220) ($generated@@138 $generated@@217 $generated@@218))  (and ($generated@@214 $generated@@219 $generated@@217) ($generated@@214 $generated@@220 $generated@@218))))
 :pattern ( ($generated@@136 ($generated@@213 $generated@@219 $generated@@220) ($generated@@138 $generated@@217 $generated@@218)))
)))
(assert  (and (forall (($generated@@226 Int) ) (! (= (type ($generated@@222 $generated@@226)) $generated@@133)
 :pattern ( ($generated@@222 $generated@@226))
)) (forall (($generated@@227 Int) ) (! (= (type ($generated@@225 $generated@@227)) $generated@@133)
 :pattern ( ($generated@@225 $generated@@227))
))))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@228 Int) ) (!  (=> (or ($generated@@223 $generated@@228) (not (= 2 $generated@@221))) (and ($generated@@224 $generated@@228) (= ($generated@@222 $generated@@228) ($generated@@225 $generated@@228))))
 :pattern ( ($generated@@222 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@133) (= (type $generated@@230) $generated@@133)) (= ($generated@@144 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@144 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@64)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@234) $generated@@64)) (= ($generated@@136 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@147) ($generated@@0 ($generated@@81 $generated@@233 $generated@@235))) ($generated@@214 $generated@@235 $generated@@234))
 :pattern ( ($generated@@81 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@136 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@147) ($generated@@0 ($generated@@81 $generated@@238 $generated@@240))) ($generated@@214 $generated@@240 $generated@@239))
 :pattern ( ($generated@@81 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@241 $generated@@242) $generated@@242)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@147)) (= (type $generated@@252) $generated@@147)) (= (type $generated@@253) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@247 $generated@@253)) (= ($generated@@74 ($generated@@213 $generated@@251 $generated@@252) ($generated@@138 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@74 ($generated@@213 $generated@@251 $generated@@252) ($generated@@138 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@133) (= ($generated@@134 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@133) ($generated@@134 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@147) (= (type $generated@@259) $generated@@147)) (= $generated@@257 ($generated@@213 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@134 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@147)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@74 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@76 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@79 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@76 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@81 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@76 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@79 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@76 $generated@@316 $generated@@2)) (= ($generated@@153 $generated@@315) (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@316) (and (<= 0 ($generated ($generated@@81 $generated@@315 $generated@@317))) (<= ($generated ($generated@@81 $generated@@315 $generated@@317)) ($generated@@273 $generated@@315))))
 :pattern ( ($generated@@81 $generated@@315 $generated@@317))
)))))
 :pattern ( ($generated@@153 $generated@@315))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@318 Int) ) (!  (=> (or ($generated@@224 $generated@@318) (not (= 1 $generated@@221))) ($generated@@136 ($generated@@225 $generated@@318) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@225 $generated@@318))
))))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@319 Int) ) (!  (=> (or ($generated@@223 $generated@@319) (not (= 2 $generated@@221))) ($generated@@136 ($generated@@222 $generated@@319) ($generated@@138 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@222 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@283 (type $generated@@320))))
(let (($generated@@322 ($generated@@282 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@281 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@280 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@279 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@283 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@283 (type $generated@@327))))
(let (($generated@@329 ($generated@@282 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@281 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@280 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@301 (type $generated@@331))))
(let (($generated@@333 ($generated@@300 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@299 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@298 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@297 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@301 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@301 (type $generated@@338))))
(let (($generated@@340 ($generated@@300 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@299 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@298 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@342 Int) ) (!  (=> (or ($generated@@224 $generated@@342) (not (= 1 $generated@@221))) (= ($generated@@225 $generated@@342) ($generated@@243 ($generated@@213 ($generated@@268 ($generated@@8 ($generated@@241 5))) ($generated@@268 ($generated@@8 ($generated@@241 7)))))))
 :pattern ( ($generated@@225 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@344) $generated@@64)) (= ($generated@@136 $generated@@343 ($generated@@152 $generated@@344)) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@343 $generated@@345)))) ($generated@@214 $generated@@345 $generated@@344))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
))))
 :pattern ( ($generated@@136 $generated@@343 ($generated@@152 $generated@@344)))
)))
(assert  (=> (<= 2 $generated@@221) (forall (($generated@@346 Int) ) (!  (=> (or ($generated@@223 ($generated@@241 $generated@@346)) (not (= 2 $generated@@221))) (and ($generated@@224 ($generated@@241 $generated@@346)) (= ($generated@@222 ($generated@@241 $generated@@346)) ($generated@@243 ($generated@@225 ($generated@@241 $generated@@346))))))
 :weight 3
 :pattern ( ($generated@@222 ($generated@@241 $generated@@346)))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@348) $generated@@64)) (= (type $generated@@349) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@147) ($generated@@0 ($generated@@81 $generated@@347 $generated@@350))) ($generated@@248 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@81 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@74 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@147 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@147) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@248 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@81 ($generated@@274 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@81 ($generated@@274 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@283 (type $generated@@363))))
(let (($generated@@365 ($generated@@282 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@76 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@367) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@366) ($generated@@145 ($generated@@358 $generated@@133 $generated@@367)))) (= ($generated@@81 ($generated@@359 $generated@@366) ($generated@@145 ($generated@@358 $generated@@133 $generated@@367))) ($generated@@146 ($generated@@358 $generated@@133 $generated@@367))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@76 $generated@@147 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@301 (type $generated@@371))))
(let (($generated@@373 ($generated@@300 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@375) $generated@@147)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@374) ($generated@@145 ($generated@@358 $generated@@133 $generated@@375)))) (= ($generated@@81 ($generated@@369 $generated@@374) ($generated@@145 ($generated@@358 $generated@@133 $generated@@375))) ($generated@@146 ($generated@@358 $generated@@133 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@282 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@281 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@300 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@299 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@381) $generated@@382))
)))
(assert  (=> (<= 1 $generated@@221) (forall (($generated@@386 Int) ) (!  (=> (or ($generated@@224 ($generated@@241 $generated@@386)) (not (= 1 $generated@@221))) (= ($generated@@225 ($generated@@241 $generated@@386)) ($generated@@243 ($generated@@213 ($generated@@268 ($generated@@8 ($generated@@241 5))) ($generated@@268 ($generated@@8 ($generated@@241 7)))))))
 :weight 3
 :pattern ( ($generated@@225 ($generated@@241 $generated@@386)))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@64)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@390) $generated@@394))) (and ($generated@@248 ($generated@@81 ($generated@@359 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@248 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@398) $generated@@402))) (and ($generated@@248 ($generated@@81 ($generated@@369 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@248 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@301 (type $generated@@405))))
(let (($generated@@407 ($generated@@300 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@299 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@298 $generated@@407 $generated@@406)) (= ($generated@@297 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@297 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@301 (type $generated@@408))))
(let (($generated@@410 ($generated@@300 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@299 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@298 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@301 (type $generated@@411))))
(let (($generated@@413 ($generated@@300 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@299 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@298 $generated@@413 $generated@@412)) (= ($generated@@368 $generated@@411) ($generated@@403 $generated@@147))))))
 :pattern ( ($generated@@368 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@283 (type $generated@@414))))
(let (($generated@@416 ($generated@@282 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@281 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@280 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@147) (= (type $generated@@418) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@414) ($generated@@268 ($generated@@213 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@357 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@301 (type $generated@@419))))
(let (($generated@@421 ($generated@@300 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@299 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@298 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@147) (= (type $generated@@423) $generated@@147)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@419) ($generated@@268 ($generated@@213 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@368 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@147) ($generated@@214 $generated@@424 $generated@@46)) (and (= ($generated@@268 ($generated@@358 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@358 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@147) ($generated@@214 $generated@@425 $generated@@47)) (and (= ($generated@@268 ($generated@@358 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@358 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@147) ($generated@@214 $generated@@426 $generated@@44)) (and (= ($generated@@268 ($generated@@358 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@358 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@147) ($generated@@214 $generated@@428 $generated@@45)) (and (= ($generated@@268 ($generated@@358 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@358 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@214 ($generated@@268 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@214 ($generated@@268 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@273 $generated@@431))))
 :pattern ( ($generated@@273 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@263 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@262 $generated@@434)) (<= 0 ($generated@@261 $generated@@433))))
 :pattern ( ($generated@@261 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@387 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@387 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@387 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@387 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@387 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@395 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@395 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@395 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@395 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@147) (= (type $generated@@456) $generated@@147)) (= ($generated@@254 ($generated@@213 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@213 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@138 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@138 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@138 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@138 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@147) (= (type $generated@@466) $generated@@147)) (= ($generated@@145 ($generated@@213 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@213 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@147) (= (type $generated@@468) $generated@@147)) (= ($generated@@146 ($generated@@213 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@213 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@263 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@262 $generated@@147)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@261 $generated@@475))) ($generated@@248 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@231 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@231 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@231 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@236 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@236 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@152 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@152 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@358 $generated@@498 ($generated@@268 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@268 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@499) $generated@@502))) (and ($generated@@214 ($generated@@81 ($generated@@359 $generated@@499) $generated@@502) $generated@@501) ($generated@@214 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@387 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@147) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@503) $generated@@506))) (and ($generated@@214 ($generated@@81 ($generated@@369 $generated@@503) $generated@@506) $generated@@505) ($generated@@214 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@395 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@147) (= (type $generated@@510) $generated@@147)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@213 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@213 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@147) (= (type $generated@@512) $generated@@147)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@213 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@213 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@147) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@214 $generated@@513 ($generated@@387 $generated@@514 $generated@@515))) (and (= ($generated@@268 ($generated@@358 ($generated@@281 $generated@@147 $generated@@147) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@358 ($generated@@281 $generated@@147 $generated@@147) $generated@@513) ($generated@@387 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@214 $generated@@513 ($generated@@387 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@147) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@214 $generated@@516 ($generated@@395 $generated@@517 $generated@@518))) (and (= ($generated@@268 ($generated@@358 ($generated@@299 $generated@@147 $generated@@147) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@358 ($generated@@299 $generated@@147 $generated@@147) $generated@@516) ($generated@@395 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@214 $generated@@516 ($generated@@395 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@147)) ($generated@@214 $generated@@521 ($generated@@138 $generated@@519 $generated@@520))) (and (= ($generated@@268 ($generated@@358 $generated@@133 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@358 $generated@@133 $generated@@521) ($generated@@138 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@214 $generated@@521 ($generated@@138 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@138 $generated@@526 $generated@@527)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@133) (= ($generated@@507 ($generated@@268 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@268 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@147) ($generated@@214 $generated@@529 ($generated@@75 0))) (and (= ($generated@@268 ($generated@@358 $generated@@2 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@214 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@147) (= (type $generated@@531) $generated@@64)) ($generated@@214 $generated@@530 ($generated@@231 $generated@@531))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@530)) $generated@@530) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@530) ($generated@@231 $generated@@531))))
 :pattern ( ($generated@@214 $generated@@530 ($generated@@231 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@147) (= (type $generated@@533) $generated@@64)) ($generated@@214 $generated@@532 ($generated@@236 $generated@@533))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@532)) $generated@@532) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@4) $generated@@532) ($generated@@236 $generated@@533))))
 :pattern ( ($generated@@214 $generated@@532 ($generated@@236 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@147) (= (type $generated@@535) $generated@@64)) ($generated@@214 $generated@@534 ($generated@@152 $generated@@535))) (and (= ($generated@@268 ($generated@@358 ($generated@@76 $generated@@147 $generated@@2) $generated@@534)) $generated@@534) ($generated@@136 ($generated@@358 ($generated@@76 $generated@@147 $generated@@2) $generated@@534) ($generated@@152 $generated@@535))))
 :pattern ( ($generated@@214 $generated@@534 ($generated@@152 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@147) (= (type $generated@@537) $generated@@64)) ($generated@@214 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@268 ($generated@@358 ($generated@@262 $generated@@147) $generated@@536)) $generated@@536) ($generated@@136 ($generated@@358 ($generated@@262 $generated@@147) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@214 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@152 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@147) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@248 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@152 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@133) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@544) (and ($generated@@134 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@138 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@138 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@248 ($generated@@145 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@248 ($generated@@145 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@133) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@548) (and ($generated@@134 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@138 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@138 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@248 ($generated@@146 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@248 ($generated@@146 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@147) (= (type $generated@@551) $generated@@147)) (= ($generated@@213 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)) ($generated@@243 ($generated@@213 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@213 ($generated@@243 $generated@@550) ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@241 $generated@@552))) ($generated@@243 ($generated@@268 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@241 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@553)) ($generated@@243 ($generated@@268 $generated@@553)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@263 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@262 $generated@@555)) (= ($generated@@261 $generated@@554) 0)) (= $generated@@554 ($generated@@260 $generated@@555))))
 :pattern ( ($generated@@261 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@273 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@273 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@273 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@427)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@147)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@262 $generated@@147)) (= (type $generated@@571) $generated@@64)) (= ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@261 $generated@@570))) ($generated@@214 ($generated@@470 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@470 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@262 $generated@@147)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@261 $generated@@574))) (< ($generated@@508 ($generated@@358 $generated@@133 ($generated@@470 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@508 ($generated@@358 $generated@@133 ($generated@@470 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@281 $generated@@147 $generated@@147)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@136 $generated@@576 ($generated@@387 $generated@@577 $generated@@578))) (and (and ($generated@@136 ($generated@@279 $generated@@576) ($generated@@231 $generated@@577)) ($generated@@136 ($generated@@324 $generated@@576) ($generated@@231 $generated@@578))) ($generated@@136 ($generated@@357 $generated@@576) ($generated@@231 ($generated@@138 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@136 $generated@@576 ($generated@@387 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@299 $generated@@147 $generated@@147)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@395 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@297 $generated@@579) ($generated@@236 $generated@@580)) ($generated@@136 ($generated@@335 $generated@@579) ($generated@@236 $generated@@581))) ($generated@@136 ($generated@@368 $generated@@579) ($generated@@236 ($generated@@138 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@395 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@136 $generated@@582 $generated@@46))
 :pattern ( ($generated@@136 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@136 $generated@@583 $generated@@47))
 :pattern ( ($generated@@136 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@136 $generated@@584 $generated@@44))
 :pattern ( ($generated@@136 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@427) ($generated@@136 $generated@@585 $generated@@45))
 :pattern ( ($generated@@136 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@147) ($generated@@136 $generated@@586 $generated@@48))
 :pattern ( ($generated@@136 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 (T@U) Bool)
(assert  (and (and (= (type $generated@@587) ($generated@@159 $generated@@77 $generated@@4)) (= (type $generated@@588) $generated@@77)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@594  (=> (and (and (and (= $generated@@587 ($generated@@158 $generated@@588 $generated@@589 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@590) $generated@@46 $generated@@589)) (and ($generated@@224 $generated@@590) ($generated@@134 ($generated@@225 $generated@@590)))) (and (and ($generated@@132 ($generated@@225 $generated@@590)) ($generated@@224 $generated@@590)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@144 ($generated@@213 ($generated@@268 ($generated@@8 $generated@@591)) ($generated@@268 ($generated@@8 $generated@@592))) ($generated@@225 $generated@@590)))))
(let (($generated@@595  (=> (and ($generated@@247 $generated@@589) ($generated@@593 $generated@@589)) (=> (and (and (= 3 $generated@@221) (= $generated@@591 ($generated ($generated@@358 $generated@@2 ($generated@@145 ($generated@@222 $generated@@590)))))) (and (= $generated@@592 ($generated ($generated@@358 $generated@@2 ($generated@@146 ($generated@@222 $generated@@590))))) (= (ControlFlow 0 3) 2))) $generated@@594))))
$generated@@595)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
