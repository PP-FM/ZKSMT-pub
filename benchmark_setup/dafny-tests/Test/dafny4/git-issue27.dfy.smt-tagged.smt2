(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 4294967296))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (Int) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Bool)
(declare-fun $generated@@287 (T@U T@U T@U) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 () Int)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Bool)
(declare-fun $generated@@325 (T@U T@U) T@U)
(declare-fun $generated@@326 (T@U Int Int) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@T T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@620 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert  (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@142 $generated@@143)) 14)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@140 ($generated@@139 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@139 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@141 ($generated@@139 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@139 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@140 (type $generated@@148))))
(= (type ($generated@@137 $generated@@148)) ($generated@@78 $generated@@149 $generated@@4)))
 :pattern ( ($generated@@137 $generated@@148))
))) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@82 (type $generated@@151))))
(let (($generated@@154 ($generated@@81 (type $generated@@150))))
(= (type ($generated@@138 $generated@@150 $generated@@151 $generated@@152)) ($generated@@139 $generated@@154 $generated@@153))))
 :pattern ( ($generated@@138 $generated@@150 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@82 (type $generated@@156))))
(let (($generated@@159 ($generated@@81 (type $generated@@155))))
 (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@159 $generated@@4)) (= (type $generated@@156) ($generated@@78 $generated@@159 $generated@@158))) (= (type $generated@@157) $generated@@66)) (= ($generated@@137 ($generated@@138 $generated@@155 $generated@@156 $generated@@157)) $generated@@155))))
 :pattern ( ($generated@@137 ($generated@@138 $generated@@155 $generated@@156 $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@141 (type $generated@@161))))
(let (($generated@@163 ($generated@@140 (type $generated@@161))))
(= (type ($generated@@160 $generated@@161)) ($generated@@78 $generated@@163 $generated@@162))))
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (let (($generated@@167 ($generated@@82 (type $generated@@165))))
(let (($generated@@168 ($generated@@81 (type $generated@@164))))
 (=> (and (and (= (type $generated@@164) ($generated@@78 $generated@@168 $generated@@4)) (= (type $generated@@165) ($generated@@78 $generated@@168 $generated@@167))) (= (type $generated@@166) $generated@@66)) (= ($generated@@160 ($generated@@138 $generated@@164 $generated@@165 $generated@@166)) $generated@@165))))
 :pattern ( ($generated@@160 ($generated@@138 $generated@@164 $generated@@165 $generated@@166)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@169 $generated@@170 ($generated@@77 0)))
 :pattern ( ($generated@@169 $generated@@170 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@66) (= (type $generated@@177) $generated@@66)) (= (type $generated@@178) $generated@@173)) ($generated@@169 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@169 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 16) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@173) (= (type $generated@@186) $generated@@173)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@66)
 :pattern ( ($generated@@187 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) ($generated@@78 $generated@@182 $generated@@2)) (= (type $generated@@191) $generated@@66)) ($generated@@169 $generated@@190 ($generated@@187 $generated@@191))) ($generated@@188 $generated@@190))
 :pattern ( ($generated@@169 $generated@@190 ($generated@@187 $generated@@191)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@1 ($generated@@194 $generated@@198 $generated@@199)) 17)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@194 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@194 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@196 ($generated@@194 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@194 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@196 (type $generated@@204))))
(= (type ($generated@@192 $generated@@204 $generated@@205 $generated@@206)) $generated@@207))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(let (($generated@@213 (type $generated@@209)))
(= (type ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@194 $generated@@213 $generated@@212))))
 :pattern ( ($generated@@197 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@196 (type $generated@@214))))
 (=> (= (type $generated@@217) $generated@@218) (= ($generated@@192 ($generated@@197 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@215 $generated@@216) $generated@@217)))
 :weight 0
))) (and (and (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@192 ($generated@@197 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@192 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@192 ($generated@@197 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@192 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or true (= ($generated@@192 ($generated@@197 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@192 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@194 $generated@@79 $generated@@4))
 :pattern ( ($generated@@193 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@69 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@79) (= (type $generated@@242) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@243) ($generated@@68 $generated@@4))) (= (type $generated@@245) $generated@@79)) (= (type $generated@@246) ($generated@@68 $generated@@247))) (= ($generated@@0 ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@192 ($generated@@193 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ) (! (= (type ($generated@@248 $generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@194 $generated@@79 $generated@@4))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Bool) ($generated@@257 T@U) ($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@69 (type $generated@@258))))
 (=> (and (and (and (and (= (type $generated@@253) $generated@@79) (= (type $generated@@254) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@255) ($generated@@68 $generated@@4))) (= (type $generated@@257) $generated@@79)) (= (type $generated@@258) ($generated@@68 $generated@@259))) (= ($generated@@0 ($generated@@192 ($generated@@248 $generated@@253 $generated@@254 $generated@@255 $generated@@256) $generated@@257 $generated@@258))  (=> (and (not (= $generated@@257 $generated@@253)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@254 $generated@@257) $generated@@255))) $generated@@256))))
 :pattern ( ($generated@@192 ($generated@@248 $generated@@253 $generated@@254 $generated@@255 $generated@@256) $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@173)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (= (type $generated@@264) $generated@@66) (= (type $generated@@265) $generated@@66)) (= (type $generated@@266) $generated@@182)) (= (type $generated@@267) $generated@@182)) (= ($generated@@169 ($generated@@260 $generated@@266 $generated@@267) ($generated@@172 $generated@@264 $generated@@265))  (and ($generated@@261 $generated@@266 $generated@@264) ($generated@@261 $generated@@267 $generated@@265))))
 :pattern ( ($generated@@169 ($generated@@260 $generated@@266 $generated@@267) ($generated@@172 $generated@@264 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@173) (= (type $generated@@269) $generated@@173)) (= ($generated@@179 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@179 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@66)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@273) $generated@@66)) (= ($generated@@169 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@182) ($generated@@0 ($generated@@83 $generated@@272 $generated@@274))) ($generated@@261 $generated@@274 $generated@@273))
 :pattern ( ($generated@@83 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@169 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@66)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@278) $generated@@66)) (= ($generated@@169 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@182) ($generated@@0 ($generated@@83 $generated@@277 $generated@@279))) ($generated@@261 $generated@@279 $generated@@278))
 :pattern ( ($generated@@83 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@169 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 Int) ) (! (= ($generated@@280 $generated@@281) $generated@@281)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
(= (type ($generated@@282 $generated@@283)) $generated@@284))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@282 $generated@@285) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@66) (= (type $generated@@289) $generated@@66)) (= (type $generated@@290) $generated@@182)) (= (type $generated@@291) $generated@@182)) (= (type $generated@@292) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@286 $generated@@292)) (= ($generated@@76 ($generated@@260 $generated@@290 $generated@@291) ($generated@@172 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@287 $generated@@290 $generated@@288 $generated@@292) ($generated@@287 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@76 ($generated@@260 $generated@@290 $generated@@291) ($generated@@172 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@70)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@173) (= ($generated@@171 $generated@@295) (= ($generated@@293 $generated@@295) $generated@@61)))
 :pattern ( ($generated@@171 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@78 $generated@@182 $generated@@182))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@78 $generated@@182 $generated@@182)) (= (type $generated@@299) $generated@@182)) (= ($generated@@83 ($generated@@296 $generated@@298) $generated@@299) ($generated@@83 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@83 ($generated@@296 $generated@@298) $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@173) ($generated@@171 $generated@@300)) (exists (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (and (and (= (type $generated@@301) $generated@@182) (= (type $generated@@302) $generated@@182)) (= $generated@@300 ($generated@@260 $generated@@301 $generated@@302)))
 :no-pattern (type $generated@@301)
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@171 $generated@@300))
)))
(assert  (and (and (forall (($generated@@307 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@307)) 18)) (forall (($generated@@308 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@305 $generated@@308))
))) (forall (($generated@@309 T@T) ) (! (= (type ($generated@@303 $generated@@309)) ($generated@@305 $generated@@309))
 :pattern ( ($generated@@303 $generated@@309))
))))
(assert (forall (($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@310)) 0)
 :pattern ( ($generated@@303 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@182)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@66) (= (type $generated@@315) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@287 ($generated@@311 $generated@@313) $generated@@314 $generated@@315) ($generated@@76 $generated@@313 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@287 ($generated@@311 $generated@@313) $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@78 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@81 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@78 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@83 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (forall (($generated@@327 T@U) ) (! (= (type ($generated@@323 $generated@@327)) ($generated@@139 $generated@@182 $generated@@182))
 :pattern ( ($generated@@323 $generated@@327))
)) (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (! (= (type ($generated@@325 $generated@@328 $generated@@329)) $generated@@66)
 :pattern ( ($generated@@325 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ($generated@@331 Int) ($generated@@332 Int) ) (! (= (type ($generated@@326 $generated@@330 $generated@@331 $generated@@332)) ($generated@@78 $generated@@182 $generated@@4))
 :pattern ( ($generated@@326 $generated@@330 $generated@@331 $generated@@332))
))))
(assert  (=> (<= 1 $generated@@322) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@139 $generated@@182 $generated@@182)) (or ($generated@@324 $generated@@333) (and (not (= 1 $generated@@322)) (and ($generated@@169 $generated@@333 ($generated@@325 $generated@@46 $generated@@134)) (forall (($generated@@334 Int) ) (!  (=> true (=> (and (<= ($generated@@280 0) $generated@@334) (< $generated@@334 16)) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@333) ($generated@@311 ($generated@@8 $generated@@334))))))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@333) ($generated@@311 ($generated@@8 $generated@@334))))
)))))) (= ($generated@@323 $generated@@333) ($generated@@138 ($generated@@326 $generated@@46 ($generated@@280 0) 16) ($generated@@296 ($generated@@160 $generated@@333)) ($generated@@325 $generated@@46 $generated@@134))))
 :pattern ( ($generated@@323 $generated@@333))
))))
(assert (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) ($generated@@139 $generated@@336 $generated@@337))
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@83 ($generated@@137 ($generated@@335 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@83 ($generated@@137 ($generated@@335 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert  (and (and (and (and (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (= ($generated@@1 ($generated@@343 $generated@@346 $generated@@347)) 19)) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@344 ($generated@@343 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@343 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@343 $generated@@350 $generated@@351)) $generated@@351)
 :pattern ( ($generated@@343 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@344 (type $generated@@352))))
(= (type ($generated@@341 $generated@@352)) ($generated@@78 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@352))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@342 $generated@@354 $generated@@355)) ($generated@@343 $generated@@354 $generated@@355))
 :pattern ( ($generated@@342 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@83 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@83 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@81 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@78 $generated@@360 $generated@@2)) (= ($generated@@188 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@83 $generated@@359 $generated@@361))) (<= ($generated ($generated@@83 $generated@@359 $generated@@361)) ($generated@@316 $generated@@359))))
 :pattern ( ($generated@@83 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@188 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@182) ($generated@@261 $generated@@365 $generated@@134)) (and (= ($generated@@311 ($generated@@362 $generated@@2 $generated@@365)) $generated@@365) ($generated@@169 ($generated@@362 $generated@@2 $generated@@365) $generated@@134)))
 :pattern ( ($generated@@261 $generated@@365 $generated@@134))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 Int) ($generated@@368 Int) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@66) (= (type $generated@@369) $generated@@182)) (= ($generated@@0 ($generated@@83 ($generated@@326 $generated@@366 $generated@@367 $generated@@368) $generated@@369))  (and ($generated@@261 $generated@@369 $generated@@366) (and (<= $generated@@367 ($generated ($generated@@362 $generated@@2 $generated@@369))) (< ($generated ($generated@@362 $generated@@2 $generated@@369)) $generated@@368)))))
 :pattern ( ($generated@@83 ($generated@@326 $generated@@366 $generated@@367 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@141 (type $generated@@370))))
(let (($generated@@372 ($generated@@140 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@139 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@335 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@137 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@141 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@78 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@141 (type $generated@@377))))
(let (($generated@@379 ($generated@@140 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@139 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@335 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@83 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@345 (type $generated@@381))))
(let (($generated@@383 ($generated@@344 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@343 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@342 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@341 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@345 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@78 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@345 (type $generated@@388))))
(let (($generated@@390 ($generated@@344 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@343 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@342 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@83 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@78 $generated@@182 $generated@@2)) (= (type $generated@@393) $generated@@66)) (= ($generated@@169 $generated@@392 ($generated@@187 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@182) (< 0 ($generated ($generated@@83 $generated@@392 $generated@@394)))) ($generated@@261 $generated@@394 $generated@@393))
 :pattern ( ($generated@@83 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@169 $generated@@392 ($generated@@187 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@395 ($generated@@270 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@182) ($generated@@0 ($generated@@83 $generated@@395 $generated@@398))) ($generated@@287 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@83 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@395 ($generated@@270 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@399 ($generated@@275 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@182) ($generated@@0 ($generated@@83 $generated@@399 $generated@@402))) ($generated@@287 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@83 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@399 ($generated@@275 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@83 ($generated@@317 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@83 ($generated@@317 $generated@@404) $generated@@403)))
)))
(assert (forall (($generated@@406 T@U) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@182 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@408) $generated@@182)) (= ($generated@@0 ($generated@@83 ($generated@@405 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@83 ($generated@@137 $generated@@407) ($generated@@180 ($generated@@362 $generated@@173 $generated@@408)))) (= ($generated@@83 ($generated@@160 $generated@@407) ($generated@@180 ($generated@@362 $generated@@173 $generated@@408))) ($generated@@181 ($generated@@362 $generated@@173 $generated@@408))))))
 :pattern ( ($generated@@83 ($generated@@405 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@78 $generated@@182 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@345 (type $generated@@412))))
(let (($generated@@414 ($generated@@344 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@78 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@343 $generated@@182 $generated@@182)) (= (type $generated@@416) $generated@@182)) (= ($generated@@0 ($generated@@83 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@83 ($generated@@341 $generated@@415) ($generated@@180 ($generated@@362 $generated@@173 $generated@@416)))) (= ($generated@@83 ($generated@@410 $generated@@415) ($generated@@180 ($generated@@362 $generated@@173 $generated@@416))) ($generated@@181 ($generated@@362 $generated@@173 $generated@@416))))))
 :pattern ( ($generated@@83 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@140 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@139 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@83 ($generated@@374 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@83 ($generated@@137 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@83 ($generated@@160 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@417) $generated@@421))
 :pattern ( ($generated@@83 ($generated@@160 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@344 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@343 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@83 ($generated@@385 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@83 ($generated@@341 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@83 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@422) $generated@@426))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@428) $generated@@66)) (= (type $generated@@429) $generated@@66)) (= (type $generated@@430) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@427 ($generated@@325 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@182) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@427) $generated@@431))) (and ($generated@@287 ($generated@@83 ($generated@@160 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@287 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@83 ($generated@@160 $generated@@427) $generated@@431))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@76 $generated@@427 ($generated@@325 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@66)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@343 $generated@@182 $generated@@182)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) $generated@@66)) (= (type $generated@@438) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@182) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@435) $generated@@439))) (and ($generated@@287 ($generated@@83 ($generated@@410 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@287 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@435) $generated@@439))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert  (=> (<= 1 $generated@@322) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@139 $generated@@182 $generated@@182)) (or ($generated@@324 ($generated@@282 $generated@@440)) (and (not (= 1 $generated@@322)) (and ($generated@@169 $generated@@440 ($generated@@325 $generated@@46 $generated@@134)) (forall (($generated@@441 Int) ) (!  (=> true (=> (and (<= ($generated@@280 0) $generated@@441) (< $generated@@441 16)) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@440) ($generated@@311 ($generated@@8 $generated@@441))))))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@440) ($generated@@311 ($generated@@8 $generated@@441))))
)))))) (= ($generated@@323 ($generated@@282 $generated@@440)) ($generated@@138 ($generated@@326 $generated@@46 ($generated@@280 0) 16) ($generated@@296 ($generated@@160 ($generated@@282 $generated@@440))) ($generated@@325 $generated@@46 $generated@@134))))
 :weight 3
 :pattern ( ($generated@@323 ($generated@@282 $generated@@440)))
))))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@78 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@345 (type $generated@@444))))
(let (($generated@@446 ($generated@@344 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@343 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@342 $generated@@446 $generated@@445)) (= ($generated@@341 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@341 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@345 (type $generated@@447))))
(let (($generated@@449 ($generated@@344 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@343 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@342 $generated@@449 $generated@@448)) (= ($generated@@385 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@385 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@345 (type $generated@@450))))
(let (($generated@@452 ($generated@@344 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@343 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@342 $generated@@452 $generated@@451)) (= ($generated@@409 $generated@@450) ($generated@@442 $generated@@182))))))
 :pattern ( ($generated@@409 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@141 (type $generated@@453))))
(let (($generated@@455 ($generated@@140 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@139 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@335 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@182) (= (type $generated@@457) $generated@@182)) ($generated@@0 ($generated@@83 ($generated@@405 $generated@@453) ($generated@@311 ($generated@@260 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@405 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@345 (type $generated@@458))))
(let (($generated@@460 ($generated@@344 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@343 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@342 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@182) (= (type $generated@@462) $generated@@182)) ($generated@@0 ($generated@@83 ($generated@@409 $generated@@458) ($generated@@311 ($generated@@260 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@409 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@182) ($generated@@261 $generated@@463 $generated@@46)) (and (= ($generated@@311 ($generated@@362 $generated@@2 $generated@@463)) $generated@@463) ($generated@@169 ($generated@@362 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@261 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@182) ($generated@@261 $generated@@464 $generated@@47)) (and (= ($generated@@311 ($generated@@362 $generated@@3 $generated@@464)) $generated@@464) ($generated@@169 ($generated@@362 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@261 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@182) ($generated@@261 $generated@@465 $generated@@44)) (and (= ($generated@@311 ($generated@@362 $generated@@4 $generated@@465)) $generated@@465) ($generated@@169 ($generated@@362 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@261 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@182) ($generated@@261 $generated@@467 $generated@@45)) (and (= ($generated@@311 ($generated@@362 $generated@@466 $generated@@467)) $generated@@467) ($generated@@169 ($generated@@362 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@261 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@66) (= ($generated@@261 ($generated@@311 $generated@@468) $generated@@469) ($generated@@169 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@261 ($generated@@311 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@81 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@78 $generated@@471 $generated@@2)) (<= 0 ($generated@@316 $generated@@470))))
 :pattern ( ($generated@@316 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@306 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@305 $generated@@473)) (<= 0 ($generated@@304 $generated@@472))))
 :pattern ( ($generated@@304 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@325 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@325 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@325 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@325 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@74 ($generated@@325 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@325 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@484 ($generated@@432 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@432 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@488 ($generated@@432 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@432 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@66) (= (type $generated@@493) $generated@@66)) (= ($generated@@74 ($generated@@432 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@182) (= (type $generated@@495) $generated@@182)) (= ($generated@@293 ($generated@@260 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@260 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@66) (= (type $generated@@499) $generated@@66)) (= ($generated@@496 ($generated@@172 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@172 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@66) (= (type $generated@@503) $generated@@66)) (= ($generated@@500 ($generated@@172 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@172 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@182) (= (type $generated@@505) $generated@@182)) (= ($generated@@180 ($generated@@260 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@260 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@182) (= (type $generated@@507) $generated@@182)) (= ($generated@@181 ($generated@@260 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@260 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ($generated@@512 Int) ) (! (let (($generated@@513 ($generated@@306 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511 $generated@@512)) $generated@@513))
 :pattern ( ($generated@@509 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@305 $generated@@182)) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@514 ($generated@@508 $generated@@515) $generated@@516) (forall (($generated@@517 Int) ) (!  (=> (and (<= 0 $generated@@517) (< $generated@@517 ($generated@@304 $generated@@514))) ($generated@@287 ($generated@@509 $generated@@514 $generated@@517) $generated@@515 $generated@@516))
 :pattern ( ($generated@@509 $generated@@514 $generated@@517))
))))
 :pattern ( ($generated@@76 $generated@@514 ($generated@@508 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@77 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@77 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@520 ($generated@@270 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@270 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@74 ($generated@@270 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@270 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@524 ($generated@@275 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@275 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@74 ($generated@@275 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@66)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@528 ($generated@@187 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@187 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@74 ($generated@@187 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@187 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@66) (= ($generated@@532 ($generated@@508 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@508 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@74 ($generated@@508 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@508 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@362 $generated@@537 ($generated@@311 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@311 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) (= ($generated@@169 $generated@@538 ($generated@@325 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@182) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@538) $generated@@541))) (and ($generated@@261 ($generated@@83 ($generated@@160 $generated@@538) $generated@@541) $generated@@540) ($generated@@261 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@83 ($generated@@160 $generated@@538) $generated@@541))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@169 $generated@@538 ($generated@@325 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@343 $generated@@182 $generated@@182)) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@66)) (= ($generated@@169 $generated@@542 ($generated@@432 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@182) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@542) $generated@@545))) (and ($generated@@261 ($generated@@83 ($generated@@410 $generated@@542) $generated@@545) $generated@@544) ($generated@@261 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@542) $generated@@545))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@169 $generated@@542 ($generated@@432 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@182) (= (type $generated@@549) $generated@@182)) (< ($generated@@546 $generated@@548) ($generated@@547 ($generated@@260 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@260 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@182) (= (type $generated@@551) $generated@@182)) (< ($generated@@546 $generated@@551) ($generated@@547 ($generated@@260 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@260 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@182) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) $generated@@66)) ($generated@@261 $generated@@552 ($generated@@325 $generated@@553 $generated@@554))) (and (= ($generated@@311 ($generated@@362 ($generated@@139 $generated@@182 $generated@@182) $generated@@552)) $generated@@552) ($generated@@169 ($generated@@362 ($generated@@139 $generated@@182 $generated@@182) $generated@@552) ($generated@@325 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@261 $generated@@552 ($generated@@325 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@182) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) $generated@@66)) ($generated@@261 $generated@@555 ($generated@@432 $generated@@556 $generated@@557))) (and (= ($generated@@311 ($generated@@362 ($generated@@343 $generated@@182 $generated@@182) $generated@@555)) $generated@@555) ($generated@@169 ($generated@@362 ($generated@@343 $generated@@182 $generated@@182) $generated@@555) ($generated@@432 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@261 $generated@@555 ($generated@@432 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@66) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) $generated@@182)) ($generated@@261 $generated@@560 ($generated@@172 $generated@@558 $generated@@559))) (and (= ($generated@@311 ($generated@@362 $generated@@173 $generated@@560)) $generated@@560) ($generated@@169 ($generated@@362 $generated@@173 $generated@@560) ($generated@@172 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@261 $generated@@560 ($generated@@172 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@83 ($generated@@442 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@83 ($generated@@442 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@563) ($generated@@78 $generated@@182 $generated@@4)) (= (type $generated@@564) ($generated@@78 $generated@@182 $generated@@182))) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) $generated@@66)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@182) ($generated@@0 ($generated@@83 $generated@@563 $generated@@567))) (and ($generated@@261 $generated@@567 $generated@@565) ($generated@@261 ($generated@@83 $generated@@564 $generated@@567) $generated@@566)))
 :no-pattern (type $generated@@567)
 :no-pattern ($generated $generated@@567)
 :no-pattern ($generated@@0 $generated@@567)
))) ($generated@@169 ($generated@@138 $generated@@563 $generated@@564 ($generated@@325 $generated@@565 $generated@@566)) ($generated@@325 $generated@@565 $generated@@566)))
 :pattern ( ($generated@@138 $generated@@563 $generated@@564 ($generated@@325 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@71)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@66) (= (type $generated@@571) $generated@@66)) (and (= ($generated@@74 ($generated@@172 $generated@@570 $generated@@571)) $generated@@62) (= ($generated@@568 ($generated@@172 $generated@@570 $generated@@571)) $generated@@64)))
 :pattern ( ($generated@@172 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@173) (= ($generated@@546 ($generated@@311 $generated@@572)) ($generated@@547 $generated@@572)))
 :pattern ( ($generated@@546 ($generated@@311 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@182) ($generated@@261 $generated@@573 ($generated@@77 0))) (and (= ($generated@@311 ($generated@@362 $generated@@2 $generated@@573)) $generated@@573) ($generated@@169 ($generated@@362 ($generated@@78 $generated@@182 $generated@@4) $generated@@573) ($generated@@77 0))))
 :pattern ( ($generated@@261 $generated@@573 ($generated@@77 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@182) (= (type $generated@@575) $generated@@66)) ($generated@@261 $generated@@574 ($generated@@270 $generated@@575))) (and (= ($generated@@311 ($generated@@362 ($generated@@78 $generated@@182 $generated@@4) $generated@@574)) $generated@@574) ($generated@@169 ($generated@@362 ($generated@@78 $generated@@182 $generated@@4) $generated@@574) ($generated@@270 $generated@@575))))
 :pattern ( ($generated@@261 $generated@@574 ($generated@@270 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@182) (= (type $generated@@577) $generated@@66)) ($generated@@261 $generated@@576 ($generated@@275 $generated@@577))) (and (= ($generated@@311 ($generated@@362 ($generated@@78 $generated@@182 $generated@@4) $generated@@576)) $generated@@576) ($generated@@169 ($generated@@362 ($generated@@78 $generated@@182 $generated@@4) $generated@@576) ($generated@@275 $generated@@577))))
 :pattern ( ($generated@@261 $generated@@576 ($generated@@275 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@182) (= (type $generated@@579) $generated@@66)) ($generated@@261 $generated@@578 ($generated@@187 $generated@@579))) (and (= ($generated@@311 ($generated@@362 ($generated@@78 $generated@@182 $generated@@2) $generated@@578)) $generated@@578) ($generated@@169 ($generated@@362 ($generated@@78 $generated@@182 $generated@@2) $generated@@578) ($generated@@187 $generated@@579))))
 :pattern ( ($generated@@261 $generated@@578 ($generated@@187 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@182) (= (type $generated@@581) $generated@@66)) ($generated@@261 $generated@@580 ($generated@@508 $generated@@581))) (and (= ($generated@@311 ($generated@@362 ($generated@@305 $generated@@182) $generated@@580)) $generated@@580) ($generated@@169 ($generated@@362 ($generated@@305 $generated@@182) $generated@@580) ($generated@@508 $generated@@581))))
 :pattern ( ($generated@@261 $generated@@580 ($generated@@508 $generated@@581)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@568 $generated@@134) $generated@@65))
(assert  (=> (<= 1 $generated@@322) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@139 $generated@@182 $generated@@182)) (or ($generated@@324 $generated@@582) (and (not (= 1 $generated@@322)) (and ($generated@@169 $generated@@582 ($generated@@325 $generated@@46 $generated@@134)) (forall (($generated@@583 Int) ) (!  (=> true (=> (and (<= ($generated@@280 0) $generated@@583) (< $generated@@583 16)) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@582) ($generated@@311 ($generated@@8 $generated@@583))))))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@582) ($generated@@311 ($generated@@8 $generated@@583))))
)))))) ($generated@@169 ($generated@@323 $generated@@582) ($generated@@325 $generated@@46 $generated@@134)))
 :pattern ( ($generated@@323 $generated@@582))
))))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@78 $generated@@182 $generated@@2)) (= (type $generated@@585) $generated@@66)) (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@584 ($generated@@187 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@182) (< 0 ($generated ($generated@@83 $generated@@584 $generated@@587)))) ($generated@@287 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@83 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@76 $generated@@584 ($generated@@187 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@173) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@286 $generated@@590) (and ($generated@@171 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@66) ($generated@@76 $generated@@588 ($generated@@172 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@76 $generated@@588 ($generated@@172 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@287 ($generated@@180 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@287 ($generated@@180 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@173) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@286 $generated@@594) (and ($generated@@171 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@66) ($generated@@76 $generated@@592 ($generated@@172 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@76 $generated@@592 ($generated@@172 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@287 ($generated@@181 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@287 ($generated@@181 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) (= ($generated@@169 $generated@@596 $generated@@134)  (and (<= ($generated@@280 0) ($generated $generated@@596)) (< ($generated $generated@@596) 4294967296))))
 :pattern ( ($generated@@169 $generated@@596 $generated@@134))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@182) (= (type $generated@@598) $generated@@182)) (= ($generated@@260 ($generated@@282 $generated@@597) ($generated@@282 $generated@@598)) ($generated@@282 ($generated@@260 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@260 ($generated@@282 $generated@@597) ($generated@@282 $generated@@598)))
)))
(assert (forall (($generated@@599 Int) ) (! (= ($generated@@311 ($generated@@8 ($generated@@280 $generated@@599))) ($generated@@282 ($generated@@311 ($generated@@8 $generated@@599))))
 :pattern ( ($generated@@311 ($generated@@8 ($generated@@280 $generated@@599))))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@311 ($generated@@282 $generated@@600)) ($generated@@282 ($generated@@311 $generated@@600)))
 :pattern ( ($generated@@311 ($generated@@282 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@306 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@305 $generated@@602)) (= ($generated@@304 $generated@@601) 0)) (= $generated@@601 ($generated@@303 $generated@@602))))
 :pattern ( ($generated@@304 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@78 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@316 ($generated@@84 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@316 $generated@@603) ($generated ($generated@@83 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@316 ($generated@@84 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@608) $generated@@2)) ($generated@@76 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@76 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@610) $generated@@3)) ($generated@@76 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@76 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@612) $generated@@4)) ($generated@@76 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@76 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@614) $generated@@466)) ($generated@@76 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@76 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@616) $generated@@182)) ($generated@@76 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@76 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@305 $generated@@182)) (= (type $generated@@618) $generated@@66)) (= ($generated@@169 $generated@@617 ($generated@@508 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@304 $generated@@617))) ($generated@@261 ($generated@@509 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@509 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@169 $generated@@617 ($generated@@508 $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@305 $generated@@182)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@304 $generated@@621))) (< ($generated@@547 ($generated@@362 $generated@@173 ($generated@@509 $generated@@621 $generated@@622))) ($generated@@620 $generated@@621))))
 :pattern ( ($generated@@547 ($generated@@362 $generated@@173 ($generated@@509 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@624) $generated@@66)) (= (type $generated@@625) $generated@@66)) ($generated@@169 $generated@@623 ($generated@@325 $generated@@624 $generated@@625))) (and (and ($generated@@169 ($generated@@137 $generated@@623) ($generated@@270 $generated@@624)) ($generated@@169 ($generated@@374 $generated@@623) ($generated@@270 $generated@@625))) ($generated@@169 ($generated@@405 $generated@@623) ($generated@@270 ($generated@@172 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@169 $generated@@623 ($generated@@325 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@343 $generated@@182 $generated@@182)) (= (type $generated@@627) $generated@@66)) (= (type $generated@@628) $generated@@66)) ($generated@@169 $generated@@626 ($generated@@432 $generated@@627 $generated@@628))) (and (and ($generated@@169 ($generated@@341 $generated@@626) ($generated@@275 $generated@@627)) ($generated@@169 ($generated@@385 $generated@@626) ($generated@@275 $generated@@628))) ($generated@@169 ($generated@@409 $generated@@626) ($generated@@275 ($generated@@172 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@169 $generated@@626 ($generated@@432 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@169 $generated@@629 $generated@@46))
 :pattern ( ($generated@@169 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@169 $generated@@630 $generated@@47))
 :pattern ( ($generated@@169 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@169 $generated@@631 $generated@@44))
 :pattern ( ($generated@@169 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@466) ($generated@@169 $generated@@632 $generated@@45))
 :pattern ( ($generated@@169 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@182) ($generated@@169 $generated@@633 $generated@@48))
 :pattern ( ($generated@@169 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@635) ($generated@@139 $generated@@182 $generated@@182)) (= (type $generated@@636) ($generated@@194 $generated@@79 $generated@@4))) (= (type $generated@@637) $generated@@79)) (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@640) ($generated@@194 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@642 true))
(let (($generated@@643  (=> (and (not (and (<= ($generated@@280 0) $generated@@634) (< $generated@@634 16))) (= (ControlFlow 0 6) 3)) $generated@@642)))
(let (($generated@@644  (=> (and (<= ($generated@@280 0) $generated@@634) (< $generated@@634 16)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@635) ($generated@@311 ($generated@@8 $generated@@634))))) (=> ($generated@@0 ($generated@@83 ($generated@@137 $generated@@635) ($generated@@311 ($generated@@8 $generated@@634)))) (=> (= (ControlFlow 0 4) 3) $generated@@642))))))
(let (($generated@@645  (=> (< $generated@@634 ($generated@@280 0)) (and (=> (= (ControlFlow 0 8) 4) $generated@@644) (=> (= (ControlFlow 0 8) 6) $generated@@643)))))
(let (($generated@@646  (=> (<= ($generated@@280 0) $generated@@634) (and (=> (= (ControlFlow 0 7) 4) $generated@@644) (=> (= (ControlFlow 0 7) 6) $generated@@643)))))
(let (($generated@@647  (and (=> (= (ControlFlow 0 9) 7) $generated@@646) (=> (= (ControlFlow 0 9) 8) $generated@@645))))
(let (($generated@@648 true))
(let (($generated@@649  (=> (= $generated@@636 ($generated@@248 $generated@@637 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@647) (=> (= (ControlFlow 0 10) 2) $generated@@648)))))
(let (($generated@@650 true))
(let (($generated@@651  (=> (forall (($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@652) $generated@@2) true) (and (<= ($generated@@280 0) ($generated $generated@@652)) (< ($generated $generated@@652) 16))) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@635) ($generated@@311 $generated@@652))))
 :pattern ( ($generated@@83 ($generated@@137 $generated@@635) ($generated@@311 $generated@@652)))
)) (and (=> (= (ControlFlow 0 11) 1) $generated@@650) (=> (= (ControlFlow 0 11) 10) $generated@@649)))))
(let (($generated@@653  (=> (and (=> (and (<= ($generated@@280 0) $generated@@639) (< $generated@@639 16)) ($generated@@0 ($generated@@83 ($generated@@137 $generated@@635) ($generated@@311 ($generated@@8 $generated@@639))))) (= (ControlFlow 0 13) 11)) $generated@@651)))
(let (($generated@@654  (=> (and (and (<= ($generated@@280 0) $generated@@639) (< $generated@@639 16)) (and ($generated@@0 ($generated@@83 ($generated@@137 $generated@@635) ($generated@@311 ($generated@@8 $generated@@639)))) (= (ControlFlow 0 12) 11))) $generated@@651)))
(let (($generated@@655  (=> (= $generated@@640 ($generated@@193 $generated@@637 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 12) $generated@@654) (=> (= (ControlFlow 0 14) 13) $generated@@653)))))
(let (($generated@@656  (=> (and (and (and ($generated@@286 $generated@@638) ($generated@@641 $generated@@638)) ($generated@@169 $generated@@635 ($generated@@325 $generated@@46 $generated@@134))) (and (= 1 $generated@@322) (= (ControlFlow 0 15) 14))) $generated@@655)))
$generated@@656)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
