(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@U Int) T@U)
(declare-fun $generated@@229 (Int) Int)
(declare-fun $generated@@230 (T@U) Int)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert  (and (and (and (forall (($generated@@232 T@T) ) (= ($generated@@1 ($generated@@225 $generated@@232)) 17)) (forall (($generated@@233 T@T) ) (! (= ($generated@@231 ($generated@@225 $generated@@233)) $generated@@233)
 :pattern ( ($generated@@225 $generated@@233))
))) (forall (($generated@@234 T@U) ) (! (= (type ($generated@@227 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@234))
))) (forall (($generated@@235 T@U) ($generated@@236 Int) ) (! (let (($generated@@237 ($generated@@231 (type $generated@@235))))
(= (type ($generated@@228 $generated@@235 $generated@@236)) $generated@@237))
 :pattern ( ($generated@@228 $generated@@235 $generated@@236))
))))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@238 $generated@@239) (and (not (= 0 $generated@@223)) ($generated@@132 $generated@@239 ($generated@@227 $generated@@238))))) (= ($generated@@224 $generated@@238 $generated@@239) (forall (($generated@@240 Int) ($generated@@241 Int) ) (!  (=> (= $generated@@241 (+ $generated@@240 1)) (=> (and (<= ($generated@@229 0) $generated@@240) (< $generated@@240 (- ($generated@@230 $generated@@239) 1))) (or (= ($generated@@228 $generated@@239 $generated@@240) ($generated@@228 $generated@@239 $generated@@241)) (= ($generated@@228 $generated@@239 $generated@@240) ($generated@@228 $generated@@239 $generated@@241)))))
 :pattern ( ($generated@@228 $generated@@239 $generated@@241) ($generated@@228 $generated@@239 $generated@@240))
))))
 :pattern ( ($generated@@224 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@136)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@64) (= (type $generated@@247) $generated@@64)) (= (type $generated@@248) $generated@@145)) (= (type $generated@@249) $generated@@145)) (= ($generated@@132 ($generated@@242 $generated@@248 $generated@@249) ($generated@@135 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@132 ($generated@@242 $generated@@248 $generated@@249) ($generated@@135 $generated@@246 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@136) (= (type $generated@@251) $generated@@136)) (= ($generated@@142 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@142 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@132 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@243 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@132 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@260) $generated@@64)) (= ($generated@@132 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@145) ($generated@@0 ($generated@@81 $generated@@259 $generated@@261))) ($generated@@243 $generated@@261 $generated@@260))
 :pattern ( ($generated@@81 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@132 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@229 $generated@@262) $generated@@262)
 :pattern ( ($generated@@229 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@64) (= (type $generated@@270) $generated@@64)) (= (type $generated@@271) $generated@@145)) (= (type $generated@@272) $generated@@145)) (= (type $generated@@273) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@267 $generated@@273)) (= ($generated@@74 ($generated@@242 $generated@@271 $generated@@272) ($generated@@135 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@74 ($generated@@242 $generated@@271 $generated@@272) ($generated@@135 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@136) (= ($generated@@134 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@136) ($generated@@134 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@145) (= (type $generated@@279) $generated@@145)) (= $generated@@277 ($generated@@242 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@134 $generated@@277))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@225 $generated@@281))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@230 ($generated@@280 $generated@@282)) 0)
 :pattern ( ($generated@@280 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@145)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@268 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@74 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@268 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@76 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@76 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@81 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (= (type $generated@@330) $generated@@64) (= (type $generated@@331) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@330 $generated@@331) (and (not (= 0 $generated@@223)) ($generated@@132 $generated@@331 ($generated@@227 $generated@@330))))) true)
 :pattern ( ($generated@@224 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@79 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@76 $generated@@333 $generated@@2)) (= ($generated@@151 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@81 $generated@@332 $generated@@334))) (<= ($generated ($generated@@81 $generated@@332 $generated@@334)) ($generated@@288 $generated@@332))))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@151 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@298 (type $generated@@335))))
(let (($generated@@337 ($generated@@297 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@296 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@295 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@294 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@298 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@298 (type $generated@@342))))
(let (($generated@@344 ($generated@@297 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@296 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@295 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@316 (type $generated@@346))))
(let (($generated@@348 ($generated@@315 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@314 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@313 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@312 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@316 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(let (($generated@@355 ($generated@@315 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@314 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@313 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@132 $generated@@357 ($generated@@150 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@243 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@132 $generated@@357 ($generated@@150 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@252 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@268 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@252 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@257 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@268 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@257 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@81 ($generated@@289 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@81 ($generated@@289 $generated@@369) $generated@@368)))
)))
(assert  (and (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@370 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@373))
)) (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@371 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@298 (type $generated@@376))))
(let (($generated@@378 ($generated@@297 (type $generated@@376))))
(= (type ($generated@@372 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@372 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@379) ($generated@@143 ($generated@@371 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@372 $generated@@379) ($generated@@143 ($generated@@371 $generated@@136 $generated@@380))) ($generated@@144 ($generated@@371 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@316 (type $generated@@384))))
(let (($generated@@386 ($generated@@315 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@314 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@387) ($generated@@143 ($generated@@371 $generated@@136 $generated@@388)))) (= ($generated@@81 ($generated@@382 $generated@@387) ($generated@@143 ($generated@@371 $generated@@136 $generated@@388))) ($generated@@144 ($generated@@371 $generated@@136 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@297 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@296 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@315 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@314 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@402) $generated@@406))) (and ($generated@@268 ($generated@@81 ($generated@@372 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@268 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@314 $generated@@145 $generated@@145)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@410) $generated@@414))) (and ($generated@@268 ($generated@@81 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@268 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@316 (type $generated@@417))))
(let (($generated@@419 ($generated@@315 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@314 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@313 $generated@@419 $generated@@418)) (= ($generated@@312 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@312 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@316 (type $generated@@420))))
(let (($generated@@422 ($generated@@315 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@314 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@313 $generated@@422 $generated@@421)) (= ($generated@@350 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@350 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@316 (type $generated@@423))))
(let (($generated@@425 ($generated@@315 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@314 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@313 $generated@@425 $generated@@424)) (= ($generated@@381 $generated@@423) ($generated@@415 $generated@@145))))))
 :pattern ( ($generated@@381 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@298 (type $generated@@426))))
(let (($generated@@428 ($generated@@297 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@296 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@295 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@426) ($generated@@283 ($generated@@242 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@370 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@316 (type $generated@@431))))
(let (($generated@@433 ($generated@@315 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@314 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@313 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@145) (= (type $generated@@435) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@431) ($generated@@283 ($generated@@242 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@381 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@243 $generated@@436 $generated@@46)) (and (= ($generated@@283 ($generated@@371 $generated@@2 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@371 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@243 $generated@@437 $generated@@47)) (and (= ($generated@@283 ($generated@@371 $generated@@3 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@371 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@243 $generated@@438 $generated@@44)) (and (= ($generated@@283 ($generated@@371 $generated@@4 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@371 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@243 $generated@@440 $generated@@45)) (and (= ($generated@@283 ($generated@@371 $generated@@439 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@371 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@243 ($generated@@283 $generated@@441) $generated@@442) ($generated@@132 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@243 ($generated@@283 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@288 $generated@@443))))
 :pattern ( ($generated@@288 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@231 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@225 $generated@@446)) (<= 0 ($generated@@230 $generated@@445))))
 :pattern ( ($generated@@230 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@399 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@399 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@407 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@407 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@274 ($generated@@242 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@242 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@143 ($generated@@242 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@242 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@144 ($generated@@242 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@242 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@225 $generated@@145)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@481 ($generated@@227 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@230 $generated@@481))) ($generated@@268 ($generated@@228 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@228 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@481 ($generated@@227 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@75 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@75 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@252 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@252 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@252 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@257 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@257 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@150 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@150 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@227 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@227 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@227 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@227 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@371 $generated@@504 ($generated@@283 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@283 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@132 $generated@@505 ($generated@@399 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@505) $generated@@508))) (and ($generated@@243 ($generated@@81 ($generated@@372 $generated@@505) $generated@@508) $generated@@507) ($generated@@243 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@132 $generated@@505 ($generated@@399 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@314 $generated@@145 $generated@@145)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@132 $generated@@509 ($generated@@407 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@509) $generated@@512))) (and ($generated@@243 ($generated@@81 ($generated@@382 $generated@@509) $generated@@512) $generated@@511) ($generated@@243 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@132 $generated@@509 ($generated@@407 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@145)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@242 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@242 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@145)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@242 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@242 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@243 $generated@@519 ($generated@@399 $generated@@520 $generated@@521))) (and (= ($generated@@283 ($generated@@371 ($generated@@296 $generated@@145 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@371 ($generated@@296 $generated@@145 $generated@@145) $generated@@519) ($generated@@399 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@243 $generated@@519 ($generated@@399 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@243 $generated@@522 ($generated@@407 $generated@@523 $generated@@524))) (and (= ($generated@@283 ($generated@@371 ($generated@@314 $generated@@145 $generated@@145) $generated@@522)) $generated@@522) ($generated@@132 ($generated@@371 ($generated@@314 $generated@@145 $generated@@145) $generated@@522) ($generated@@407 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@243 $generated@@522 ($generated@@407 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@145)) ($generated@@243 $generated@@527 ($generated@@135 $generated@@525 $generated@@526))) (and (= ($generated@@283 ($generated@@371 $generated@@136 $generated@@527)) $generated@@527) ($generated@@132 ($generated@@371 $generated@@136 $generated@@527) ($generated@@135 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@243 $generated@@527 ($generated@@135 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@81 ($generated@@415 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@135 $generated@@532 $generated@@533)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@136) (= ($generated@@513 ($generated@@283 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@283 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) ($generated@@243 $generated@@535 ($generated@@75 0))) (and (= ($generated@@283 ($generated@@371 $generated@@2 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@75 0))))
 :pattern ( ($generated@@243 $generated@@535 ($generated@@75 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@243 $generated@@536 ($generated@@252 $generated@@537))) (and (= ($generated@@283 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@536) ($generated@@252 $generated@@537))))
 :pattern ( ($generated@@243 $generated@@536 ($generated@@252 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@243 $generated@@538 ($generated@@257 $generated@@539))) (and (= ($generated@@283 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@257 $generated@@539))))
 :pattern ( ($generated@@243 $generated@@538 ($generated@@257 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@243 $generated@@540 ($generated@@150 $generated@@541))) (and (= ($generated@@283 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@540) ($generated@@150 $generated@@541))))
 :pattern ( ($generated@@243 $generated@@540 ($generated@@150 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@243 $generated@@542 ($generated@@227 $generated@@543))) (and (= ($generated@@283 ($generated@@371 ($generated@@225 $generated@@145) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@371 ($generated@@225 $generated@@145) $generated@@542) ($generated@@227 $generated@@543))))
 :pattern ( ($generated@@243 $generated@@542 ($generated@@227 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@544 ($generated@@150 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@544 $generated@@547)))) ($generated@@268 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@81 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@150 $generated@@545) $generated@@546))
)))
(assert  (=> (<= 0 $generated@@223) (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) ($generated@@225 $generated@@145))) (or ($generated@@226 $generated@@548 ($generated@@263 $generated@@549)) (and (not (= 0 $generated@@223)) ($generated@@132 $generated@@549 ($generated@@227 $generated@@548))))) (= ($generated@@224 $generated@@548 ($generated@@263 $generated@@549)) (forall (($generated@@550 Int) ($generated@@551 Int) ) (!  (=> (= $generated@@551 (+ $generated@@550 1)) (=> (and (<= ($generated@@229 0) $generated@@550) (< $generated@@550 (- ($generated@@230 ($generated@@263 $generated@@549)) 1))) (or (= ($generated@@228 ($generated@@263 $generated@@549) $generated@@550) ($generated@@228 ($generated@@263 $generated@@549) $generated@@551)) (= ($generated@@228 ($generated@@263 $generated@@549) $generated@@550) ($generated@@228 ($generated@@263 $generated@@549) $generated@@551)))))
 :pattern ( ($generated@@228 $generated@@549 $generated@@551) ($generated@@228 $generated@@549 $generated@@550))
))))
 :weight 3
 :pattern ( ($generated@@224 $generated@@548 ($generated@@263 $generated@@549)))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@136) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@267 $generated@@554) (and ($generated@@134 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@135 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@135 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@268 ($generated@@143 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@268 ($generated@@143 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@267 $generated@@558) (and ($generated@@134 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@135 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@135 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@268 ($generated@@144 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@268 ($generated@@144 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@145)) (= ($generated@@242 ($generated@@263 $generated@@560) ($generated@@263 $generated@@561)) ($generated@@263 ($generated@@242 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@242 ($generated@@263 $generated@@560) ($generated@@263 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@229 $generated@@562))) ($generated@@263 ($generated@@283 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@229 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@283 ($generated@@263 $generated@@563)) ($generated@@263 ($generated@@283 $generated@@563)))
 :pattern ( ($generated@@283 ($generated@@263 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@231 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@225 $generated@@565)) (= ($generated@@230 $generated@@564) 0)) (= $generated@@564 ($generated@@280 $generated@@565))))
 :pattern ( ($generated@@230 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@76 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@288 ($generated@@82 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@288 $generated@@566) ($generated ($generated@@81 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@288 ($generated@@82 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@2)) ($generated@@74 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@3)) ($generated@@74 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@4)) ($generated@@74 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@439)) ($generated@@74 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@145)) ($generated@@74 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@225 $generated@@145)) (= (type $generated@@581) $generated@@64)) (= ($generated@@132 $generated@@580 ($generated@@227 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@230 $generated@@580))) ($generated@@243 ($generated@@228 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@228 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@132 $generated@@580 ($generated@@227 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@225 $generated@@145)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@230 $generated@@584))) (< ($generated@@514 ($generated@@371 $generated@@136 ($generated@@228 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@514 ($generated@@371 $generated@@136 ($generated@@228 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) ($generated@@132 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@132 ($generated@@294 $generated@@586) ($generated@@252 $generated@@587)) ($generated@@132 ($generated@@339 $generated@@586) ($generated@@252 $generated@@588))) ($generated@@132 ($generated@@370 $generated@@586) ($generated@@252 ($generated@@135 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@314 $generated@@145 $generated@@145)) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) $generated@@64)) ($generated@@132 $generated@@589 ($generated@@407 $generated@@590 $generated@@591))) (and (and ($generated@@132 ($generated@@312 $generated@@589) ($generated@@257 $generated@@590)) ($generated@@132 ($generated@@350 $generated@@589) ($generated@@257 $generated@@591))) ($generated@@132 ($generated@@381 $generated@@589) ($generated@@257 ($generated@@135 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@132 $generated@@589 ($generated@@407 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@132 $generated@@592 $generated@@46))
 :pattern ( ($generated@@132 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@132 $generated@@593 $generated@@47))
 :pattern ( ($generated@@132 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@132 $generated@@594 $generated@@44))
 :pattern ( ($generated@@132 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@439) ($generated@@132 $generated@@595 $generated@@45))
 :pattern ( ($generated@@132 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@145) ($generated@@132 $generated@@596 $generated@@48))
 :pattern ( ($generated@@132 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 (T@U) Bool)
(declare-fun $generated@@604 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@597) ($generated@@225 $generated@@145)) (= (type $generated@@599) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@600) $generated@@77)) (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@602) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@604) $generated@@64)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@605 true))
(let (($generated@@606  (=> (and (= ($generated@@228 $generated@@597 $generated@@598) ($generated@@228 $generated@@597 (+ $generated@@598 1))) (= (ControlFlow 0 8) 3)) $generated@@605)))
(let (($generated@@607  (=> (not (= ($generated@@228 $generated@@597 $generated@@598) ($generated@@228 $generated@@597 (+ $generated@@598 1)))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@230 $generated@@597)))) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@230 $generated@@597))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 (+ $generated@@598 1)) (< (+ $generated@@598 1) ($generated@@230 $generated@@597)))) (=> (and (<= 0 (+ $generated@@598 1)) (< (+ $generated@@598 1) ($generated@@230 $generated@@597))) (=> (= (ControlFlow 0 5) 3) $generated@@605))))))))
(let (($generated@@608  (=> (and (<= ($generated@@229 0) $generated@@598) (< $generated@@598 (- ($generated@@230 $generated@@597) 1))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@230 $generated@@597)))) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@230 $generated@@597))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 (+ $generated@@598 1)) (< (+ $generated@@598 1) ($generated@@230 $generated@@597)))) (=> (and (<= 0 (+ $generated@@598 1)) (< (+ $generated@@598 1) ($generated@@230 $generated@@597))) (and (=> (= (ControlFlow 0 9) 5) $generated@@607) (=> (= (ControlFlow 0 9) 8) $generated@@606)))))))))
(let (($generated@@609  (=> (and (not (and (<= ($generated@@229 0) $generated@@598) (< $generated@@598 (- ($generated@@230 $generated@@597) 1)))) (= (ControlFlow 0 4) 3)) $generated@@605)))
(let (($generated@@610  (=> (< $generated@@598 ($generated@@229 0)) (and (=> (= (ControlFlow 0 13) 9) $generated@@608) (=> (= (ControlFlow 0 13) 4) $generated@@609)))))
(let (($generated@@611  (=> (<= ($generated@@229 0) $generated@@598) (and (=> (= (ControlFlow 0 12) 9) $generated@@608) (=> (= (ControlFlow 0 12) 4) $generated@@609)))))
(let (($generated@@612  (and (=> (= (ControlFlow 0 14) 12) $generated@@611) (=> (= (ControlFlow 0 14) 13) $generated@@610))))
(let (($generated@@613 true))
(let (($generated@@614  (=> (= $generated@@599 ($generated@@211 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 14) $generated@@612) (=> (= (ControlFlow 0 15) 2) $generated@@613)))))
(let (($generated@@615 true))
(let (($generated@@616  (=> (= $generated@@602 ($generated@@156 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 1) $generated@@615) (=> (= (ControlFlow 0 16) 15) $generated@@614)))))
(let (($generated@@617  (=> (and (and (and ($generated@@267 $generated@@601) ($generated@@603 $generated@@601)) ($generated@@132 $generated@@597 ($generated@@227 $generated@@604))) (and (= 0 $generated@@223) (= (ControlFlow 0 17) 16))) $generated@@616)))
$generated@@617))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
